; ModuleID = 'prog.opt.o'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

@.str = private constant [10 x i8] c"matrix_in\00"
@mem11 = common global [20000 x i16] zeroinitializer, align 16
@mem12 = common global [20000 x i16] zeroinitializer, align 16
@mem21 = common global [20000 x i16] zeroinitializer, align 16
@mem22 = common global [20000 x i16] zeroinitializer, align 16
@.str1 = private constant [11 x i8] c"maxNitr_in\00"
@maxNitr = common global i16 0, align 2
@.str2 = private constant [10 x i8] c"ebbyNo_in\00"
@ebbyNo = common global float 0.000000e+00, align 4
@.str3 = private constant [8 x i8] c"rate_in\00"
@rate = common global float 0.000000e+00, align 4
@.str4 = private constant [14 x i8] c"code_block_in\00"
@code_block1 = common global [13000 x float] zeroinitializer, align 16
@code_block2 = common global [13000 x float] zeroinitializer, align 16
@aPriori1 = common global [13000 x float] zeroinitializer, align 16
@aPriori2 = common global [13000 x float] zeroinitializer, align 16
@message11 = common global [20000 x float] zeroinitializer, align 16
@message12 = common global [20000 x float] zeroinitializer, align 16
@message21 = common global [20000 x float] zeroinitializer, align 16
@message22 = common global [20000 x float] zeroinitializer, align 16
@aPosteriori1 = common global [13000 x float] zeroinitializer, align 16
@aPosteriori2 = common global [13000 x float] zeroinitializer, align 16
@ext_info11 = common global [20000 x float] zeroinitializer, align 16
@ext_info12 = common global [20000 x float] zeroinitializer, align 16
@ext_info21 = common global [20000 x float] zeroinitializer, align 16
@ext_info22 = common global [20000 x float] zeroinitializer, align 16
@trans_info11_12 = common global [20000 x float] zeroinitializer, align 16
@trans_info12_11 = common global [20000 x float] zeroinitializer, align 16
@trans_info21_22 = common global [20000 x float] zeroinitializer, align 16
@trans_info22_21 = common global [20000 x float] zeroinitializer, align 16
@.str5 = private constant [24 x i8] c"reading_code_block_done\00"
@.str6 = private constant [22 x i8] c"message11_initialized\00"
@.str7 = private constant [32 x i8] c"trans_info11_12_calulation_done\00"
@.str8 = private constant [32 x i8] c"trans_info12_11_calulation_done\00"
@.str9 = private constant [26 x i8] c"aPosteriori1_phase_1_done\00"
@.str10 = private constant [26 x i8] c"aPosteriori1_phase_2_done\00"
@.str11 = private constant [13 x i8] c"is_decoded_2\00"
@.str12 = private constant [14 x i8] c"is_decoded_d2\00"
@.str13 = private constant [14 x i8] c"is_decoded_d3\00"
@.str14 = private constant [14 x i8] c"is_decoded_d4\00"
@.str15 = private constant [19 x i8] c"message11_modified\00"
@.str16 = private constant [19 x i8] c"message21_modified\00"
@.str17 = private constant [16 x i8] c"code_block1_out\00"
@.str18 = private constant [16 x i8] c"code_block2_out\00"
@.str19 = private constant [22 x i8] c"message12_initialized\00"
@.str20 = private constant [26 x i8] c"aPosteriori2_phase_1_done\00"
@.str21 = private constant [26 x i8] c"aPosteriori2_phase_2_done\00"
@.str22 = private constant [19 x i8] c"message12_modified\00"
@.str23 = private constant [19 x i8] c"message22_modified\00"
@.str24 = private constant [32 x i8] c"trans_info21_22_calulation_done\00"
@.str25 = private constant [32 x i8] c"trans_info22_21_calulation_done\00"

define void @initMem() nounwind {
  %I = alloca i16, align 2
  %val = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = icmp slt i32 %3, 3
  br i1 %4, label %5, label %15

; <label>:5                                       ; preds = %1
  %6 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %7 = call zeroext i16 @read_uint16(i8* %6)
  store i16 %7, i16* %val, align 2
  %8 = load i16* %val, align 2
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %10
  store i16 %8, i16* %11
  br label %12

; <label>:12                                      ; preds = %5
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  %16 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %17 = load i16* %16
  %18 = zext i16 %17 to i32
  %19 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %20 = load i16* %19
  %21 = zext i16 %20 to i32
  %22 = add nsw i32 %18, %21
  %23 = trunc i32 %22 to i16
  store i16 %23, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %24

; <label>:24                                      ; preds = %39, %15
  %25 = load i16* %I, align 2
  %26 = zext i16 %25 to i32
  %27 = load i16* %range, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %42

; <label>:30                                      ; preds = %24
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %31 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %32 = call zeroext i16 @read_uint16(i8* %31)
  store i16 %32, i16* %val, align 2
  %33 = load i16* %val, align 2
  %34 = load i16* %I, align 2
  %35 = zext i16 %34 to i32
  %36 = add nsw i32 %35, 3
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %37
  store i16 %33, i16* %38
  br label %39

; <label>:39                                      ; preds = %30
  %40 = load i16* %I, align 2
  %41 = add i16 %40, 1
  store i16 %41, i16* %I, align 2
  br label %24

; <label>:42                                      ; preds = %24
  store i16 0, i16* %I, align 2
  br label %43

; <label>:43                                      ; preds = %54, %42
  %44 = load i16* %I, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp slt i32 %45, 3
  br i1 %46, label %47, label %57

; <label>:47                                      ; preds = %43
  %48 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %49 = call zeroext i16 @read_uint16(i8* %48)
  store i16 %49, i16* %val, align 2
  %50 = load i16* %val, align 2
  %51 = load i16* %I, align 2
  %52 = zext i16 %51 to i64
  %53 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %52
  store i16 %50, i16* %53
  br label %54

; <label>:54                                      ; preds = %47
  %55 = load i16* %I, align 2
  %56 = add i16 %55, 1
  store i16 %56, i16* %I, align 2
  br label %43

; <label>:57                                      ; preds = %43
  %58 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %59 = load i16* %58
  %60 = zext i16 %59 to i32
  %61 = getelementptr [20000 x i16]* @mem12, i32 0, i64 0
  %62 = load i16* %61
  %63 = zext i16 %62 to i32
  %64 = add nsw i32 %60, %63
  %65 = trunc i32 %64 to i16
  store i16 %65, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %66

; <label>:66                                      ; preds = %81, %57
  %67 = load i16* %I, align 2
  %68 = zext i16 %67 to i32
  %69 = load i16* %range, align 2
  %70 = zext i16 %69 to i32
  %71 = icmp slt i32 %68, %70
  br i1 %71, label %72, label %84

; <label>:72                                      ; preds = %66
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %73 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %74 = call zeroext i16 @read_uint16(i8* %73)
  store i16 %74, i16* %val, align 2
  %75 = load i16* %val, align 2
  %76 = load i16* %I, align 2
  %77 = zext i16 %76 to i32
  %78 = add nsw i32 %77, 3
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %79
  store i16 %75, i16* %80
  br label %81

; <label>:81                                      ; preds = %72
  %82 = load i16* %I, align 2
  %83 = add i16 %82, 1
  store i16 %83, i16* %I, align 2
  br label %66

; <label>:84                                      ; preds = %66
  store i16 0, i16* %I, align 2
  br label %85

; <label>:85                                      ; preds = %96, %84
  %86 = load i16* %I, align 2
  %87 = zext i16 %86 to i32
  %88 = icmp slt i32 %87, 3
  br i1 %88, label %89, label %99

; <label>:89                                      ; preds = %85
  %90 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %91 = call zeroext i16 @read_uint16(i8* %90)
  store i16 %91, i16* %val, align 2
  %92 = load i16* %val, align 2
  %93 = load i16* %I, align 2
  %94 = zext i16 %93 to i64
  %95 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %94
  store i16 %92, i16* %95
  br label %96

; <label>:96                                      ; preds = %89
  %97 = load i16* %I, align 2
  %98 = add i16 %97, 1
  store i16 %98, i16* %I, align 2
  br label %85

; <label>:99                                      ; preds = %85
  %100 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = getelementptr [20000 x i16]* @mem21, i32 0, i64 0
  %104 = load i16* %103
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %102, %105
  %107 = trunc i32 %106 to i16
  store i16 %107, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %108

; <label>:108                                     ; preds = %123, %99
  %109 = load i16* %I, align 2
  %110 = zext i16 %109 to i32
  %111 = load i16* %range, align 2
  %112 = zext i16 %111 to i32
  %113 = icmp slt i32 %110, %112
  br i1 %113, label %114, label %126

; <label>:114                                     ; preds = %108
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %115 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %116 = call zeroext i16 @read_uint16(i8* %115)
  store i16 %116, i16* %val, align 2
  %117 = load i16* %val, align 2
  %118 = load i16* %I, align 2
  %119 = zext i16 %118 to i32
  %120 = add nsw i32 %119, 3
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %121
  store i16 %117, i16* %122
  br label %123

; <label>:123                                     ; preds = %114
  %124 = load i16* %I, align 2
  %125 = add i16 %124, 1
  store i16 %125, i16* %I, align 2
  br label %108

; <label>:126                                     ; preds = %108
  store i16 0, i16* %I, align 2
  br label %127

; <label>:127                                     ; preds = %138, %126
  %128 = load i16* %I, align 2
  %129 = zext i16 %128 to i32
  %130 = icmp slt i32 %129, 3
  br i1 %130, label %131, label %141

; <label>:131                                     ; preds = %127
  %132 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %133 = call zeroext i16 @read_uint16(i8* %132)
  store i16 %133, i16* %val, align 2
  %134 = load i16* %val, align 2
  %135 = load i16* %I, align 2
  %136 = zext i16 %135 to i64
  %137 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %136
  store i16 %134, i16* %137
  br label %138

; <label>:138                                     ; preds = %131
  %139 = load i16* %I, align 2
  %140 = add i16 %139, 1
  store i16 %140, i16* %I, align 2
  br label %127

; <label>:141                                     ; preds = %127
  %142 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %143 = load i16* %142
  %144 = zext i16 %143 to i32
  %145 = getelementptr [20000 x i16]* @mem22, i32 0, i64 0
  %146 = load i16* %145
  %147 = zext i16 %146 to i32
  %148 = add nsw i32 %144, %147
  %149 = trunc i32 %148 to i16
  store i16 %149, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %150

; <label>:150                                     ; preds = %165, %141
  %151 = load i16* %I, align 2
  %152 = zext i16 %151 to i32
  %153 = load i16* %range, align 2
  %154 = zext i16 %153 to i32
  %155 = icmp slt i32 %152, %154
  br i1 %155, label %156, label %168

; <label>:156                                     ; preds = %150
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %157 = getelementptr [10 x i8]* @.str, i32 0, i32 0
  %158 = call zeroext i16 @read_uint16(i8* %157)
  store i16 %158, i16* %val, align 2
  %159 = load i16* %val, align 2
  %160 = load i16* %I, align 2
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %161, 3
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %163
  store i16 %159, i16* %164
  br label %165

; <label>:165                                     ; preds = %156
  %166 = load i16* %I, align 2
  %167 = add i16 %166, 1
  store i16 %167, i16* %I, align 2
  br label %150

; <label>:168                                     ; preds = %150
  ret void
}

declare zeroext i16 @read_uint16(i8*)

declare void @__loop_pipelining_on__(i32, i32, i32)

define void @initInputs() nounwind {
  %nitr = alloca i16, align 2
  %SNR = alloca float, align 4
  %Rate = alloca float, align 4
  %1 = getelementptr [11 x i8]* @.str1, i32 0, i32 0
  %2 = call zeroext i16 @read_uint16(i8* %1)
  store i16 %2, i16* %nitr, align 2
  %3 = load i16* %nitr, align 2
  store i16 %3, i16* @maxNitr, align 2
  %4 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %5 = call float @read_float32(i8* %4)
  store float %5, float* %SNR, align 4
  %6 = load float* %SNR, align 4
  store float %6, float* @ebbyNo, align 4
  call void @initMem()
  %7 = getelementptr [8 x i8]* @.str3, i32 0, i32 0
  %8 = call float @read_float32(i8* %7)
  store float %8, float* %Rate, align 4
  %9 = load float* %Rate, align 4
  store float %9, float* @rate, align 4
  ret void
}

declare float @read_float32(i8*)

define void @readCodeBlock() nounwind {
  %I = alloca i16, align 2
  %code_bit = alloca float, align 4
  %code_bit1 = alloca float, align 4
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %15, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = getelementptr [14 x i8]* @.str4, i32 0, i32 0
  %10 = call float @read_float32(i8* %9)
  store float %10, float* %code_bit, align 4
  %11 = load float* %code_bit, align 4
  %12 = load i16* %I, align 2
  %13 = zext i16 %12 to i64
  %14 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %13
  store float %11, float* %14
  br label %15

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = add i16 %16, 1
  store i16 %17, i16* %I, align 2
  br label %1

; <label>:18                                      ; preds = %1
  store i16 0, i16* %I, align 2
  br label %19

; <label>:19                                      ; preds = %33, %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i32
  %22 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %23 = load i16* %22
  %24 = zext i16 %23 to i32
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %36

; <label>:26                                      ; preds = %19
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %27 = getelementptr [14 x i8]* @.str4, i32 0, i32 0
  %28 = call float @read_float32(i8* %27)
  store float %28, float* %code_bit1, align 4
  %29 = load float* %code_bit1, align 4
  %30 = load i16* %I, align 2
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %31
  store float %29, float* %32
  br label %33

; <label>:33                                      ; preds = %26
  %34 = load i16* %I, align 2
  %35 = add i16 %34, 1
  store i16 %35, i16* %I, align 2
  br label %19

; <label>:36                                      ; preds = %19
  ret void
}

define void @initialize_aPriori1() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %21, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %24

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %10
  %12 = load float* %11
  %13 = fmul float -4.000000e+00, %12
  %14 = load float* @rate, align 4
  %15 = load float* @ebbyNo, align 4
  %16 = fmul float %14, %15
  %17 = fmul float %13, %16
  %18 = load i16* %I, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %19
  store float %17, float* %20
  br label %21

; <label>:21                                      ; preds = %8
  %22 = load i16* %I, align 2
  %23 = add i16 %22, 1
  store i16 %23, i16* %I, align 2
  br label %1

; <label>:24                                      ; preds = %1
  ret void
}

define void @initialize_aPriori2() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %21, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %24

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %10
  %12 = load float* %11
  %13 = fmul float -4.000000e+00, %12
  %14 = load float* @rate, align 4
  %15 = load float* @ebbyNo, align 4
  %16 = fmul float %14, %15
  %17 = fmul float %13, %16
  %18 = load i16* %I, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %19
  store float %17, float* %20
  br label %21

; <label>:21                                      ; preds = %8
  %22 = load i16* %I, align 2
  %23 = add i16 %22, 1
  store i16 %23, i16* %I, align 2
  br label %1

; <label>:24                                      ; preds = %1
  ret void
}

define void @initializeMessage11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initialize_aPosteriori1() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %16, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %14
  store float %12, float* %15
  br label %16

; <label>:16                                      ; preds = %8
  %17 = load i16* %I, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %I, align 2
  br label %1

; <label>:19                                      ; preds = %1
  ret void
}

define void @initialize_aPosteriori2() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %16, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %14
  store float %12, float* %15
  br label %16

; <label>:16                                      ; preds = %8
  %17 = load i16* %I, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %I, align 2
  br label %1

; <label>:19                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo11_12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo12_11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo21_22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo22_21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define float @absf(float %f) nounwind {
  %1 = alloca float, align 4
  %ret = alloca float, align 4
  store float %f, float* %1, align 4
  %2 = load float* %1, align 4
  %3 = fpext float %2 to double
  %4 = fcmp olt double %3, 0.000000e+00
  br i1 %4, label %5, label %8

; <label>:5                                       ; preds = %0
  %6 = load float* %1, align 4
  %7 = fsub float -0.000000e+00, %6
  store float %7, float* %ret, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load float* %1, align 4
  store float %9, float* %ret, align 4
  br label %10

; <label>:10                                      ; preds = %8, %5
  %11 = load float* %ret, align 4
  ret float %11
}

define float @modifyInfo(float %ext_info, float %self_information) nounwind {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %sign = alloca float, align 4
  %magnitude = alloca float, align 4
  store float %ext_info, float* %1, align 4
  store float %self_information, float* %2, align 4
  %3 = load float* %1, align 4
  %4 = fcmp oge float %3, 0.000000e+00
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = load float* %2, align 4
  %7 = fcmp oge float %6, 0.000000e+00
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %5
  store float 1.000000e+00, float* %sign, align 4
  br label %10

; <label>:9                                       ; preds = %5
  store float -1.000000e+00, float* %sign, align 4
  br label %10

; <label>:10                                      ; preds = %9, %8
  br label %17

; <label>:11                                      ; preds = %0
  %12 = load float* %2, align 4
  %13 = fcmp olt float %12, 0.000000e+00
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %11
  store float 1.000000e+00, float* %sign, align 4
  br label %16

; <label>:15                                      ; preds = %11
  store float -1.000000e+00, float* %sign, align 4
  br label %16

; <label>:16                                      ; preds = %15, %14
  br label %17

; <label>:17                                      ; preds = %16, %10
  %18 = load float* %2, align 4
  %19 = call float @absf(float %18)
  %20 = load float* %1, align 4
  %21 = call float @absf(float %20)
  %22 = fcmp ogt float %19, %21
  br i1 %22, label %23, label %26

; <label>:23                                      ; preds = %17
  %24 = load float* %1, align 4
  %25 = call float @absf(float %24)
  store float %25, float* %magnitude, align 4
  br label %29

; <label>:26                                      ; preds = %17
  %27 = load float* %2, align 4
  %28 = call float @absf(float %27)
  store float %28, float* %magnitude, align 4
  br label %29

; <label>:29                                      ; preds = %26, %23
  %30 = load float* %sign, align 4
  %31 = load float* %magnitude, align 4
  %32 = fmul float %30, %31
  ret float %32
}

define void @checkNodeComputeEngine11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %249, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %252

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %224

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %220, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %223

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %173
  store float %157, float* %174
  %175 = load i16* %col, align 2
  %176 = zext i16 %175 to i32
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %219

; <label>:178                                     ; preds = %154
  %179 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = load i16* %col, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %190, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %194
  %196 = load float* %195
  %197 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %198 = load i16* %197
  %199 = zext i16 %198 to i32
  %200 = add nsw i32 3, %199
  %201 = load i16* %row, align 2
  %202 = zext i16 %201 to i32
  %203 = add nsw i32 %200, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %204
  %206 = load i16* %205
  %207 = zext i16 %206 to i32
  %208 = sub nsw i32 %207, 1
  %209 = load i16* %col, align 2
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 %208, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %212
  %214 = load float* %213
  %215 = call float @modifyInfo(float %196, float %214)
  %216 = load i16* %row, align 2
  %217 = zext i16 %216 to i64
  %218 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %217
  store float %215, float* %218
  br label %219

; <label>:219                                     ; preds = %178, %154
  br label %220

; <label>:220                                     ; preds = %219
  %221 = load i16* %col, align 2
  %222 = add i16 %221, 1
  store i16 %222, i16* %col, align 2
  br label %65

; <label>:223                                     ; preds = %65
  br label %248

; <label>:224                                     ; preds = %60
  %225 = load i16* %range, align 2
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %247

; <label>:228                                     ; preds = %224
  %229 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %230 = load i16* %229
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 3, %231
  %233 = load i16* %row, align 2
  %234 = zext i16 %233 to i32
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %236
  %238 = load i16* %237
  %239 = zext i16 %238 to i32
  %240 = sub nsw i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %241
  %243 = load float* %242
  %244 = load i16* %row, align 2
  %245 = zext i16 %244 to i64
  %246 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %245
  store float %243, float* %246
  br label %247

; <label>:247                                     ; preds = %228, %224
  br label %248

; <label>:248                                     ; preds = %247, %223
  br label %249

; <label>:249                                     ; preds = %248
  %250 = load i16* %row, align 2
  %251 = add i16 %250, 1
  store i16 %251, i16* %row, align 2
  br label %1

; <label>:252                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %249, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %252

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %224

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %220, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %223

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %173
  store float %157, float* %174
  %175 = load i16* %col, align 2
  %176 = zext i16 %175 to i32
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %219

; <label>:178                                     ; preds = %154
  %179 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = load i16* %col, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %190, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %194
  %196 = load float* %195
  %197 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %198 = load i16* %197
  %199 = zext i16 %198 to i32
  %200 = add nsw i32 3, %199
  %201 = load i16* %row, align 2
  %202 = zext i16 %201 to i32
  %203 = add nsw i32 %200, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %204
  %206 = load i16* %205
  %207 = zext i16 %206 to i32
  %208 = sub nsw i32 %207, 1
  %209 = load i16* %col, align 2
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 %208, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %212
  %214 = load float* %213
  %215 = call float @modifyInfo(float %196, float %214)
  %216 = load i16* %row, align 2
  %217 = zext i16 %216 to i64
  %218 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %217
  store float %215, float* %218
  br label %219

; <label>:219                                     ; preds = %178, %154
  br label %220

; <label>:220                                     ; preds = %219
  %221 = load i16* %col, align 2
  %222 = add i16 %221, 1
  store i16 %222, i16* %col, align 2
  br label %65

; <label>:223                                     ; preds = %65
  br label %248

; <label>:224                                     ; preds = %60
  %225 = load i16* %range, align 2
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %247

; <label>:228                                     ; preds = %224
  %229 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %230 = load i16* %229
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 3, %231
  %233 = load i16* %row, align 2
  %234 = zext i16 %233 to i32
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %236
  %238 = load i16* %237
  %239 = zext i16 %238 to i32
  %240 = sub nsw i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %241
  %243 = load float* %242
  %244 = load i16* %row, align 2
  %245 = zext i16 %244 to i64
  %246 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %245
  store float %243, float* %246
  br label %247

; <label>:247                                     ; preds = %228, %224
  br label %248

; <label>:248                                     ; preds = %247, %223
  br label %249

; <label>:249                                     ; preds = %248
  %250 = load i16* %row, align 2
  %251 = add i16 %250, 1
  store i16 %251, i16* %row, align 2
  br label %1

; <label>:252                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %249, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %252

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %224

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %220, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %223

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %173
  store float %157, float* %174
  %175 = load i16* %col, align 2
  %176 = zext i16 %175 to i32
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %219

; <label>:178                                     ; preds = %154
  %179 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = load i16* %col, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %190, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %194
  %196 = load float* %195
  %197 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %198 = load i16* %197
  %199 = zext i16 %198 to i32
  %200 = add nsw i32 3, %199
  %201 = load i16* %row, align 2
  %202 = zext i16 %201 to i32
  %203 = add nsw i32 %200, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %204
  %206 = load i16* %205
  %207 = zext i16 %206 to i32
  %208 = sub nsw i32 %207, 1
  %209 = load i16* %col, align 2
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 %208, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %212
  %214 = load float* %213
  %215 = call float @modifyInfo(float %196, float %214)
  %216 = load i16* %row, align 2
  %217 = zext i16 %216 to i64
  %218 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %217
  store float %215, float* %218
  br label %219

; <label>:219                                     ; preds = %178, %154
  br label %220

; <label>:220                                     ; preds = %219
  %221 = load i16* %col, align 2
  %222 = add i16 %221, 1
  store i16 %222, i16* %col, align 2
  br label %65

; <label>:223                                     ; preds = %65
  br label %248

; <label>:224                                     ; preds = %60
  %225 = load i16* %range, align 2
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %247

; <label>:228                                     ; preds = %224
  %229 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %230 = load i16* %229
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 3, %231
  %233 = load i16* %row, align 2
  %234 = zext i16 %233 to i32
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %236
  %238 = load i16* %237
  %239 = zext i16 %238 to i32
  %240 = sub nsw i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %241
  %243 = load float* %242
  %244 = load i16* %row, align 2
  %245 = zext i16 %244 to i64
  %246 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %245
  store float %243, float* %246
  br label %247

; <label>:247                                     ; preds = %228, %224
  br label %248

; <label>:248                                     ; preds = %247, %223
  br label %249

; <label>:249                                     ; preds = %248
  %250 = load i16* %row, align 2
  %251 = add i16 %250, 1
  store i16 %251, i16* %row, align 2
  br label %1

; <label>:252                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %249, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %252

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %224

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %220, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %223

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %173
  store float %157, float* %174
  %175 = load i16* %col, align 2
  %176 = zext i16 %175 to i32
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %219

; <label>:178                                     ; preds = %154
  %179 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = load i16* %col, align 2
  %192 = zext i16 %191 to i32
  %193 = add nsw i32 %190, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %194
  %196 = load float* %195
  %197 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %198 = load i16* %197
  %199 = zext i16 %198 to i32
  %200 = add nsw i32 3, %199
  %201 = load i16* %row, align 2
  %202 = zext i16 %201 to i32
  %203 = add nsw i32 %200, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %204
  %206 = load i16* %205
  %207 = zext i16 %206 to i32
  %208 = sub nsw i32 %207, 1
  %209 = load i16* %col, align 2
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 %208, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %212
  %214 = load float* %213
  %215 = call float @modifyInfo(float %196, float %214)
  %216 = load i16* %row, align 2
  %217 = zext i16 %216 to i64
  %218 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %217
  store float %215, float* %218
  br label %219

; <label>:219                                     ; preds = %178, %154
  br label %220

; <label>:220                                     ; preds = %219
  %221 = load i16* %col, align 2
  %222 = add i16 %221, 1
  store i16 %222, i16* %col, align 2
  br label %65

; <label>:223                                     ; preds = %65
  br label %248

; <label>:224                                     ; preds = %60
  %225 = load i16* %range, align 2
  %226 = zext i16 %225 to i32
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %247

; <label>:228                                     ; preds = %224
  %229 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %230 = load i16* %229
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 3, %231
  %233 = load i16* %row, align 2
  %234 = zext i16 %233 to i32
  %235 = add nsw i32 %232, %234
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %236
  %238 = load i16* %237
  %239 = zext i16 %238 to i32
  %240 = sub nsw i32 %239, 1
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %241
  %243 = load float* %242
  %244 = load i16* %row, align 2
  %245 = zext i16 %244 to i64
  %246 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %245
  store float %243, float* %246
  br label %247

; <label>:247                                     ; preds = %228, %224
  br label %248

; <label>:248                                     ; preds = %247, %223
  br label %249

; <label>:249                                     ; preds = %248
  %250 = load i16* %row, align 2
  %251 = add i16 %250, 1
  store i16 %251, i16* %row, align 2
  br label %1

; <label>:252                                     ; preds = %1
  ret void
}

define void @transverseCorrection11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %195, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %198

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %170

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %122

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %118, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %121

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %116
  store float %100, float* %117
  br label %118

; <label>:118                                     ; preds = %77
  %119 = load i16* %col, align 2
  %120 = add i16 %119, 1
  store i16 %120, i16* %col, align 2
  br label %71

; <label>:121                                     ; preds = %71
  br label %169

; <label>:122                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %123

; <label>:123                                     ; preds = %165, %122
  %124 = load i16* %col, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16* %range, align 2
  %127 = zext i16 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %168

; <label>:129                                     ; preds = %123
  %130 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %131 = load i16* %130
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 3, %132
  %134 = load i16* %row, align 2
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %133, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %137
  %139 = load i16* %138
  %140 = zext i16 %139 to i32
  %141 = sub nsw i32 %140, 1
  %142 = load i16* %col, align 2
  %143 = zext i16 %142 to i32
  %144 = add nsw i32 %141, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %145
  %147 = load float* %146
  %148 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %149 = load i16* %148
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 3, %150
  %152 = load i16* %row, align 2
  %153 = zext i16 %152 to i32
  %154 = add nsw i32 %151, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %155
  %157 = load i16* %156
  %158 = zext i16 %157 to i32
  %159 = sub nsw i32 %158, 1
  %160 = load i16* %col, align 2
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %163
  store float %147, float* %164
  br label %165

; <label>:165                                     ; preds = %129
  %166 = load i16* %col, align 2
  %167 = add i16 %166, 1
  store i16 %167, i16* %col, align 2
  br label %123

; <label>:168                                     ; preds = %123
  br label %169

; <label>:169                                     ; preds = %168, %121
  br label %194

; <label>:170                                     ; preds = %60
  %171 = load i16* %range, align 2
  %172 = zext i16 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %193

; <label>:174                                     ; preds = %170
  %175 = load i16* %row, align 2
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %176
  %178 = load float* %177
  %179 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %191
  store float %178, float* %192
  br label %193

; <label>:193                                     ; preds = %174, %170
  br label %194

; <label>:194                                     ; preds = %193, %169
  br label %195

; <label>:195                                     ; preds = %194
  %196 = load i16* %row, align 2
  %197 = add i16 %196, 1
  store i16 %197, i16* %row, align 2
  br label %1

; <label>:198                                     ; preds = %1
  ret void
}

define void @transverseCorrection12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %195, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %198

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %170

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %122

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %118, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %121

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %116
  store float %100, float* %117
  br label %118

; <label>:118                                     ; preds = %77
  %119 = load i16* %col, align 2
  %120 = add i16 %119, 1
  store i16 %120, i16* %col, align 2
  br label %71

; <label>:121                                     ; preds = %71
  br label %169

; <label>:122                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %123

; <label>:123                                     ; preds = %165, %122
  %124 = load i16* %col, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16* %range, align 2
  %127 = zext i16 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %168

; <label>:129                                     ; preds = %123
  %130 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %131 = load i16* %130
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 3, %132
  %134 = load i16* %row, align 2
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %133, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %137
  %139 = load i16* %138
  %140 = zext i16 %139 to i32
  %141 = sub nsw i32 %140, 1
  %142 = load i16* %col, align 2
  %143 = zext i16 %142 to i32
  %144 = add nsw i32 %141, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %145
  %147 = load float* %146
  %148 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %149 = load i16* %148
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 3, %150
  %152 = load i16* %row, align 2
  %153 = zext i16 %152 to i32
  %154 = add nsw i32 %151, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %155
  %157 = load i16* %156
  %158 = zext i16 %157 to i32
  %159 = sub nsw i32 %158, 1
  %160 = load i16* %col, align 2
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %163
  store float %147, float* %164
  br label %165

; <label>:165                                     ; preds = %129
  %166 = load i16* %col, align 2
  %167 = add i16 %166, 1
  store i16 %167, i16* %col, align 2
  br label %123

; <label>:168                                     ; preds = %123
  br label %169

; <label>:169                                     ; preds = %168, %121
  br label %194

; <label>:170                                     ; preds = %60
  %171 = load i16* %range, align 2
  %172 = zext i16 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %193

; <label>:174                                     ; preds = %170
  %175 = load i16* %row, align 2
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %176
  %178 = load float* %177
  %179 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %191
  store float %178, float* %192
  br label %193

; <label>:193                                     ; preds = %174, %170
  br label %194

; <label>:194                                     ; preds = %193, %169
  br label %195

; <label>:195                                     ; preds = %194
  %196 = load i16* %row, align 2
  %197 = add i16 %196, 1
  store i16 %197, i16* %row, align 2
  br label %1

; <label>:198                                     ; preds = %1
  ret void
}

define void @transverseCorrection22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %195, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %198

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %170

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %122

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %118, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %121

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %116
  store float %100, float* %117
  br label %118

; <label>:118                                     ; preds = %77
  %119 = load i16* %col, align 2
  %120 = add i16 %119, 1
  store i16 %120, i16* %col, align 2
  br label %71

; <label>:121                                     ; preds = %71
  br label %169

; <label>:122                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %123

; <label>:123                                     ; preds = %165, %122
  %124 = load i16* %col, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16* %range, align 2
  %127 = zext i16 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %168

; <label>:129                                     ; preds = %123
  %130 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %131 = load i16* %130
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 3, %132
  %134 = load i16* %row, align 2
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %133, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %137
  %139 = load i16* %138
  %140 = zext i16 %139 to i32
  %141 = sub nsw i32 %140, 1
  %142 = load i16* %col, align 2
  %143 = zext i16 %142 to i32
  %144 = add nsw i32 %141, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %145
  %147 = load float* %146
  %148 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %149 = load i16* %148
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 3, %150
  %152 = load i16* %row, align 2
  %153 = zext i16 %152 to i32
  %154 = add nsw i32 %151, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %155
  %157 = load i16* %156
  %158 = zext i16 %157 to i32
  %159 = sub nsw i32 %158, 1
  %160 = load i16* %col, align 2
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %163
  store float %147, float* %164
  br label %165

; <label>:165                                     ; preds = %129
  %166 = load i16* %col, align 2
  %167 = add i16 %166, 1
  store i16 %167, i16* %col, align 2
  br label %123

; <label>:168                                     ; preds = %123
  br label %169

; <label>:169                                     ; preds = %168, %121
  br label %194

; <label>:170                                     ; preds = %60
  %171 = load i16* %range, align 2
  %172 = zext i16 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %193

; <label>:174                                     ; preds = %170
  %175 = load i16* %row, align 2
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %176
  %178 = load float* %177
  %179 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %191
  store float %178, float* %192
  br label %193

; <label>:193                                     ; preds = %174, %170
  br label %194

; <label>:194                                     ; preds = %193, %169
  br label %195

; <label>:195                                     ; preds = %194
  %196 = load i16* %row, align 2
  %197 = add i16 %196, 1
  store i16 %197, i16* %row, align 2
  br label %1

; <label>:198                                     ; preds = %1
  ret void
}

define void @transverseCorrection21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %195, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %198

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %170

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %122

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %118, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %121

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %116
  store float %100, float* %117
  br label %118

; <label>:118                                     ; preds = %77
  %119 = load i16* %col, align 2
  %120 = add i16 %119, 1
  store i16 %120, i16* %col, align 2
  br label %71

; <label>:121                                     ; preds = %71
  br label %169

; <label>:122                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %123

; <label>:123                                     ; preds = %165, %122
  %124 = load i16* %col, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16* %range, align 2
  %127 = zext i16 %126 to i32
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %168

; <label>:129                                     ; preds = %123
  %130 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %131 = load i16* %130
  %132 = zext i16 %131 to i32
  %133 = add nsw i32 3, %132
  %134 = load i16* %row, align 2
  %135 = zext i16 %134 to i32
  %136 = add nsw i32 %133, %135
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %137
  %139 = load i16* %138
  %140 = zext i16 %139 to i32
  %141 = sub nsw i32 %140, 1
  %142 = load i16* %col, align 2
  %143 = zext i16 %142 to i32
  %144 = add nsw i32 %141, %143
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %145
  %147 = load float* %146
  %148 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %149 = load i16* %148
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 3, %150
  %152 = load i16* %row, align 2
  %153 = zext i16 %152 to i32
  %154 = add nsw i32 %151, %153
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %155
  %157 = load i16* %156
  %158 = zext i16 %157 to i32
  %159 = sub nsw i32 %158, 1
  %160 = load i16* %col, align 2
  %161 = zext i16 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %163
  store float %147, float* %164
  br label %165

; <label>:165                                     ; preds = %129
  %166 = load i16* %col, align 2
  %167 = add i16 %166, 1
  store i16 %167, i16* %col, align 2
  br label %123

; <label>:168                                     ; preds = %123
  br label %169

; <label>:169                                     ; preds = %168, %121
  br label %194

; <label>:170                                     ; preds = %60
  %171 = load i16* %range, align 2
  %172 = zext i16 %171 to i32
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %193

; <label>:174                                     ; preds = %170
  %175 = load i16* %row, align 2
  %176 = zext i16 %175 to i64
  %177 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %176
  %178 = load float* %177
  %179 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %180 = load i16* %179
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 3, %181
  %183 = load i16* %row, align 2
  %184 = zext i16 %183 to i32
  %185 = add nsw i32 %182, %184
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %186
  %188 = load i16* %187
  %189 = zext i16 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %191
  store float %178, float* %192
  br label %193

; <label>:193                                     ; preds = %174, %170
  br label %194

; <label>:194                                     ; preds = %193, %169
  br label %195

; <label>:195                                     ; preds = %194
  %196 = load i16* %row, align 2
  %197 = add i16 %196, 1
  store i16 %197, i16* %row, align 2
  br label %1

; <label>:198                                     ; preds = %1
  ret void
}

define void @update_aPosteriori11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %25, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %28

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i32
  %15 = add nsw i32 3, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %16
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %21
  %23 = load float* %22
  %24 = fadd float %23, %12
  store float %24, float* %22
  br label %25

; <label>:25                                      ; preds = %8
  %26 = load i16* %I, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %I, align 2
  br label %1

; <label>:28                                      ; preds = %1
  ret void
}

define void @update_aPosteriori12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %25, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %28

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i32
  %15 = add nsw i32 3, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %16
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %21
  %23 = load float* %22
  %24 = fadd float %23, %12
  store float %24, float* %22
  br label %25

; <label>:25                                      ; preds = %8
  %26 = load i16* %I, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %I, align 2
  br label %1

; <label>:28                                      ; preds = %1
  ret void
}

define void @update_aPosteriori21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %25, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %28

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i32
  %15 = add nsw i32 3, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %16
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %21
  %23 = load float* %22
  %24 = fadd float %23, %12
  store float %24, float* %22
  br label %25

; <label>:25                                      ; preds = %8
  %26 = load i16* %I, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %I, align 2
  br label %1

; <label>:28                                      ; preds = %1
  ret void
}

define void @update_aPosteriori22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %25, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %28

; <label>:8                                       ; preds = %1
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i32
  %15 = add nsw i32 3, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %16
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %21
  %23 = load float* %22
  %24 = fadd float %23, %12
  store float %24, float* %22
  br label %25

; <label>:25                                      ; preds = %8
  %26 = load i16* %I, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %I, align 2
  br label %1

; <label>:28                                      ; preds = %1
  ret void
}

define zeroext i8 @checkIsdecoded1() nounwind {
  %is_decoded = alloca i8, align 1
  %I = alloca i16, align 2
  store i8 1, i8* %is_decoded, align 1
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %48, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %51

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %10
  %12 = load float* %11
  %13 = fpext float %12 to double
  %14 = fcmp ogt double %13, 0.000000e+00
  br i1 %14, label %15, label %27

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %17
  %19 = load float* %18
  %20 = fpext float %19 to double
  %21 = fcmp ogt double %20, 0.000000e+00
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %15
  store i8 0, i8* %is_decoded, align 1
  br label %23

; <label>:23                                      ; preds = %22, %15
  %24 = load i16* %I, align 2
  %25 = zext i16 %24 to i64
  %26 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %25
  store float -1.000000e+00, float* %26
  br label %47

; <label>:27                                      ; preds = %8
  %28 = load i16* %I, align 2
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %29
  %31 = load float* %30
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 0.000000e+00
  br i1 %33, label %34, label %46

; <label>:34                                      ; preds = %27
  %35 = load i16* %I, align 2
  %36 = zext i16 %35 to i64
  %37 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %36
  %38 = load float* %37
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %34
  store i8 0, i8* %is_decoded, align 1
  br label %42

; <label>:42                                      ; preds = %41, %34
  %43 = load i16* %I, align 2
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %44
  store float 1.000000e+00, float* %45
  br label %46

; <label>:46                                      ; preds = %42, %27
  br label %47

; <label>:47                                      ; preds = %46, %23
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i16* %I, align 2
  %50 = add i16 %49, 1
  store i16 %50, i16* %I, align 2
  br label %1

; <label>:51                                      ; preds = %1
  %52 = load i8* %is_decoded, align 1
  ret i8 %52
}

define zeroext i8 @checkIsdecoded2() nounwind {
  %is_decoded = alloca i8, align 1
  %I = alloca i16, align 2
  store i8 1, i8* %is_decoded, align 1
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %48, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %51

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %10
  %12 = load float* %11
  %13 = fpext float %12 to double
  %14 = fcmp ogt double %13, 0.000000e+00
  br i1 %14, label %15, label %27

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %17
  %19 = load float* %18
  %20 = fpext float %19 to double
  %21 = fcmp ogt double %20, 0.000000e+00
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %15
  store i8 0, i8* %is_decoded, align 1
  br label %23

; <label>:23                                      ; preds = %22, %15
  %24 = load i16* %I, align 2
  %25 = zext i16 %24 to i64
  %26 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %25
  store float -1.000000e+00, float* %26
  br label %47

; <label>:27                                      ; preds = %8
  %28 = load i16* %I, align 2
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %29
  %31 = load float* %30
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 0.000000e+00
  br i1 %33, label %34, label %46

; <label>:34                                      ; preds = %27
  %35 = load i16* %I, align 2
  %36 = zext i16 %35 to i64
  %37 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %36
  %38 = load float* %37
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %34
  store i8 0, i8* %is_decoded, align 1
  br label %42

; <label>:42                                      ; preds = %41, %34
  %43 = load i16* %I, align 2
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %44
  store float 1.000000e+00, float* %45
  br label %46

; <label>:46                                      ; preds = %42, %27
  br label %47

; <label>:47                                      ; preds = %46, %23
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i16* %I, align 2
  %50 = add i16 %49, 1
  store i16 %50, i16* %I, align 2
  br label %1

; <label>:51                                      ; preds = %1
  %52 = load i8* %is_decoded, align 1
  ret i8 %52
}

define void @updateMessage11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @bpsk_demodulate() nounwind {
  %I = alloca i32, align 4
  store i32 0, i32* %I, align 4
  br label %1

; <label>:1                                       ; preds = %30, %0
  %2 = load i32* %I, align 4
  %3 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %4 = load i16* %3
  %5 = zext i16 %4 to i32
  %6 = icmp slt i32 %2, %5
  br i1 %6, label %7, label %33

; <label>:7                                       ; preds = %1
  %8 = load i32* %I, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %9
  %11 = load float* %10
  %12 = fpext float %11 to double
  %13 = fcmp olt double %12, 0.000000e+00
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %7
  %15 = load i32* %I, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %16
  store float 0.000000e+00, float* %17
  br label %18

; <label>:18                                      ; preds = %14, %7
  %19 = load i32* %I, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %20
  %22 = load float* %21
  %23 = fpext float %22 to double
  %24 = fcmp olt double %23, 0.000000e+00
  br i1 %24, label %25, label %29

; <label>:25                                      ; preds = %18
  %26 = load i32* %I, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %27
  store float 0.000000e+00, float* %28
  br label %29

; <label>:29                                      ; preds = %25, %18
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i32* %I, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %I, align 4
  br label %1

; <label>:33                                      ; preds = %1
  ret void
}

define void @top_daemon_1() nounwind {
  %nitr_1 = alloca i8, align 1
  %init_trans_info = alloca i8, align 1
  %aPosteriori_update_phase2_done = alloca i8, align 1
  %is_decoded_1 = alloca i8, align 1
  %is_decoded_from_2 = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %read_message_21_modified = alloca i8, align 1
  %K1 = alloca i16, align 2
  %K2 = alloca i16, align 2
  call void @initInputs()
  call void @readCodeBlock()
  %1 = getelementptr [24 x i8]* @.str5, i32 0, i32 0
  call void @write_uint8(i8* %1, i8 zeroext 1)
  call void @initialize_aPriori1()
  call void @initializeMessage11()
  %2 = getelementptr [22 x i8]* @.str6, i32 0, i32 0
  call void @write_uint8(i8* %2, i8 zeroext 1)
  store i8 1, i8* %nitr_1, align 1
  br label %3

; <label>:3                                       ; preds = %41, %0
  %4 = load i8* %nitr_1, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initialize_aPosteriori1()
  call void @initializeExtrinsicInfo11()
  call void @initializeTransInfo11_12()
  call void @checkNodeComputeEngine11()
  %10 = getelementptr [32 x i8]* @.str7, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str8, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %init_trans_info, align 1
  call void @transverseCorrection11()
  call void @update_aPosteriori11()
  %13 = getelementptr [26 x i8]* @.str9, i32 0, i32 0
  call void @write_uint8(i8* %13, i8 zeroext 1)
  %14 = getelementptr [26 x i8]* @.str10, i32 0, i32 0
  %15 = call zeroext i8 @read_uint8(i8* %14)
  store i8 %15, i8* %aPosteriori_update_phase2_done, align 1
  %16 = call zeroext i8 @checkIsdecoded1()
  store i8 %16, i8* %is_decoded_1, align 1
  %17 = getelementptr [13 x i8]* @.str11, i32 0, i32 0
  %18 = call zeroext i8 @read_uint8(i8* %17)
  store i8 %18, i8* %is_decoded_from_2, align 1
  %19 = load i8* %is_decoded_1, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %9
  %23 = load i8* %is_decoded_from_2, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br label %26

; <label>:26                                      ; preds = %22, %9
  %27 = phi i1 [ false, %9 ], [ %25, %22 ]
  %28 = zext i1 %27 to i32
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %is_decoded, align 1
  %30 = load i8* %is_decoded, align 1
  %31 = getelementptr [14 x i8]* @.str12, i32 0, i32 0
  call void @write_uint8(i8* %31, i8 zeroext %30)
  %32 = load i8* %is_decoded, align 1
  %33 = getelementptr [14 x i8]* @.str13, i32 0, i32 0
  call void @write_uint8(i8* %33, i8 zeroext %32)
  %34 = load i8* %is_decoded, align 1
  %35 = getelementptr [14 x i8]* @.str14, i32 0, i32 0
  call void @write_uint8(i8* %35, i8 zeroext %34)
  %36 = load i8* %is_decoded, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %26
  br label %47

; <label>:40                                      ; preds = %26
  call void @updateMessage11()
  br label %41

; <label>:41                                      ; preds = %40
  %42 = load i8* %nitr_1, align 1
  %43 = add i8 %42, 1
  store i8 %43, i8* %nitr_1, align 1
  %44 = getelementptr [19 x i8]* @.str15, i32 0, i32 0
  call void @write_uint8(i8* %44, i8 zeroext 1)
  %45 = getelementptr [19 x i8]* @.str16, i32 0, i32 0
  %46 = call zeroext i8 @read_uint8(i8* %45)
  store i8 %46, i8* %read_message_21_modified, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %47

; <label>:47                                      ; preds = %.loopexit, %39
  call void @bpsk_demodulate()
  store i16 0, i16* %K1, align 2
  br label %48

; <label>:48                                      ; preds = %61, %47
  %49 = load i16* %K1, align 2
  %50 = zext i16 %49 to i32
  %51 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %52 = load i16* %51
  %53 = zext i16 %52 to i32
  %54 = icmp slt i32 %50, %53
  br i1 %54, label %55, label %64

; <label>:55                                      ; preds = %48
  %56 = load i16* %K1, align 2
  %57 = zext i16 %56 to i64
  %58 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %57
  %59 = load float* %58
  %60 = getelementptr [16 x i8]* @.str17, i32 0, i32 0
  call void @write_float32(i8* %60, float %59)
  br label %61

; <label>:61                                      ; preds = %55
  %62 = load i16* %K1, align 2
  %63 = add i16 %62, 1
  store i16 %63, i16* %K1, align 2
  br label %48

; <label>:64                                      ; preds = %48
  store i16 0, i16* %K2, align 2
  br label %65

; <label>:65                                      ; preds = %78, %64
  %66 = load i16* %K2, align 2
  %67 = zext i16 %66 to i32
  %68 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %72, label %81

; <label>:72                                      ; preds = %65
  %73 = load i16* %K2, align 2
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %74
  %76 = load float* %75
  %77 = getelementptr [16 x i8]* @.str18, i32 0, i32 0
  call void @write_float32(i8* %77, float %76)
  br label %78

; <label>:78                                      ; preds = %72
  %79 = load i16* %K2, align 2
  %80 = add i16 %79, 1
  store i16 %80, i16* %K2, align 2
  br label %65

; <label>:81                                      ; preds = %65
  ret void
}

declare void @write_uint8(i8*, i8 zeroext)

declare zeroext i8 @read_uint8(i8*)

declare void @write_float32(i8*, float)

define void @top_daemon_2() nounwind {
  %init_mat = alloca i8, align 1
  %nitr_2 = alloca i8, align 1
  %init_trans_info = alloca i8, align 1
  %aPosteriori_update_phase2_done = alloca i8, align 1
  %find_is_decoded_2 = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %read_message_22_modified = alloca i8, align 1
  %1 = getelementptr [24 x i8]* @.str5, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_mat, align 1
  call void @initialize_aPriori2()
  call void @initializeMessage12()
  %3 = getelementptr [22 x i8]* @.str19, i32 0, i32 0
  call void @write_uint8(i8* %3, i8 zeroext 1)
  store i8 1, i8* %nitr_2, align 1
  br label %4

; <label>:4                                       ; preds = %27, %0
  %5 = load i8* %nitr_2, align 1
  %6 = zext i8 %5 to i32
  %7 = load i16* @maxNitr, align 2
  %8 = zext i16 %7 to i32
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %.loopexit

; <label>:10                                      ; preds = %4
  call void @initialize_aPosteriori2()
  call void @initializeExtrinsicInfo12()
  call void @initializeTransInfo12_11()
  call void @checkNodeComputeEngine12()
  %11 = getelementptr [32 x i8]* @.str8, i32 0, i32 0
  call void @write_uint8(i8* %11, i8 zeroext 1)
  %12 = getelementptr [32 x i8]* @.str7, i32 0, i32 0
  %13 = call zeroext i8 @read_uint8(i8* %12)
  store i8 %13, i8* %init_trans_info, align 1
  call void @transverseCorrection12()
  call void @update_aPosteriori12()
  %14 = getelementptr [26 x i8]* @.str20, i32 0, i32 0
  call void @write_uint8(i8* %14, i8 zeroext 1)
  %15 = getelementptr [26 x i8]* @.str21, i32 0, i32 0
  %16 = call zeroext i8 @read_uint8(i8* %15)
  store i8 %16, i8* %aPosteriori_update_phase2_done, align 1
  %17 = call zeroext i8 @checkIsdecoded2()
  store i8 %17, i8* %find_is_decoded_2, align 1
  %18 = load i8* %find_is_decoded_2, align 1
  %19 = getelementptr [13 x i8]* @.str11, i32 0, i32 0
  call void @write_uint8(i8* %19, i8 zeroext %18)
  %20 = getelementptr [14 x i8]* @.str12, i32 0, i32 0
  %21 = call zeroext i8 @read_uint8(i8* %20)
  store i8 %21, i8* %is_decoded, align 1
  %22 = load i8* %is_decoded, align 1
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %10
  br label %33

; <label>:26                                      ; preds = %10
  call void @updateMessage12()
  br label %27

; <label>:27                                      ; preds = %26
  %28 = load i8* %nitr_2, align 1
  %29 = add i8 %28, 1
  store i8 %29, i8* %nitr_2, align 1
  %30 = getelementptr [19 x i8]* @.str22, i32 0, i32 0
  call void @write_uint8(i8* %30, i8 zeroext 1)
  %31 = getelementptr [19 x i8]* @.str23, i32 0, i32 0
  %32 = call zeroext i8 @read_uint8(i8* %31)
  store i8 %32, i8* %read_message_22_modified, align 1
  br label %4

.loopexit:                                        ; preds = %4
  br label %33

; <label>:33                                      ; preds = %.loopexit, %25
  ret void
}

define void @daemon_3() nounwind {
  %init_aPriori1 = alloca i8, align 1
  %nitr_3 = alloca i8, align 1
  %trans_info_computed = alloca i8, align 1
  %aPosteriori_update_phase1_done = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %read_message11_modified = alloca i8, align 1
  %1 = getelementptr [22 x i8]* @.str6, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_aPriori1, align 1
  call void @initializeMessage21()
  store i8 1, i8* %nitr_3, align 1
  br label %3

; <label>:3                                       ; preds = %23, %0
  %4 = load i8* %nitr_3, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initializeExtrinsicInfo21()
  call void @initializeTransInfo21_22()
  call void @checkNodeComputeEngine21()
  %10 = getelementptr [32 x i8]* @.str24, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str25, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %trans_info_computed, align 1
  call void @transverseCorrection21()
  %13 = getelementptr [26 x i8]* @.str9, i32 0, i32 0
  %14 = call zeroext i8 @read_uint8(i8* %13)
  store i8 %14, i8* %aPosteriori_update_phase1_done, align 1
  call void @update_aPosteriori21()
  %15 = getelementptr [26 x i8]* @.str10, i32 0, i32 0
  call void @write_uint8(i8* %15, i8 zeroext 1)
  %16 = getelementptr [14 x i8]* @.str13, i32 0, i32 0
  %17 = call zeroext i8 @read_uint8(i8* %16)
  store i8 %17, i8* %is_decoded, align 1
  %18 = load i8* %is_decoded, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %9
  br label %29

; <label>:22                                      ; preds = %9
  call void @updateMessage21()
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i8* %nitr_3, align 1
  %25 = add i8 %24, 1
  store i8 %25, i8* %nitr_3, align 1
  %26 = getelementptr [19 x i8]* @.str16, i32 0, i32 0
  call void @write_uint8(i8* %26, i8 zeroext 1)
  %27 = getelementptr [19 x i8]* @.str15, i32 0, i32 0
  %28 = call zeroext i8 @read_uint8(i8* %27)
  store i8 %28, i8* %read_message11_modified, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %29

; <label>:29                                      ; preds = %.loopexit, %21
  ret void
}

define void @daemon_4() nounwind {
  %init_aPriori2 = alloca i8, align 1
  %nitr_4 = alloca i8, align 1
  %trans_info_computed = alloca i8, align 1
  %aPosteriori_update_phase1_done = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %read_message12_modified = alloca i8, align 1
  %1 = getelementptr [22 x i8]* @.str19, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_aPriori2, align 1
  call void @initializeMessage22()
  store i8 1, i8* %nitr_4, align 1
  br label %3

; <label>:3                                       ; preds = %23, %0
  %4 = load i8* %nitr_4, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initializeExtrinsicInfo22()
  call void @initializeTransInfo22_21()
  call void @checkNodeComputeEngine22()
  %10 = getelementptr [32 x i8]* @.str25, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str24, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %trans_info_computed, align 1
  call void @transverseCorrection22()
  %13 = getelementptr [26 x i8]* @.str20, i32 0, i32 0
  %14 = call zeroext i8 @read_uint8(i8* %13)
  store i8 %14, i8* %aPosteriori_update_phase1_done, align 1
  call void @update_aPosteriori22()
  %15 = getelementptr [26 x i8]* @.str21, i32 0, i32 0
  call void @write_uint8(i8* %15, i8 zeroext 1)
  %16 = getelementptr [14 x i8]* @.str14, i32 0, i32 0
  %17 = call zeroext i8 @read_uint8(i8* %16)
  store i8 %17, i8* %is_decoded, align 1
  %18 = load i8* %is_decoded, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %9
  br label %29

; <label>:22                                      ; preds = %9
  call void @updateMessage22()
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i8* %nitr_4, align 1
  %25 = add i8 %24, 1
  store i8 %25, i8* %nitr_4, align 1
  %26 = getelementptr [19 x i8]* @.str23, i32 0, i32 0
  call void @write_uint8(i8* %26, i8 zeroext 1)
  %27 = getelementptr [19 x i8]* @.str22, i32 0, i32 0
  %28 = call zeroext i8 @read_uint8(i8* %27)
  store i8 %28, i8* %read_message12_modified, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %29

; <label>:29                                      ; preds = %.loopexit, %21
  ret void
}
