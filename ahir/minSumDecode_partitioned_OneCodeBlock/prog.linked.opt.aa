$constant  ADDOP : $uint<8>:= 0  
$constant  MULOP : $uint<8>:= 2  
$constant  SUBOP : $uint<8>:= 1  
$storage  aPosteriori1 : $array[13000] $of $float<8,23> // memory space index = 0  base address = 0  word size = 32
// can point into 
$pipe  aPosteriori1_phase_1_done : $uint<8>  $depth 1 
// can point into 
$pipe  aPosteriori1_phase_2_done : $uint<8>  $depth 1 
// can point into 
$storage  aPosteriori2 : $array[13000] $of $float<8,23> // memory space index = 1  base address = 0  word size = 32
// can point into 
$pipe  aPosteriori2_phase_1_done : $uint<8>  $depth 1 
// can point into 
$pipe  aPosteriori2_phase_2_done : $uint<8>  $depth 1 
// can point into 
$storage  aPriori1 : $array[13000] $of $float<8,23> // memory space index = 2  base address = 0  word size = 32
// can point into 
$storage  aPriori2 : $array[13000] $of $float<8,23> // memory space index = 3  base address = 0  word size = 32
// can point into 
$constant  c_ONE_64 : $uint<64>:= _b1  
$constant  c_ZERO_1 : $uint<1>:= 0  
$storage  code_block1 : $array[13000] $of $float<8,23> // memory space index = 4  base address = 0  word size = 32
// can point into 
$pipe  code_block1_out : $float<8,23>  $depth 2 
// can point into 
$storage  code_block2 : $array[13000] $of $float<8,23> // memory space index = 5  base address = 0  word size = 32
// can point into 
$pipe  code_block2_out : $float<8,23>  $depth 2 
// can point into 
$pipe  code_block_in : $float<8,23>  $depth 2 
// can point into 
$storage  ebbyNo : $float<8,23> // memory space index = 6  base address = 0  word size = 32
// can point into 
$pipe  ebbyNo_in : $float<8,23>  $depth 1 
// can point into 
$storage  ext_info11 : $array[20000] $of $float<8,23> // memory space index = 7  base address = 0  word size = 32
// can point into 
$storage  ext_info12 : $array[20000] $of $float<8,23> // memory space index = 8  base address = 0  word size = 32
// can point into 
$storage  ext_info21 : $array[20000] $of $float<8,23> // memory space index = 9  base address = 0  word size = 32
// can point into 
$storage  ext_info22 : $array[20000] $of $float<8,23> // memory space index = 10  base address = 0  word size = 32
// can point into 
$constant  fp_d_ZERO : $float<11,52>:= _f0.0e+0 
$pipe  is_decoded_2 : $uint<8>  $depth 1 
// can point into 
$pipe  is_decoded_d2 : $uint<8>  $depth 1 
// can point into 
$pipe  is_decoded_d3 : $uint<8>  $depth 1 
// can point into 
$pipe  is_decoded_d4 : $uint<8>  $depth 1 
// can point into 
$pipe  matrix_in : $uint<16>  $depth 2 
// can point into 
$storage  maxNitr : $uint<16> // memory space index = 11  base address = 0  word size = 16
// can point into 
$pipe  maxNitr_in : $uint<16>  $depth 2 
// can point into 
$storage  mem11 : $array[20000] $of $uint<16> // memory space index = 12  base address = 0  word size = 16
// can point into 
$storage  mem12 : $array[20000] $of $uint<16> // memory space index = 13  base address = 0  word size = 16
// can point into 
$storage  mem21 : $array[20000] $of $uint<16> // memory space index = 14  base address = 0  word size = 16
// can point into 
$storage  mem22 : $array[20000] $of $uint<16> // memory space index = 15  base address = 0  word size = 16
// can point into 
$storage  message11 : $array[20000] $of $float<8,23> // memory space index = 16  base address = 0  word size = 32
// can point into 
$pipe  message11_initialized : $uint<8>  $depth 1 
// can point into 
$pipe  message11_modified : $uint<8>  $depth 1 
// can point into 
$storage  message12 : $array[20000] $of $float<8,23> // memory space index = 17  base address = 0  word size = 32
// can point into 
$pipe  message12_initialized : $uint<8>  $depth 1 
// can point into 
$pipe  message12_modified : $uint<8>  $depth 1 
// can point into 
$storage  message21 : $array[20000] $of $float<8,23> // memory space index = 18  base address = 0  word size = 32
// can point into 
$pipe  message21_modified : $uint<8>  $depth 1 
// can point into 
$storage  message22 : $array[20000] $of $float<8,23> // memory space index = 19  base address = 0  word size = 32
// can point into 
$pipe  message22_modified : $uint<8>  $depth 1 
// can point into 
$storage  rate : $float<8,23> // memory space index = 20  base address = 0  word size = 32
// can point into 
$pipe  rate_in : $float<8,23>  $depth 1 
// can point into 
$pipe  reading_code_block_done : $uint<8>  $depth 2 
// can point into 
$storage  trans_info11_12 : $array[20000] $of $float<8,23> // memory space index = 21  base address = 0  word size = 32
// can point into 
$pipe  trans_info11_12_calulation_done : $uint<8>  $depth 1 
// can point into 
$storage  trans_info12_11 : $array[20000] $of $float<8,23> // memory space index = 22  base address = 0  word size = 32
// can point into 
$pipe  trans_info12_11_calulation_done : $uint<8>  $depth 1 
// can point into 
$storage  trans_info21_22 : $array[20000] $of $float<8,23> // memory space index = 23  base address = 0  word size = 32
// can point into 
$pipe  trans_info21_22_calulation_done : $uint<8>  $depth 1 
// can point into 
$storage  trans_info22_21 : $array[20000] $of $float<8,23> // memory space index = 24  base address = 0  word size = 32
// can point into 
$pipe  trans_info22_21_calulation_done : $uint<8>  $depth 1 
// can point into 
$module [absf]
$in ( f : $float<8,23>  )
$out ( ret_val__ : $float<8,23>  )
$is
{
  $branchblock [body]
  {
    $storage  iNsTr_0_alloc : $float<8,23> // memory space index = 25  base address = 0  word size = 32
    // can point into 
    $storage  ret_alloc : $float<8,23> // memory space index = 26  base address = 0  word size = 32
    // can point into 
    iNsTr_0 := @(iNsTr_0_alloc)
    ret := @(ret_alloc)
    ->(iNsTr_0) := f
    iNsTr_2 := ->(iNsTr_0)
    iNsTr_3 := ($cast ($float<11,52>) iNsTr_2 )
    iNsTr_4 := (iNsTr_3 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_4 $then 
    $place[bb_0_bb_1]
    $else 
    $place[bb_0_bb_2]
    $endif
    $merge bb_0_bb_1 
    $endmerge
    iNsTr_6 := ->(iNsTr_0)
    iNsTr_7 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_6)
    ->(ret) := iNsTr_7
    $place[bb_1_bb_3]
    $merge bb_0_bb_2 
    $endmerge
    iNsTr_10 := ->(iNsTr_0)
    ->(ret) := iNsTr_10
    $place[bb_2_bb_3]
    $merge bb_1_bb_3 bb_2_bb_3 
    $endmerge
    ret_val__ := ->(ret)
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [bpsk_demodulate]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<32> // memory space index = 27  base address = 0  word size = 32
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<32>) _b00000000000000000000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_7_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_4 := ->(iNsTr_3)
    iNsTr_5 := ($cast ($uint<32>) iNsTr_4 )
    iNsTr_6 := (($bitcast ($int<32>) iNsTr_2 ) < ($bitcast ($int<32>) iNsTr_5 ))
    $if iNsTr_6 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_8]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_8 := ->(I)
    iNsTr_9 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_8 ) )
    iNsTr_10 := @(code_block1[iNsTr_9])
    iNsTr_11 := ->(iNsTr_10)
    iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
    iNsTr_13 := (iNsTr_12 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_13 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_16 ) )
    iNsTr_18 := @(code_block1[iNsTr_17])
    ->(iNsTr_18) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_3_bb_4]
    $merge bb_2_bb_4 bb_3_bb_4 
    $endmerge
    iNsTr_21 := ->(I)
    iNsTr_22 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_21 ) )
    iNsTr_23 := @(code_block2[iNsTr_22])
    iNsTr_24 := ->(iNsTr_23)
    iNsTr_25 := ($cast ($float<11,52>) iNsTr_24 )
    iNsTr_26 := (iNsTr_25 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_26 $then 
    $place[bb_4_bb_5]
    $else 
    $place[bb_4_bb_6]
    $endif
    $merge bb_4_bb_5 
    $endmerge
    iNsTr_28 := ->(I)
    iNsTr_29 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_28 ) )
    iNsTr_30 := @(code_block2[iNsTr_29])
    ->(iNsTr_30) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_5_bb_6]
    $merge bb_4_bb_6 bb_5_bb_6 
    $endmerge
    $place[bb_6_bb_7]
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_34 := ->(I)
    iNsTr_35 := (iNsTr_34 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    ->(I) := iNsTr_35
    $place[bb_7_bb_1]
    $merge bb_1_bb_8 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkIsdecoded1]
$in ()
$out ( ret_val__ : $uint<8>  )
$is
{
  $branchblock [body]
  {
    $storage  is_decoded_alloc : $uint<8> // memory space index = 28  base address = 0  word size = 8
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 29  base address = 0  word size = 16
    // can point into 
    is_decoded := @(is_decoded_alloc)
    I := @(I_alloc)
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000001  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_12_bb_1 
    $endmerge
    iNsTr_3 := ->(I)
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3 )
    iNsTr_5 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_6 := ->(iNsTr_5)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6 )
    iNsTr_8 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) iNsTr_7 ))
    $if iNsTr_8 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_13]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_11 := ->(I)
    iNsTr_12 := ($cast ($uint<64>) iNsTr_11 )
    iNsTr_13 := @(aPosteriori1[iNsTr_12])
    iNsTr_14 := ->(iNsTr_13)
    iNsTr_15 := ($cast ($float<11,52>) iNsTr_14 )
    iNsTr_16 := (iNsTr_15 > ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_6]
    $endif
    $merge bb_2_bb_6 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := ($cast ($uint<64>) iNsTr_27 )
    iNsTr_29 := @(aPosteriori1[iNsTr_28])
    iNsTr_30 := ->(iNsTr_29)
    iNsTr_31 := ($cast ($float<11,52>) iNsTr_30 )
    iNsTr_32 := (iNsTr_31 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_32 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_10]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_41 := ->(I)
    iNsTr_42 := ($cast ($uint<64>) iNsTr_41 )
    iNsTr_43 := @(code_block1[iNsTr_42])
    iNsTr_44 := ->(iNsTr_43)
    iNsTr_45 := ($cast ($float<11,52>) iNsTr_44 )
    iNsTr_46 := (iNsTr_45 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_46 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_9]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000000  )
    $place[bb_8_bb_9]
    $merge bb_7_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_52 := ->(I)
    iNsTr_53 := ($cast ($uint<64>) iNsTr_52 )
    iNsTr_54 := @(code_block1[iNsTr_53])
    ->(iNsTr_54) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_9_bb_10]
    $merge bb_6_bb_10 bb_9_bb_10 
    $endmerge
    $place[bb_10_bb_11]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_20 := ->(I)
    iNsTr_21 := ($cast ($uint<64>) iNsTr_20 )
    iNsTr_22 := @(code_block1[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($float<11,52>) iNsTr_23 )
    iNsTr_25 := (iNsTr_24 > ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_25 $then 
    $place[bb_3_bb_4]
    $else 
    $place[bb_3_bb_5]
    $endif
    $merge bb_3_bb_4 
    $endmerge
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000000  )
    $place[bb_4_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_36 := ->(I)
    iNsTr_37 := ($cast ($uint<64>) iNsTr_36 )
    iNsTr_38 := @(code_block1[iNsTr_37])
    ->(iNsTr_38) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_5_bb_11]
    $merge bb_10_bb_11 bb_5_bb_11 
    $endmerge
    $place[bb_11_bb_12]
    $merge bb_11_bb_12 
    $endmerge
    iNsTr_57 := ->(I)
    iNsTr_58 := (iNsTr_57 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_58
    $place[bb_12_bb_1]
    $merge bb_1_bb_13 
    $endmerge
    ret_val__ := ->(is_decoded)
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkIsdecoded2]
$in ()
$out ( ret_val__ : $uint<8>  )
$is
{
  $branchblock [body]
  {
    $storage  is_decoded_alloc : $uint<8> // memory space index = 30  base address = 0  word size = 8
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 31  base address = 0  word size = 16
    // can point into 
    is_decoded := @(is_decoded_alloc)
    I := @(I_alloc)
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000001  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_12_bb_1 
    $endmerge
    iNsTr_3 := ->(I)
    iNsTr_4 := ($cast ($uint<32>) iNsTr_3 )
    iNsTr_5 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_6 := ->(iNsTr_5)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6 )
    iNsTr_8 := (($bitcast ($int<32>) iNsTr_4 ) < ($bitcast ($int<32>) iNsTr_7 ))
    $if iNsTr_8 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_13]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_11 := ->(I)
    iNsTr_12 := ($cast ($uint<64>) iNsTr_11 )
    iNsTr_13 := @(aPosteriori2[iNsTr_12])
    iNsTr_14 := ->(iNsTr_13)
    iNsTr_15 := ($cast ($float<11,52>) iNsTr_14 )
    iNsTr_16 := (iNsTr_15 > ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_6]
    $endif
    $merge bb_2_bb_6 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := ($cast ($uint<64>) iNsTr_27 )
    iNsTr_29 := @(aPosteriori2[iNsTr_28])
    iNsTr_30 := ->(iNsTr_29)
    iNsTr_31 := ($cast ($float<11,52>) iNsTr_30 )
    iNsTr_32 := (iNsTr_31 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_32 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_10]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_41 := ->(I)
    iNsTr_42 := ($cast ($uint<64>) iNsTr_41 )
    iNsTr_43 := @(code_block2[iNsTr_42])
    iNsTr_44 := ->(iNsTr_43)
    iNsTr_45 := ($cast ($float<11,52>) iNsTr_44 )
    iNsTr_46 := (iNsTr_45 < ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_46 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_9]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000000  )
    $place[bb_8_bb_9]
    $merge bb_7_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_52 := ->(I)
    iNsTr_53 := ($cast ($uint<64>) iNsTr_52 )
    iNsTr_54 := @(code_block2[iNsTr_53])
    ->(iNsTr_54) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_9_bb_10]
    $merge bb_6_bb_10 bb_9_bb_10 
    $endmerge
    $place[bb_10_bb_11]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_20 := ->(I)
    iNsTr_21 := ($cast ($uint<64>) iNsTr_20 )
    iNsTr_22 := @(code_block2[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($float<11,52>) iNsTr_23 )
    iNsTr_25 := (iNsTr_24 > ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_25 $then 
    $place[bb_3_bb_4]
    $else 
    $place[bb_3_bb_5]
    $endif
    $merge bb_3_bb_4 
    $endmerge
    ->(is_decoded) := ($bitcast ($uint<8>) _b00000000  )
    $place[bb_4_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_36 := ->(I)
    iNsTr_37 := ($cast ($uint<64>) iNsTr_36 )
    iNsTr_38 := @(code_block2[iNsTr_37])
    ->(iNsTr_38) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_5_bb_11]
    $merge bb_10_bb_11 bb_5_bb_11 
    $endmerge
    $place[bb_11_bb_12]
    $merge bb_11_bb_12 
    $endmerge
    iNsTr_57 := ->(I)
    iNsTr_58 := (iNsTr_57 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_58
    $place[bb_12_bb_1]
    $merge bb_1_bb_13 
    $endmerge
    ret_val__ := ->(is_decoded)
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [modifyInfo]
$in ( ext_info : $float<8,23>   self_information : $float<8,23>  )
$out ( ret_val__ : $float<8,23>  )
$is
{
  $branchblock [body]
  {
    $storage  iNsTr_0_alloc : $float<8,23> // memory space index = 32  base address = 0  word size = 32
    // can point into 
    $storage  iNsTr_1_alloc : $float<8,23> // memory space index = 33  base address = 0  word size = 32
    // can point into 
    $storage  sign_alloc : $float<8,23> // memory space index = 34  base address = 0  word size = 32
    // can point into 
    $storage  magnitude_alloc : $float<8,23> // memory space index = 35  base address = 0  word size = 32
    // can point into 
    iNsTr_0 := @(iNsTr_0_alloc)
    iNsTr_1 := @(iNsTr_1_alloc)
    sign := @(sign_alloc)
    magnitude := @(magnitude_alloc)
    ->(iNsTr_0) := ext_info
    ->(iNsTr_1) := self_information
    iNsTr_4 := ->(iNsTr_0)
    iNsTr_5 := (iNsTr_4 >= ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_5 $then 
    $place[bb_0_bb_1]
    $else 
    $place[bb_0_bb_5]
    $endif
    $merge bb_0_bb_1 
    $endmerge
    iNsTr_7 := ->(iNsTr_1)
    iNsTr_8 := (iNsTr_7 >= ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_8 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_3]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_2_bb_4]
    $merge bb_1_bb_3 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_3_bb_4]
    $merge bb_2_bb_4 bb_3_bb_4 
    $endmerge
    $place[bb_4_bb_9]
    $merge bb_0_bb_5 
    $endmerge
    iNsTr_10 := ->(iNsTr_1)
    iNsTr_11 := (iNsTr_10 < ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_11 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_7]
    $endif
    $merge bb_5_bb_6 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_6_bb_8]
    $merge bb_5_bb_7 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_7_bb_8]
    $merge bb_6_bb_8 bb_7_bb_8 
    $endmerge
    $place[bb_8_bb_9]
    $merge bb_4_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_23 := ->(iNsTr_1)
    $call absf (iNsTr_23 ) (iNsTr_24 ) 
    iNsTr_25 := ->(iNsTr_0)
    $call absf (iNsTr_25 ) (iNsTr_26 ) 
    iNsTr_27 := (iNsTr_24 > iNsTr_26)
    $if iNsTr_27 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_11]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_29 := ->(iNsTr_0)
    $call absf (iNsTr_29 ) (iNsTr_30 ) 
    ->(magnitude) := iNsTr_30
    $place[bb_10_bb_12]
    $merge bb_9_bb_11 
    $endmerge
    iNsTr_33 := ->(iNsTr_1)
    $call absf (iNsTr_33 ) (iNsTr_34 ) 
    ->(magnitude) := iNsTr_34
    $place[bb_11_bb_12]
    $merge bb_10_bb_12 bb_11_bb_12 
    $endmerge
    iNsTr_37 := ->(sign)
    iNsTr_38 := ->(magnitude)
    ret_val__ := (iNsTr_37 * iNsTr_38)
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkNodeComputeEngine11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 36  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 37  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 38  base address = 0  word size = 16
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 39  base address = 0  word size = 16
    // can point into 
    $storage  val_alloc : $float<8,23> // memory space index = 40  base address = 0  word size = 32
    // can point into 
    $storage  flag_alloc : $uint<8> // memory space index = 41  base address = 0  word size = 8
    // can point into 
    $storage  exor_alloc : $uint<8> // memory space index = 42  base address = 0  word size = 8
    // can point into 
    $storage  sign_alloc : $float<8,23> // memory space index = 43  base address = 0  word size = 32
    // can point into 
    $storage  index_alloc : $uint<16> // memory space index = 44  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    I := @(I_alloc)
    val := @(val_alloc)
    flag := @(flag_alloc)
    exor := @(exor_alloc)
    sign := @(sign_alloc)
    index := @(index_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_35_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_36]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem11[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem11[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem11[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_31]
    $endif
    $merge bb_5_bb_31 
    $endmerge
    iNsTr_74 := ->(range)
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74 )
    iNsTr_76 := (iNsTr_75 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_76 $then 
    $place[bb_31_bb_32]
    $else 
    $place[bb_31_bb_33]
    $endif
    $merge bb_31_bb_32 
    $endmerge
    iNsTr_84 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_85 := ->(iNsTr_84)
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85 )
    iNsTr_87 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_86)
    iNsTr_88 := ->(row)
    iNsTr_89 := ($cast ($uint<32>) iNsTr_88 )
    iNsTr_90 := (iNsTr_87 + iNsTr_89)
    iNsTr_91 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_90 ) )
    iNsTr_92 := @(mem11[iNsTr_91])
    iNsTr_93 := ->(iNsTr_92)
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93 )
    iNsTr_95 := (iNsTr_94 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_96 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_95 ) )
    iNsTr_97 := @(message11[iNsTr_96])
    iNsTr_98 := ->(iNsTr_97)
    iNsTr_99 := ->(row)
    iNsTr_100 := ($cast ($uint<64>) iNsTr_99 )
    iNsTr_101 := @(trans_info11_12[iNsTr_100])
    ->(iNsTr_101) := iNsTr_98
    $place[bb_32_bb_33]
    $merge bb_31_bb_33 bb_32_bb_33 
    $endmerge
    $place[bb_33_bb_34]
    $merge bb_5_bb_6 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_6_bb_7]
    $merge bb_29_bb_7 bb_6_bb_7 
    $endmerge
    iNsTr_78 := ->(col)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := ->(range)
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80 )
    iNsTr_82 := (($bitcast ($int<32>) iNsTr_79 ) < ($bitcast ($int<32>) iNsTr_81 ))
    $if iNsTr_82 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_30]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(val) := ($bitcast ($float<8,23>) _h0  )
    ->(flag) := ($bitcast ($uint<8>) _b00000000  )
    ->(exor) := ($bitcast ($uint<8>) _b00000000  )
    ->(sign) := ($bitcast ($float<8,23>) _h0  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_8_bb_9]
    $merge bb_22_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_115 := ->(I)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := ->(range)
    iNsTr_118 := ($cast ($uint<32>) iNsTr_117 )
    iNsTr_119 := (($bitcast ($int<32>) iNsTr_116 ) < ($bitcast ($int<32>) iNsTr_118 ))
    $if iNsTr_119 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_23]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_126 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_127 := ->(iNsTr_126)
    iNsTr_128 := ($cast ($uint<32>) iNsTr_127 )
    iNsTr_129 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_128)
    iNsTr_130 := ->(row)
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130 )
    iNsTr_132 := (iNsTr_129 + iNsTr_131)
    iNsTr_133 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_132 ) )
    iNsTr_134 := @(mem11[iNsTr_133])
    iNsTr_135 := ->(iNsTr_134)
    iNsTr_136 := ($cast ($uint<32>) iNsTr_135 )
    iNsTr_137 := (iNsTr_136 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_138 := ->(I)
    iNsTr_139 := ($cast ($uint<32>) iNsTr_138 )
    iNsTr_140 := (iNsTr_137 + iNsTr_139)
    iNsTr_141 := ($cast ($uint<16>) iNsTr_140 )
    ->(index) := iNsTr_141
    iNsTr_143 := ->(I)
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143 )
    iNsTr_145 := ->(col)
    iNsTr_146 := ($cast ($uint<32>) iNsTr_145 )
    iNsTr_147 := (iNsTr_144 == iNsTr_146)
    $if iNsTr_147 $then 
    $place[bb_10_bb_11]
    $else 
    $place[bb_10_bb_12]
    $endif
    $merge bb_10_bb_12 
    $endmerge
    iNsTr_154 := ->(index)
    iNsTr_155 := ($cast ($uint<64>) iNsTr_154 )
    iNsTr_156 := @(message11[iNsTr_155])
    iNsTr_157 := ->(iNsTr_156)
    iNsTr_158 := ($cast ($float<11,52>) iNsTr_157 )
    iNsTr_159 := (iNsTr_158 >= ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_159 $then 
    $place[bb_12_bb_13]
    $else 
    $place[bb_12_bb_14]
    $endif
    $merge bb_12_bb_14 
    $endmerge
    iNsTr_175 := ->(exor)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_176 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_178 := ($cast ($uint<8>) iNsTr_177 )
    ->(exor) := iNsTr_178
    $place[bb_14_bb_15]
    $merge bb_12_bb_13 
    $endmerge
    iNsTr_169 := ->(exor)
    iNsTr_170 := ($cast ($uint<32>) iNsTr_169 )
    iNsTr_171 := (iNsTr_170 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171 )
    ->(exor) := iNsTr_172
    $place[bb_13_bb_15]
    $merge bb_13_bb_15 bb_14_bb_15 
    $endmerge
    iNsTr_206 := ->(flag)
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206 )
    iNsTr_208 := (iNsTr_207 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_208 $then 
    $place[bb_15_bb_16]
    $else 
    $place[bb_15_bb_17]
    $endif
    $merge bb_15_bb_17 
    $endmerge
    iNsTr_260 := ->(index)
    iNsTr_261 := ($cast ($uint<64>) iNsTr_260 )
    iNsTr_262 := @(message11[iNsTr_261])
    iNsTr_263 := ->(iNsTr_262)
    $call absf (iNsTr_263 ) (iNsTr_264 ) 
    iNsTr_265 := ->(val)
    iNsTr_266 := (iNsTr_264 < iNsTr_265)
    $if iNsTr_266 $then 
    $place[bb_17_bb_18]
    $else 
    $place[bb_17_bb_19]
    $endif
    $merge bb_17_bb_18 
    $endmerge
    iNsTr_273 := ->(index)
    iNsTr_274 := ($cast ($uint<64>) iNsTr_273 )
    iNsTr_275 := @(message11[iNsTr_274])
    iNsTr_276 := ->(iNsTr_275)
    $call absf (iNsTr_276 ) (iNsTr_277 ) 
    ->(val) := iNsTr_277
    $place[bb_18_bb_19]
    $merge bb_17_bb_19 bb_18_bb_19 
    $endmerge
    $place[bb_19_bb_20]
    $merge bb_15_bb_16 
    $endmerge
    iNsTr_253 := ->(index)
    iNsTr_254 := ($cast ($uint<64>) iNsTr_253 )
    iNsTr_255 := @(message11[iNsTr_254])
    iNsTr_256 := ->(iNsTr_255)
    $call absf (iNsTr_256 ) (iNsTr_257 ) 
    ->(val) := iNsTr_257
    $place[bb_16_bb_20]
    $merge bb_16_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_20_bb_21 
    $endmerge
    ->(flag) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_21_bb_22]
    $merge bb_10_bb_11 
    $endmerge
    $place[bb_11_bb_22]
    $merge bb_11_bb_22 bb_21_bb_22 
    $endmerge
    iNsTr_165 := ->(I)
    iNsTr_166 := (iNsTr_165 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_166
    $place[bb_22_bb_9]
    $merge bb_9_bb_23 
    $endmerge
    iNsTr_149 := ->(exor)
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149 )
    iNsTr_151 := (iNsTr_150 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_151 $then 
    $place[bb_23_bb_24]
    $else 
    $place[bb_23_bb_25]
    $endif
    $merge bb_23_bb_24 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_24_bb_26]
    $merge bb_23_bb_25 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_25_bb_26]
    $merge bb_24_bb_26 bb_25_bb_26 
    $endmerge
    iNsTr_181 := ->(val)
    iNsTr_182 := ->(sign)
    iNsTr_183 := (iNsTr_181 * iNsTr_182)
    iNsTr_184 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_185 := ->(iNsTr_184)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_186)
    iNsTr_188 := ->(row)
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188 )
    iNsTr_190 := (iNsTr_187 + iNsTr_189)
    iNsTr_191 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_190 ) )
    iNsTr_192 := @(mem11[iNsTr_191])
    iNsTr_193 := ->(iNsTr_192)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_194 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_196 := ->(col)
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196 )
    iNsTr_198 := (iNsTr_195 + iNsTr_197)
    iNsTr_199 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_198 ) )
    iNsTr_200 := @(ext_info11[iNsTr_199])
    ->(iNsTr_200) := iNsTr_183
    iNsTr_202 := ->(col)
    iNsTr_203 := ($cast ($uint<32>) iNsTr_202 )
    iNsTr_204 := (iNsTr_203 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_204 $then 
    $place[bb_26_bb_27]
    $else 
    $place[bb_26_bb_28]
    $endif
    $merge bb_26_bb_27 
    $endmerge
    iNsTr_210 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_211 := ->(iNsTr_210)
    iNsTr_212 := ($cast ($uint<32>) iNsTr_211 )
    iNsTr_213 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_212)
    iNsTr_214 := ->(row)
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214 )
    iNsTr_216 := (iNsTr_213 + iNsTr_215)
    iNsTr_217 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_216 ) )
    iNsTr_218 := @(mem11[iNsTr_217])
    iNsTr_219 := ->(iNsTr_218)
    iNsTr_220 := ($cast ($uint<32>) iNsTr_219 )
    iNsTr_221 := (iNsTr_220 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_222 := ->(col)
    iNsTr_223 := ($cast ($uint<32>) iNsTr_222 )
    iNsTr_224 := (iNsTr_221 + iNsTr_223)
    iNsTr_225 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_224 ) )
    iNsTr_226 := @(ext_info11[iNsTr_225])
    iNsTr_227 := ->(iNsTr_226)
    iNsTr_228 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_229 := ->(iNsTr_228)
    iNsTr_230 := ($cast ($uint<32>) iNsTr_229 )
    iNsTr_231 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_230)
    iNsTr_232 := ->(row)
    iNsTr_233 := ($cast ($uint<32>) iNsTr_232 )
    iNsTr_234 := (iNsTr_231 + iNsTr_233)
    iNsTr_235 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_234 ) )
    iNsTr_236 := @(mem11[iNsTr_235])
    iNsTr_237 := ->(iNsTr_236)
    iNsTr_238 := ($cast ($uint<32>) iNsTr_237 )
    iNsTr_239 := (iNsTr_238 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_240 := ->(col)
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240 )
    iNsTr_242 := (iNsTr_239 + iNsTr_241)
    iNsTr_243 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_242 ) )
    iNsTr_244 := @(message11[iNsTr_243])
    iNsTr_245 := ->(iNsTr_244)
    $call modifyInfo (iNsTr_227 iNsTr_245 ) (iNsTr_246 ) 
    iNsTr_247 := ->(row)
    iNsTr_248 := ($cast ($uint<64>) iNsTr_247 )
    iNsTr_249 := @(trans_info11_12[iNsTr_248])
    ->(iNsTr_249) := iNsTr_246
    $place[bb_27_bb_28]
    $merge bb_26_bb_28 bb_27_bb_28 
    $endmerge
    $place[bb_28_bb_29]
    $merge bb_28_bb_29 
    $endmerge
    iNsTr_268 := ->(col)
    iNsTr_269 := (iNsTr_268 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_269
    $place[bb_29_bb_7]
    $merge bb_7_bb_30 
    $endmerge
    $place[bb_30_bb_34]
    $merge bb_30_bb_34 bb_33_bb_34 
    $endmerge
    $place[bb_34_bb_35]
    $merge bb_34_bb_35 
    $endmerge
    iNsTr_121 := ->(row)
    iNsTr_122 := (iNsTr_121 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_122
    $place[bb_35_bb_1]
    $merge bb_1_bb_36 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkNodeComputeEngine12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 45  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 46  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 47  base address = 0  word size = 16
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 48  base address = 0  word size = 16
    // can point into 
    $storage  val_alloc : $float<8,23> // memory space index = 49  base address = 0  word size = 32
    // can point into 
    $storage  flag_alloc : $uint<8> // memory space index = 50  base address = 0  word size = 8
    // can point into 
    $storage  exor_alloc : $uint<8> // memory space index = 51  base address = 0  word size = 8
    // can point into 
    $storage  sign_alloc : $float<8,23> // memory space index = 52  base address = 0  word size = 32
    // can point into 
    $storage  index_alloc : $uint<16> // memory space index = 53  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    I := @(I_alloc)
    val := @(val_alloc)
    flag := @(flag_alloc)
    exor := @(exor_alloc)
    sign := @(sign_alloc)
    index := @(index_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_35_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_36]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem12[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem12[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem12[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_31]
    $endif
    $merge bb_5_bb_31 
    $endmerge
    iNsTr_74 := ->(range)
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74 )
    iNsTr_76 := (iNsTr_75 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_76 $then 
    $place[bb_31_bb_32]
    $else 
    $place[bb_31_bb_33]
    $endif
    $merge bb_31_bb_32 
    $endmerge
    iNsTr_84 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_85 := ->(iNsTr_84)
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85 )
    iNsTr_87 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_86)
    iNsTr_88 := ->(row)
    iNsTr_89 := ($cast ($uint<32>) iNsTr_88 )
    iNsTr_90 := (iNsTr_87 + iNsTr_89)
    iNsTr_91 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_90 ) )
    iNsTr_92 := @(mem12[iNsTr_91])
    iNsTr_93 := ->(iNsTr_92)
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93 )
    iNsTr_95 := (iNsTr_94 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_96 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_95 ) )
    iNsTr_97 := @(message12[iNsTr_96])
    iNsTr_98 := ->(iNsTr_97)
    iNsTr_99 := ->(row)
    iNsTr_100 := ($cast ($uint<64>) iNsTr_99 )
    iNsTr_101 := @(trans_info12_11[iNsTr_100])
    ->(iNsTr_101) := iNsTr_98
    $place[bb_32_bb_33]
    $merge bb_31_bb_33 bb_32_bb_33 
    $endmerge
    $place[bb_33_bb_34]
    $merge bb_5_bb_6 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_6_bb_7]
    $merge bb_29_bb_7 bb_6_bb_7 
    $endmerge
    iNsTr_78 := ->(col)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := ->(range)
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80 )
    iNsTr_82 := (($bitcast ($int<32>) iNsTr_79 ) < ($bitcast ($int<32>) iNsTr_81 ))
    $if iNsTr_82 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_30]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(val) := ($bitcast ($float<8,23>) _h0  )
    ->(flag) := ($bitcast ($uint<8>) _b00000000  )
    ->(exor) := ($bitcast ($uint<8>) _b00000000  )
    ->(sign) := ($bitcast ($float<8,23>) _h0  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_8_bb_9]
    $merge bb_22_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_115 := ->(I)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := ->(range)
    iNsTr_118 := ($cast ($uint<32>) iNsTr_117 )
    iNsTr_119 := (($bitcast ($int<32>) iNsTr_116 ) < ($bitcast ($int<32>) iNsTr_118 ))
    $if iNsTr_119 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_23]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_126 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_127 := ->(iNsTr_126)
    iNsTr_128 := ($cast ($uint<32>) iNsTr_127 )
    iNsTr_129 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_128)
    iNsTr_130 := ->(row)
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130 )
    iNsTr_132 := (iNsTr_129 + iNsTr_131)
    iNsTr_133 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_132 ) )
    iNsTr_134 := @(mem12[iNsTr_133])
    iNsTr_135 := ->(iNsTr_134)
    iNsTr_136 := ($cast ($uint<32>) iNsTr_135 )
    iNsTr_137 := (iNsTr_136 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_138 := ->(I)
    iNsTr_139 := ($cast ($uint<32>) iNsTr_138 )
    iNsTr_140 := (iNsTr_137 + iNsTr_139)
    iNsTr_141 := ($cast ($uint<16>) iNsTr_140 )
    ->(index) := iNsTr_141
    iNsTr_143 := ->(I)
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143 )
    iNsTr_145 := ->(col)
    iNsTr_146 := ($cast ($uint<32>) iNsTr_145 )
    iNsTr_147 := (iNsTr_144 == iNsTr_146)
    $if iNsTr_147 $then 
    $place[bb_10_bb_11]
    $else 
    $place[bb_10_bb_12]
    $endif
    $merge bb_10_bb_12 
    $endmerge
    iNsTr_154 := ->(index)
    iNsTr_155 := ($cast ($uint<64>) iNsTr_154 )
    iNsTr_156 := @(message12[iNsTr_155])
    iNsTr_157 := ->(iNsTr_156)
    iNsTr_158 := ($cast ($float<11,52>) iNsTr_157 )
    iNsTr_159 := (iNsTr_158 >= ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_159 $then 
    $place[bb_12_bb_13]
    $else 
    $place[bb_12_bb_14]
    $endif
    $merge bb_12_bb_14 
    $endmerge
    iNsTr_175 := ->(exor)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_176 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_178 := ($cast ($uint<8>) iNsTr_177 )
    ->(exor) := iNsTr_178
    $place[bb_14_bb_15]
    $merge bb_12_bb_13 
    $endmerge
    iNsTr_169 := ->(exor)
    iNsTr_170 := ($cast ($uint<32>) iNsTr_169 )
    iNsTr_171 := (iNsTr_170 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171 )
    ->(exor) := iNsTr_172
    $place[bb_13_bb_15]
    $merge bb_13_bb_15 bb_14_bb_15 
    $endmerge
    iNsTr_206 := ->(flag)
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206 )
    iNsTr_208 := (iNsTr_207 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_208 $then 
    $place[bb_15_bb_16]
    $else 
    $place[bb_15_bb_17]
    $endif
    $merge bb_15_bb_17 
    $endmerge
    iNsTr_260 := ->(index)
    iNsTr_261 := ($cast ($uint<64>) iNsTr_260 )
    iNsTr_262 := @(message12[iNsTr_261])
    iNsTr_263 := ->(iNsTr_262)
    $call absf (iNsTr_263 ) (iNsTr_264 ) 
    iNsTr_265 := ->(val)
    iNsTr_266 := (iNsTr_264 < iNsTr_265)
    $if iNsTr_266 $then 
    $place[bb_17_bb_18]
    $else 
    $place[bb_17_bb_19]
    $endif
    $merge bb_17_bb_18 
    $endmerge
    iNsTr_273 := ->(index)
    iNsTr_274 := ($cast ($uint<64>) iNsTr_273 )
    iNsTr_275 := @(message12[iNsTr_274])
    iNsTr_276 := ->(iNsTr_275)
    $call absf (iNsTr_276 ) (iNsTr_277 ) 
    ->(val) := iNsTr_277
    $place[bb_18_bb_19]
    $merge bb_17_bb_19 bb_18_bb_19 
    $endmerge
    $place[bb_19_bb_20]
    $merge bb_15_bb_16 
    $endmerge
    iNsTr_253 := ->(index)
    iNsTr_254 := ($cast ($uint<64>) iNsTr_253 )
    iNsTr_255 := @(message12[iNsTr_254])
    iNsTr_256 := ->(iNsTr_255)
    $call absf (iNsTr_256 ) (iNsTr_257 ) 
    ->(val) := iNsTr_257
    $place[bb_16_bb_20]
    $merge bb_16_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_20_bb_21 
    $endmerge
    ->(flag) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_21_bb_22]
    $merge bb_10_bb_11 
    $endmerge
    $place[bb_11_bb_22]
    $merge bb_11_bb_22 bb_21_bb_22 
    $endmerge
    iNsTr_165 := ->(I)
    iNsTr_166 := (iNsTr_165 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_166
    $place[bb_22_bb_9]
    $merge bb_9_bb_23 
    $endmerge
    iNsTr_149 := ->(exor)
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149 )
    iNsTr_151 := (iNsTr_150 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_151 $then 
    $place[bb_23_bb_24]
    $else 
    $place[bb_23_bb_25]
    $endif
    $merge bb_23_bb_24 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_24_bb_26]
    $merge bb_23_bb_25 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_25_bb_26]
    $merge bb_24_bb_26 bb_25_bb_26 
    $endmerge
    iNsTr_181 := ->(val)
    iNsTr_182 := ->(sign)
    iNsTr_183 := (iNsTr_181 * iNsTr_182)
    iNsTr_184 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_185 := ->(iNsTr_184)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_186)
    iNsTr_188 := ->(row)
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188 )
    iNsTr_190 := (iNsTr_187 + iNsTr_189)
    iNsTr_191 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_190 ) )
    iNsTr_192 := @(mem12[iNsTr_191])
    iNsTr_193 := ->(iNsTr_192)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_194 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_196 := ->(col)
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196 )
    iNsTr_198 := (iNsTr_195 + iNsTr_197)
    iNsTr_199 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_198 ) )
    iNsTr_200 := @(ext_info12[iNsTr_199])
    ->(iNsTr_200) := iNsTr_183
    iNsTr_202 := ->(col)
    iNsTr_203 := ($cast ($uint<32>) iNsTr_202 )
    iNsTr_204 := (iNsTr_203 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_204 $then 
    $place[bb_26_bb_27]
    $else 
    $place[bb_26_bb_28]
    $endif
    $merge bb_26_bb_27 
    $endmerge
    iNsTr_210 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_211 := ->(iNsTr_210)
    iNsTr_212 := ($cast ($uint<32>) iNsTr_211 )
    iNsTr_213 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_212)
    iNsTr_214 := ->(row)
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214 )
    iNsTr_216 := (iNsTr_213 + iNsTr_215)
    iNsTr_217 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_216 ) )
    iNsTr_218 := @(mem12[iNsTr_217])
    iNsTr_219 := ->(iNsTr_218)
    iNsTr_220 := ($cast ($uint<32>) iNsTr_219 )
    iNsTr_221 := (iNsTr_220 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_222 := ->(col)
    iNsTr_223 := ($cast ($uint<32>) iNsTr_222 )
    iNsTr_224 := (iNsTr_221 + iNsTr_223)
    iNsTr_225 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_224 ) )
    iNsTr_226 := @(ext_info12[iNsTr_225])
    iNsTr_227 := ->(iNsTr_226)
    iNsTr_228 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_229 := ->(iNsTr_228)
    iNsTr_230 := ($cast ($uint<32>) iNsTr_229 )
    iNsTr_231 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_230)
    iNsTr_232 := ->(row)
    iNsTr_233 := ($cast ($uint<32>) iNsTr_232 )
    iNsTr_234 := (iNsTr_231 + iNsTr_233)
    iNsTr_235 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_234 ) )
    iNsTr_236 := @(mem12[iNsTr_235])
    iNsTr_237 := ->(iNsTr_236)
    iNsTr_238 := ($cast ($uint<32>) iNsTr_237 )
    iNsTr_239 := (iNsTr_238 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_240 := ->(col)
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240 )
    iNsTr_242 := (iNsTr_239 + iNsTr_241)
    iNsTr_243 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_242 ) )
    iNsTr_244 := @(message12[iNsTr_243])
    iNsTr_245 := ->(iNsTr_244)
    $call modifyInfo (iNsTr_227 iNsTr_245 ) (iNsTr_246 ) 
    iNsTr_247 := ->(row)
    iNsTr_248 := ($cast ($uint<64>) iNsTr_247 )
    iNsTr_249 := @(trans_info12_11[iNsTr_248])
    ->(iNsTr_249) := iNsTr_246
    $place[bb_27_bb_28]
    $merge bb_26_bb_28 bb_27_bb_28 
    $endmerge
    $place[bb_28_bb_29]
    $merge bb_28_bb_29 
    $endmerge
    iNsTr_268 := ->(col)
    iNsTr_269 := (iNsTr_268 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_269
    $place[bb_29_bb_7]
    $merge bb_7_bb_30 
    $endmerge
    $place[bb_30_bb_34]
    $merge bb_30_bb_34 bb_33_bb_34 
    $endmerge
    $place[bb_34_bb_35]
    $merge bb_34_bb_35 
    $endmerge
    iNsTr_121 := ->(row)
    iNsTr_122 := (iNsTr_121 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_122
    $place[bb_35_bb_1]
    $merge bb_1_bb_36 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkNodeComputeEngine21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 54  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 55  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 56  base address = 0  word size = 16
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 57  base address = 0  word size = 16
    // can point into 
    $storage  val_alloc : $float<8,23> // memory space index = 58  base address = 0  word size = 32
    // can point into 
    $storage  flag_alloc : $uint<8> // memory space index = 59  base address = 0  word size = 8
    // can point into 
    $storage  exor_alloc : $uint<8> // memory space index = 60  base address = 0  word size = 8
    // can point into 
    $storage  sign_alloc : $float<8,23> // memory space index = 61  base address = 0  word size = 32
    // can point into 
    $storage  index_alloc : $uint<16> // memory space index = 62  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    I := @(I_alloc)
    val := @(val_alloc)
    flag := @(flag_alloc)
    exor := @(exor_alloc)
    sign := @(sign_alloc)
    index := @(index_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_35_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_36]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem21[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem21[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem21[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_31]
    $endif
    $merge bb_5_bb_31 
    $endmerge
    iNsTr_74 := ->(range)
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74 )
    iNsTr_76 := (iNsTr_75 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_76 $then 
    $place[bb_31_bb_32]
    $else 
    $place[bb_31_bb_33]
    $endif
    $merge bb_31_bb_32 
    $endmerge
    iNsTr_84 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_85 := ->(iNsTr_84)
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85 )
    iNsTr_87 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_86)
    iNsTr_88 := ->(row)
    iNsTr_89 := ($cast ($uint<32>) iNsTr_88 )
    iNsTr_90 := (iNsTr_87 + iNsTr_89)
    iNsTr_91 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_90 ) )
    iNsTr_92 := @(mem21[iNsTr_91])
    iNsTr_93 := ->(iNsTr_92)
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93 )
    iNsTr_95 := (iNsTr_94 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_96 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_95 ) )
    iNsTr_97 := @(message21[iNsTr_96])
    iNsTr_98 := ->(iNsTr_97)
    iNsTr_99 := ->(row)
    iNsTr_100 := ($cast ($uint<64>) iNsTr_99 )
    iNsTr_101 := @(trans_info21_22[iNsTr_100])
    ->(iNsTr_101) := iNsTr_98
    $place[bb_32_bb_33]
    $merge bb_31_bb_33 bb_32_bb_33 
    $endmerge
    $place[bb_33_bb_34]
    $merge bb_5_bb_6 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_6_bb_7]
    $merge bb_29_bb_7 bb_6_bb_7 
    $endmerge
    iNsTr_78 := ->(col)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := ->(range)
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80 )
    iNsTr_82 := (($bitcast ($int<32>) iNsTr_79 ) < ($bitcast ($int<32>) iNsTr_81 ))
    $if iNsTr_82 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_30]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(val) := ($bitcast ($float<8,23>) _h0  )
    ->(flag) := ($bitcast ($uint<8>) _b00000000  )
    ->(exor) := ($bitcast ($uint<8>) _b00000000  )
    ->(sign) := ($bitcast ($float<8,23>) _h0  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_8_bb_9]
    $merge bb_22_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_115 := ->(I)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := ->(range)
    iNsTr_118 := ($cast ($uint<32>) iNsTr_117 )
    iNsTr_119 := (($bitcast ($int<32>) iNsTr_116 ) < ($bitcast ($int<32>) iNsTr_118 ))
    $if iNsTr_119 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_23]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_126 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_127 := ->(iNsTr_126)
    iNsTr_128 := ($cast ($uint<32>) iNsTr_127 )
    iNsTr_129 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_128)
    iNsTr_130 := ->(row)
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130 )
    iNsTr_132 := (iNsTr_129 + iNsTr_131)
    iNsTr_133 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_132 ) )
    iNsTr_134 := @(mem21[iNsTr_133])
    iNsTr_135 := ->(iNsTr_134)
    iNsTr_136 := ($cast ($uint<32>) iNsTr_135 )
    iNsTr_137 := (iNsTr_136 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_138 := ->(I)
    iNsTr_139 := ($cast ($uint<32>) iNsTr_138 )
    iNsTr_140 := (iNsTr_137 + iNsTr_139)
    iNsTr_141 := ($cast ($uint<16>) iNsTr_140 )
    ->(index) := iNsTr_141
    iNsTr_143 := ->(I)
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143 )
    iNsTr_145 := ->(col)
    iNsTr_146 := ($cast ($uint<32>) iNsTr_145 )
    iNsTr_147 := (iNsTr_144 == iNsTr_146)
    $if iNsTr_147 $then 
    $place[bb_10_bb_11]
    $else 
    $place[bb_10_bb_12]
    $endif
    $merge bb_10_bb_12 
    $endmerge
    iNsTr_154 := ->(index)
    iNsTr_155 := ($cast ($uint<64>) iNsTr_154 )
    iNsTr_156 := @(message21[iNsTr_155])
    iNsTr_157 := ->(iNsTr_156)
    iNsTr_158 := ($cast ($float<11,52>) iNsTr_157 )
    iNsTr_159 := (iNsTr_158 >= ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_159 $then 
    $place[bb_12_bb_13]
    $else 
    $place[bb_12_bb_14]
    $endif
    $merge bb_12_bb_14 
    $endmerge
    iNsTr_175 := ->(exor)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_176 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_178 := ($cast ($uint<8>) iNsTr_177 )
    ->(exor) := iNsTr_178
    $place[bb_14_bb_15]
    $merge bb_12_bb_13 
    $endmerge
    iNsTr_169 := ->(exor)
    iNsTr_170 := ($cast ($uint<32>) iNsTr_169 )
    iNsTr_171 := (iNsTr_170 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171 )
    ->(exor) := iNsTr_172
    $place[bb_13_bb_15]
    $merge bb_13_bb_15 bb_14_bb_15 
    $endmerge
    iNsTr_206 := ->(flag)
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206 )
    iNsTr_208 := (iNsTr_207 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_208 $then 
    $place[bb_15_bb_16]
    $else 
    $place[bb_15_bb_17]
    $endif
    $merge bb_15_bb_17 
    $endmerge
    iNsTr_260 := ->(index)
    iNsTr_261 := ($cast ($uint<64>) iNsTr_260 )
    iNsTr_262 := @(message21[iNsTr_261])
    iNsTr_263 := ->(iNsTr_262)
    $call absf (iNsTr_263 ) (iNsTr_264 ) 
    iNsTr_265 := ->(val)
    iNsTr_266 := (iNsTr_264 < iNsTr_265)
    $if iNsTr_266 $then 
    $place[bb_17_bb_18]
    $else 
    $place[bb_17_bb_19]
    $endif
    $merge bb_17_bb_18 
    $endmerge
    iNsTr_273 := ->(index)
    iNsTr_274 := ($cast ($uint<64>) iNsTr_273 )
    iNsTr_275 := @(message21[iNsTr_274])
    iNsTr_276 := ->(iNsTr_275)
    $call absf (iNsTr_276 ) (iNsTr_277 ) 
    ->(val) := iNsTr_277
    $place[bb_18_bb_19]
    $merge bb_17_bb_19 bb_18_bb_19 
    $endmerge
    $place[bb_19_bb_20]
    $merge bb_15_bb_16 
    $endmerge
    iNsTr_253 := ->(index)
    iNsTr_254 := ($cast ($uint<64>) iNsTr_253 )
    iNsTr_255 := @(message21[iNsTr_254])
    iNsTr_256 := ->(iNsTr_255)
    $call absf (iNsTr_256 ) (iNsTr_257 ) 
    ->(val) := iNsTr_257
    $place[bb_16_bb_20]
    $merge bb_16_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_20_bb_21 
    $endmerge
    ->(flag) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_21_bb_22]
    $merge bb_10_bb_11 
    $endmerge
    $place[bb_11_bb_22]
    $merge bb_11_bb_22 bb_21_bb_22 
    $endmerge
    iNsTr_165 := ->(I)
    iNsTr_166 := (iNsTr_165 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_166
    $place[bb_22_bb_9]
    $merge bb_9_bb_23 
    $endmerge
    iNsTr_149 := ->(exor)
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149 )
    iNsTr_151 := (iNsTr_150 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_151 $then 
    $place[bb_23_bb_24]
    $else 
    $place[bb_23_bb_25]
    $endif
    $merge bb_23_bb_24 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_24_bb_26]
    $merge bb_23_bb_25 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_25_bb_26]
    $merge bb_24_bb_26 bb_25_bb_26 
    $endmerge
    iNsTr_181 := ->(val)
    iNsTr_182 := ->(sign)
    iNsTr_183 := (iNsTr_181 * iNsTr_182)
    iNsTr_184 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_185 := ->(iNsTr_184)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_186)
    iNsTr_188 := ->(row)
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188 )
    iNsTr_190 := (iNsTr_187 + iNsTr_189)
    iNsTr_191 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_190 ) )
    iNsTr_192 := @(mem21[iNsTr_191])
    iNsTr_193 := ->(iNsTr_192)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_194 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_196 := ->(col)
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196 )
    iNsTr_198 := (iNsTr_195 + iNsTr_197)
    iNsTr_199 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_198 ) )
    iNsTr_200 := @(ext_info21[iNsTr_199])
    ->(iNsTr_200) := iNsTr_183
    iNsTr_202 := ->(col)
    iNsTr_203 := ($cast ($uint<32>) iNsTr_202 )
    iNsTr_204 := (iNsTr_203 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_204 $then 
    $place[bb_26_bb_27]
    $else 
    $place[bb_26_bb_28]
    $endif
    $merge bb_26_bb_27 
    $endmerge
    iNsTr_210 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_211 := ->(iNsTr_210)
    iNsTr_212 := ($cast ($uint<32>) iNsTr_211 )
    iNsTr_213 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_212)
    iNsTr_214 := ->(row)
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214 )
    iNsTr_216 := (iNsTr_213 + iNsTr_215)
    iNsTr_217 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_216 ) )
    iNsTr_218 := @(mem21[iNsTr_217])
    iNsTr_219 := ->(iNsTr_218)
    iNsTr_220 := ($cast ($uint<32>) iNsTr_219 )
    iNsTr_221 := (iNsTr_220 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_222 := ->(col)
    iNsTr_223 := ($cast ($uint<32>) iNsTr_222 )
    iNsTr_224 := (iNsTr_221 + iNsTr_223)
    iNsTr_225 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_224 ) )
    iNsTr_226 := @(ext_info21[iNsTr_225])
    iNsTr_227 := ->(iNsTr_226)
    iNsTr_228 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_229 := ->(iNsTr_228)
    iNsTr_230 := ($cast ($uint<32>) iNsTr_229 )
    iNsTr_231 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_230)
    iNsTr_232 := ->(row)
    iNsTr_233 := ($cast ($uint<32>) iNsTr_232 )
    iNsTr_234 := (iNsTr_231 + iNsTr_233)
    iNsTr_235 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_234 ) )
    iNsTr_236 := @(mem21[iNsTr_235])
    iNsTr_237 := ->(iNsTr_236)
    iNsTr_238 := ($cast ($uint<32>) iNsTr_237 )
    iNsTr_239 := (iNsTr_238 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_240 := ->(col)
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240 )
    iNsTr_242 := (iNsTr_239 + iNsTr_241)
    iNsTr_243 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_242 ) )
    iNsTr_244 := @(message21[iNsTr_243])
    iNsTr_245 := ->(iNsTr_244)
    $call modifyInfo (iNsTr_227 iNsTr_245 ) (iNsTr_246 ) 
    iNsTr_247 := ->(row)
    iNsTr_248 := ($cast ($uint<64>) iNsTr_247 )
    iNsTr_249 := @(trans_info21_22[iNsTr_248])
    ->(iNsTr_249) := iNsTr_246
    $place[bb_27_bb_28]
    $merge bb_26_bb_28 bb_27_bb_28 
    $endmerge
    $place[bb_28_bb_29]
    $merge bb_28_bb_29 
    $endmerge
    iNsTr_268 := ->(col)
    iNsTr_269 := (iNsTr_268 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_269
    $place[bb_29_bb_7]
    $merge bb_7_bb_30 
    $endmerge
    $place[bb_30_bb_34]
    $merge bb_30_bb_34 bb_33_bb_34 
    $endmerge
    $place[bb_34_bb_35]
    $merge bb_34_bb_35 
    $endmerge
    iNsTr_121 := ->(row)
    iNsTr_122 := (iNsTr_121 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_122
    $place[bb_35_bb_1]
    $merge bb_1_bb_36 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [checkNodeComputeEngine22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 63  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 64  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 65  base address = 0  word size = 16
    // can point into 
    $storage  I_alloc : $uint<16> // memory space index = 66  base address = 0  word size = 16
    // can point into 
    $storage  val_alloc : $float<8,23> // memory space index = 67  base address = 0  word size = 32
    // can point into 
    $storage  flag_alloc : $uint<8> // memory space index = 68  base address = 0  word size = 8
    // can point into 
    $storage  exor_alloc : $uint<8> // memory space index = 69  base address = 0  word size = 8
    // can point into 
    $storage  sign_alloc : $float<8,23> // memory space index = 70  base address = 0  word size = 32
    // can point into 
    $storage  index_alloc : $uint<16> // memory space index = 71  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    I := @(I_alloc)
    val := @(val_alloc)
    flag := @(flag_alloc)
    exor := @(exor_alloc)
    sign := @(sign_alloc)
    index := @(index_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_35_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_36]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem22[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem22[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem22[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_31]
    $endif
    $merge bb_5_bb_31 
    $endmerge
    iNsTr_74 := ->(range)
    iNsTr_75 := ($cast ($uint<32>) iNsTr_74 )
    iNsTr_76 := (iNsTr_75 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_76 $then 
    $place[bb_31_bb_32]
    $else 
    $place[bb_31_bb_33]
    $endif
    $merge bb_31_bb_32 
    $endmerge
    iNsTr_84 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_85 := ->(iNsTr_84)
    iNsTr_86 := ($cast ($uint<32>) iNsTr_85 )
    iNsTr_87 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_86)
    iNsTr_88 := ->(row)
    iNsTr_89 := ($cast ($uint<32>) iNsTr_88 )
    iNsTr_90 := (iNsTr_87 + iNsTr_89)
    iNsTr_91 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_90 ) )
    iNsTr_92 := @(mem22[iNsTr_91])
    iNsTr_93 := ->(iNsTr_92)
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93 )
    iNsTr_95 := (iNsTr_94 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_96 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_95 ) )
    iNsTr_97 := @(message22[iNsTr_96])
    iNsTr_98 := ->(iNsTr_97)
    iNsTr_99 := ->(row)
    iNsTr_100 := ($cast ($uint<64>) iNsTr_99 )
    iNsTr_101 := @(trans_info22_21[iNsTr_100])
    ->(iNsTr_101) := iNsTr_98
    $place[bb_32_bb_33]
    $merge bb_31_bb_33 bb_32_bb_33 
    $endmerge
    $place[bb_33_bb_34]
    $merge bb_5_bb_6 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_6_bb_7]
    $merge bb_29_bb_7 bb_6_bb_7 
    $endmerge
    iNsTr_78 := ->(col)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := ->(range)
    iNsTr_81 := ($cast ($uint<32>) iNsTr_80 )
    iNsTr_82 := (($bitcast ($int<32>) iNsTr_79 ) < ($bitcast ($int<32>) iNsTr_81 ))
    $if iNsTr_82 $then 
    $place[bb_7_bb_8]
    $else 
    $place[bb_7_bb_30]
    $endif
    $merge bb_7_bb_8 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(val) := ($bitcast ($float<8,23>) _h0  )
    ->(flag) := ($bitcast ($uint<8>) _b00000000  )
    ->(exor) := ($bitcast ($uint<8>) _b00000000  )
    ->(sign) := ($bitcast ($float<8,23>) _h0  )
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_8_bb_9]
    $merge bb_22_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_115 := ->(I)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := ->(range)
    iNsTr_118 := ($cast ($uint<32>) iNsTr_117 )
    iNsTr_119 := (($bitcast ($int<32>) iNsTr_116 ) < ($bitcast ($int<32>) iNsTr_118 ))
    $if iNsTr_119 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_23]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_126 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_127 := ->(iNsTr_126)
    iNsTr_128 := ($cast ($uint<32>) iNsTr_127 )
    iNsTr_129 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_128)
    iNsTr_130 := ->(row)
    iNsTr_131 := ($cast ($uint<32>) iNsTr_130 )
    iNsTr_132 := (iNsTr_129 + iNsTr_131)
    iNsTr_133 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_132 ) )
    iNsTr_134 := @(mem22[iNsTr_133])
    iNsTr_135 := ->(iNsTr_134)
    iNsTr_136 := ($cast ($uint<32>) iNsTr_135 )
    iNsTr_137 := (iNsTr_136 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_138 := ->(I)
    iNsTr_139 := ($cast ($uint<32>) iNsTr_138 )
    iNsTr_140 := (iNsTr_137 + iNsTr_139)
    iNsTr_141 := ($cast ($uint<16>) iNsTr_140 )
    ->(index) := iNsTr_141
    iNsTr_143 := ->(I)
    iNsTr_144 := ($cast ($uint<32>) iNsTr_143 )
    iNsTr_145 := ->(col)
    iNsTr_146 := ($cast ($uint<32>) iNsTr_145 )
    iNsTr_147 := (iNsTr_144 == iNsTr_146)
    $if iNsTr_147 $then 
    $place[bb_10_bb_11]
    $else 
    $place[bb_10_bb_12]
    $endif
    $merge bb_10_bb_12 
    $endmerge
    iNsTr_154 := ->(index)
    iNsTr_155 := ($cast ($uint<64>) iNsTr_154 )
    iNsTr_156 := @(message22[iNsTr_155])
    iNsTr_157 := ->(iNsTr_156)
    iNsTr_158 := ($cast ($float<11,52>) iNsTr_157 )
    iNsTr_159 := (iNsTr_158 >= ($bitcast ($float<11,52>) _h0  ))
    $if iNsTr_159 $then 
    $place[bb_12_bb_13]
    $else 
    $place[bb_12_bb_14]
    $endif
    $merge bb_12_bb_14 
    $endmerge
    iNsTr_175 := ->(exor)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_176 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_178 := ($cast ($uint<8>) iNsTr_177 )
    ->(exor) := iNsTr_178
    $place[bb_14_bb_15]
    $merge bb_12_bb_13 
    $endmerge
    iNsTr_169 := ->(exor)
    iNsTr_170 := ($cast ($uint<32>) iNsTr_169 )
    iNsTr_171 := (iNsTr_170 ^ ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    iNsTr_172 := ($cast ($uint<8>) iNsTr_171 )
    ->(exor) := iNsTr_172
    $place[bb_13_bb_15]
    $merge bb_13_bb_15 bb_14_bb_15 
    $endmerge
    iNsTr_206 := ->(flag)
    iNsTr_207 := ($cast ($uint<32>) iNsTr_206 )
    iNsTr_208 := (iNsTr_207 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_208 $then 
    $place[bb_15_bb_16]
    $else 
    $place[bb_15_bb_17]
    $endif
    $merge bb_15_bb_17 
    $endmerge
    iNsTr_260 := ->(index)
    iNsTr_261 := ($cast ($uint<64>) iNsTr_260 )
    iNsTr_262 := @(message22[iNsTr_261])
    iNsTr_263 := ->(iNsTr_262)
    $call absf (iNsTr_263 ) (iNsTr_264 ) 
    iNsTr_265 := ->(val)
    iNsTr_266 := (iNsTr_264 < iNsTr_265)
    $if iNsTr_266 $then 
    $place[bb_17_bb_18]
    $else 
    $place[bb_17_bb_19]
    $endif
    $merge bb_17_bb_18 
    $endmerge
    iNsTr_273 := ->(index)
    iNsTr_274 := ($cast ($uint<64>) iNsTr_273 )
    iNsTr_275 := @(message22[iNsTr_274])
    iNsTr_276 := ->(iNsTr_275)
    $call absf (iNsTr_276 ) (iNsTr_277 ) 
    ->(val) := iNsTr_277
    $place[bb_18_bb_19]
    $merge bb_17_bb_19 bb_18_bb_19 
    $endmerge
    $place[bb_19_bb_20]
    $merge bb_15_bb_16 
    $endmerge
    iNsTr_253 := ->(index)
    iNsTr_254 := ($cast ($uint<64>) iNsTr_253 )
    iNsTr_255 := @(message22[iNsTr_254])
    iNsTr_256 := ->(iNsTr_255)
    $call absf (iNsTr_256 ) (iNsTr_257 ) 
    ->(val) := iNsTr_257
    $place[bb_16_bb_20]
    $merge bb_16_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_20_bb_21 
    $endmerge
    ->(flag) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_21_bb_22]
    $merge bb_10_bb_11 
    $endmerge
    $place[bb_11_bb_22]
    $merge bb_11_bb_22 bb_21_bb_22 
    $endmerge
    iNsTr_165 := ->(I)
    iNsTr_166 := (iNsTr_165 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_166
    $place[bb_22_bb_9]
    $merge bb_9_bb_23 
    $endmerge
    iNsTr_149 := ->(exor)
    iNsTr_150 := ($cast ($uint<32>) iNsTr_149 )
    iNsTr_151 := (iNsTr_150 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_151 $then 
    $place[bb_23_bb_24]
    $else 
    $place[bb_23_bb_25]
    $endif
    $merge bb_23_bb_24 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    $place[bb_24_bb_26]
    $merge bb_23_bb_25 
    $endmerge
    ->(sign) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $place[bb_25_bb_26]
    $merge bb_24_bb_26 bb_25_bb_26 
    $endmerge
    iNsTr_181 := ->(val)
    iNsTr_182 := ->(sign)
    iNsTr_183 := (iNsTr_181 * iNsTr_182)
    iNsTr_184 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_185 := ->(iNsTr_184)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_186)
    iNsTr_188 := ->(row)
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188 )
    iNsTr_190 := (iNsTr_187 + iNsTr_189)
    iNsTr_191 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_190 ) )
    iNsTr_192 := @(mem22[iNsTr_191])
    iNsTr_193 := ->(iNsTr_192)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_194 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_196 := ->(col)
    iNsTr_197 := ($cast ($uint<32>) iNsTr_196 )
    iNsTr_198 := (iNsTr_195 + iNsTr_197)
    iNsTr_199 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_198 ) )
    iNsTr_200 := @(ext_info22[iNsTr_199])
    ->(iNsTr_200) := iNsTr_183
    iNsTr_202 := ->(col)
    iNsTr_203 := ($cast ($uint<32>) iNsTr_202 )
    iNsTr_204 := (iNsTr_203 == ($bitcast ($uint<32>) _b00000000000000000000000000000000  ))
    $if iNsTr_204 $then 
    $place[bb_26_bb_27]
    $else 
    $place[bb_26_bb_28]
    $endif
    $merge bb_26_bb_27 
    $endmerge
    iNsTr_210 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_211 := ->(iNsTr_210)
    iNsTr_212 := ($cast ($uint<32>) iNsTr_211 )
    iNsTr_213 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_212)
    iNsTr_214 := ->(row)
    iNsTr_215 := ($cast ($uint<32>) iNsTr_214 )
    iNsTr_216 := (iNsTr_213 + iNsTr_215)
    iNsTr_217 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_216 ) )
    iNsTr_218 := @(mem22[iNsTr_217])
    iNsTr_219 := ->(iNsTr_218)
    iNsTr_220 := ($cast ($uint<32>) iNsTr_219 )
    iNsTr_221 := (iNsTr_220 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_222 := ->(col)
    iNsTr_223 := ($cast ($uint<32>) iNsTr_222 )
    iNsTr_224 := (iNsTr_221 + iNsTr_223)
    iNsTr_225 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_224 ) )
    iNsTr_226 := @(ext_info22[iNsTr_225])
    iNsTr_227 := ->(iNsTr_226)
    iNsTr_228 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_229 := ->(iNsTr_228)
    iNsTr_230 := ($cast ($uint<32>) iNsTr_229 )
    iNsTr_231 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_230)
    iNsTr_232 := ->(row)
    iNsTr_233 := ($cast ($uint<32>) iNsTr_232 )
    iNsTr_234 := (iNsTr_231 + iNsTr_233)
    iNsTr_235 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_234 ) )
    iNsTr_236 := @(mem22[iNsTr_235])
    iNsTr_237 := ->(iNsTr_236)
    iNsTr_238 := ($cast ($uint<32>) iNsTr_237 )
    iNsTr_239 := (iNsTr_238 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_240 := ->(col)
    iNsTr_241 := ($cast ($uint<32>) iNsTr_240 )
    iNsTr_242 := (iNsTr_239 + iNsTr_241)
    iNsTr_243 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_242 ) )
    iNsTr_244 := @(message22[iNsTr_243])
    iNsTr_245 := ->(iNsTr_244)
    $call modifyInfo (iNsTr_227 iNsTr_245 ) (iNsTr_246 ) 
    iNsTr_247 := ->(row)
    iNsTr_248 := ($cast ($uint<64>) iNsTr_247 )
    iNsTr_249 := @(trans_info22_21[iNsTr_248])
    ->(iNsTr_249) := iNsTr_246
    $place[bb_27_bb_28]
    $merge bb_26_bb_28 bb_27_bb_28 
    $endmerge
    $place[bb_28_bb_29]
    $merge bb_28_bb_29 
    $endmerge
    iNsTr_268 := ->(col)
    iNsTr_269 := (iNsTr_268 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_269
    $place[bb_29_bb_7]
    $merge bb_7_bb_30 
    $endmerge
    $place[bb_30_bb_34]
    $merge bb_30_bb_34 bb_33_bb_34 
    $endmerge
    $place[bb_34_bb_35]
    $merge bb_34_bb_35 
    $endmerge
    iNsTr_121 := ->(row)
    iNsTr_122 := (iNsTr_121 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_122
    $place[bb_35_bb_1]
    $merge bb_1_bb_36 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeMessage21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 72  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_11)
    iNsTr_13 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_12 ) )
    iNsTr_14 := @(mem21[iNsTr_13])
    iNsTr_15 := ->(iNsTr_14)
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15 )
    iNsTr_17 := (iNsTr_16 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_18 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_17 ) )
    iNsTr_19 := @(aPriori1[iNsTr_18])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ->(I)
    iNsTr_22 := ($cast ($uint<64>) iNsTr_21 )
    iNsTr_23 := @(message21[iNsTr_22])
    ->(iNsTr_23) := iNsTr_20
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_28
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeExtrinsicInfo21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 73  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(ext_info21[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeTransInfo21_22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 74  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(trans_info21_22[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [transverseCorrection21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 75  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 76  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 77  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_22_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_23]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem21[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem21[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem21[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_18]
    $endif
    $merge bb_5_bb_18 
    $endmerge
    iNsTr_78 := ->(range)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_79 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_80 $then 
    $place[bb_18_bb_19]
    $else 
    $place[bb_18_bb_20]
    $endif
    $merge bb_18_bb_19 
    $endmerge
    iNsTr_86 := ->(row)
    iNsTr_87 := ($cast ($uint<64>) iNsTr_86 )
    iNsTr_88 := @(trans_info22_21[iNsTr_87])
    iNsTr_89 := ->(iNsTr_88)
    iNsTr_90 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_91 := ->(iNsTr_90)
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91 )
    iNsTr_93 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_92)
    iNsTr_94 := ->(row)
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94 )
    iNsTr_96 := (iNsTr_93 + iNsTr_95)
    iNsTr_97 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_96 ) )
    iNsTr_98 := @(mem21[iNsTr_97])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (iNsTr_100 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_102 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_101 ) )
    iNsTr_103 := @(ext_info21[iNsTr_102])
    ->(iNsTr_103) := iNsTr_89
    $place[bb_19_bb_20]
    $merge bb_18_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_72 := ->(row)
    iNsTr_73 := ($cast ($uint<64>) iNsTr_72 )
    iNsTr_74 := @(trans_info22_21[iNsTr_73])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := (iNsTr_75 != ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_76 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_12]
    $endif
    $merge bb_6_bb_12 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_12_bb_13]
    $merge bb_6_bb_7 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_7_bb_8]
    $merge bb_10_bb_8 bb_7_bb_8 
    $endmerge
    iNsTr_107 := ->(col)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := ->(range)
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109 )
    iNsTr_111 := (($bitcast ($int<32>) iNsTr_108 ) < ($bitcast ($int<32>) iNsTr_110 ))
    $if iNsTr_111 $then 
    $place[bb_8_bb_9]
    $else 
    $place[bb_8_bb_11]
    $endif
    $merge bb_8_bb_9 
    $endmerge
    iNsTr_120 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_121 := ->(iNsTr_120)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_122)
    iNsTr_124 := ->(row)
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124 )
    iNsTr_126 := (iNsTr_123 + iNsTr_125)
    iNsTr_127 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_126 ) )
    iNsTr_128 := @(mem21[iNsTr_127])
    iNsTr_129 := ->(iNsTr_128)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_130 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_132 := ->(col)
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132 )
    iNsTr_134 := (iNsTr_131 + iNsTr_133)
    iNsTr_135 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_134 ) )
    iNsTr_136 := @(ext_info21[iNsTr_135])
    iNsTr_137 := ->(iNsTr_136)
    iNsTr_138 := ->(row)
    iNsTr_139 := ($cast ($uint<64>) iNsTr_138 )
    iNsTr_140 := @(trans_info22_21[iNsTr_139])
    iNsTr_141 := ->(iNsTr_140)
    $call modifyInfo (iNsTr_137 iNsTr_141 ) (iNsTr_142 ) 
    iNsTr_143 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_144 := ->(iNsTr_143)
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144 )
    iNsTr_146 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_145)
    iNsTr_147 := ->(row)
    iNsTr_148 := ($cast ($uint<32>) iNsTr_147 )
    iNsTr_149 := (iNsTr_146 + iNsTr_148)
    iNsTr_150 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_149 ) )
    iNsTr_151 := @(mem21[iNsTr_150])
    iNsTr_152 := ->(iNsTr_151)
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152 )
    iNsTr_154 := (iNsTr_153 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_155 := ->(col)
    iNsTr_156 := ($cast ($uint<32>) iNsTr_155 )
    iNsTr_157 := (iNsTr_154 + iNsTr_156)
    iNsTr_158 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_157 ) )
    iNsTr_159 := @(ext_info21[iNsTr_158])
    ->(iNsTr_159) := iNsTr_142
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_205 := ->(col)
    iNsTr_206 := (iNsTr_205 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_206
    $place[bb_10_bb_8]
    $merge bb_8_bb_11 
    $endmerge
    $place[bb_11_bb_17]
    $merge bb_12_bb_13 bb_15_bb_13 
    $endmerge
    iNsTr_113 := ->(col)
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113 )
    iNsTr_115 := ->(range)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := (($bitcast ($int<32>) iNsTr_114 ) < ($bitcast ($int<32>) iNsTr_116 ))
    $if iNsTr_117 $then 
    $place[bb_13_bb_14]
    $else 
    $place[bb_13_bb_16]
    $endif
    $merge bb_13_bb_14 
    $endmerge
    iNsTr_163 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_164 := ->(iNsTr_163)
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164 )
    iNsTr_166 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_165)
    iNsTr_167 := ->(row)
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167 )
    iNsTr_169 := (iNsTr_166 + iNsTr_168)
    iNsTr_170 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_169 ) )
    iNsTr_171 := @(mem21[iNsTr_170])
    iNsTr_172 := ->(iNsTr_171)
    iNsTr_173 := ($cast ($uint<32>) iNsTr_172 )
    iNsTr_174 := (iNsTr_173 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_175 := ->(col)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_174 + iNsTr_176)
    iNsTr_178 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_177 ) )
    iNsTr_179 := @(ext_info21[iNsTr_178])
    iNsTr_180 := ->(iNsTr_179)
    iNsTr_181 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_182 := ->(iNsTr_181)
    iNsTr_183 := ($cast ($uint<32>) iNsTr_182 )
    iNsTr_184 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_183)
    iNsTr_185 := ->(row)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (iNsTr_184 + iNsTr_186)
    iNsTr_188 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_187 ) )
    iNsTr_189 := @(mem21[iNsTr_188])
    iNsTr_190 := ->(iNsTr_189)
    iNsTr_191 := ($cast ($uint<32>) iNsTr_190 )
    iNsTr_192 := (iNsTr_191 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_193 := ->(col)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_192 + iNsTr_194)
    iNsTr_196 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_195 ) )
    iNsTr_197 := @(ext_info21[iNsTr_196])
    ->(iNsTr_197) := iNsTr_180
    $place[bb_14_bb_15]
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_210 := ->(col)
    iNsTr_211 := (iNsTr_210 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_211
    $place[bb_15_bb_13]
    $merge bb_13_bb_16 
    $endmerge
    $place[bb_16_bb_17]
    $merge bb_11_bb_17 bb_16_bb_17 
    $endmerge
    $place[bb_17_bb_21]
    $merge bb_17_bb_21 bb_20_bb_21 
    $endmerge
    $place[bb_21_bb_22]
    $merge bb_21_bb_22 
    $endmerge
    iNsTr_201 := ->(row)
    iNsTr_202 := (iNsTr_201 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_202
    $place[bb_22_bb_1]
    $merge bb_1_bb_23 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [update_aPosteriori21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 78  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(ext_info21[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := ->(I)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_14)
    iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_15 ) )
    iNsTr_17 := @(mem21[iNsTr_16])
    iNsTr_18 := ->(iNsTr_17)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18 )
    iNsTr_20 := (iNsTr_19 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_20 ) )
    iNsTr_22 := @(aPosteriori1[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := (iNsTr_23 + iNsTr_12)
    ->(iNsTr_22) := iNsTr_24
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_28 := ->(I)
    iNsTr_29 := (iNsTr_28 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_29
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [updateMessage21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 79  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 80  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 81  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_10_bb_1 
    $endmerge
    iNsTr_2 := ->(row)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_11]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(row)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (iNsTr_14 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_16 := (iNsTr_11 == iNsTr_15)
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_38 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_39 := ->(iNsTr_38)
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39 )
    iNsTr_41 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_40)
    iNsTr_42 := ->(row)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (iNsTr_41 + iNsTr_43)
    iNsTr_45 := (iNsTr_44 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_46 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_45 ) )
    iNsTr_47 := @(mem21[iNsTr_46])
    iNsTr_48 := ->(iNsTr_47)
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48 )
    iNsTr_50 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_52)
    iNsTr_54 := ->(row)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (iNsTr_53 + iNsTr_55)
    iNsTr_57 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_56 ) )
    iNsTr_58 := @(mem21[iNsTr_57])
    iNsTr_59 := ->(iNsTr_58)
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59 )
    iNsTr_61 := (iNsTr_49 - iNsTr_60)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61 )
    ->(range) := iNsTr_62
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_19 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20 )
    iNsTr_22 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_24)
    iNsTr_26 := ->(row)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (iNsTr_25 + iNsTr_27)
    iNsTr_29 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_28 ) )
    iNsTr_30 := @(mem21[iNsTr_29])
    iNsTr_31 := ->(iNsTr_30)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    iNsTr_33 := (iNsTr_32 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_34 := (iNsTr_21 - iNsTr_33)
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34 )
    ->(range) := iNsTr_35
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_5_bb_6]
    $merge bb_5_bb_6 bb_8_bb_6 
    $endmerge
    iNsTr_67 := ->(col)
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67 )
    iNsTr_69 := ->(range)
    iNsTr_70 := ($cast ($uint<32>) iNsTr_69 )
    iNsTr_71 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) iNsTr_70 ))
    $if iNsTr_71 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_9]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_74 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75 )
    iNsTr_77 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_76)
    iNsTr_78 := ->(row)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_77 + iNsTr_79)
    iNsTr_81 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_80 ) )
    iNsTr_82 := @(mem21[iNsTr_81])
    iNsTr_83 := ->(iNsTr_82)
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83 )
    iNsTr_85 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_84)
    iNsTr_86 := (iNsTr_85 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_87 := ->(col)
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87 )
    iNsTr_89 := (iNsTr_86 + iNsTr_88)
    iNsTr_90 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_89 ) )
    iNsTr_91 := @(mem21[iNsTr_90])
    iNsTr_92 := ->(iNsTr_91)
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92 )
    iNsTr_94 := (iNsTr_93 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_95 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_94 ) )
    iNsTr_96 := @(aPosteriori1[iNsTr_95])
    iNsTr_97 := ->(iNsTr_96)
    iNsTr_98 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_100)
    iNsTr_102 := ->(row)
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102 )
    iNsTr_104 := (iNsTr_101 + iNsTr_103)
    iNsTr_105 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_104 ) )
    iNsTr_106 := @(mem21[iNsTr_105])
    iNsTr_107 := ->(iNsTr_106)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := (iNsTr_108 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_110 := ->(col)
    iNsTr_111 := ($cast ($uint<32>) iNsTr_110 )
    iNsTr_112 := (iNsTr_109 + iNsTr_111)
    iNsTr_113 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_112 ) )
    iNsTr_114 := @(ext_info21[iNsTr_113])
    iNsTr_115 := ->(iNsTr_114)
    iNsTr_116 := (iNsTr_97 - iNsTr_115)
    iNsTr_117 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_118 := ->(iNsTr_117)
    iNsTr_119 := ($cast ($uint<32>) iNsTr_118 )
    iNsTr_120 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_119)
    iNsTr_121 := ->(row)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (iNsTr_120 + iNsTr_122)
    iNsTr_124 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_123 ) )
    iNsTr_125 := @(mem21[iNsTr_124])
    iNsTr_126 := ->(iNsTr_125)
    iNsTr_127 := ($cast ($uint<32>) iNsTr_126 )
    iNsTr_128 := (iNsTr_127 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_129 := ->(col)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_128 + iNsTr_130)
    iNsTr_132 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_131 ) )
    iNsTr_133 := @(message21[iNsTr_132])
    ->(iNsTr_133) := iNsTr_116
    $place[bb_7_bb_8]
    $merge bb_7_bb_8 
    $endmerge
    iNsTr_137 := ->(col)
    iNsTr_138 := (iNsTr_137 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_138
    $place[bb_8_bb_6]
    $merge bb_6_bb_9 
    $endmerge
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_141 := ->(row)
    iNsTr_142 := (iNsTr_141 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_142
    $place[bb_10_bb_1]
    $merge bb_1_bb_11 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [daemon_3]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  init_aPriori1_alloc : $uint<8> // memory space index = 82  base address = 0  word size = 8
    // can point into 
    $storage  nitr_3_alloc : $uint<8> // memory space index = 83  base address = 0  word size = 8
    // can point into 
    $storage  trans_info_computed_alloc : $uint<8> // memory space index = 84  base address = 0  word size = 8
    // can point into 
    $storage  aPosteriori_update_phase1_done_alloc : $uint<8> // memory space index = 85  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_alloc : $uint<8> // memory space index = 86  base address = 0  word size = 8
    // can point into 
    $storage  read_message11_modified_alloc : $uint<8> // memory space index = 87  base address = 0  word size = 8
    // can point into 
    init_aPriori1 := @(init_aPriori1_alloc)
    nitr_3 := @(nitr_3_alloc)
    trans_info_computed := @(trans_info_computed_alloc)
    aPosteriori_update_phase1_done := @(aPosteriori_update_phase1_done_alloc)
    is_decoded := @(is_decoded_alloc)
    read_message11_modified := @(read_message11_modified_alloc)
    iNsTr_1 := message11_initialized
    ->(init_aPriori1) := iNsTr_1
    $call initializeMessage21 () () 
    ->(nitr_3) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_5_bb_1 
    $endmerge
    iNsTr_6 := ->(nitr_3)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6 )
    iNsTr_8 := maxNitr
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_7 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_xx_xloopexit]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    $call initializeExtrinsicInfo21 () () 
    $call initializeTransInfo21_22 () () 
    $call checkNodeComputeEngine21 () () 
    trans_info21_22_calulation_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_18 := trans_info22_21_calulation_done
    ->(trans_info_computed) := iNsTr_18
    $call transverseCorrection21 () () 
    iNsTr_22 := aPosteriori1_phase_1_done
    ->(aPosteriori_update_phase1_done) := iNsTr_22
    $call update_aPosteriori21 () () 
    aPosteriori1_phase_2_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_28 := is_decoded_d3
    ->(is_decoded) := iNsTr_28
    iNsTr_30 := ->(is_decoded)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30 )
    iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_32 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_3 
    $endmerge
    $place[bb_3_bb_7]
    $merge bb_2_bb_4 
    $endmerge
    $call updateMessage21 () () 
    $place[bb_4_bb_5]
    $merge bb_4_bb_5 
    $endmerge
    iNsTr_39 := ->(nitr_3)
    iNsTr_40 := (iNsTr_39 + ($bitcast ($uint<8>) _b00000001  ))
    ->(nitr_3) := iNsTr_40
    message21_modified := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_45 := message11_modified
    ->(read_message11_modified) := iNsTr_45
    $place[bb_5_bb_1]
    $merge bb_1_xx_xloopexit 
    $endmerge
    $place[xx_xloopexit_bb_7]
    $merge bb_3_bb_7 xx_xloopexit_bb_7 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeMessage22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 88  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_11)
    iNsTr_13 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_12 ) )
    iNsTr_14 := @(mem22[iNsTr_13])
    iNsTr_15 := ->(iNsTr_14)
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15 )
    iNsTr_17 := (iNsTr_16 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_18 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_17 ) )
    iNsTr_19 := @(aPriori2[iNsTr_18])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ->(I)
    iNsTr_22 := ($cast ($uint<64>) iNsTr_21 )
    iNsTr_23 := @(message22[iNsTr_22])
    ->(iNsTr_23) := iNsTr_20
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_28
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeExtrinsicInfo22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 89  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(ext_info22[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeTransInfo22_21]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 90  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(trans_info22_21[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [transverseCorrection22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 91  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 92  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 93  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_22_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_23]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem22[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem22[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem22[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_18]
    $endif
    $merge bb_5_bb_18 
    $endmerge
    iNsTr_78 := ->(range)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_79 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_80 $then 
    $place[bb_18_bb_19]
    $else 
    $place[bb_18_bb_20]
    $endif
    $merge bb_18_bb_19 
    $endmerge
    iNsTr_86 := ->(row)
    iNsTr_87 := ($cast ($uint<64>) iNsTr_86 )
    iNsTr_88 := @(trans_info21_22[iNsTr_87])
    iNsTr_89 := ->(iNsTr_88)
    iNsTr_90 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_91 := ->(iNsTr_90)
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91 )
    iNsTr_93 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_92)
    iNsTr_94 := ->(row)
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94 )
    iNsTr_96 := (iNsTr_93 + iNsTr_95)
    iNsTr_97 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_96 ) )
    iNsTr_98 := @(mem22[iNsTr_97])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (iNsTr_100 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_102 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_101 ) )
    iNsTr_103 := @(ext_info22[iNsTr_102])
    ->(iNsTr_103) := iNsTr_89
    $place[bb_19_bb_20]
    $merge bb_18_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_72 := ->(row)
    iNsTr_73 := ($cast ($uint<64>) iNsTr_72 )
    iNsTr_74 := @(trans_info21_22[iNsTr_73])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := (iNsTr_75 != ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_76 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_12]
    $endif
    $merge bb_6_bb_12 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_12_bb_13]
    $merge bb_6_bb_7 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_7_bb_8]
    $merge bb_10_bb_8 bb_7_bb_8 
    $endmerge
    iNsTr_107 := ->(col)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := ->(range)
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109 )
    iNsTr_111 := (($bitcast ($int<32>) iNsTr_108 ) < ($bitcast ($int<32>) iNsTr_110 ))
    $if iNsTr_111 $then 
    $place[bb_8_bb_9]
    $else 
    $place[bb_8_bb_11]
    $endif
    $merge bb_8_bb_9 
    $endmerge
    iNsTr_120 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_121 := ->(iNsTr_120)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_122)
    iNsTr_124 := ->(row)
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124 )
    iNsTr_126 := (iNsTr_123 + iNsTr_125)
    iNsTr_127 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_126 ) )
    iNsTr_128 := @(mem22[iNsTr_127])
    iNsTr_129 := ->(iNsTr_128)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_130 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_132 := ->(col)
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132 )
    iNsTr_134 := (iNsTr_131 + iNsTr_133)
    iNsTr_135 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_134 ) )
    iNsTr_136 := @(ext_info22[iNsTr_135])
    iNsTr_137 := ->(iNsTr_136)
    iNsTr_138 := ->(row)
    iNsTr_139 := ($cast ($uint<64>) iNsTr_138 )
    iNsTr_140 := @(trans_info21_22[iNsTr_139])
    iNsTr_141 := ->(iNsTr_140)
    $call modifyInfo (iNsTr_137 iNsTr_141 ) (iNsTr_142 ) 
    iNsTr_143 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_144 := ->(iNsTr_143)
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144 )
    iNsTr_146 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_145)
    iNsTr_147 := ->(row)
    iNsTr_148 := ($cast ($uint<32>) iNsTr_147 )
    iNsTr_149 := (iNsTr_146 + iNsTr_148)
    iNsTr_150 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_149 ) )
    iNsTr_151 := @(mem22[iNsTr_150])
    iNsTr_152 := ->(iNsTr_151)
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152 )
    iNsTr_154 := (iNsTr_153 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_155 := ->(col)
    iNsTr_156 := ($cast ($uint<32>) iNsTr_155 )
    iNsTr_157 := (iNsTr_154 + iNsTr_156)
    iNsTr_158 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_157 ) )
    iNsTr_159 := @(ext_info22[iNsTr_158])
    ->(iNsTr_159) := iNsTr_142
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_205 := ->(col)
    iNsTr_206 := (iNsTr_205 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_206
    $place[bb_10_bb_8]
    $merge bb_8_bb_11 
    $endmerge
    $place[bb_11_bb_17]
    $merge bb_12_bb_13 bb_15_bb_13 
    $endmerge
    iNsTr_113 := ->(col)
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113 )
    iNsTr_115 := ->(range)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := (($bitcast ($int<32>) iNsTr_114 ) < ($bitcast ($int<32>) iNsTr_116 ))
    $if iNsTr_117 $then 
    $place[bb_13_bb_14]
    $else 
    $place[bb_13_bb_16]
    $endif
    $merge bb_13_bb_14 
    $endmerge
    iNsTr_163 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_164 := ->(iNsTr_163)
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164 )
    iNsTr_166 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_165)
    iNsTr_167 := ->(row)
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167 )
    iNsTr_169 := (iNsTr_166 + iNsTr_168)
    iNsTr_170 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_169 ) )
    iNsTr_171 := @(mem22[iNsTr_170])
    iNsTr_172 := ->(iNsTr_171)
    iNsTr_173 := ($cast ($uint<32>) iNsTr_172 )
    iNsTr_174 := (iNsTr_173 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_175 := ->(col)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_174 + iNsTr_176)
    iNsTr_178 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_177 ) )
    iNsTr_179 := @(ext_info22[iNsTr_178])
    iNsTr_180 := ->(iNsTr_179)
    iNsTr_181 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_182 := ->(iNsTr_181)
    iNsTr_183 := ($cast ($uint<32>) iNsTr_182 )
    iNsTr_184 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_183)
    iNsTr_185 := ->(row)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (iNsTr_184 + iNsTr_186)
    iNsTr_188 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_187 ) )
    iNsTr_189 := @(mem22[iNsTr_188])
    iNsTr_190 := ->(iNsTr_189)
    iNsTr_191 := ($cast ($uint<32>) iNsTr_190 )
    iNsTr_192 := (iNsTr_191 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_193 := ->(col)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_192 + iNsTr_194)
    iNsTr_196 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_195 ) )
    iNsTr_197 := @(ext_info22[iNsTr_196])
    ->(iNsTr_197) := iNsTr_180
    $place[bb_14_bb_15]
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_210 := ->(col)
    iNsTr_211 := (iNsTr_210 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_211
    $place[bb_15_bb_13]
    $merge bb_13_bb_16 
    $endmerge
    $place[bb_16_bb_17]
    $merge bb_11_bb_17 bb_16_bb_17 
    $endmerge
    $place[bb_17_bb_21]
    $merge bb_17_bb_21 bb_20_bb_21 
    $endmerge
    $place[bb_21_bb_22]
    $merge bb_21_bb_22 
    $endmerge
    iNsTr_201 := ->(row)
    iNsTr_202 := (iNsTr_201 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_202
    $place[bb_22_bb_1]
    $merge bb_1_bb_23 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [update_aPosteriori22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 94  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(ext_info22[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := ->(I)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_14)
    iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_15 ) )
    iNsTr_17 := @(mem22[iNsTr_16])
    iNsTr_18 := ->(iNsTr_17)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18 )
    iNsTr_20 := (iNsTr_19 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_20 ) )
    iNsTr_22 := @(aPosteriori2[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := (iNsTr_23 + iNsTr_12)
    ->(iNsTr_22) := iNsTr_24
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_28 := ->(I)
    iNsTr_29 := (iNsTr_28 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_29
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [updateMessage22]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 95  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 96  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 97  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_10_bb_1 
    $endmerge
    iNsTr_2 := ->(row)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_11]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(row)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (iNsTr_14 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_16 := (iNsTr_11 == iNsTr_15)
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_38 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_39 := ->(iNsTr_38)
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39 )
    iNsTr_41 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_40)
    iNsTr_42 := ->(row)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (iNsTr_41 + iNsTr_43)
    iNsTr_45 := (iNsTr_44 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_46 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_45 ) )
    iNsTr_47 := @(mem22[iNsTr_46])
    iNsTr_48 := ->(iNsTr_47)
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48 )
    iNsTr_50 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_52)
    iNsTr_54 := ->(row)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (iNsTr_53 + iNsTr_55)
    iNsTr_57 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_56 ) )
    iNsTr_58 := @(mem22[iNsTr_57])
    iNsTr_59 := ->(iNsTr_58)
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59 )
    iNsTr_61 := (iNsTr_49 - iNsTr_60)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61 )
    ->(range) := iNsTr_62
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_19 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20 )
    iNsTr_22 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_24)
    iNsTr_26 := ->(row)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (iNsTr_25 + iNsTr_27)
    iNsTr_29 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_28 ) )
    iNsTr_30 := @(mem22[iNsTr_29])
    iNsTr_31 := ->(iNsTr_30)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    iNsTr_33 := (iNsTr_32 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_34 := (iNsTr_21 - iNsTr_33)
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34 )
    ->(range) := iNsTr_35
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_5_bb_6]
    $merge bb_5_bb_6 bb_8_bb_6 
    $endmerge
    iNsTr_67 := ->(col)
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67 )
    iNsTr_69 := ->(range)
    iNsTr_70 := ($cast ($uint<32>) iNsTr_69 )
    iNsTr_71 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) iNsTr_70 ))
    $if iNsTr_71 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_9]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_74 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75 )
    iNsTr_77 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_76)
    iNsTr_78 := ->(row)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_77 + iNsTr_79)
    iNsTr_81 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_80 ) )
    iNsTr_82 := @(mem22[iNsTr_81])
    iNsTr_83 := ->(iNsTr_82)
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83 )
    iNsTr_85 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_84)
    iNsTr_86 := (iNsTr_85 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_87 := ->(col)
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87 )
    iNsTr_89 := (iNsTr_86 + iNsTr_88)
    iNsTr_90 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_89 ) )
    iNsTr_91 := @(mem22[iNsTr_90])
    iNsTr_92 := ->(iNsTr_91)
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92 )
    iNsTr_94 := (iNsTr_93 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_95 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_94 ) )
    iNsTr_96 := @(aPosteriori2[iNsTr_95])
    iNsTr_97 := ->(iNsTr_96)
    iNsTr_98 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_100)
    iNsTr_102 := ->(row)
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102 )
    iNsTr_104 := (iNsTr_101 + iNsTr_103)
    iNsTr_105 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_104 ) )
    iNsTr_106 := @(mem22[iNsTr_105])
    iNsTr_107 := ->(iNsTr_106)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := (iNsTr_108 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_110 := ->(col)
    iNsTr_111 := ($cast ($uint<32>) iNsTr_110 )
    iNsTr_112 := (iNsTr_109 + iNsTr_111)
    iNsTr_113 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_112 ) )
    iNsTr_114 := @(ext_info22[iNsTr_113])
    iNsTr_115 := ->(iNsTr_114)
    iNsTr_116 := (iNsTr_97 - iNsTr_115)
    iNsTr_117 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_118 := ->(iNsTr_117)
    iNsTr_119 := ($cast ($uint<32>) iNsTr_118 )
    iNsTr_120 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_119)
    iNsTr_121 := ->(row)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (iNsTr_120 + iNsTr_122)
    iNsTr_124 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_123 ) )
    iNsTr_125 := @(mem22[iNsTr_124])
    iNsTr_126 := ->(iNsTr_125)
    iNsTr_127 := ($cast ($uint<32>) iNsTr_126 )
    iNsTr_128 := (iNsTr_127 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_129 := ->(col)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_128 + iNsTr_130)
    iNsTr_132 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_131 ) )
    iNsTr_133 := @(message22[iNsTr_132])
    ->(iNsTr_133) := iNsTr_116
    $place[bb_7_bb_8]
    $merge bb_7_bb_8 
    $endmerge
    iNsTr_137 := ->(col)
    iNsTr_138 := (iNsTr_137 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_138
    $place[bb_8_bb_6]
    $merge bb_6_bb_9 
    $endmerge
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_141 := ->(row)
    iNsTr_142 := (iNsTr_141 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_142
    $place[bb_10_bb_1]
    $merge bb_1_bb_11 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [daemon_4]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  init_aPriori2_alloc : $uint<8> // memory space index = 98  base address = 0  word size = 8
    // can point into 
    $storage  nitr_4_alloc : $uint<8> // memory space index = 99  base address = 0  word size = 8
    // can point into 
    $storage  trans_info_computed_alloc : $uint<8> // memory space index = 100  base address = 0  word size = 8
    // can point into 
    $storage  aPosteriori_update_phase1_done_alloc : $uint<8> // memory space index = 101  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_alloc : $uint<8> // memory space index = 102  base address = 0  word size = 8
    // can point into 
    $storage  read_message12_modified_alloc : $uint<8> // memory space index = 103  base address = 0  word size = 8
    // can point into 
    init_aPriori2 := @(init_aPriori2_alloc)
    nitr_4 := @(nitr_4_alloc)
    trans_info_computed := @(trans_info_computed_alloc)
    aPosteriori_update_phase1_done := @(aPosteriori_update_phase1_done_alloc)
    is_decoded := @(is_decoded_alloc)
    read_message12_modified := @(read_message12_modified_alloc)
    iNsTr_1 := message12_initialized
    ->(init_aPriori2) := iNsTr_1
    $call initializeMessage22 () () 
    ->(nitr_4) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_5_bb_1 
    $endmerge
    iNsTr_6 := ->(nitr_4)
    iNsTr_7 := ($cast ($uint<32>) iNsTr_6 )
    iNsTr_8 := maxNitr
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_7 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_xx_xloopexit]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    $call initializeExtrinsicInfo22 () () 
    $call initializeTransInfo22_21 () () 
    $call checkNodeComputeEngine22 () () 
    trans_info22_21_calulation_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_18 := trans_info21_22_calulation_done
    ->(trans_info_computed) := iNsTr_18
    $call transverseCorrection22 () () 
    iNsTr_22 := aPosteriori2_phase_1_done
    ->(aPosteriori_update_phase1_done) := iNsTr_22
    $call update_aPosteriori22 () () 
    aPosteriori2_phase_2_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_28 := is_decoded_d4
    ->(is_decoded) := iNsTr_28
    iNsTr_30 := ->(is_decoded)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30 )
    iNsTr_32 := (iNsTr_31 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_32 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_3 
    $endmerge
    $place[bb_3_bb_7]
    $merge bb_2_bb_4 
    $endmerge
    $call updateMessage22 () () 
    $place[bb_4_bb_5]
    $merge bb_4_bb_5 
    $endmerge
    iNsTr_39 := ->(nitr_4)
    iNsTr_40 := (iNsTr_39 + ($bitcast ($uint<8>) _b00000001  ))
    ->(nitr_4) := iNsTr_40
    message22_modified := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_45 := message12_modified
    ->(read_message12_modified) := iNsTr_45
    $place[bb_5_bb_1]
    $merge bb_1_xx_xloopexit 
    $endmerge
    $place[xx_xloopexit_bb_7]
    $merge bb_3_bb_7 xx_xloopexit_bb_7 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [ebbyNo_initializer_in_progx_xoptx_xo]
$in ()
$out ()
$is
{
  ebbyNo := _h0 
  $attribute nooptimize 
}
$pipeline $depth 15 $buffering 2 $fullrate $module [fpadd32]
$in ( L : $float<8,23>   R : $float<8,23>  )
$out ( ret_val_x_x : $float<8,23>  )
$is
{
  ret_val_x_x := (L + R)
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpadd64_inner]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  ret_val_x_x := (L + R)
  $attribute delay 24
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpadd64]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  $call fpadd64_inner (L R ) (ret_val_x_x ) 
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpmul64_inner]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  ret_val_x_x := (L * R)
  $attribute delay 24
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpsub64_inner]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  ret_val_x_x := (L - R)
  $attribute delay 24
}
$module [fpdiv64_inner]
$in ( a : $float<11,52>   b : $float<11,52>  )
$out ( aByb : $float<11,52>  )
$is
{
  $constant  C0 : $float<11,52>:= _f1.88235294818878173828125e+0 
  $constant  C1 : $float<11,52>:= _f2.8235294818878173828125e+0 
  $constant  C2 : $float<11,52>:= _f2.0e+0 
  n := ($bitcast ($uint<64>) a )
  d := ($bitcast ($uint<64>) b )
  n_val := ( $slice n 62 0 ) 
  d_val := ( $slice d 62 0 ) 
  s_n := (n [] 63 )
  s_d := (d [] 63 )
  e1 := ( $slice n 62 52 ) 
  e2 := ( $slice d 62 52 ) 
  e1_new := ( $mux (n_val == 0 ) 0   ((e1 - e2) + 1022 ) ) 
  e2_new := ($bitcast ($uint<11>) 1022  )
  n1 := (e1_new && ( $slice n 51 0 ) )
  d1 := (e2_new && ( $slice d 51 0 ) )
  n_new := (c_ZERO_1 && n1)
  d_new := (c_ZERO_1 && d1)
  a_new := ($bitcast ($float<11,52>) n_new )
  b_new := ($bitcast ($float<11,52>) d_new )
  $call fpmul64_inner (C0 b_new ) (t0 ) 
  $call fpsub64_inner (C1 t0 ) (x0 ) 
  $call fpmul64_inner (b_new x0 ) (u1 ) 
  $call fpsub64_inner (C2 u1 ) (v1 ) 
  $call fpmul64_inner (x0 v1 ) (x1 ) 
  $call fpmul64_inner (b_new x1 ) (u2 ) 
  $call fpsub64_inner (C2 u2 ) (v2 ) 
  $call fpmul64_inner (x1 v2 ) (x2 ) 
  $call fpmul64_inner (b_new x2 ) (u3 ) 
  $call fpsub64_inner (C2 u3 ) (v3 ) 
  $call fpmul64_inner (x2 v3 ) (x3 ) 
  $call fpmul64_inner (b_new x3 ) (u4 ) 
  $call fpsub64_inner (C2 u4 ) (v4 ) 
  $call fpmul64_inner (x3 v4 ) (x4 ) 
  $call fpmul64_inner (a_new x4 ) (zz ) 
  res := ( $mux ((n_val != 0 ) & (d_val != 0 )) zz  fp_d_ZERO ) 
  ures := ($bitcast ($uint<64>) res )
  res_int := ((s_n ^ s_d) && ( $slice ures 62 0 ) )
  aByb := ($bitcast ($float<11,52>) res_int )
}
$module [fpdiv32_inner]
$in ( a : $float<8,23>   b : $float<8,23>  )
$out ( aByb : $float<8,23>  )
$is
{
  $call fpdiv64_inner (($cast ($float<11,52>) a ) ($cast ($float<11,52>) b ) ) (aByb_d ) 
  aByb := ($cast ($float<8,23>) aByb_d )
}
$module [fpdiv64]
$in ( a : $float<11,52>   b : $float<11,52>  )
$out ( ret_val__ : $float<11,52>  )
$is
{
  $call fpdiv64_inner (a b ) (ret_val__ ) 
}
$pipeline $depth 15 $buffering 2 $fullrate $module [fpmul32]
$in ( L : $float<8,23>   R : $float<8,23>  )
$out ( ret_val_x_x : $float<8,23>  )
$is
{
  ret_val_x_x := (L * R)
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpmul64]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  $call fpmul64_inner (L R ) (ret_val_x_x ) 
}
$module [sqrtDoubleApprox]
$in ( a : $uint<64>  )
$out ( sqrt_approx : $float<11,52>  )
$is
{
  a0 := (a - (c_ONE_64 << 52 ))
  a1 := (a0 >> 1 )
  a2 := (a1 + (c_ONE_64 << 61 ))
  sqrt_approx := ($bitcast ($float<11,52>) a2 )
}
$module [fpsqrt64_inner]
$in ( a : $float<11,52>  )
$out ( sqrt_a : $float<11,52>  )
$is
{
  $constant  C3 : $float<11,52>:= _f0.5e+0 
  ua := ($bitcast ($uint<64>) a )
  $call sqrtDoubleApprox (ua ) (sqrt_approx ) 
  x := ( $mux (a <= 0 ) fp_d_ZERO  sqrt_approx ) 
  s := (ua [] 63 )
  ua_val := ( $slice ua 62 0 ) 
  $branchblock [loop]
  {
    $merge $entry loopback 
    $phi curr_X := 			  x $on $entry			  next_X $on loopback // type of target is $float<11,52>
    $phi STEP := 			  ($bitcast ($uint<4>) 0  ) $on $entry			  next_STEP $on loopback // type of target is $uint<4>
    $endmerge
    ret_X := curr_X
    not_zero := (curr_X != fp_d_ZERO)
    next_STEP := (STEP + 1 )
    break_from_loop := ((STEP == 3 ) | ( ~ not_zero ))
    $guard ( ~ break_from_loop) $call fpdiv64_inner (a curr_X ) (Q ) 
    $guard ( ~ break_from_loop) $call fpadd64_inner (curr_X Q ) (R ) 
    $guard ( ~ break_from_loop) $call fpmul64_inner (C3 R ) (next_X ) 
    $if ( ~ break_from_loop ) $then 
    $place[loopback]
    $endif
  }
  ( ret_X => xf )
  sqrt_a := ( $mux ((ua_val != 0 ) & ( ~ s )) xf  fp_d_ZERO ) 
}
$module [fpsqrt32]
$in ( a : $float<8,23>  )
$out ( sqrt_a : $float<8,23>  )
$is
{
  $call fpsqrt64_inner (($cast ($float<11,52>) a ) ) (sqrt_a_d ) 
  sqrt_a := ($cast ($float<8,23>) sqrt_a_d )
}
$module [fpsqrt64]
$in ( a : $float<11,52>  )
$out ( sqrt_a : $float<11,52>  )
$is
{
  $call fpsqrt64_inner (a ) (sqrt_a ) 
}
$pipeline $depth 15 $buffering 2 $fullrate $module [fpsub32]
$in ( L : $float<8,23>   R : $float<8,23>  )
$out ( ret_val_x_x : $float<8,23>  )
$is
{
  ret_val_x_x := (L - R)
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpsub64]
$in ( L : $float<11,52>   R : $float<11,52>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  $call fpsub64_inner (L R ) (ret_val_x_x ) 
}
$pipeline $depth 15 $buffering 2 $fullrate $module [fpu32]
$in ( L : $float<8,23>   R : $float<8,23>   OP_ID : $uint<8>  )
$out ( ret_val_x_x : $float<8,23>  )
$is
{
  is_add := (OP_ID == ADDOP)
  is_sub := (OP_ID == SUBOP)
  is_mul := (OP_ID == MULOP)
  $guard (is_add) oadd := (L + R)
  $guard (is_sub) osub := (L - R)
  $guard (is_mul) omul := (L * R)
  ret_val_x_x := ( $mux is_add oadd  ( $mux is_sub osub  ( $mux is_mul omul  0  )  )  ) 
}
$pipeline $depth 31 $buffering 2 $fullrate $module [fpu64]
$in ( L : $float<11,52>   R : $float<11,52>   OP_ID : $uint<8>  )
$out ( ret_val_x_x : $float<11,52>  )
$is
{
  is_add := (OP_ID == ADDOP)
  is_sub := (OP_ID == SUBOP)
  is_mul := (OP_ID == MULOP)
  $guard (is_add) oadd := (L + R)
  $guard (is_sub) osub := (L - R)
  $guard (is_mul) omul := (L * R)
  ret_val_x_x := ( $mux is_add oadd  ( $mux is_sub osub  ( $mux is_mul omul  0  )  )  ) 
  $attribute delay 28
}
$module [rate_initializer_in_progx_xoptx_xo]
$in ()
$out ()
$is
{
  rate := _h0 
  $attribute nooptimize 
}
$module [progx_xoptx_xo_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call ebbyNo_initializer_in_progx_xoptx_xo () () 
    $call rate_initializer_in_progx_xoptx_xo () () 
  }
  $attribute initializer 
}
$module [global_storage_initializer_]
$in ()
$out ()
$is
{
  $parallelblock[pb]
  {
    $call progx_xoptx_xo_storage_initializer_ () () 
  }
}
$module [initMem]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 104  base address = 0  word size = 16
    // can point into 
    $storage  val_alloc : $uint<16> // memory space index = 105  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 106  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    val := @(val_alloc)
    range := @(range_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $if iNsTr_4 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_7 := matrix_in
    ->(val) := iNsTr_7
    iNsTr_9 := ->(val)
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(mem11[iNsTr_11])
    ->(iNsTr_12) := iNsTr_9
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_26 := ->(I)
    iNsTr_27 := (iNsTr_26 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_27
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_19 := ->(iNsTr_18)
    iNsTr_20 := ($cast ($uint<32>) iNsTr_19 )
    iNsTr_21 := (iNsTr_17 + iNsTr_20)
    iNsTr_22 := ($cast ($uint<16>) iNsTr_21 )
    ->(range) := iNsTr_22
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_4_bb_5]
    $merge bb_4_bb_5 bb_7_bb_5 
    $endmerge
    iNsTr_30 := ->(I)
    iNsTr_31 := ($cast ($uint<32>) iNsTr_30 )
    iNsTr_32 := ->(range)
    iNsTr_33 := ($cast ($uint<32>) iNsTr_32 )
    iNsTr_34 := (($bitcast ($int<32>) iNsTr_31 ) < ($bitcast ($int<32>) iNsTr_33 ))
    $if iNsTr_34 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_8]
    $endif
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_38 := matrix_in
    ->(val) := iNsTr_38
    iNsTr_40 := ->(val)
    iNsTr_41 := ->(I)
    iNsTr_42 := ($cast ($uint<32>) iNsTr_41 )
    iNsTr_43 := (iNsTr_42 + ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    iNsTr_44 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_43 ) )
    iNsTr_45 := @(mem11[iNsTr_44])
    ->(iNsTr_45) := iNsTr_40
    $place[bb_6_bb_7]
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_50 := ->(I)
    iNsTr_51 := (iNsTr_50 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_51
    $place[bb_7_bb_5]
    $merge bb_5_bb_8 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_8_bb_9]
    $merge bb_11_bb_9 bb_8_bb_9 
    $endmerge
    iNsTr_54 := ->(I)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($int<32>) iNsTr_55 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $if iNsTr_56 $then 
    $place[bb_9_bb_10]
    $else 
    $place[bb_9_bb_12]
    $endif
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_59 := matrix_in
    ->(val) := iNsTr_59
    iNsTr_61 := ->(val)
    iNsTr_62 := ->(I)
    iNsTr_63 := ($cast ($uint<64>) iNsTr_62 )
    iNsTr_64 := @(mem12[iNsTr_63])
    ->(iNsTr_64) := iNsTr_61
    $place[bb_10_bb_11]
    $merge bb_10_bb_11 
    $endmerge
    iNsTr_78 := ->(I)
    iNsTr_79 := (iNsTr_78 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_79
    $place[bb_11_bb_9]
    $merge bb_9_bb_12 
    $endmerge
    iNsTr_67 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_68 := ->(iNsTr_67)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_71 := ->(iNsTr_70)
    iNsTr_72 := ($cast ($uint<32>) iNsTr_71 )
    iNsTr_73 := (iNsTr_69 + iNsTr_72)
    iNsTr_74 := ($cast ($uint<16>) iNsTr_73 )
    ->(range) := iNsTr_74
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_12_bb_13]
    $merge bb_12_bb_13 bb_15_bb_13 
    $endmerge
    iNsTr_82 := ->(I)
    iNsTr_83 := ($cast ($uint<32>) iNsTr_82 )
    iNsTr_84 := ->(range)
    iNsTr_85 := ($cast ($uint<32>) iNsTr_84 )
    iNsTr_86 := (($bitcast ($int<32>) iNsTr_83 ) < ($bitcast ($int<32>) iNsTr_85 ))
    $if iNsTr_86 $then 
    $place[bb_13_bb_14]
    $else 
    $place[bb_13_bb_16]
    $endif
    $merge bb_13_bb_14 
    $endmerge
    iNsTr_90 := matrix_in
    ->(val) := iNsTr_90
    iNsTr_92 := ->(val)
    iNsTr_93 := ->(I)
    iNsTr_94 := ($cast ($uint<32>) iNsTr_93 )
    iNsTr_95 := (iNsTr_94 + ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    iNsTr_96 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_95 ) )
    iNsTr_97 := @(mem12[iNsTr_96])
    ->(iNsTr_97) := iNsTr_92
    $place[bb_14_bb_15]
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_102 := ->(I)
    iNsTr_103 := (iNsTr_102 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_103
    $place[bb_15_bb_13]
    $merge bb_13_bb_16 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_16_bb_17]
    $merge bb_16_bb_17 bb_19_bb_17 
    $endmerge
    iNsTr_106 := ->(I)
    iNsTr_107 := ($cast ($uint<32>) iNsTr_106 )
    iNsTr_108 := (($bitcast ($int<32>) iNsTr_107 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $if iNsTr_108 $then 
    $place[bb_17_bb_18]
    $else 
    $place[bb_17_bb_20]
    $endif
    $merge bb_17_bb_18 
    $endmerge
    iNsTr_111 := matrix_in
    ->(val) := iNsTr_111
    iNsTr_113 := ->(val)
    iNsTr_114 := ->(I)
    iNsTr_115 := ($cast ($uint<64>) iNsTr_114 )
    iNsTr_116 := @(mem21[iNsTr_115])
    ->(iNsTr_116) := iNsTr_113
    $place[bb_18_bb_19]
    $merge bb_18_bb_19 
    $endmerge
    iNsTr_130 := ->(I)
    iNsTr_131 := (iNsTr_130 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_131
    $place[bb_19_bb_17]
    $merge bb_17_bb_20 
    $endmerge
    iNsTr_119 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_120 := ->(iNsTr_119)
    iNsTr_121 := ($cast ($uint<32>) iNsTr_120 )
    iNsTr_122 := @(mem21[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_123 := ->(iNsTr_122)
    iNsTr_124 := ($cast ($uint<32>) iNsTr_123 )
    iNsTr_125 := (iNsTr_121 + iNsTr_124)
    iNsTr_126 := ($cast ($uint<16>) iNsTr_125 )
    ->(range) := iNsTr_126
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_20_bb_21]
    $merge bb_20_bb_21 bb_23_bb_21 
    $endmerge
    iNsTr_134 := ->(I)
    iNsTr_135 := ($cast ($uint<32>) iNsTr_134 )
    iNsTr_136 := ->(range)
    iNsTr_137 := ($cast ($uint<32>) iNsTr_136 )
    iNsTr_138 := (($bitcast ($int<32>) iNsTr_135 ) < ($bitcast ($int<32>) iNsTr_137 ))
    $if iNsTr_138 $then 
    $place[bb_21_bb_22]
    $else 
    $place[bb_21_bb_24]
    $endif
    $merge bb_21_bb_22 
    $endmerge
    iNsTr_142 := matrix_in
    ->(val) := iNsTr_142
    iNsTr_144 := ->(val)
    iNsTr_145 := ->(I)
    iNsTr_146 := ($cast ($uint<32>) iNsTr_145 )
    iNsTr_147 := (iNsTr_146 + ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    iNsTr_148 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_147 ) )
    iNsTr_149 := @(mem21[iNsTr_148])
    ->(iNsTr_149) := iNsTr_144
    $place[bb_22_bb_23]
    $merge bb_22_bb_23 
    $endmerge
    iNsTr_154 := ->(I)
    iNsTr_155 := (iNsTr_154 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_155
    $place[bb_23_bb_21]
    $merge bb_21_bb_24 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_24_bb_25]
    $merge bb_24_bb_25 bb_27_bb_25 
    $endmerge
    iNsTr_158 := ->(I)
    iNsTr_159 := ($cast ($uint<32>) iNsTr_158 )
    iNsTr_160 := (($bitcast ($int<32>) iNsTr_159 ) < ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000011  ) ))
    $if iNsTr_160 $then 
    $place[bb_25_bb_26]
    $else 
    $place[bb_25_bb_28]
    $endif
    $merge bb_25_bb_26 
    $endmerge
    iNsTr_163 := matrix_in
    ->(val) := iNsTr_163
    iNsTr_165 := ->(val)
    iNsTr_166 := ->(I)
    iNsTr_167 := ($cast ($uint<64>) iNsTr_166 )
    iNsTr_168 := @(mem22[iNsTr_167])
    ->(iNsTr_168) := iNsTr_165
    $place[bb_26_bb_27]
    $merge bb_26_bb_27 
    $endmerge
    iNsTr_182 := ->(I)
    iNsTr_183 := (iNsTr_182 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_183
    $place[bb_27_bb_25]
    $merge bb_25_bb_28 
    $endmerge
    iNsTr_171 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_172 := ->(iNsTr_171)
    iNsTr_173 := ($cast ($uint<32>) iNsTr_172 )
    iNsTr_174 := @(mem22[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_175 := ->(iNsTr_174)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_173 + iNsTr_176)
    iNsTr_178 := ($cast ($uint<16>) iNsTr_177 )
    ->(range) := iNsTr_178
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_28_bb_29]
    $merge bb_28_bb_29 bb_31_bb_29 
    $endmerge
    iNsTr_186 := ->(I)
    iNsTr_187 := ($cast ($uint<32>) iNsTr_186 )
    iNsTr_188 := ->(range)
    iNsTr_189 := ($cast ($uint<32>) iNsTr_188 )
    iNsTr_190 := (($bitcast ($int<32>) iNsTr_187 ) < ($bitcast ($int<32>) iNsTr_189 ))
    $if iNsTr_190 $then 
    $place[bb_29_bb_30]
    $else 
    $place[bb_29_bb_32]
    $endif
    $merge bb_29_bb_30 
    $endmerge
    iNsTr_194 := matrix_in
    ->(val) := iNsTr_194
    iNsTr_196 := ->(val)
    iNsTr_197 := ->(I)
    iNsTr_198 := ($cast ($uint<32>) iNsTr_197 )
    iNsTr_199 := (iNsTr_198 + ($bitcast ($uint<32>) _b00000000000000000000000000000011  ))
    iNsTr_200 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_199 ) )
    iNsTr_201 := @(mem22[iNsTr_200])
    ->(iNsTr_201) := iNsTr_196
    $place[bb_30_bb_31]
    $merge bb_30_bb_31 
    $endmerge
    iNsTr_205 := ->(I)
    iNsTr_206 := (iNsTr_205 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_206
    $place[bb_31_bb_29]
    $merge bb_29_bb_32 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initInputs]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  nitr_alloc : $uint<16> // memory space index = 107  base address = 0  word size = 16
    // can point into 
    $storage  SNR_alloc : $float<8,23> // memory space index = 108  base address = 0  word size = 32
    // can point into 
    $storage  Rate_alloc : $float<8,23> // memory space index = 109  base address = 0  word size = 32
    // can point into 
    nitr := @(nitr_alloc)
    SNR := @(SNR_alloc)
    Rate := @(Rate_alloc)
    iNsTr_1 := maxNitr_in
    ->(nitr) := iNsTr_1
    iNsTr_3 := ->(nitr)
    maxNitr := iNsTr_3
    iNsTr_6 := ebbyNo_in
    ->(SNR) := iNsTr_6
    iNsTr_8 := ->(SNR)
    ebbyNo := iNsTr_8
    $call initMem () () 
    iNsTr_12 := rate_in
    ->(Rate) := iNsTr_12
    iNsTr_14 := ->(Rate)
    rate := iNsTr_14
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeExtrinsicInfo11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 110  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(ext_info11[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeExtrinsicInfo12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 111  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(ext_info12[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeMessage11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 112  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_11)
    iNsTr_13 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_12 ) )
    iNsTr_14 := @(mem11[iNsTr_13])
    iNsTr_15 := ->(iNsTr_14)
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15 )
    iNsTr_17 := (iNsTr_16 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_18 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_17 ) )
    iNsTr_19 := @(aPriori1[iNsTr_18])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ->(I)
    iNsTr_22 := ($cast ($uint<64>) iNsTr_21 )
    iNsTr_23 := @(message11[iNsTr_22])
    ->(iNsTr_23) := iNsTr_20
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_28
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeMessage12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 113  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_11)
    iNsTr_13 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_12 ) )
    iNsTr_14 := @(mem12[iNsTr_13])
    iNsTr_15 := ->(iNsTr_14)
    iNsTr_16 := ($cast ($uint<32>) iNsTr_15 )
    iNsTr_17 := (iNsTr_16 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_18 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_17 ) )
    iNsTr_19 := @(aPriori2[iNsTr_18])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ->(I)
    iNsTr_22 := ($cast ($uint<64>) iNsTr_21 )
    iNsTr_23 := @(message12[iNsTr_22])
    ->(iNsTr_23) := iNsTr_20
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_27 := ->(I)
    iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_28
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeTransInfo11_12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 114  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(trans_info11_12[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initializeTransInfo12_11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 115  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(trans_info12_11[iNsTr_11])
    ->(iNsTr_12) := ($bitcast ($float<8,23>) _h0  )
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_16 := ->(I)
    iNsTr_17 := (iNsTr_16 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_17
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initialize_aPosteriori1]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 116  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(aPriori1[iNsTr_11])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ->(I)
    iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
    iNsTr_16 := @(aPosteriori1[iNsTr_15])
    ->(iNsTr_16) := iNsTr_13
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_20 := ->(I)
    iNsTr_21 := (iNsTr_20 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_21
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initialize_aPosteriori2]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 117  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(I)
    iNsTr_11 := ($cast ($uint<64>) iNsTr_10 )
    iNsTr_12 := @(aPriori2[iNsTr_11])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ->(I)
    iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
    iNsTr_16 := @(aPosteriori2[iNsTr_15])
    ->(iNsTr_16) := iNsTr_13
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_20 := ->(I)
    iNsTr_21 := (iNsTr_20 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_21
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initialize_aPriori1]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 118  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(code_block1[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := (($bitcast ($float<8,23>) _f-4.000000e+00 ) * iNsTr_12)
    iNsTr_14 := rate
    iNsTr_15 := ebbyNo
    iNsTr_16 := (iNsTr_14 * iNsTr_15)
    iNsTr_17 := (iNsTr_13 * iNsTr_16)
    iNsTr_18 := ->(I)
    iNsTr_19 := ($cast ($uint<64>) iNsTr_18 )
    iNsTr_20 := @(aPriori1[iNsTr_19])
    ->(iNsTr_20) := iNsTr_17
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_24 := ->(I)
    iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_25
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [initialize_aPriori2]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 119  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(code_block2[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := (($bitcast ($float<8,23>) _f-4.000000e+00 ) * iNsTr_12)
    iNsTr_14 := rate
    iNsTr_15 := ebbyNo
    iNsTr_16 := (iNsTr_14 * iNsTr_15)
    iNsTr_17 := (iNsTr_13 * iNsTr_16)
    iNsTr_18 := ->(I)
    iNsTr_19 := ($cast ($uint<64>) iNsTr_18 )
    iNsTr_20 := @(aPriori2[iNsTr_19])
    ->(iNsTr_20) := iNsTr_17
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_24 := ->(I)
    iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_25
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [readCodeBlock]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 120  base address = 0  word size = 16
    // can point into 
    $storage  code_bit_alloc : $float<8,23> // memory space index = 121  base address = 0  word size = 32
    // can point into 
    $storage  code_bit1_alloc : $float<8,23> // memory space index = 122  base address = 0  word size = 32
    // can point into 
    I := @(I_alloc)
    code_bit := @(code_bit_alloc)
    code_bit1 := @(code_bit1_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_11 := code_block_in
    ->(code_bit) := iNsTr_11
    iNsTr_13 := ->(code_bit)
    iNsTr_14 := ->(I)
    iNsTr_15 := ($cast ($uint<64>) iNsTr_14 )
    iNsTr_16 := @(code_block1[iNsTr_15])
    ->(iNsTr_16) := iNsTr_13
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_21 := ->(I)
    iNsTr_22 := (iNsTr_21 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_22
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_4_bb_5]
    $merge bb_4_bb_5 bb_7_bb_5 
    $endmerge
    iNsTr_25 := ->(I)
    iNsTr_26 := ($cast ($uint<32>) iNsTr_25 )
    iNsTr_27 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_28 := ->(iNsTr_27)
    iNsTr_29 := ($cast ($uint<32>) iNsTr_28 )
    iNsTr_30 := (($bitcast ($int<32>) iNsTr_26 ) < ($bitcast ($int<32>) iNsTr_29 ))
    $if iNsTr_30 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_8]
    $endif
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_34 := code_block_in
    ->(code_bit1) := iNsTr_34
    iNsTr_36 := ->(code_bit1)
    iNsTr_37 := ->(I)
    iNsTr_38 := ($cast ($uint<64>) iNsTr_37 )
    iNsTr_39 := @(code_block2[iNsTr_38])
    ->(iNsTr_39) := iNsTr_36
    $place[bb_6_bb_7]
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_43 := ->(I)
    iNsTr_44 := (iNsTr_43 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_44
    $place[bb_7_bb_5]
    $merge bb_5_bb_8 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [transverseCorrection11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 123  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 124  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 125  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_22_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_23]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem11[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem11[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem11[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_18]
    $endif
    $merge bb_5_bb_18 
    $endmerge
    iNsTr_78 := ->(range)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_79 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_80 $then 
    $place[bb_18_bb_19]
    $else 
    $place[bb_18_bb_20]
    $endif
    $merge bb_18_bb_19 
    $endmerge
    iNsTr_86 := ->(row)
    iNsTr_87 := ($cast ($uint<64>) iNsTr_86 )
    iNsTr_88 := @(trans_info12_11[iNsTr_87])
    iNsTr_89 := ->(iNsTr_88)
    iNsTr_90 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_91 := ->(iNsTr_90)
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91 )
    iNsTr_93 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_92)
    iNsTr_94 := ->(row)
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94 )
    iNsTr_96 := (iNsTr_93 + iNsTr_95)
    iNsTr_97 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_96 ) )
    iNsTr_98 := @(mem11[iNsTr_97])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (iNsTr_100 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_102 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_101 ) )
    iNsTr_103 := @(ext_info11[iNsTr_102])
    ->(iNsTr_103) := iNsTr_89
    $place[bb_19_bb_20]
    $merge bb_18_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_72 := ->(row)
    iNsTr_73 := ($cast ($uint<64>) iNsTr_72 )
    iNsTr_74 := @(trans_info12_11[iNsTr_73])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := (iNsTr_75 != ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_76 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_12]
    $endif
    $merge bb_6_bb_12 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_12_bb_13]
    $merge bb_6_bb_7 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_7_bb_8]
    $merge bb_10_bb_8 bb_7_bb_8 
    $endmerge
    iNsTr_107 := ->(col)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := ->(range)
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109 )
    iNsTr_111 := (($bitcast ($int<32>) iNsTr_108 ) < ($bitcast ($int<32>) iNsTr_110 ))
    $if iNsTr_111 $then 
    $place[bb_8_bb_9]
    $else 
    $place[bb_8_bb_11]
    $endif
    $merge bb_8_bb_9 
    $endmerge
    iNsTr_120 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_121 := ->(iNsTr_120)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_122)
    iNsTr_124 := ->(row)
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124 )
    iNsTr_126 := (iNsTr_123 + iNsTr_125)
    iNsTr_127 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_126 ) )
    iNsTr_128 := @(mem11[iNsTr_127])
    iNsTr_129 := ->(iNsTr_128)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_130 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_132 := ->(col)
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132 )
    iNsTr_134 := (iNsTr_131 + iNsTr_133)
    iNsTr_135 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_134 ) )
    iNsTr_136 := @(ext_info11[iNsTr_135])
    iNsTr_137 := ->(iNsTr_136)
    iNsTr_138 := ->(row)
    iNsTr_139 := ($cast ($uint<64>) iNsTr_138 )
    iNsTr_140 := @(trans_info12_11[iNsTr_139])
    iNsTr_141 := ->(iNsTr_140)
    $call modifyInfo (iNsTr_137 iNsTr_141 ) (iNsTr_142 ) 
    iNsTr_143 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_144 := ->(iNsTr_143)
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144 )
    iNsTr_146 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_145)
    iNsTr_147 := ->(row)
    iNsTr_148 := ($cast ($uint<32>) iNsTr_147 )
    iNsTr_149 := (iNsTr_146 + iNsTr_148)
    iNsTr_150 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_149 ) )
    iNsTr_151 := @(mem11[iNsTr_150])
    iNsTr_152 := ->(iNsTr_151)
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152 )
    iNsTr_154 := (iNsTr_153 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_155 := ->(col)
    iNsTr_156 := ($cast ($uint<32>) iNsTr_155 )
    iNsTr_157 := (iNsTr_154 + iNsTr_156)
    iNsTr_158 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_157 ) )
    iNsTr_159 := @(ext_info11[iNsTr_158])
    ->(iNsTr_159) := iNsTr_142
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_205 := ->(col)
    iNsTr_206 := (iNsTr_205 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_206
    $place[bb_10_bb_8]
    $merge bb_8_bb_11 
    $endmerge
    $place[bb_11_bb_17]
    $merge bb_12_bb_13 bb_15_bb_13 
    $endmerge
    iNsTr_113 := ->(col)
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113 )
    iNsTr_115 := ->(range)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := (($bitcast ($int<32>) iNsTr_114 ) < ($bitcast ($int<32>) iNsTr_116 ))
    $if iNsTr_117 $then 
    $place[bb_13_bb_14]
    $else 
    $place[bb_13_bb_16]
    $endif
    $merge bb_13_bb_14 
    $endmerge
    iNsTr_163 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_164 := ->(iNsTr_163)
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164 )
    iNsTr_166 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_165)
    iNsTr_167 := ->(row)
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167 )
    iNsTr_169 := (iNsTr_166 + iNsTr_168)
    iNsTr_170 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_169 ) )
    iNsTr_171 := @(mem11[iNsTr_170])
    iNsTr_172 := ->(iNsTr_171)
    iNsTr_173 := ($cast ($uint<32>) iNsTr_172 )
    iNsTr_174 := (iNsTr_173 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_175 := ->(col)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_174 + iNsTr_176)
    iNsTr_178 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_177 ) )
    iNsTr_179 := @(ext_info11[iNsTr_178])
    iNsTr_180 := ->(iNsTr_179)
    iNsTr_181 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_182 := ->(iNsTr_181)
    iNsTr_183 := ($cast ($uint<32>) iNsTr_182 )
    iNsTr_184 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_183)
    iNsTr_185 := ->(row)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (iNsTr_184 + iNsTr_186)
    iNsTr_188 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_187 ) )
    iNsTr_189 := @(mem11[iNsTr_188])
    iNsTr_190 := ->(iNsTr_189)
    iNsTr_191 := ($cast ($uint<32>) iNsTr_190 )
    iNsTr_192 := (iNsTr_191 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_193 := ->(col)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_192 + iNsTr_194)
    iNsTr_196 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_195 ) )
    iNsTr_197 := @(ext_info11[iNsTr_196])
    ->(iNsTr_197) := iNsTr_180
    $place[bb_14_bb_15]
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_210 := ->(col)
    iNsTr_211 := (iNsTr_210 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_211
    $place[bb_15_bb_13]
    $merge bb_13_bb_16 
    $endmerge
    $place[bb_16_bb_17]
    $merge bb_11_bb_17 bb_16_bb_17 
    $endmerge
    $place[bb_17_bb_21]
    $merge bb_17_bb_21 bb_20_bb_21 
    $endmerge
    $place[bb_21_bb_22]
    $merge bb_21_bb_22 
    $endmerge
    iNsTr_201 := ->(row)
    iNsTr_202 := (iNsTr_201 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_202
    $place[bb_22_bb_1]
    $merge bb_1_bb_23 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [update_aPosteriori11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 126  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(ext_info11[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := ->(I)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_14)
    iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_15 ) )
    iNsTr_17 := @(mem11[iNsTr_16])
    iNsTr_18 := ->(iNsTr_17)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18 )
    iNsTr_20 := (iNsTr_19 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_20 ) )
    iNsTr_22 := @(aPosteriori1[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := (iNsTr_23 + iNsTr_12)
    ->(iNsTr_22) := iNsTr_24
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_28 := ->(I)
    iNsTr_29 := (iNsTr_28 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_29
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [updateMessage11]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 127  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 128  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 129  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_10_bb_1 
    $endmerge
    iNsTr_2 := ->(row)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_11]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(row)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (iNsTr_14 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_16 := (iNsTr_11 == iNsTr_15)
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_38 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_39 := ->(iNsTr_38)
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39 )
    iNsTr_41 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_40)
    iNsTr_42 := ->(row)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (iNsTr_41 + iNsTr_43)
    iNsTr_45 := (iNsTr_44 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_46 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_45 ) )
    iNsTr_47 := @(mem11[iNsTr_46])
    iNsTr_48 := ->(iNsTr_47)
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48 )
    iNsTr_50 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_52)
    iNsTr_54 := ->(row)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (iNsTr_53 + iNsTr_55)
    iNsTr_57 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_56 ) )
    iNsTr_58 := @(mem11[iNsTr_57])
    iNsTr_59 := ->(iNsTr_58)
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59 )
    iNsTr_61 := (iNsTr_49 - iNsTr_60)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61 )
    ->(range) := iNsTr_62
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_19 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20 )
    iNsTr_22 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_24)
    iNsTr_26 := ->(row)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (iNsTr_25 + iNsTr_27)
    iNsTr_29 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_28 ) )
    iNsTr_30 := @(mem11[iNsTr_29])
    iNsTr_31 := ->(iNsTr_30)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    iNsTr_33 := (iNsTr_32 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_34 := (iNsTr_21 - iNsTr_33)
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34 )
    ->(range) := iNsTr_35
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_5_bb_6]
    $merge bb_5_bb_6 bb_8_bb_6 
    $endmerge
    iNsTr_67 := ->(col)
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67 )
    iNsTr_69 := ->(range)
    iNsTr_70 := ($cast ($uint<32>) iNsTr_69 )
    iNsTr_71 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) iNsTr_70 ))
    $if iNsTr_71 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_9]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_74 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75 )
    iNsTr_77 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_76)
    iNsTr_78 := ->(row)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_77 + iNsTr_79)
    iNsTr_81 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_80 ) )
    iNsTr_82 := @(mem11[iNsTr_81])
    iNsTr_83 := ->(iNsTr_82)
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83 )
    iNsTr_85 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_84)
    iNsTr_86 := (iNsTr_85 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_87 := ->(col)
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87 )
    iNsTr_89 := (iNsTr_86 + iNsTr_88)
    iNsTr_90 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_89 ) )
    iNsTr_91 := @(mem11[iNsTr_90])
    iNsTr_92 := ->(iNsTr_91)
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92 )
    iNsTr_94 := (iNsTr_93 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_95 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_94 ) )
    iNsTr_96 := @(aPosteriori1[iNsTr_95])
    iNsTr_97 := ->(iNsTr_96)
    iNsTr_98 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_100)
    iNsTr_102 := ->(row)
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102 )
    iNsTr_104 := (iNsTr_101 + iNsTr_103)
    iNsTr_105 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_104 ) )
    iNsTr_106 := @(mem11[iNsTr_105])
    iNsTr_107 := ->(iNsTr_106)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := (iNsTr_108 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_110 := ->(col)
    iNsTr_111 := ($cast ($uint<32>) iNsTr_110 )
    iNsTr_112 := (iNsTr_109 + iNsTr_111)
    iNsTr_113 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_112 ) )
    iNsTr_114 := @(ext_info11[iNsTr_113])
    iNsTr_115 := ->(iNsTr_114)
    iNsTr_116 := (iNsTr_97 - iNsTr_115)
    iNsTr_117 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_118 := ->(iNsTr_117)
    iNsTr_119 := ($cast ($uint<32>) iNsTr_118 )
    iNsTr_120 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_119)
    iNsTr_121 := ->(row)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (iNsTr_120 + iNsTr_122)
    iNsTr_124 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_123 ) )
    iNsTr_125 := @(mem11[iNsTr_124])
    iNsTr_126 := ->(iNsTr_125)
    iNsTr_127 := ($cast ($uint<32>) iNsTr_126 )
    iNsTr_128 := (iNsTr_127 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_129 := ->(col)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_128 + iNsTr_130)
    iNsTr_132 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_131 ) )
    iNsTr_133 := @(message11[iNsTr_132])
    ->(iNsTr_133) := iNsTr_116
    $place[bb_7_bb_8]
    $merge bb_7_bb_8 
    $endmerge
    iNsTr_137 := ->(col)
    iNsTr_138 := (iNsTr_137 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_138
    $place[bb_8_bb_6]
    $merge bb_6_bb_9 
    $endmerge
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_141 := ->(row)
    iNsTr_142 := (iNsTr_141 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_142
    $place[bb_10_bb_1]
    $merge bb_1_bb_11 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [top_daemon_1]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  nitr_1_alloc : $uint<8> // memory space index = 130  base address = 0  word size = 8
    // can point into 
    $storage  init_trans_info_alloc : $uint<8> // memory space index = 131  base address = 0  word size = 8
    // can point into 
    $storage  aPosteriori_update_phase2_done_alloc : $uint<8> // memory space index = 132  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_1_alloc : $uint<8> // memory space index = 133  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_from_2_alloc : $uint<8> // memory space index = 134  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_alloc : $uint<8> // memory space index = 135  base address = 0  word size = 8
    // can point into 
    $storage  read_message_21_modified_alloc : $uint<8> // memory space index = 136  base address = 0  word size = 8
    // can point into 
    $storage  K1_alloc : $uint<16> // memory space index = 137  base address = 0  word size = 16
    // can point into 
    $storage  K2_alloc : $uint<16> // memory space index = 138  base address = 0  word size = 16
    // can point into 
    nitr_1 := @(nitr_1_alloc)
    init_trans_info := @(init_trans_info_alloc)
    aPosteriori_update_phase2_done := @(aPosteriori_update_phase2_done_alloc)
    is_decoded_1 := @(is_decoded_1_alloc)
    is_decoded_from_2 := @(is_decoded_from_2_alloc)
    is_decoded := @(is_decoded_alloc)
    read_message_21_modified := @(read_message_21_modified_alloc)
    K1 := @(K1_alloc)
    K2 := @(K2_alloc)
    $call initInputs () () 
    $call readCodeBlock () () 
    reading_code_block_done := ($bitcast ($uint<8>) _b00000001  )
    $call initialize_aPriori1 () () 
    $call initializeMessage11 () () 
    message11_initialized := ($bitcast ($uint<8>) _b00000001  )
    ->(nitr_1) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_7_bb_1 
    $endmerge
    iNsTr_10 := ->(nitr_1)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := maxNitr
    iNsTr_13 := ($cast ($uint<32>) iNsTr_12 )
    iNsTr_14 := (($bitcast ($int<32>) iNsTr_11 ) < ($bitcast ($int<32>) iNsTr_13 ))
    $if iNsTr_14 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_xx_xloopexit]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    $call initialize_aPosteriori1 () () 
    $call initializeExtrinsicInfo11 () () 
    $call initializeTransInfo11_12 () () 
    $call checkNodeComputeEngine11 () () 
    trans_info11_12_calulation_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_23 := trans_info12_11_calulation_done
    ->(init_trans_info) := iNsTr_23
    $call transverseCorrection11 () () 
    $call update_aPosteriori11 () () 
    aPosteriori1_phase_1_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_30 := aPosteriori1_phase_2_done
    ->(aPosteriori_update_phase2_done) := iNsTr_30
    $call checkIsdecoded1 () (iNsTr_32 ) 
    ->(is_decoded_1) := iNsTr_32
    iNsTr_35 := is_decoded_2
    ->(is_decoded_from_2) := iNsTr_35
    iNsTr_37 := ->(is_decoded_1)
    iNsTr_38 := ($cast ($uint<32>) iNsTr_37 )
    iNsTr_39 := (($bitcast ($int<32>) iNsTr_38 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $if iNsTr_39 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_42 := ->(is_decoded_from_2)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($int<32>) iNsTr_43 ) != ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ))
    $place[bb_3_bb_4]
    $merge bb_2_bb_4 bb_3_bb_4 
    $phi iNsTr_46 := 			  ($cast ($uint<1>) ($bitcast ($uint<1>) _b0  ) ) $on bb_2_bb_4			  ($cast ($uint<1>) iNsTr_44 ) $on bb_3_bb_4 // type of target is $uint<1>
    $endmerge
    iNsTr_47 := ($cast ($uint<32>) iNsTr_46 )
    iNsTr_48 := ($cast ($uint<8>) iNsTr_47 )
    ->(is_decoded) := iNsTr_48
    iNsTr_50 := ->(is_decoded)
    is_decoded_d2 := iNsTr_50
    iNsTr_53 := ->(is_decoded)
    is_decoded_d3 := iNsTr_53
    iNsTr_56 := ->(is_decoded)
    is_decoded_d4 := iNsTr_56
    iNsTr_59 := ->(is_decoded)
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59 )
    iNsTr_61 := (iNsTr_60 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_61 $then 
    $place[bb_4_bb_5]
    $else 
    $place[bb_4_bb_6]
    $endif
    $merge bb_4_bb_5 
    $endmerge
    $place[bb_5_bb_9]
    $merge bb_4_bb_6 
    $endmerge
    $call updateMessage11 () () 
    $place[bb_6_bb_7]
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_76 := ->(nitr_1)
    iNsTr_77 := (iNsTr_76 + ($bitcast ($uint<8>) _b00000001  ))
    ->(nitr_1) := iNsTr_77
    message11_modified := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_82 := message21_modified
    ->(read_message_21_modified) := iNsTr_82
    $place[bb_7_bb_1]
    $merge bb_1_xx_xloopexit 
    $endmerge
    $place[xx_xloopexit_bb_9]
    $merge bb_5_bb_9 xx_xloopexit_bb_9 
    $endmerge
    $call bpsk_demodulate () () 
    ->(K1) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_9_bb_10]
    $merge bb_12_bb_10 bb_9_bb_10 
    $endmerge
    iNsTr_69 := ->(K1)
    iNsTr_70 := ($cast ($uint<32>) iNsTr_69 )
    iNsTr_71 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_72 := ->(iNsTr_71)
    iNsTr_73 := ($cast ($uint<32>) iNsTr_72 )
    iNsTr_74 := (($bitcast ($int<32>) iNsTr_70 ) < ($bitcast ($int<32>) iNsTr_73 ))
    $if iNsTr_74 $then 
    $place[bb_10_bb_11]
    $else 
    $place[bb_10_bb_13]
    $endif
    $merge bb_10_bb_11 
    $endmerge
    iNsTr_85 := ->(K1)
    iNsTr_86 := ($cast ($uint<64>) iNsTr_85 )
    iNsTr_87 := @(code_block1[iNsTr_86])
    iNsTr_88 := ->(iNsTr_87)
    code_block1_out := iNsTr_88
    $place[bb_11_bb_12]
    $merge bb_11_bb_12 
    $endmerge
    iNsTr_94 := ->(K1)
    iNsTr_95 := (iNsTr_94 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(K1) := iNsTr_95
    $place[bb_12_bb_10]
    $merge bb_10_bb_13 
    $endmerge
    ->(K2) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_13_bb_14]
    $merge bb_13_bb_14 bb_16_bb_14 
    $endmerge
    iNsTr_98 := ->(K2)
    iNsTr_99 := ($cast ($uint<32>) iNsTr_98 )
    iNsTr_100 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    iNsTr_101 := ->(iNsTr_100)
    iNsTr_102 := ($cast ($uint<32>) iNsTr_101 )
    iNsTr_103 := (($bitcast ($int<32>) iNsTr_99 ) < ($bitcast ($int<32>) iNsTr_102 ))
    $if iNsTr_103 $then 
    $place[bb_14_bb_15]
    $else 
    $place[bb_14_bb_17]
    $endif
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_105 := ->(K2)
    iNsTr_106 := ($cast ($uint<64>) iNsTr_105 )
    iNsTr_107 := @(code_block2[iNsTr_106])
    iNsTr_108 := ->(iNsTr_107)
    code_block2_out := iNsTr_108
    $place[bb_15_bb_16]
    $merge bb_15_bb_16 
    $endmerge
    iNsTr_113 := ->(K2)
    iNsTr_114 := (iNsTr_113 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(K2) := iNsTr_114
    $place[bb_16_bb_14]
    $merge bb_14_bb_17 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [transverseCorrection12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 139  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 140  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 141  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(range) := ($bitcast ($uint<16>) _b0000000000000000  )
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_22_bb_1 
    $endmerge
    iNsTr_5 := ->(row)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_8 := ->(iNsTr_7)
    iNsTr_9 := ($cast ($uint<32>) iNsTr_8 )
    iNsTr_10 := (($bitcast ($int<32>) iNsTr_6 ) < ($bitcast ($int<32>) iNsTr_9 ))
    $if iNsTr_10 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_23]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_13 := ->(row)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_16 := ->(iNsTr_15)
    iNsTr_17 := ($cast ($uint<32>) iNsTr_16 )
    iNsTr_18 := (iNsTr_17 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_19 := (iNsTr_14 == iNsTr_18)
    $if iNsTr_19 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_41 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_42 := ->(iNsTr_41)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_43)
    iNsTr_45 := ->(row)
    iNsTr_46 := ($cast ($uint<32>) iNsTr_45 )
    iNsTr_47 := (iNsTr_44 + iNsTr_46)
    iNsTr_48 := (iNsTr_47 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_49 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_48 ) )
    iNsTr_50 := @(mem12[iNsTr_49])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_54 := ->(iNsTr_53)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_55)
    iNsTr_57 := ->(row)
    iNsTr_58 := ($cast ($uint<32>) iNsTr_57 )
    iNsTr_59 := (iNsTr_56 + iNsTr_58)
    iNsTr_60 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_59 ) )
    iNsTr_61 := @(mem12[iNsTr_60])
    iNsTr_62 := ->(iNsTr_61)
    iNsTr_63 := ($cast ($uint<32>) iNsTr_62 )
    iNsTr_64 := (iNsTr_52 - iNsTr_63)
    iNsTr_65 := ($cast ($uint<16>) iNsTr_64 )
    ->(range) := iNsTr_65
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_22 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_26 := ->(iNsTr_25)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_27)
    iNsTr_29 := ->(row)
    iNsTr_30 := ($cast ($uint<32>) iNsTr_29 )
    iNsTr_31 := (iNsTr_28 + iNsTr_30)
    iNsTr_32 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_31 ) )
    iNsTr_33 := @(mem12[iNsTr_32])
    iNsTr_34 := ->(iNsTr_33)
    iNsTr_35 := ($cast ($uint<32>) iNsTr_34 )
    iNsTr_36 := (iNsTr_35 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_37 := (iNsTr_24 - iNsTr_36)
    iNsTr_38 := ($cast ($uint<16>) iNsTr_37 )
    ->(range) := iNsTr_38
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    iNsTr_68 := ->(range)
    iNsTr_69 := ($cast ($uint<32>) iNsTr_68 )
    iNsTr_70 := (($bitcast ($int<32>) iNsTr_69 ) > ($bitcast ($int<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000001  ) ))
    $if iNsTr_70 $then 
    $place[bb_5_bb_6]
    $else 
    $place[bb_5_bb_18]
    $endif
    $merge bb_5_bb_18 
    $endmerge
    iNsTr_78 := ->(range)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_79 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_80 $then 
    $place[bb_18_bb_19]
    $else 
    $place[bb_18_bb_20]
    $endif
    $merge bb_18_bb_19 
    $endmerge
    iNsTr_86 := ->(row)
    iNsTr_87 := ($cast ($uint<64>) iNsTr_86 )
    iNsTr_88 := @(trans_info11_12[iNsTr_87])
    iNsTr_89 := ->(iNsTr_88)
    iNsTr_90 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_91 := ->(iNsTr_90)
    iNsTr_92 := ($cast ($uint<32>) iNsTr_91 )
    iNsTr_93 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_92)
    iNsTr_94 := ->(row)
    iNsTr_95 := ($cast ($uint<32>) iNsTr_94 )
    iNsTr_96 := (iNsTr_93 + iNsTr_95)
    iNsTr_97 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_96 ) )
    iNsTr_98 := @(mem12[iNsTr_97])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (iNsTr_100 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_102 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_101 ) )
    iNsTr_103 := @(ext_info12[iNsTr_102])
    ->(iNsTr_103) := iNsTr_89
    $place[bb_19_bb_20]
    $merge bb_18_bb_20 bb_19_bb_20 
    $endmerge
    $place[bb_20_bb_21]
    $merge bb_5_bb_6 
    $endmerge
    iNsTr_72 := ->(row)
    iNsTr_73 := ($cast ($uint<64>) iNsTr_72 )
    iNsTr_74 := @(trans_info11_12[iNsTr_73])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := (iNsTr_75 != ($bitcast ($float<8,23>) _h0  ))
    $if iNsTr_76 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_12]
    $endif
    $merge bb_6_bb_12 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_12_bb_13]
    $merge bb_6_bb_7 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_7_bb_8]
    $merge bb_10_bb_8 bb_7_bb_8 
    $endmerge
    iNsTr_107 := ->(col)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := ->(range)
    iNsTr_110 := ($cast ($uint<32>) iNsTr_109 )
    iNsTr_111 := (($bitcast ($int<32>) iNsTr_108 ) < ($bitcast ($int<32>) iNsTr_110 ))
    $if iNsTr_111 $then 
    $place[bb_8_bb_9]
    $else 
    $place[bb_8_bb_11]
    $endif
    $merge bb_8_bb_9 
    $endmerge
    iNsTr_120 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_121 := ->(iNsTr_120)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_122)
    iNsTr_124 := ->(row)
    iNsTr_125 := ($cast ($uint<32>) iNsTr_124 )
    iNsTr_126 := (iNsTr_123 + iNsTr_125)
    iNsTr_127 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_126 ) )
    iNsTr_128 := @(mem12[iNsTr_127])
    iNsTr_129 := ->(iNsTr_128)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_130 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_132 := ->(col)
    iNsTr_133 := ($cast ($uint<32>) iNsTr_132 )
    iNsTr_134 := (iNsTr_131 + iNsTr_133)
    iNsTr_135 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_134 ) )
    iNsTr_136 := @(ext_info12[iNsTr_135])
    iNsTr_137 := ->(iNsTr_136)
    iNsTr_138 := ->(row)
    iNsTr_139 := ($cast ($uint<64>) iNsTr_138 )
    iNsTr_140 := @(trans_info11_12[iNsTr_139])
    iNsTr_141 := ->(iNsTr_140)
    $call modifyInfo (iNsTr_137 iNsTr_141 ) (iNsTr_142 ) 
    iNsTr_143 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_144 := ->(iNsTr_143)
    iNsTr_145 := ($cast ($uint<32>) iNsTr_144 )
    iNsTr_146 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_145)
    iNsTr_147 := ->(row)
    iNsTr_148 := ($cast ($uint<32>) iNsTr_147 )
    iNsTr_149 := (iNsTr_146 + iNsTr_148)
    iNsTr_150 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_149 ) )
    iNsTr_151 := @(mem12[iNsTr_150])
    iNsTr_152 := ->(iNsTr_151)
    iNsTr_153 := ($cast ($uint<32>) iNsTr_152 )
    iNsTr_154 := (iNsTr_153 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_155 := ->(col)
    iNsTr_156 := ($cast ($uint<32>) iNsTr_155 )
    iNsTr_157 := (iNsTr_154 + iNsTr_156)
    iNsTr_158 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_157 ) )
    iNsTr_159 := @(ext_info12[iNsTr_158])
    ->(iNsTr_159) := iNsTr_142
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_205 := ->(col)
    iNsTr_206 := (iNsTr_205 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_206
    $place[bb_10_bb_8]
    $merge bb_8_bb_11 
    $endmerge
    $place[bb_11_bb_17]
    $merge bb_12_bb_13 bb_15_bb_13 
    $endmerge
    iNsTr_113 := ->(col)
    iNsTr_114 := ($cast ($uint<32>) iNsTr_113 )
    iNsTr_115 := ->(range)
    iNsTr_116 := ($cast ($uint<32>) iNsTr_115 )
    iNsTr_117 := (($bitcast ($int<32>) iNsTr_114 ) < ($bitcast ($int<32>) iNsTr_116 ))
    $if iNsTr_117 $then 
    $place[bb_13_bb_14]
    $else 
    $place[bb_13_bb_16]
    $endif
    $merge bb_13_bb_14 
    $endmerge
    iNsTr_163 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_164 := ->(iNsTr_163)
    iNsTr_165 := ($cast ($uint<32>) iNsTr_164 )
    iNsTr_166 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_165)
    iNsTr_167 := ->(row)
    iNsTr_168 := ($cast ($uint<32>) iNsTr_167 )
    iNsTr_169 := (iNsTr_166 + iNsTr_168)
    iNsTr_170 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_169 ) )
    iNsTr_171 := @(mem12[iNsTr_170])
    iNsTr_172 := ->(iNsTr_171)
    iNsTr_173 := ($cast ($uint<32>) iNsTr_172 )
    iNsTr_174 := (iNsTr_173 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_175 := ->(col)
    iNsTr_176 := ($cast ($uint<32>) iNsTr_175 )
    iNsTr_177 := (iNsTr_174 + iNsTr_176)
    iNsTr_178 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_177 ) )
    iNsTr_179 := @(ext_info12[iNsTr_178])
    iNsTr_180 := ->(iNsTr_179)
    iNsTr_181 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_182 := ->(iNsTr_181)
    iNsTr_183 := ($cast ($uint<32>) iNsTr_182 )
    iNsTr_184 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_183)
    iNsTr_185 := ->(row)
    iNsTr_186 := ($cast ($uint<32>) iNsTr_185 )
    iNsTr_187 := (iNsTr_184 + iNsTr_186)
    iNsTr_188 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_187 ) )
    iNsTr_189 := @(mem12[iNsTr_188])
    iNsTr_190 := ->(iNsTr_189)
    iNsTr_191 := ($cast ($uint<32>) iNsTr_190 )
    iNsTr_192 := (iNsTr_191 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_193 := ->(col)
    iNsTr_194 := ($cast ($uint<32>) iNsTr_193 )
    iNsTr_195 := (iNsTr_192 + iNsTr_194)
    iNsTr_196 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_195 ) )
    iNsTr_197 := @(ext_info12[iNsTr_196])
    ->(iNsTr_197) := iNsTr_180
    $place[bb_14_bb_15]
    $merge bb_14_bb_15 
    $endmerge
    iNsTr_210 := ->(col)
    iNsTr_211 := (iNsTr_210 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_211
    $place[bb_15_bb_13]
    $merge bb_13_bb_16 
    $endmerge
    $place[bb_16_bb_17]
    $merge bb_11_bb_17 bb_16_bb_17 
    $endmerge
    $place[bb_17_bb_21]
    $merge bb_17_bb_21 bb_20_bb_21 
    $endmerge
    $place[bb_21_bb_22]
    $merge bb_21_bb_22 
    $endmerge
    iNsTr_201 := ->(row)
    iNsTr_202 := (iNsTr_201 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_202
    $place[bb_22_bb_1]
    $merge bb_1_bb_23 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [update_aPosteriori12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  I_alloc : $uint<16> // memory space index = 142  base address = 0  word size = 16
    // can point into 
    I := @(I_alloc)
    ->(I) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_3_bb_1 
    $endmerge
    iNsTr_2 := ->(I)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_4]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_9 := ->(I)
    iNsTr_10 := ($cast ($uint<64>) iNsTr_9 )
    iNsTr_11 := @(ext_info12[iNsTr_10])
    iNsTr_12 := ->(iNsTr_11)
    iNsTr_13 := ->(I)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_14)
    iNsTr_16 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_15 ) )
    iNsTr_17 := @(mem12[iNsTr_16])
    iNsTr_18 := ->(iNsTr_17)
    iNsTr_19 := ($cast ($uint<32>) iNsTr_18 )
    iNsTr_20 := (iNsTr_19 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_21 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_20 ) )
    iNsTr_22 := @(aPosteriori2[iNsTr_21])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := (iNsTr_23 + iNsTr_12)
    ->(iNsTr_22) := iNsTr_24
    $place[bb_2_bb_3]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_28 := ->(I)
    iNsTr_29 := (iNsTr_28 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(I) := iNsTr_29
    $place[bb_3_bb_1]
    $merge bb_1_bb_4 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [updateMessage12]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  row_alloc : $uint<16> // memory space index = 143  base address = 0  word size = 16
    // can point into 
    $storage  col_alloc : $uint<16> // memory space index = 144  base address = 0  word size = 16
    // can point into 
    $storage  range_alloc : $uint<16> // memory space index = 145  base address = 0  word size = 16
    // can point into 
    row := @(row_alloc)
    col := @(col_alloc)
    range := @(range_alloc)
    ->(row) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_10_bb_1 
    $endmerge
    iNsTr_2 := ->(row)
    iNsTr_3 := ($cast ($uint<32>) iNsTr_2 )
    iNsTr_4 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_5 := ->(iNsTr_4)
    iNsTr_6 := ($cast ($uint<32>) iNsTr_5 )
    iNsTr_7 := (($bitcast ($int<32>) iNsTr_3 ) < ($bitcast ($int<32>) iNsTr_6 ))
    $if iNsTr_7 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_bb_11]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    iNsTr_10 := ->(row)
    iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    iNsTr_12 := @(mem11[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    iNsTr_13 := ->(iNsTr_12)
    iNsTr_14 := ($cast ($uint<32>) iNsTr_13 )
    iNsTr_15 := (iNsTr_14 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_16 := (iNsTr_11 == iNsTr_15)
    $if iNsTr_16 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_4 
    $endmerge
    iNsTr_38 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_39 := ->(iNsTr_38)
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39 )
    iNsTr_41 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_40)
    iNsTr_42 := ->(row)
    iNsTr_43 := ($cast ($uint<32>) iNsTr_42 )
    iNsTr_44 := (iNsTr_41 + iNsTr_43)
    iNsTr_45 := (iNsTr_44 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_46 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_45 ) )
    iNsTr_47 := @(mem12[iNsTr_46])
    iNsTr_48 := ->(iNsTr_47)
    iNsTr_49 := ($cast ($uint<32>) iNsTr_48 )
    iNsTr_50 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_51 := ->(iNsTr_50)
    iNsTr_52 := ($cast ($uint<32>) iNsTr_51 )
    iNsTr_53 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_52)
    iNsTr_54 := ->(row)
    iNsTr_55 := ($cast ($uint<32>) iNsTr_54 )
    iNsTr_56 := (iNsTr_53 + iNsTr_55)
    iNsTr_57 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_56 ) )
    iNsTr_58 := @(mem12[iNsTr_57])
    iNsTr_59 := ->(iNsTr_58)
    iNsTr_60 := ($cast ($uint<32>) iNsTr_59 )
    iNsTr_61 := (iNsTr_49 - iNsTr_60)
    iNsTr_62 := ($cast ($uint<16>) iNsTr_61 )
    ->(range) := iNsTr_62
    $place[bb_4_bb_5]
    $merge bb_2_bb_3 
    $endmerge
    iNsTr_19 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_20 := ->(iNsTr_19)
    iNsTr_21 := ($cast ($uint<32>) iNsTr_20 )
    iNsTr_22 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_23 := ->(iNsTr_22)
    iNsTr_24 := ($cast ($uint<32>) iNsTr_23 )
    iNsTr_25 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_24)
    iNsTr_26 := ->(row)
    iNsTr_27 := ($cast ($uint<32>) iNsTr_26 )
    iNsTr_28 := (iNsTr_25 + iNsTr_27)
    iNsTr_29 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_28 ) )
    iNsTr_30 := @(mem12[iNsTr_29])
    iNsTr_31 := ->(iNsTr_30)
    iNsTr_32 := ($cast ($uint<32>) iNsTr_31 )
    iNsTr_33 := (iNsTr_32 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_34 := (iNsTr_21 - iNsTr_33)
    iNsTr_35 := ($cast ($uint<16>) iNsTr_34 )
    ->(range) := iNsTr_35
    $place[bb_3_bb_5]
    $merge bb_3_bb_5 bb_4_bb_5 
    $endmerge
    ->(col) := ($bitcast ($uint<16>) _b0000000000000000  )
    $place[bb_5_bb_6]
    $merge bb_5_bb_6 bb_8_bb_6 
    $endmerge
    iNsTr_67 := ->(col)
    iNsTr_68 := ($cast ($uint<32>) iNsTr_67 )
    iNsTr_69 := ->(range)
    iNsTr_70 := ($cast ($uint<32>) iNsTr_69 )
    iNsTr_71 := (($bitcast ($int<32>) iNsTr_68 ) < ($bitcast ($int<32>) iNsTr_70 ))
    $if iNsTr_71 $then 
    $place[bb_6_bb_7]
    $else 
    $place[bb_6_bb_9]
    $endif
    $merge bb_6_bb_7 
    $endmerge
    iNsTr_74 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_75 := ->(iNsTr_74)
    iNsTr_76 := ($cast ($uint<32>) iNsTr_75 )
    iNsTr_77 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_76)
    iNsTr_78 := ->(row)
    iNsTr_79 := ($cast ($uint<32>) iNsTr_78 )
    iNsTr_80 := (iNsTr_77 + iNsTr_79)
    iNsTr_81 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_80 ) )
    iNsTr_82 := @(mem12[iNsTr_81])
    iNsTr_83 := ->(iNsTr_82)
    iNsTr_84 := ($cast ($uint<32>) iNsTr_83 )
    iNsTr_85 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_84)
    iNsTr_86 := (iNsTr_85 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_87 := ->(col)
    iNsTr_88 := ($cast ($uint<32>) iNsTr_87 )
    iNsTr_89 := (iNsTr_86 + iNsTr_88)
    iNsTr_90 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_89 ) )
    iNsTr_91 := @(mem12[iNsTr_90])
    iNsTr_92 := ->(iNsTr_91)
    iNsTr_93 := ($cast ($uint<32>) iNsTr_92 )
    iNsTr_94 := (iNsTr_93 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_95 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_94 ) )
    iNsTr_96 := @(aPosteriori2[iNsTr_95])
    iNsTr_97 := ->(iNsTr_96)
    iNsTr_98 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_99 := ->(iNsTr_98)
    iNsTr_100 := ($cast ($uint<32>) iNsTr_99 )
    iNsTr_101 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_100)
    iNsTr_102 := ->(row)
    iNsTr_103 := ($cast ($uint<32>) iNsTr_102 )
    iNsTr_104 := (iNsTr_101 + iNsTr_103)
    iNsTr_105 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_104 ) )
    iNsTr_106 := @(mem12[iNsTr_105])
    iNsTr_107 := ->(iNsTr_106)
    iNsTr_108 := ($cast ($uint<32>) iNsTr_107 )
    iNsTr_109 := (iNsTr_108 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_110 := ->(col)
    iNsTr_111 := ($cast ($uint<32>) iNsTr_110 )
    iNsTr_112 := (iNsTr_109 + iNsTr_111)
    iNsTr_113 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_112 ) )
    iNsTr_114 := @(ext_info12[iNsTr_113])
    iNsTr_115 := ->(iNsTr_114)
    iNsTr_116 := (iNsTr_97 - iNsTr_115)
    iNsTr_117 := @(mem12[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    iNsTr_118 := ->(iNsTr_117)
    iNsTr_119 := ($cast ($uint<32>) iNsTr_118 )
    iNsTr_120 := (($bitcast ($uint<32>) _b00000000000000000000000000000011  ) + iNsTr_119)
    iNsTr_121 := ->(row)
    iNsTr_122 := ($cast ($uint<32>) iNsTr_121 )
    iNsTr_123 := (iNsTr_120 + iNsTr_122)
    iNsTr_124 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_123 ) )
    iNsTr_125 := @(mem12[iNsTr_124])
    iNsTr_126 := ->(iNsTr_125)
    iNsTr_127 := ($cast ($uint<32>) iNsTr_126 )
    iNsTr_128 := (iNsTr_127 - ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    iNsTr_129 := ->(col)
    iNsTr_130 := ($cast ($uint<32>) iNsTr_129 )
    iNsTr_131 := (iNsTr_128 + iNsTr_130)
    iNsTr_132 := ($bitcast ($uint<64>) ($cast ($int<64>) iNsTr_131 ) )
    iNsTr_133 := @(message12[iNsTr_132])
    ->(iNsTr_133) := iNsTr_116
    $place[bb_7_bb_8]
    $merge bb_7_bb_8 
    $endmerge
    iNsTr_137 := ->(col)
    iNsTr_138 := (iNsTr_137 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(col) := iNsTr_138
    $place[bb_8_bb_6]
    $merge bb_6_bb_9 
    $endmerge
    $place[bb_9_bb_10]
    $merge bb_9_bb_10 
    $endmerge
    iNsTr_141 := ->(row)
    iNsTr_142 := (iNsTr_141 + ($bitcast ($uint<16>) _b0000000000000001  ))
    ->(row) := iNsTr_142
    $place[bb_10_bb_1]
    $merge bb_1_bb_11 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
$module [top_daemon_2]
$in ()
$out ()
$is
{
  $branchblock [body]
  {
    $storage  init_mat_alloc : $uint<8> // memory space index = 146  base address = 0  word size = 8
    // can point into 
    $storage  nitr_2_alloc : $uint<8> // memory space index = 147  base address = 0  word size = 8
    // can point into 
    $storage  init_trans_info_alloc : $uint<8> // memory space index = 148  base address = 0  word size = 8
    // can point into 
    $storage  aPosteriori_update_phase2_done_alloc : $uint<8> // memory space index = 149  base address = 0  word size = 8
    // can point into 
    $storage  find_is_decoded_2_alloc : $uint<8> // memory space index = 150  base address = 0  word size = 8
    // can point into 
    $storage  is_decoded_alloc : $uint<8> // memory space index = 151  base address = 0  word size = 8
    // can point into 
    $storage  read_message_22_modified_alloc : $uint<8> // memory space index = 152  base address = 0  word size = 8
    // can point into 
    init_mat := @(init_mat_alloc)
    nitr_2 := @(nitr_2_alloc)
    init_trans_info := @(init_trans_info_alloc)
    aPosteriori_update_phase2_done := @(aPosteriori_update_phase2_done_alloc)
    find_is_decoded_2 := @(find_is_decoded_2_alloc)
    is_decoded := @(is_decoded_alloc)
    read_message_22_modified := @(read_message_22_modified_alloc)
    iNsTr_1 := reading_code_block_done
    ->(init_mat) := iNsTr_1
    $call initialize_aPriori2 () () 
    $call initializeMessage12 () () 
    message12_initialized := ($bitcast ($uint<8>) _b00000001  )
    ->(nitr_2) := ($bitcast ($uint<8>) _b00000001  )
    $place[bb_0_bb_1]
    $merge bb_0_bb_1 bb_5_bb_1 
    $endmerge
    iNsTr_9 := ->(nitr_2)
    iNsTr_10 := ($cast ($uint<32>) iNsTr_9 )
    iNsTr_11 := maxNitr
    iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
    iNsTr_13 := (($bitcast ($int<32>) iNsTr_10 ) < ($bitcast ($int<32>) iNsTr_12 ))
    $if iNsTr_13 $then 
    $place[bb_1_bb_2]
    $else 
    $place[bb_1_xx_xloopexit]
    $endif
    $merge bb_1_bb_2 
    $endmerge
    $call initialize_aPosteriori2 () () 
    $call initializeExtrinsicInfo12 () () 
    $call initializeTransInfo12_11 () () 
    $call checkNodeComputeEngine12 () () 
    trans_info12_11_calulation_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_22 := trans_info11_12_calulation_done
    ->(init_trans_info) := iNsTr_22
    $call transverseCorrection12 () () 
    $call update_aPosteriori12 () () 
    aPosteriori2_phase_1_done := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_29 := aPosteriori2_phase_2_done
    ->(aPosteriori_update_phase2_done) := iNsTr_29
    $call checkIsdecoded2 () (iNsTr_31 ) 
    ->(find_is_decoded_2) := iNsTr_31
    iNsTr_33 := ->(find_is_decoded_2)
    is_decoded_2 := iNsTr_33
    iNsTr_37 := is_decoded_d2
    ->(is_decoded) := iNsTr_37
    iNsTr_39 := ->(is_decoded)
    iNsTr_40 := ($cast ($uint<32>) iNsTr_39 )
    iNsTr_41 := (iNsTr_40 == ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    $if iNsTr_41 $then 
    $place[bb_2_bb_3]
    $else 
    $place[bb_2_bb_4]
    $endif
    $merge bb_2_bb_3 
    $endmerge
    $place[bb_3_bb_7]
    $merge bb_2_bb_4 
    $endmerge
    $call updateMessage12 () () 
    $place[bb_4_bb_5]
    $merge bb_4_bb_5 
    $endmerge
    iNsTr_48 := ->(nitr_2)
    iNsTr_49 := (iNsTr_48 + ($bitcast ($uint<8>) _b00000001  ))
    ->(nitr_2) := iNsTr_49
    message12_modified := ($bitcast ($uint<8>) _b00000001  )
    iNsTr_54 := message22_modified
    ->(read_message_22_modified) := iNsTr_54
    $place[bb_5_bb_1]
    $merge bb_1_xx_xloopexit 
    $endmerge
    $place[xx_xloopexit_bb_7]
    $merge bb_3_bb_7 xx_xloopexit_bb_7 
    $endmerge
    $place[return__]
    $merge return__ 
    $endmerge
  }
}
// Memory space 0: aPosteriori1 
// Memory space 1: aPosteriori2 
// Memory space 2: aPriori1 
// Memory space 3: aPriori2 
// Memory space 4: code_block1 
// Memory space 5: code_block2 
// Memory space 6: ebbyNo 
// Memory space 7: ext_info11 
// Memory space 8: ext_info12 
// Memory space 9: ext_info21 
// Memory space 10: ext_info22 
// Memory space 11: maxNitr 
// Memory space 12: mem11 
// Memory space 13: mem12 
// Memory space 14: mem21 
// Memory space 15: mem22 
// Memory space 16: message11 
// Memory space 17: message12 
// Memory space 18: message21 
// Memory space 19: message22 
// Memory space 20: rate 
// Memory space 21: trans_info11_12 
// Memory space 22: trans_info12_11 
// Memory space 23: trans_info21_22 
// Memory space 24: trans_info22_21 
// Memory space 25: %absf%body:iNsTr_0_alloc 
// Memory space 26: %absf%body:ret_alloc 
// Memory space 27: %bpsk_demodulate%body:I_alloc 
// Memory space 28: %checkIsdecoded1%body:is_decoded_alloc 
// Memory space 29: %checkIsdecoded1%body:I_alloc 
// Memory space 30: %checkIsdecoded2%body:is_decoded_alloc 
// Memory space 31: %checkIsdecoded2%body:I_alloc 
// Memory space 32: %modifyInfo%body:iNsTr_0_alloc 
// Memory space 33: %modifyInfo%body:iNsTr_1_alloc 
// Memory space 34: %modifyInfo%body:sign_alloc 
// Memory space 35: %modifyInfo%body:magnitude_alloc 
// Memory space 36: %checkNodeComputeEngine11%body:row_alloc 
// Memory space 37: %checkNodeComputeEngine11%body:col_alloc 
// Memory space 38: %checkNodeComputeEngine11%body:range_alloc 
// Memory space 39: %checkNodeComputeEngine11%body:I_alloc 
// Memory space 40: %checkNodeComputeEngine11%body:val_alloc 
// Memory space 41: %checkNodeComputeEngine11%body:flag_alloc 
// Memory space 42: %checkNodeComputeEngine11%body:exor_alloc 
// Memory space 43: %checkNodeComputeEngine11%body:sign_alloc 
// Memory space 44: %checkNodeComputeEngine11%body:index_alloc 
// Memory space 45: %checkNodeComputeEngine12%body:row_alloc 
// Memory space 46: %checkNodeComputeEngine12%body:col_alloc 
// Memory space 47: %checkNodeComputeEngine12%body:range_alloc 
// Memory space 48: %checkNodeComputeEngine12%body:I_alloc 
// Memory space 49: %checkNodeComputeEngine12%body:val_alloc 
// Memory space 50: %checkNodeComputeEngine12%body:flag_alloc 
// Memory space 51: %checkNodeComputeEngine12%body:exor_alloc 
// Memory space 52: %checkNodeComputeEngine12%body:sign_alloc 
// Memory space 53: %checkNodeComputeEngine12%body:index_alloc 
// Memory space 54: %checkNodeComputeEngine21%body:row_alloc 
// Memory space 55: %checkNodeComputeEngine21%body:col_alloc 
// Memory space 56: %checkNodeComputeEngine21%body:range_alloc 
// Memory space 57: %checkNodeComputeEngine21%body:I_alloc 
// Memory space 58: %checkNodeComputeEngine21%body:val_alloc 
// Memory space 59: %checkNodeComputeEngine21%body:flag_alloc 
// Memory space 60: %checkNodeComputeEngine21%body:exor_alloc 
// Memory space 61: %checkNodeComputeEngine21%body:sign_alloc 
// Memory space 62: %checkNodeComputeEngine21%body:index_alloc 
// Memory space 63: %checkNodeComputeEngine22%body:row_alloc 
// Memory space 64: %checkNodeComputeEngine22%body:col_alloc 
// Memory space 65: %checkNodeComputeEngine22%body:range_alloc 
// Memory space 66: %checkNodeComputeEngine22%body:I_alloc 
// Memory space 67: %checkNodeComputeEngine22%body:val_alloc 
// Memory space 68: %checkNodeComputeEngine22%body:flag_alloc 
// Memory space 69: %checkNodeComputeEngine22%body:exor_alloc 
// Memory space 70: %checkNodeComputeEngine22%body:sign_alloc 
// Memory space 71: %checkNodeComputeEngine22%body:index_alloc 
// Memory space 72: %initializeMessage21%body:I_alloc 
// Memory space 73: %initializeExtrinsicInfo21%body:I_alloc 
// Memory space 74: %initializeTransInfo21_22%body:I_alloc 
// Memory space 75: %transverseCorrection21%body:row_alloc 
// Memory space 76: %transverseCorrection21%body:col_alloc 
// Memory space 77: %transverseCorrection21%body:range_alloc 
// Memory space 78: %update_aPosteriori21%body:I_alloc 
// Memory space 79: %updateMessage21%body:row_alloc 
// Memory space 80: %updateMessage21%body:col_alloc 
// Memory space 81: %updateMessage21%body:range_alloc 
// Memory space 82: %daemon_3%body:init_aPriori1_alloc 
// Memory space 83: %daemon_3%body:nitr_3_alloc 
// Memory space 84: %daemon_3%body:trans_info_computed_alloc 
// Memory space 85: %daemon_3%body:aPosteriori_update_phase1_done_alloc 
// Memory space 86: %daemon_3%body:is_decoded_alloc 
// Memory space 87: %daemon_3%body:read_message11_modified_alloc 
// Memory space 88: %initializeMessage22%body:I_alloc 
// Memory space 89: %initializeExtrinsicInfo22%body:I_alloc 
// Memory space 90: %initializeTransInfo22_21%body:I_alloc 
// Memory space 91: %transverseCorrection22%body:row_alloc 
// Memory space 92: %transverseCorrection22%body:col_alloc 
// Memory space 93: %transverseCorrection22%body:range_alloc 
// Memory space 94: %update_aPosteriori22%body:I_alloc 
// Memory space 95: %updateMessage22%body:row_alloc 
// Memory space 96: %updateMessage22%body:col_alloc 
// Memory space 97: %updateMessage22%body:range_alloc 
// Memory space 98: %daemon_4%body:init_aPriori2_alloc 
// Memory space 99: %daemon_4%body:nitr_4_alloc 
// Memory space 100: %daemon_4%body:trans_info_computed_alloc 
// Memory space 101: %daemon_4%body:aPosteriori_update_phase1_done_alloc 
// Memory space 102: %daemon_4%body:is_decoded_alloc 
// Memory space 103: %daemon_4%body:read_message12_modified_alloc 
// Memory space 104: %initMem%body:I_alloc 
// Memory space 105: %initMem%body:val_alloc 
// Memory space 106: %initMem%body:range_alloc 
// Memory space 107: %initInputs%body:nitr_alloc 
// Memory space 108: %initInputs%body:SNR_alloc 
// Memory space 109: %initInputs%body:Rate_alloc 
// Memory space 110: %initializeExtrinsicInfo11%body:I_alloc 
// Memory space 111: %initializeExtrinsicInfo12%body:I_alloc 
// Memory space 112: %initializeMessage11%body:I_alloc 
// Memory space 113: %initializeMessage12%body:I_alloc 
// Memory space 114: %initializeTransInfo11_12%body:I_alloc 
// Memory space 115: %initializeTransInfo12_11%body:I_alloc 
// Memory space 116: %initialize_aPosteriori1%body:I_alloc 
// Memory space 117: %initialize_aPosteriori2%body:I_alloc 
// Memory space 118: %initialize_aPriori1%body:I_alloc 
// Memory space 119: %initialize_aPriori2%body:I_alloc 
// Memory space 120: %readCodeBlock%body:I_alloc 
// Memory space 121: %readCodeBlock%body:code_bit_alloc 
// Memory space 122: %readCodeBlock%body:code_bit1_alloc 
// Memory space 123: %transverseCorrection11%body:row_alloc 
// Memory space 124: %transverseCorrection11%body:col_alloc 
// Memory space 125: %transverseCorrection11%body:range_alloc 
// Memory space 126: %update_aPosteriori11%body:I_alloc 
// Memory space 127: %updateMessage11%body:row_alloc 
// Memory space 128: %updateMessage11%body:col_alloc 
// Memory space 129: %updateMessage11%body:range_alloc 
// Memory space 130: %top_daemon_1%body:nitr_1_alloc 
// Memory space 131: %top_daemon_1%body:init_trans_info_alloc 
// Memory space 132: %top_daemon_1%body:aPosteriori_update_phase2_done_alloc 
// Memory space 133: %top_daemon_1%body:is_decoded_1_alloc 
// Memory space 134: %top_daemon_1%body:is_decoded_from_2_alloc 
// Memory space 135: %top_daemon_1%body:is_decoded_alloc 
// Memory space 136: %top_daemon_1%body:read_message_21_modified_alloc 
// Memory space 137: %top_daemon_1%body:K1_alloc 
// Memory space 138: %top_daemon_1%body:K2_alloc 
// Memory space 139: %transverseCorrection12%body:row_alloc 
// Memory space 140: %transverseCorrection12%body:col_alloc 
// Memory space 141: %transverseCorrection12%body:range_alloc 
// Memory space 142: %update_aPosteriori12%body:I_alloc 
// Memory space 143: %updateMessage12%body:row_alloc 
// Memory space 144: %updateMessage12%body:col_alloc 
// Memory space 145: %updateMessage12%body:range_alloc 
// Memory space 146: %top_daemon_2%body:init_mat_alloc 
// Memory space 147: %top_daemon_2%body:nitr_2_alloc 
// Memory space 148: %top_daemon_2%body:init_trans_info_alloc 
// Memory space 149: %top_daemon_2%body:aPosteriori_update_phase2_done_alloc 
// Memory space 150: %top_daemon_2%body:find_is_decoded_2_alloc 
// Memory space 151: %top_daemon_2%body:is_decoded_alloc 
// Memory space 152: %top_daemon_2%body:read_message_22_modified_alloc 
