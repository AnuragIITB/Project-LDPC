// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  code_block_decoded : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [code_block_decoded] 32 $depth 1 
// $pipe  code_block_in : $float<8,23>  $depth 2 
// can point into 
// in scope  top-level
$pipe [code_block_in] 32 $depth 2 
// $pipe  ebbyNo_in : $float<8,23>  $depth 2 
// can point into 
// in scope  top-level
$pipe [ebbyNo_in] 32 $depth 2 
// $pipe  matrix_in : $uint<16>  $depth 2 
// can point into 
// in scope  top-level
$pipe [matrix_in] 16 $depth 2 
// $pipe  maxNitr_in : $uint<16>  $depth 2 
// can point into 
// in scope  top-level
$pipe [maxNitr_in] 16 $depth 2 
// $pipe  nitr_required : $uint<16>  $depth 1 
// can point into 
// in scope  top-level
$pipe [nitr_required] 16 $depth 1 
// $pipe  rate_in : $float<8,23>  $depth 2 
// can point into 
// in scope  top-level
$pipe [rate_in] 32 $depth 2 
// load store constants for object Nitr_required
$constant $W[Nitr_required_base_address] : $int<1> := _b0
// load store constants for object aPosteriori
$constant $W[aPosteriori_base_address] : $int<10> := _b0000000000
// load store constants for object aPriori
$constant $W[aPriori_base_address] : $int<10> := _b0000000000
// load store constants for object code_block
$constant $W[code_block_base_address] : $int<10> := _b0000000000
// load store constants for object ebbyNo
$constant $W[ebbyNo_base_address] : $int<1> := _b0
// load store constants for object ext_info
$constant $W[ext_info_base_address] : $int<10> := _b0000000000
// load store constants for object is_decoded
$constant $W[is_decoded_base_address] : $int<1> := _b0
// load store constants for object maxNitr
$constant $W[maxNitr_base_address] : $int<1> := _b0
// load store constants for object mem
$constant $W[mem_base_address] : $int<10> := _b0000000000
// load store constants for object message
$constant $W[message_base_address] : $int<10> := _b0000000000
// load store constants for object ncol_ind
$constant $W[ncol_ind_base_address] : $int<1> := _b0
// load store constants for object ncols
$constant $W[ncols_base_address] : $int<1> := _b0
// load store constants for object nrows
$constant $W[nrows_base_address] : $int<1> := _b0
// load store constants for object rate
$constant $W[rate_base_address] : $int<1> := _b0
$memoryspace [memory_space_0] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  Nitr_required : $uint<16> // memory space index = 0  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [Nitr_required] : $int<16>
}
$memoryspace [memory_space_1] 
{
  $capacity 512
  $datawidth 32
  $addrwidth 10
  $maxaccesswidth 32
  // $storage  aPosteriori : $array[512] $of $float<8,23> // memory space index = 1  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [aPosteriori] : $array[512] $of $float<8,23>
}
$memoryspace [memory_space_2] 
{
  $capacity 512
  $datawidth 32
  $addrwidth 10
  $maxaccesswidth 32
  // $storage  aPriori : $array[512] $of $float<8,23> // memory space index = 2  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [aPriori] : $array[512] $of $float<8,23>
}
$memoryspace [memory_space_3] 
{
  $capacity 512
  $datawidth 32
  $addrwidth 10
  $maxaccesswidth 32
  // $storage  code_block : $array[512] $of $float<8,23> // memory space index = 3  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [code_block] : $array[512] $of $float<8,23>
}
$memoryspace [memory_space_4] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  ebbyNo : $float<8,23> // memory space index = 4  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [ebbyNo] : $float<8,23>
}
$memoryspace [memory_space_5] 
{
  $capacity 512
  $datawidth 32
  $addrwidth 10
  $maxaccesswidth 32
  // $storage  ext_info : $array[512] $of $float<8,23> // memory space index = 5  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [ext_info] : $array[512] $of $float<8,23>
}
$memoryspace [memory_space_6] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  is_decoded : $uint<16> // memory space index = 6  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [is_decoded] : $int<16>
}
$memoryspace [memory_space_7] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  maxNitr : $uint<16> // memory space index = 7  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [maxNitr] : $int<16>
}
$memoryspace [memory_space_8] 
{
  $capacity 512
  $datawidth 16
  $addrwidth 10
  $maxaccesswidth 16
  // $storage  mem : $array[512] $of $uint<16> // memory space index = 8  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [mem] : $array[512] $of $int<16>
}
$memoryspace [memory_space_9] 
{
  $capacity 512
  $datawidth 32
  $addrwidth 10
  $maxaccesswidth 32
  // $storage  message : $array[512] $of $float<8,23> // memory space index = 9  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [message] : $array[512] $of $float<8,23>
}
$memoryspace [memory_space_10] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  ncol_ind : $uint<16> // memory space index = 10  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [ncol_ind] : $int<16>
}
$memoryspace [memory_space_11] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  ncols : $uint<16> // memory space index = 11  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [ncols] : $int<16>
}
$memoryspace [memory_space_12] 
{
  $capacity 1
  $datawidth 16
  $addrwidth 1
  $maxaccesswidth 16
  // $storage  nrows : $uint<16> // memory space index = 12  base address = 0  word size = 16
  // can point into 
  // in scope  top-level
  $object [nrows] : $int<16>
}
$memoryspace [memory_space_13] 
{
  $capacity 1
  $datawidth 32
  $addrwidth 1
  $maxaccesswidth 32
  // $storage  rate : $float<8,23> // memory space index = 13  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [rate] : $float<8,23>
}
$module [checkIsdecoded] 
{
  // pipe-declarations for block %checkIsdecoded
  //  file prog.linked.opt.aa, line 43
  // pipe-declarations for block %checkIsdecoded%body
  //  file prog.linked.opt.aa, line 48
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 58
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 66
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 79
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 89
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 93
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 97
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 105
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 115
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 119
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 123
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 132
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 135
  // pipe-declarations for block %checkIsdecoded%body%
  //  file prog.linked.opt.aa, line 138
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_26] // Branch Block  file prog.linked.opt.aa, line 48
    {
      $P [branch_block_stmt_26__entry__]
      branch_block_stmt_26__entry__ <-| ($entry)
      $P [branch_block_stmt_26__exit__]
      branch_block_stmt_26__exit__ |-> ($exit)
      $P [assign_stmt_30_to_assign_stmt_40__entry__] 
      $P [assign_stmt_30_to_assign_stmt_40__exit__] 
      $P [if_stmt_41__entry__] 
      $P [if_stmt_41__exit__] 
      $P [merge_stmt_47__entry__] 
      $P [merge_stmt_47__exit__] 
      $P [assign_stmt_53_to_assign_stmt_77__entry__] 
      $P [assign_stmt_53_to_assign_stmt_77__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_79__exit__] 
      $P [assign_stmt_92_to_assign_stmt_112__entry__] 
      $P [assign_stmt_92_to_assign_stmt_112__exit__] 
      $P [if_stmt_113__entry__] 
      $P [if_stmt_113__exit__] 
      $P [merge_stmt_119__entry__] 
      $P [merge_stmt_119__exit__] 
      $P [assign_stmt_123_to_assign_stmt_133__entry__] 
      $P [assign_stmt_123_to_assign_stmt_133__exit__] 
      $P [if_stmt_134__entry__] 
      $P [if_stmt_134__exit__] 
      $P [merge_stmt_140__entry__] 
      $P [merge_stmt_140__exit__] 
      $P [assign_stmt_144__entry__] 
      $P [assign_stmt_144__exit__] 
      $P [bb_4_bb_5]
      $P [merge_stmt_146__exit__] 
      $P [assign_stmt_151__entry__] 
      $P [assign_stmt_151__exit__] 
      $P [bb_5_bb_10]
      $P [merge_stmt_153__exit__] 
      $P [assign_stmt_159__entry__] 
      $P [assign_stmt_159__exit__] 
      $P [if_stmt_160__entry__] 
      $P [if_stmt_160__exit__] 
      $P [merge_stmt_166__entry__] 
      $P [merge_stmt_166__exit__] 
      $P [assign_stmt_170_to_assign_stmt_180__entry__] 
      $P [assign_stmt_170_to_assign_stmt_180__exit__] 
      $P [if_stmt_181__entry__] 
      $P [if_stmt_181__exit__] 
      $P [merge_stmt_187__entry__] 
      $P [merge_stmt_187__exit__] 
      $P [assign_stmt_191__entry__] 
      $P [assign_stmt_191__exit__] 
      $P [bb_8_bb_9]
      $P [merge_stmt_193__exit__] 
      $P [assign_stmt_198__entry__] 
      $P [assign_stmt_198__exit__] 
      $P [bb_9_bb_10]
      $P [merge_stmt_200__exit__] 
      $P [assign_stmt_206_to_assign_stmt_211__entry__] 
      $P [assign_stmt_206_to_assign_stmt_211__exit__] 
      $P [if_stmt_212__entry__] 
      $P [if_stmt_212__exit__] 
      $P [merge_stmt_218__entry__] 
      $P [merge_stmt_218__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_220__exit__] 
      $P [return__]
      $P [merge_stmt_222__exit__] 
      ::[assign_stmt_30_to_assign_stmt_40] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
        //  file prog.linked.opt.aa, line 50
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_27_sample_start_] 
        $T[STORE_is_decoded_27_sample_completed_] 
        $T[STORE_is_decoded_27_update_start_] 
        $T[STORE_is_decoded_27_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_27_word_address_calculated] 
        $T[STORE_is_decoded_27_root_address_calculated] 
        STORE_is_decoded_27_word_address_calculated <-& (STORE_is_decoded_27_root_address_calculated)
        ;;[STORE_is_decoded_27_Sample] 
        {
          ;;[STORE_is_decoded_27_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_27_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_27_sample_start_ <-& (STORE_is_decoded_27_word_address_calculated)
        STORE_is_decoded_27_sample_start_ &-> (STORE_is_decoded_27_Sample)
        STORE_is_decoded_27_sample_completed_ <-& (STORE_is_decoded_27_Sample)
        STORE_is_decoded_27_sample_completed_ &-> ($null)
        STORE_is_decoded_27_update_start_ &-> (STORE_is_decoded_27_Update)
        STORE_is_decoded_27_update_completed_ <-& (STORE_is_decoded_27_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
        // start:  		iNsTr_1 := ncols
        //  file prog.linked.opt.aa, line 51
        // Source expression
        // ncols
        $T[LOAD_ncols_32_sample_start_] 
        $T[LOAD_ncols_32_sample_completed_] 
        $T[LOAD_ncols_32_update_start_] 
        $T[LOAD_ncols_32_update_completed_] 
        $T[LOAD_ncols_32_word_address_calculated] 
        $T[LOAD_ncols_32_root_address_calculated] 
        LOAD_ncols_32_word_address_calculated <-& (LOAD_ncols_32_root_address_calculated)
        ;;[LOAD_ncols_32_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_32_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_32_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_32_sample_start_ <-& (LOAD_ncols_32_word_address_calculated)
        LOAD_ncols_32_sample_start_ &-> (LOAD_ncols_32_Sample)
        LOAD_ncols_32_sample_completed_ <-& (LOAD_ncols_32_Sample)
        LOAD_ncols_32_sample_completed_ &-> ($null)
        LOAD_ncols_32_update_start_ &-> (LOAD_ncols_32_Update)
        LOAD_ncols_32_update_completed_ <-& (LOAD_ncols_32_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := ncols
        // start:  		iNsTr_2 := (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 52
        // Source expression
        // (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_38_sample_start_] 
        $T[EQ_u16_u1_38_sample_completed_] 
        $T[EQ_u16_u1_38_update_start_] 
        $T[EQ_u16_u1_38_update_completed_] 
        // iNsTr_1
        // start: Forward dependencies from iNsTr_1 to transition EQ_u16_u1_38_sample_start_
        EQ_u16_u1_38_sample_start_ <-& (LOAD_ncols_32_update_completed_)
        // done: Forward dependencies from iNsTr_1 to transition EQ_u16_u1_38_sample_start_
        ;;[EQ_u16_u1_38_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_38_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_38_sample_start_ &-> (EQ_u16_u1_38_Sample)
        EQ_u16_u1_38_sample_completed_ <-& (EQ_u16_u1_38_Sample)
        EQ_u16_u1_38_sample_completed_ &-> ($null)
        EQ_u16_u1_38_update_start_ &-> (EQ_u16_u1_38_Update)
        EQ_u16_u1_38_update_completed_ <-& (EQ_u16_u1_38_Update)
        // Target expression
        // (as target) iNsTr_2
        // start: WAR dependencies for iNsTr_2
        // done: WAR dependencies for iNsTr_2
        // end:  		iNsTr_2 := (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_30_to_assign_stmt_40__entry__ |-> (assign_stmt_30_to_assign_stmt_40)
      assign_stmt_30_to_assign_stmt_40__exit__ <-| (assign_stmt_30_to_assign_stmt_40)
      // if-statement  
      //  file prog.linked.opt.aa, line 53
      ;;[if_stmt_41_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_41__entry__ |-> (if_stmt_41_dead_link)
      if_stmt_41__exit__ <-| (if_stmt_41_dead_link)
      ;;[if_stmt_41_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_41__entry__ |-> (if_stmt_41_eval_test)
      $P [R_iNsTr_2_42_place]
      R_iNsTr_2_42_place <-| (if_stmt_41_eval_test)
      ;;[if_stmt_41_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_41_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_2_42_place |-> (if_stmt_41_if_link if_stmt_41_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_41_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_41_else_link)
      ::[assign_stmt_53_to_assign_stmt_77] 
      {
        // start:  		tmp := (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 60
        // Source expression
        // (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_52_sample_start_] 
        $T[UGT_u16_u1_52_sample_completed_] 
        $T[UGT_u16_u1_52_update_start_] 
        $T[UGT_u16_u1_52_update_completed_] 
        // iNsTr_1
        // start: Forward dependencies from iNsTr_1 to transition UGT_u16_u1_52_sample_start_
        // done: Forward dependencies from iNsTr_1 to transition UGT_u16_u1_52_sample_start_
        ;;[UGT_u16_u1_52_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_52_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_52_sample_start_ &-> (UGT_u16_u1_52_Sample)
        UGT_u16_u1_52_sample_completed_ <-& (UGT_u16_u1_52_Sample)
        UGT_u16_u1_52_sample_completed_ &-> ($null)
        UGT_u16_u1_52_update_start_ &-> (UGT_u16_u1_52_Update)
        UGT_u16_u1_52_update_completed_ <-& (UGT_u16_u1_52_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 61
        // Source expression
        // (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_58_sample_start_] 
        $T[ADD_u16_u16_58_sample_completed_] 
        $T[ADD_u16_u16_58_update_start_] 
        $T[ADD_u16_u16_58_update_completed_] 
        // iNsTr_1
        // start: Forward dependencies from iNsTr_1 to transition ADD_u16_u16_58_sample_start_
        // done: Forward dependencies from iNsTr_1 to transition ADD_u16_u16_58_sample_start_
        ;;[ADD_u16_u16_58_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_58_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_58_sample_start_ &-> (ADD_u16_u16_58_Sample)
        ADD_u16_u16_58_sample_completed_ <-& (ADD_u16_u16_58_Sample)
        ADD_u16_u16_58_sample_completed_ &-> ($null)
        ADD_u16_u16_58_update_start_ &-> (ADD_u16_u16_58_Update)
        ADD_u16_u16_58_update_completed_ <-& (ADD_u16_u16_58_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_5 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 62
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_63_sample_start_] 
        $T[type_cast_63_sample_completed_] 
        $T[type_cast_63_update_start_] 
        $T[type_cast_63_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_63_sample_start_
        type_cast_63_sample_start_ <-& (ADD_u16_u16_58_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_63_sample_start_
        ;;[type_cast_63_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_63_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_63_sample_start_ &-> (type_cast_63_Sample)
        type_cast_63_sample_completed_ <-& (type_cast_63_Sample)
        type_cast_63_sample_completed_ &-> ($null)
        type_cast_63_update_start_ &-> (type_cast_63_Update)
        type_cast_63_update_completed_ <-& (type_cast_63_Update)
        // Target expression
        // (as target) iNsTr_5
        // start: WAR dependencies for iNsTr_5
        // done: WAR dependencies for iNsTr_5
        // end:  		iNsTr_5 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop6 := (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 63
        // Source expression
        // (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_69_sample_start_] 
        $T[ADD_u64_u64_69_sample_completed_] 
        $T[ADD_u64_u64_69_update_start_] 
        $T[ADD_u64_u64_69_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition ADD_u64_u64_69_sample_start_
        ADD_u64_u64_69_sample_start_ <-& (type_cast_63_update_completed_)
        // done: Forward dependencies from iNsTr_5 to transition ADD_u64_u64_69_sample_start_
        ;;[ADD_u64_u64_69_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_69_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_69_sample_start_ &-> (ADD_u64_u64_69_Sample)
        ADD_u64_u64_69_sample_completed_ <-& (ADD_u64_u64_69_Sample)
        ADD_u64_u64_69_sample_completed_ &-> ($null)
        ADD_u64_u64_69_update_start_ &-> (ADD_u64_u64_69_Update)
        ADD_u64_u64_69_update_completed_ <-& (ADD_u64_u64_69_Update)
        // Target expression
        // (as target) xx_xop6
        // start: WAR dependencies for xx_xop6
        // done: WAR dependencies for xx_xop6
        // end:  		xx_xop6 := (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 64
        // Source expression
        // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_76_sample_start_] 
        $T[MUX_76_sample_completed_] 
        $T[MUX_76_update_start_] 
        $T[MUX_76_update_completed_] 
        // tmp
        // xx_xop6
        // start: Forward dependencies from tmp to transition MUX_76_sample_start_
        MUX_76_sample_start_ <-& (UGT_u16_u1_52_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_76_sample_start_
        // start: Forward dependencies from xx_xop6 to transition MUX_76_sample_start_
        MUX_76_sample_start_ <-& (ADD_u64_u64_69_update_completed_)
        // done: Forward dependencies from xx_xop6 to transition MUX_76_sample_start_
        ;;[MUX_76_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_76_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_76_sample_start_ &-> (MUX_76_start)
        MUX_76_sample_completed_ <-& (MUX_76_start)
        MUX_76_update_start_ &-> (MUX_76_complete)
        MUX_76_update_completed_ <-& (MUX_76_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_53_to_assign_stmt_77__entry__ |-> (assign_stmt_53_to_assign_stmt_77)
      assign_stmt_53_to_assign_stmt_77__exit__ <-| (assign_stmt_53_to_assign_stmt_77)
      ::[assign_stmt_92_to_assign_stmt_112] 
      {
        // start:  		scevgep5 := @(code_block[indvar])
        //  file prog.linked.opt.aa, line 69
        // Source expression
        // @(code_block[indvar])
        $T[addr_of_91_sample_start_] 
        $T[addr_of_91_sample_completed_] 
        $T[addr_of_91_update_start_] 
        $T[addr_of_91_update_completed_] 
        $T[array_obj_ref_90_root_address_calculated] 
        $T[array_obj_ref_90_offset_calculated] 
        $T[array_obj_ref_90_index_resized_0] 
        $T[array_obj_ref_90_index_scaled_0] 
        $T[array_obj_ref_90_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_90_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_90_index_computed_0
        ;;[array_obj_ref_90_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_90_index_computed_0 &-> (array_obj_ref_90_index_resize_0)
        array_obj_ref_90_index_resized_0 <-& (array_obj_ref_90_index_resize_0)
        ;;[array_obj_ref_90_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_90_index_resized_0 &-> (array_obj_ref_90_index_scale_0)
        array_obj_ref_90_index_scaled_0 <-& (array_obj_ref_90_index_scale_0)
        ;;[array_obj_ref_90_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_90_index_scaled_0 &-> (array_obj_ref_90_final_index_sum_regn)
        array_obj_ref_90_offset_calculated <-& (array_obj_ref_90_final_index_sum_regn)
        ;;[array_obj_ref_90_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_90_offset_calculated &-> (array_obj_ref_90_base_plus_offset)
        array_obj_ref_90_root_address_calculated <-& (array_obj_ref_90_base_plus_offset)
        ;;[addr_of_91_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_91_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_91_sample_start_ <-& (array_obj_ref_90_root_address_calculated)
        addr_of_91_sample_start_ &-> (addr_of_91_request)
        addr_of_91_sample_completed_ <-& (addr_of_91_request)
        addr_of_91_update_start_ &-> (addr_of_91_complete)
        addr_of_91_update_completed_ <-& (addr_of_91_complete)
        // Target expression
        // (as target) scevgep5
        // start: WAR dependencies for scevgep5
        // done: WAR dependencies for scevgep5
        // end:  		scevgep5 := @(code_block[indvar])
        // start:  		scevgep := @(aPosteriori[indvar])
        //  file prog.linked.opt.aa, line 70
        // Source expression
        // @(aPosteriori[indvar])
        $T[addr_of_96_sample_start_] 
        $T[addr_of_96_sample_completed_] 
        $T[addr_of_96_update_start_] 
        $T[addr_of_96_update_completed_] 
        $T[array_obj_ref_95_root_address_calculated] 
        $T[array_obj_ref_95_offset_calculated] 
        $T[array_obj_ref_95_index_resized_0] 
        $T[array_obj_ref_95_index_scaled_0] 
        $T[array_obj_ref_95_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_95_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_95_index_computed_0
        ;;[array_obj_ref_95_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_95_index_computed_0 &-> (array_obj_ref_95_index_resize_0)
        array_obj_ref_95_index_resized_0 <-& (array_obj_ref_95_index_resize_0)
        ;;[array_obj_ref_95_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_95_index_resized_0 &-> (array_obj_ref_95_index_scale_0)
        array_obj_ref_95_index_scaled_0 <-& (array_obj_ref_95_index_scale_0)
        ;;[array_obj_ref_95_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_95_index_scaled_0 &-> (array_obj_ref_95_final_index_sum_regn)
        array_obj_ref_95_offset_calculated <-& (array_obj_ref_95_final_index_sum_regn)
        ;;[array_obj_ref_95_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_95_offset_calculated &-> (array_obj_ref_95_base_plus_offset)
        array_obj_ref_95_root_address_calculated <-& (array_obj_ref_95_base_plus_offset)
        ;;[addr_of_96_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_96_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_96_sample_start_ <-& (array_obj_ref_95_root_address_calculated)
        addr_of_96_sample_start_ &-> (addr_of_96_request)
        addr_of_96_sample_completed_ <-& (addr_of_96_request)
        addr_of_96_update_start_ &-> (addr_of_96_complete)
        addr_of_96_update_completed_ <-& (addr_of_96_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(aPosteriori[indvar])
        // start:  		iNsTr_7 := ->(scevgep)
        //  file prog.linked.opt.aa, line 71
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_100_sample_start_] 
        $T[ptr_deref_100_sample_completed_] 
        $T[ptr_deref_100_update_start_] 
        $T[ptr_deref_100_update_completed_] 
        $T[ptr_deref_100_base_address_calculated] 
        // scevgep
        $T[ptr_deref_100_word_address_calculated] 
        $T[ptr_deref_100_root_address_calculated] 
        $T[ptr_deref_100_base_address_resized] 
        ;;[ptr_deref_100_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_100_base_address_calculated &-> (ptr_deref_100_base_addr_resize)
        ptr_deref_100_base_address_resized <-& (ptr_deref_100_base_addr_resize)
        ;;[ptr_deref_100_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_100_base_address_resized &-> (ptr_deref_100_base_plus_offset)
        ptr_deref_100_root_address_calculated <-& (ptr_deref_100_base_plus_offset)
        ;;[ptr_deref_100_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_100_root_address_calculated &-> (ptr_deref_100_word_addrgen)
        ptr_deref_100_word_address_calculated <-& (ptr_deref_100_word_addrgen)
        ;;[ptr_deref_100_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_100_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_100_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_100_sample_start_ <-& (ptr_deref_100_word_address_calculated)
        ptr_deref_100_sample_start_ &-> (ptr_deref_100_Sample)
        ptr_deref_100_sample_completed_ <-& (ptr_deref_100_Sample)
        ptr_deref_100_sample_completed_ &-> ($null)
        ptr_deref_100_update_start_ &-> (ptr_deref_100_Update)
        ptr_deref_100_update_completed_ <-& (ptr_deref_100_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_100_base_address_calculated
        ptr_deref_100_base_address_calculated <-& (addr_of_96_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_100_base_address_calculated
        ptr_deref_100_sample_start_ <-& (ptr_deref_100_base_address_calculated)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := ->(scevgep)
        // start:  		iNsTr_8 := ($cast ($float<11,52>) iNsTr_7 )
        //  file prog.linked.opt.aa, line 72
        // Source expression
        // ($cast ($float<11,52>) iNsTr_7 )
        $T[type_cast_105_sample_start_] 
        $T[type_cast_105_sample_completed_] 
        $T[type_cast_105_update_start_] 
        $T[type_cast_105_update_completed_] 
        // iNsTr_7
        // start: Forward dependencies from iNsTr_7 to transition type_cast_105_sample_start_
        type_cast_105_sample_start_ <-& (ptr_deref_100_update_completed_)
        // done: Forward dependencies from iNsTr_7 to transition type_cast_105_sample_start_
        ;;[type_cast_105_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_105_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_105_sample_start_ &-> (type_cast_105_Sample)
        type_cast_105_sample_completed_ <-& (type_cast_105_Sample)
        type_cast_105_sample_completed_ &-> ($null)
        type_cast_105_update_start_ &-> (type_cast_105_Update)
        type_cast_105_update_completed_ <-& (type_cast_105_Update)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := ($cast ($float<11,52>) iNsTr_7 )
        // start:  		iNsTr_9 := (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 73
        // Source expression
        // (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
        $T[SGT_f64_u1_111_sample_start_] 
        $T[SGT_f64_u1_111_sample_completed_] 
        $T[SGT_f64_u1_111_update_start_] 
        $T[SGT_f64_u1_111_update_completed_] 
        // iNsTr_8
        // start: Forward dependencies from iNsTr_8 to transition SGT_f64_u1_111_sample_start_
        SGT_f64_u1_111_sample_start_ <-& (type_cast_105_update_completed_)
        // done: Forward dependencies from iNsTr_8 to transition SGT_f64_u1_111_sample_start_
        ;;[SGT_f64_u1_111_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_111_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_111_sample_start_ &-> (SGT_f64_u1_111_Sample)
        SGT_f64_u1_111_sample_completed_ <-& (SGT_f64_u1_111_Sample)
        SGT_f64_u1_111_sample_completed_ &-> ($null)
        SGT_f64_u1_111_update_start_ &-> (SGT_f64_u1_111_Update)
        SGT_f64_u1_111_update_completed_ <-& (SGT_f64_u1_111_Update)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_92_to_assign_stmt_112__entry__ |-> (assign_stmt_92_to_assign_stmt_112)
      assign_stmt_92_to_assign_stmt_112__exit__ <-| (assign_stmt_92_to_assign_stmt_112)
      // if-statement  
      //  file prog.linked.opt.aa, line 74
      ;;[if_stmt_113_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_113__entry__ |-> (if_stmt_113_dead_link)
      if_stmt_113__exit__ <-| (if_stmt_113_dead_link)
      ;;[if_stmt_113_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_113__entry__ |-> (if_stmt_113_eval_test)
      $P [R_iNsTr_9_114_place]
      R_iNsTr_9_114_place <-| (if_stmt_113_eval_test)
      ;;[if_stmt_113_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_113_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_9_114_place |-> (if_stmt_113_if_link if_stmt_113_else_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_113_if_link)
      $P [bb_2_bb_6]
      bb_2_bb_6 <-| (if_stmt_113_else_link)
      ::[assign_stmt_123_to_assign_stmt_133] 
      {
        // start:  		iNsTr_11 := ->(scevgep5)
        //  file prog.linked.opt.aa, line 81
        // Source expression
        // ->(scevgep5)
        $T[ptr_deref_122_sample_start_] 
        $T[ptr_deref_122_sample_completed_] 
        $T[ptr_deref_122_update_start_] 
        $T[ptr_deref_122_update_completed_] 
        $T[ptr_deref_122_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_122_word_address_calculated] 
        $T[ptr_deref_122_root_address_calculated] 
        $T[ptr_deref_122_base_address_resized] 
        ;;[ptr_deref_122_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_122_base_address_calculated &-> (ptr_deref_122_base_addr_resize)
        ptr_deref_122_base_address_resized <-& (ptr_deref_122_base_addr_resize)
        ;;[ptr_deref_122_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_122_base_address_resized &-> (ptr_deref_122_base_plus_offset)
        ptr_deref_122_root_address_calculated <-& (ptr_deref_122_base_plus_offset)
        ;;[ptr_deref_122_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_122_root_address_calculated &-> (ptr_deref_122_word_addrgen)
        ptr_deref_122_word_address_calculated <-& (ptr_deref_122_word_addrgen)
        ;;[ptr_deref_122_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_122_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_122_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_122_sample_start_ <-& (ptr_deref_122_word_address_calculated)
        ptr_deref_122_sample_start_ &-> (ptr_deref_122_Sample)
        ptr_deref_122_sample_completed_ <-& (ptr_deref_122_Sample)
        ptr_deref_122_sample_completed_ &-> ($null)
        ptr_deref_122_update_start_ &-> (ptr_deref_122_Update)
        ptr_deref_122_update_completed_ <-& (ptr_deref_122_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_122_base_address_calculated
        // done: Forward dependencies from scevgep5 to transition ptr_deref_122_base_address_calculated
        ptr_deref_122_sample_start_ <-& (ptr_deref_122_base_address_calculated)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ->(scevgep5)
        // start:  		iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
        //  file prog.linked.opt.aa, line 82
        // Source expression
        // ($cast ($float<11,52>) iNsTr_11 )
        $T[type_cast_126_sample_start_] 
        $T[type_cast_126_sample_completed_] 
        $T[type_cast_126_update_start_] 
        $T[type_cast_126_update_completed_] 
        // iNsTr_11
        // start: Forward dependencies from iNsTr_11 to transition type_cast_126_sample_start_
        type_cast_126_sample_start_ <-& (ptr_deref_122_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition type_cast_126_sample_start_
        ;;[type_cast_126_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_126_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_126_sample_start_ &-> (type_cast_126_Sample)
        type_cast_126_sample_completed_ <-& (type_cast_126_Sample)
        type_cast_126_sample_completed_ &-> ($null)
        type_cast_126_update_start_ &-> (type_cast_126_Update)
        type_cast_126_update_completed_ <-& (type_cast_126_Update)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
        // start:  		iNsTr_13 := (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 83
        // Source expression
        // (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
        $T[SGT_f64_u1_132_sample_start_] 
        $T[SGT_f64_u1_132_sample_completed_] 
        $T[SGT_f64_u1_132_update_start_] 
        $T[SGT_f64_u1_132_update_completed_] 
        // iNsTr_12
        // start: Forward dependencies from iNsTr_12 to transition SGT_f64_u1_132_sample_start_
        SGT_f64_u1_132_sample_start_ <-& (type_cast_126_update_completed_)
        // done: Forward dependencies from iNsTr_12 to transition SGT_f64_u1_132_sample_start_
        ;;[SGT_f64_u1_132_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_132_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_132_sample_start_ &-> (SGT_f64_u1_132_Sample)
        SGT_f64_u1_132_sample_completed_ <-& (SGT_f64_u1_132_Sample)
        SGT_f64_u1_132_sample_completed_ &-> ($null)
        SGT_f64_u1_132_update_start_ &-> (SGT_f64_u1_132_Update)
        SGT_f64_u1_132_update_completed_ <-& (SGT_f64_u1_132_Update)
        // Target expression
        // (as target) iNsTr_13
        // start: WAR dependencies for iNsTr_13
        // done: WAR dependencies for iNsTr_13
        // end:  		iNsTr_13 := (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_123_to_assign_stmt_133__entry__ |-> (assign_stmt_123_to_assign_stmt_133)
      assign_stmt_123_to_assign_stmt_133__exit__ <-| (assign_stmt_123_to_assign_stmt_133)
      // if-statement  
      //  file prog.linked.opt.aa, line 84
      ;;[if_stmt_134_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_134__entry__ |-> (if_stmt_134_dead_link)
      if_stmt_134__exit__ <-| (if_stmt_134_dead_link)
      ;;[if_stmt_134_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_134__entry__ |-> (if_stmt_134_eval_test)
      $P [R_iNsTr_13_135_place]
      R_iNsTr_13_135_place <-| (if_stmt_134_eval_test)
      ;;[if_stmt_134_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_134_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_13_135_place |-> (if_stmt_134_if_link if_stmt_134_else_link)
      $P [bb_3_bb_4]
      bb_3_bb_4 <-| (if_stmt_134_if_link)
      $P [bb_3_bb_5]
      bb_3_bb_5 <-| (if_stmt_134_else_link)
      ::[assign_stmt_144] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        //  file prog.linked.opt.aa, line 91
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_141_sample_start_] 
        $T[STORE_is_decoded_141_sample_completed_] 
        $T[STORE_is_decoded_141_update_start_] 
        $T[STORE_is_decoded_141_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_141_word_address_calculated] 
        $T[STORE_is_decoded_141_root_address_calculated] 
        STORE_is_decoded_141_word_address_calculated <-& (STORE_is_decoded_141_root_address_calculated)
        ;;[STORE_is_decoded_141_Sample] 
        {
          ;;[STORE_is_decoded_141_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_141_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_141_sample_start_ <-& (STORE_is_decoded_141_word_address_calculated)
        STORE_is_decoded_141_sample_start_ &-> (STORE_is_decoded_141_Sample)
        STORE_is_decoded_141_sample_completed_ <-& (STORE_is_decoded_141_Sample)
        STORE_is_decoded_141_sample_completed_ &-> ($null)
        STORE_is_decoded_141_update_start_ &-> (STORE_is_decoded_141_Update)
        STORE_is_decoded_141_update_completed_ <-& (STORE_is_decoded_141_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        // load-store dependencies..
      }
      assign_stmt_144__entry__ |-> (assign_stmt_144)
      assign_stmt_144__exit__ <-| (assign_stmt_144)
      ::[assign_stmt_151] 
      {
        // start:  		->(scevgep5) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
        //  file prog.linked.opt.aa, line 95
        // Target expression
        // ->(scevgep5)
        $T[ptr_deref_148_sample_start_] 
        $T[ptr_deref_148_sample_completed_] 
        $T[ptr_deref_148_update_start_] 
        $T[ptr_deref_148_update_completed_] 
        $T[ptr_deref_148_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_148_word_address_calculated] 
        $T[ptr_deref_148_root_address_calculated] 
        $T[ptr_deref_148_base_address_resized] 
        ;;[ptr_deref_148_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_148_base_address_calculated &-> (ptr_deref_148_base_addr_resize)
        ptr_deref_148_base_address_resized <-& (ptr_deref_148_base_addr_resize)
        ;;[ptr_deref_148_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_148_base_address_resized &-> (ptr_deref_148_base_plus_offset)
        ptr_deref_148_root_address_calculated <-& (ptr_deref_148_base_plus_offset)
        ;;[ptr_deref_148_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_148_root_address_calculated &-> (ptr_deref_148_word_addrgen)
        ptr_deref_148_word_address_calculated <-& (ptr_deref_148_word_addrgen)
        ;;[ptr_deref_148_Sample] 
        {
          ;;[ptr_deref_148_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_148_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_148_sample_start_ <-& (ptr_deref_148_word_address_calculated)
        ptr_deref_148_sample_start_ &-> (ptr_deref_148_Sample)
        ptr_deref_148_sample_completed_ <-& (ptr_deref_148_Sample)
        ptr_deref_148_sample_completed_ &-> ($null)
        ptr_deref_148_update_start_ &-> (ptr_deref_148_Update)
        ptr_deref_148_update_completed_ <-& (ptr_deref_148_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_148_base_address_calculated
        // done: Forward dependencies from scevgep5 to transition ptr_deref_148_base_address_calculated
        ptr_deref_148_sample_start_ <-& (ptr_deref_148_base_address_calculated)
        // end:  		->(scevgep5) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
        // load-store dependencies..
      }
      assign_stmt_151__entry__ |-> (assign_stmt_151)
      assign_stmt_151__exit__ <-| (assign_stmt_151)
      ::[assign_stmt_159] 
      {
        // start:  		iNsTr_15 := (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 99
        // Source expression
        // (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_158_sample_start_] 
        $T[SLT_f64_u1_158_sample_completed_] 
        $T[SLT_f64_u1_158_update_start_] 
        $T[SLT_f64_u1_158_update_completed_] 
        // iNsTr_8
        // start: Forward dependencies from iNsTr_8 to transition SLT_f64_u1_158_sample_start_
        // done: Forward dependencies from iNsTr_8 to transition SLT_f64_u1_158_sample_start_
        ;;[SLT_f64_u1_158_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_158_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_158_sample_start_ &-> (SLT_f64_u1_158_Sample)
        SLT_f64_u1_158_sample_completed_ <-& (SLT_f64_u1_158_Sample)
        SLT_f64_u1_158_sample_completed_ &-> ($null)
        SLT_f64_u1_158_update_start_ &-> (SLT_f64_u1_158_Update)
        SLT_f64_u1_158_update_completed_ <-& (SLT_f64_u1_158_Update)
        // Target expression
        // (as target) iNsTr_15
        // start: WAR dependencies for iNsTr_15
        // done: WAR dependencies for iNsTr_15
        // end:  		iNsTr_15 := (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_159__entry__ |-> (assign_stmt_159)
      assign_stmt_159__exit__ <-| (assign_stmt_159)
      // if-statement  
      //  file prog.linked.opt.aa, line 100
      ;;[if_stmt_160_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_160__entry__ |-> (if_stmt_160_dead_link)
      if_stmt_160__exit__ <-| (if_stmt_160_dead_link)
      ;;[if_stmt_160_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_160__entry__ |-> (if_stmt_160_eval_test)
      $P [R_iNsTr_15_161_place]
      R_iNsTr_15_161_place <-| (if_stmt_160_eval_test)
      ;;[if_stmt_160_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_160_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_15_161_place |-> (if_stmt_160_if_link if_stmt_160_else_link)
      $P [bb_6_bb_7]
      bb_6_bb_7 <-| (if_stmt_160_if_link)
      $P [bb_6_bb_10]
      bb_6_bb_10 <-| (if_stmt_160_else_link)
      ::[assign_stmt_170_to_assign_stmt_180] 
      {
        // start:  		iNsTr_21 := ->(scevgep5)
        //  file prog.linked.opt.aa, line 107
        // Source expression
        // ->(scevgep5)
        $T[ptr_deref_169_sample_start_] 
        $T[ptr_deref_169_sample_completed_] 
        $T[ptr_deref_169_update_start_] 
        $T[ptr_deref_169_update_completed_] 
        $T[ptr_deref_169_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_169_word_address_calculated] 
        $T[ptr_deref_169_root_address_calculated] 
        $T[ptr_deref_169_base_address_resized] 
        ;;[ptr_deref_169_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_169_base_address_calculated &-> (ptr_deref_169_base_addr_resize)
        ptr_deref_169_base_address_resized <-& (ptr_deref_169_base_addr_resize)
        ;;[ptr_deref_169_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_169_base_address_resized &-> (ptr_deref_169_base_plus_offset)
        ptr_deref_169_root_address_calculated <-& (ptr_deref_169_base_plus_offset)
        ;;[ptr_deref_169_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_169_root_address_calculated &-> (ptr_deref_169_word_addrgen)
        ptr_deref_169_word_address_calculated <-& (ptr_deref_169_word_addrgen)
        ;;[ptr_deref_169_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_169_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_169_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_169_sample_start_ <-& (ptr_deref_169_word_address_calculated)
        ptr_deref_169_sample_start_ &-> (ptr_deref_169_Sample)
        ptr_deref_169_sample_completed_ <-& (ptr_deref_169_Sample)
        ptr_deref_169_sample_completed_ &-> ($null)
        ptr_deref_169_update_start_ &-> (ptr_deref_169_Update)
        ptr_deref_169_update_completed_ <-& (ptr_deref_169_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_169_base_address_calculated
        // done: Forward dependencies from scevgep5 to transition ptr_deref_169_base_address_calculated
        ptr_deref_169_sample_start_ <-& (ptr_deref_169_base_address_calculated)
        // Target expression
        // (as target) iNsTr_21
        // start: WAR dependencies for iNsTr_21
        // done: WAR dependencies for iNsTr_21
        // end:  		iNsTr_21 := ->(scevgep5)
        // start:  		iNsTr_22 := ($cast ($float<11,52>) iNsTr_21 )
        //  file prog.linked.opt.aa, line 108
        // Source expression
        // ($cast ($float<11,52>) iNsTr_21 )
        $T[type_cast_173_sample_start_] 
        $T[type_cast_173_sample_completed_] 
        $T[type_cast_173_update_start_] 
        $T[type_cast_173_update_completed_] 
        // iNsTr_21
        // start: Forward dependencies from iNsTr_21 to transition type_cast_173_sample_start_
        type_cast_173_sample_start_ <-& (ptr_deref_169_update_completed_)
        // done: Forward dependencies from iNsTr_21 to transition type_cast_173_sample_start_
        ;;[type_cast_173_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_173_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_173_sample_start_ &-> (type_cast_173_Sample)
        type_cast_173_sample_completed_ <-& (type_cast_173_Sample)
        type_cast_173_sample_completed_ &-> ($null)
        type_cast_173_update_start_ &-> (type_cast_173_Update)
        type_cast_173_update_completed_ <-& (type_cast_173_Update)
        // Target expression
        // (as target) iNsTr_22
        // start: WAR dependencies for iNsTr_22
        // done: WAR dependencies for iNsTr_22
        // end:  		iNsTr_22 := ($cast ($float<11,52>) iNsTr_21 )
        // start:  		iNsTr_23 := (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 109
        // Source expression
        // (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_179_sample_start_] 
        $T[SLT_f64_u1_179_sample_completed_] 
        $T[SLT_f64_u1_179_update_start_] 
        $T[SLT_f64_u1_179_update_completed_] 
        // iNsTr_22
        // start: Forward dependencies from iNsTr_22 to transition SLT_f64_u1_179_sample_start_
        SLT_f64_u1_179_sample_start_ <-& (type_cast_173_update_completed_)
        // done: Forward dependencies from iNsTr_22 to transition SLT_f64_u1_179_sample_start_
        ;;[SLT_f64_u1_179_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_179_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_179_sample_start_ &-> (SLT_f64_u1_179_Sample)
        SLT_f64_u1_179_sample_completed_ <-& (SLT_f64_u1_179_Sample)
        SLT_f64_u1_179_sample_completed_ &-> ($null)
        SLT_f64_u1_179_update_start_ &-> (SLT_f64_u1_179_Update)
        SLT_f64_u1_179_update_completed_ <-& (SLT_f64_u1_179_Update)
        // Target expression
        // (as target) iNsTr_23
        // start: WAR dependencies for iNsTr_23
        // done: WAR dependencies for iNsTr_23
        // end:  		iNsTr_23 := (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_170_to_assign_stmt_180__entry__ |-> (assign_stmt_170_to_assign_stmt_180)
      assign_stmt_170_to_assign_stmt_180__exit__ <-| (assign_stmt_170_to_assign_stmt_180)
      // if-statement  
      //  file prog.linked.opt.aa, line 110
      ;;[if_stmt_181_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_181__entry__ |-> (if_stmt_181_dead_link)
      if_stmt_181__exit__ <-| (if_stmt_181_dead_link)
      ;;[if_stmt_181_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_181__entry__ |-> (if_stmt_181_eval_test)
      $P [R_iNsTr_23_182_place]
      R_iNsTr_23_182_place <-| (if_stmt_181_eval_test)
      ;;[if_stmt_181_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_181_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_23_182_place |-> (if_stmt_181_if_link if_stmt_181_else_link)
      $P [bb_7_bb_8]
      bb_7_bb_8 <-| (if_stmt_181_if_link)
      $P [bb_7_bb_9]
      bb_7_bb_9 <-| (if_stmt_181_else_link)
      ::[assign_stmt_191] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        //  file prog.linked.opt.aa, line 117
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_188_sample_start_] 
        $T[STORE_is_decoded_188_sample_completed_] 
        $T[STORE_is_decoded_188_update_start_] 
        $T[STORE_is_decoded_188_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_188_word_address_calculated] 
        $T[STORE_is_decoded_188_root_address_calculated] 
        STORE_is_decoded_188_word_address_calculated <-& (STORE_is_decoded_188_root_address_calculated)
        ;;[STORE_is_decoded_188_Sample] 
        {
          ;;[STORE_is_decoded_188_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_188_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_188_sample_start_ <-& (STORE_is_decoded_188_word_address_calculated)
        STORE_is_decoded_188_sample_start_ &-> (STORE_is_decoded_188_Sample)
        STORE_is_decoded_188_sample_completed_ <-& (STORE_is_decoded_188_Sample)
        STORE_is_decoded_188_sample_completed_ &-> ($null)
        STORE_is_decoded_188_update_start_ &-> (STORE_is_decoded_188_Update)
        STORE_is_decoded_188_update_completed_ <-& (STORE_is_decoded_188_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        // load-store dependencies..
      }
      assign_stmt_191__entry__ |-> (assign_stmt_191)
      assign_stmt_191__exit__ <-| (assign_stmt_191)
      ::[assign_stmt_198] 
      {
        // start:  		->(scevgep5) := ($bitcast ($float<8,23>) _f1.000000e+00 )
        //  file prog.linked.opt.aa, line 121
        // Target expression
        // ->(scevgep5)
        $T[ptr_deref_195_sample_start_] 
        $T[ptr_deref_195_sample_completed_] 
        $T[ptr_deref_195_update_start_] 
        $T[ptr_deref_195_update_completed_] 
        $T[ptr_deref_195_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_195_word_address_calculated] 
        $T[ptr_deref_195_root_address_calculated] 
        $T[ptr_deref_195_base_address_resized] 
        ;;[ptr_deref_195_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_195_base_address_calculated &-> (ptr_deref_195_base_addr_resize)
        ptr_deref_195_base_address_resized <-& (ptr_deref_195_base_addr_resize)
        ;;[ptr_deref_195_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_195_base_address_resized &-> (ptr_deref_195_base_plus_offset)
        ptr_deref_195_root_address_calculated <-& (ptr_deref_195_base_plus_offset)
        ;;[ptr_deref_195_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_195_root_address_calculated &-> (ptr_deref_195_word_addrgen)
        ptr_deref_195_word_address_calculated <-& (ptr_deref_195_word_addrgen)
        ;;[ptr_deref_195_Sample] 
        {
          ;;[ptr_deref_195_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_195_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_195_sample_start_ <-& (ptr_deref_195_word_address_calculated)
        ptr_deref_195_sample_start_ &-> (ptr_deref_195_Sample)
        ptr_deref_195_sample_completed_ <-& (ptr_deref_195_Sample)
        ptr_deref_195_sample_completed_ &-> ($null)
        ptr_deref_195_update_start_ &-> (ptr_deref_195_Update)
        ptr_deref_195_update_completed_ <-& (ptr_deref_195_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_195_base_address_calculated
        // done: Forward dependencies from scevgep5 to transition ptr_deref_195_base_address_calculated
        ptr_deref_195_sample_start_ <-& (ptr_deref_195_base_address_calculated)
        // end:  		->(scevgep5) := ($bitcast ($float<8,23>) _f1.000000e+00 )
        // load-store dependencies..
      }
      assign_stmt_198__entry__ |-> (assign_stmt_198)
      assign_stmt_198__exit__ <-| (assign_stmt_198)
      ::[assign_stmt_206_to_assign_stmt_211] 
      {
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 125
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_205_sample_start_] 
        $T[ADD_u64_u64_205_sample_completed_] 
        $T[ADD_u64_u64_205_update_start_] 
        $T[ADD_u64_u64_205_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_205_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_205_sample_start_
        ;;[ADD_u64_u64_205_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_205_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_205_sample_start_ &-> (ADD_u64_u64_205_Sample)
        ADD_u64_u64_205_sample_completed_ <-& (ADD_u64_u64_205_Sample)
        ADD_u64_u64_205_sample_completed_ &-> ($null)
        ADD_u64_u64_205_update_start_ &-> (ADD_u64_u64_205_Update)
        ADD_u64_u64_205_update_completed_ <-& (ADD_u64_u64_205_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 126
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_210_sample_start_] 
        $T[EQ_u64_u1_210_sample_completed_] 
        $T[EQ_u64_u1_210_update_start_] 
        $T[EQ_u64_u1_210_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_210_sample_start_
        EQ_u64_u1_210_sample_start_ <-& (ADD_u64_u64_205_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_210_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_210_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_210_sample_start_
        ;;[EQ_u64_u1_210_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_210_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_210_sample_start_ &-> (EQ_u64_u1_210_Sample)
        EQ_u64_u1_210_sample_completed_ <-& (EQ_u64_u1_210_Sample)
        EQ_u64_u1_210_sample_completed_ &-> ($null)
        EQ_u64_u1_210_update_start_ &-> (EQ_u64_u1_210_Update)
        EQ_u64_u1_210_update_completed_ <-& (EQ_u64_u1_210_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
      }
      assign_stmt_206_to_assign_stmt_211__entry__ |-> (assign_stmt_206_to_assign_stmt_211)
      assign_stmt_206_to_assign_stmt_211__exit__ <-| (assign_stmt_206_to_assign_stmt_211)
      // if-statement  
      //  file prog.linked.opt.aa, line 127
      ;;[if_stmt_212_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_212__entry__ |-> (if_stmt_212_dead_link)
      if_stmt_212__exit__ <-| (if_stmt_212_dead_link)
      ;;[if_stmt_212_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_212__entry__ |-> (if_stmt_212_eval_test)
      $P [R_exitcond1_213_place]
      R_exitcond1_213_place <-| (if_stmt_212_eval_test)
      ;;[if_stmt_212_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_212_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_213_place |-> (if_stmt_212_if_link if_stmt_212_else_link)
      $P [bb_10_xx_x_crit_edgex_xloopexit]
      bb_10_xx_x_crit_edgex_xloopexit <-| (if_stmt_212_if_link)
      $P [bb_10_bb_2]
      bb_10_bb_2 <-| (if_stmt_212_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 58
      ;;[merge_stmt_47_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_47__entry__ |-> (merge_stmt_47_dead_link)
      merge_stmt_47__exit__ <-| (merge_stmt_47_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 58  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_47_PhiReqMerge] 
      merge_stmt_47_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_47_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_47_PhiReqMerge |-> (merge_stmt_47_PhiAck)
      merge_stmt_47__exit__  <-| (merge_stmt_47_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 58  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 66
      //---------------------   merge statement  file prog.linked.opt.aa, line 66  --------------------------
      ||[bb_10_bb_2_PhiReq] 
      {
        ;;[phi_stmt_80] 
        {
          ||[phi_stmt_80_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_10_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_86] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_80_req] 
        }
      }
      bb_10_bb_2 |-> (bb_10_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_80] 
        {
          ||[phi_stmt_80_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_10_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_84_konst_delay_trans] $delay
          }
          $T [phi_stmt_80_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_79_PhiReqMerge] 
      merge_stmt_79_PhiReqMerge <-| ( bb_10_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_79_PhiAck] 
      {
        $T [phi_stmt_80_ack] 
      }
      merge_stmt_79_PhiReqMerge |-> (merge_stmt_79_PhiAck)
      merge_stmt_79__exit__  <-| (merge_stmt_79_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 66  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 79
      ;;[merge_stmt_119_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_119__entry__ |-> (merge_stmt_119_dead_link)
      merge_stmt_119__exit__ <-| (merge_stmt_119_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 79  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_119_PhiReqMerge] 
      merge_stmt_119_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_119_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_119_PhiReqMerge |-> (merge_stmt_119_PhiAck)
      merge_stmt_119__exit__  <-| (merge_stmt_119_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 79  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 89
      ;;[merge_stmt_140_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_140__entry__ |-> (merge_stmt_140_dead_link)
      merge_stmt_140__exit__ <-| (merge_stmt_140_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 89  --------------------------
      ||[bb_3_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_bb_4 |-> (bb_3_bb_4_PhiReq)
      $P [merge_stmt_140_PhiReqMerge] 
      merge_stmt_140_PhiReqMerge <-| ( bb_3_bb_4_PhiReq )
      ||[merge_stmt_140_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_140_PhiReqMerge |-> (merge_stmt_140_PhiAck)
      merge_stmt_140__exit__  <-| (merge_stmt_140_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 89  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 93
      //---------------------   merge statement  file prog.linked.opt.aa, line 93  --------------------------
      ||[bb_3_bb_5_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_bb_5 |-> (bb_3_bb_5_PhiReq)
      ||[bb_4_bb_5_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_146_PhiReqMerge] 
      merge_stmt_146_PhiReqMerge <-| ( bb_3_bb_5_PhiReq  bb_4_bb_5_PhiReq )
      ||[merge_stmt_146_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_146_PhiReqMerge |-> (merge_stmt_146_PhiAck)
      merge_stmt_146__exit__  <-| (merge_stmt_146_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 93  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 97
      //---------------------   merge statement  file prog.linked.opt.aa, line 97  --------------------------
      ||[bb_2_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_6 |-> (bb_2_bb_6_PhiReq)
      $P [merge_stmt_153_PhiReqMerge] 
      merge_stmt_153_PhiReqMerge <-| ( bb_2_bb_6_PhiReq )
      ||[merge_stmt_153_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_153_PhiReqMerge |-> (merge_stmt_153_PhiAck)
      merge_stmt_153__exit__  <-| (merge_stmt_153_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 97  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 105
      ;;[merge_stmt_166_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_166__entry__ |-> (merge_stmt_166_dead_link)
      merge_stmt_166__exit__ <-| (merge_stmt_166_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 105  --------------------------
      ||[bb_6_bb_7_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_bb_7 |-> (bb_6_bb_7_PhiReq)
      $P [merge_stmt_166_PhiReqMerge] 
      merge_stmt_166_PhiReqMerge <-| ( bb_6_bb_7_PhiReq )
      ||[merge_stmt_166_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_166_PhiReqMerge |-> (merge_stmt_166_PhiAck)
      merge_stmt_166__exit__  <-| (merge_stmt_166_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 105  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 115
      ;;[merge_stmt_187_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_187__entry__ |-> (merge_stmt_187_dead_link)
      merge_stmt_187__exit__ <-| (merge_stmt_187_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 115  --------------------------
      ||[bb_7_bb_8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_bb_8 |-> (bb_7_bb_8_PhiReq)
      $P [merge_stmt_187_PhiReqMerge] 
      merge_stmt_187_PhiReqMerge <-| ( bb_7_bb_8_PhiReq )
      ||[merge_stmt_187_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_187_PhiReqMerge |-> (merge_stmt_187_PhiAck)
      merge_stmt_187__exit__  <-| (merge_stmt_187_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 115  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 119
      //---------------------   merge statement  file prog.linked.opt.aa, line 119  --------------------------
      ||[bb_7_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_bb_9 |-> (bb_7_bb_9_PhiReq)
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_193_PhiReqMerge] 
      merge_stmt_193_PhiReqMerge <-| ( bb_7_bb_9_PhiReq  bb_8_bb_9_PhiReq )
      ||[merge_stmt_193_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_193_PhiReqMerge |-> (merge_stmt_193_PhiAck)
      merge_stmt_193__exit__  <-| (merge_stmt_193_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 119  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 123
      //---------------------   merge statement  file prog.linked.opt.aa, line 123  --------------------------
      ||[bb_5_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bb_10 |-> (bb_5_bb_10_PhiReq)
      ||[bb_6_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_bb_10 |-> (bb_6_bb_10_PhiReq)
      ||[bb_9_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_9_bb_10 |-> (bb_9_bb_10_PhiReq)
      $P [merge_stmt_200_PhiReqMerge] 
      merge_stmt_200_PhiReqMerge <-| ( bb_5_bb_10_PhiReq  bb_6_bb_10_PhiReq  bb_9_bb_10_PhiReq )
      ||[merge_stmt_200_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_200_PhiReqMerge |-> (merge_stmt_200_PhiAck)
      merge_stmt_200__exit__  <-| (merge_stmt_200_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 123  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 132
      ;;[merge_stmt_218_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_218__entry__ |-> (merge_stmt_218_dead_link)
      merge_stmt_218__exit__ <-| (merge_stmt_218_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 132  --------------------------
      ||[bb_10_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_xx_x_crit_edgex_xloopexit |-> (bb_10_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_218_PhiReqMerge] 
      merge_stmt_218_PhiReqMerge <-| ( bb_10_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_218_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_218_PhiReqMerge |-> (merge_stmt_218_PhiAck)
      merge_stmt_218__exit__  <-| (merge_stmt_218_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 132  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 135
      //---------------------   merge statement  file prog.linked.opt.aa, line 135  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_220_PhiReqMerge] 
      merge_stmt_220_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_220_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_220_PhiReqMerge |-> (merge_stmt_220_PhiAck)
      merge_stmt_220__exit__  <-| (merge_stmt_220_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 135  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 138
      //---------------------   merge statement  file prog.linked.opt.aa, line 138  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_222_PhiReqMerge] 
      merge_stmt_222_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_222_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_222_PhiReqMerge |-> (merge_stmt_222_PhiAck)
      merge_stmt_222__exit__  <-| (merge_stmt_222_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 138  --------------------------
      assign_stmt_30_to_assign_stmt_40__entry__ <-| (branch_block_stmt_26__entry__)
      if_stmt_41__entry__ <-| (assign_stmt_30_to_assign_stmt_40__exit__)
      merge_stmt_47__entry__ <-| (if_stmt_41__exit__)
      assign_stmt_53_to_assign_stmt_77__entry__ <-| (merge_stmt_47__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_53_to_assign_stmt_77__exit__)
      assign_stmt_92_to_assign_stmt_112__entry__ <-| (merge_stmt_79__exit__)
      if_stmt_113__entry__ <-| (assign_stmt_92_to_assign_stmt_112__exit__)
      merge_stmt_119__entry__ <-| (if_stmt_113__exit__)
      assign_stmt_123_to_assign_stmt_133__entry__ <-| (merge_stmt_119__exit__)
      if_stmt_134__entry__ <-| (assign_stmt_123_to_assign_stmt_133__exit__)
      merge_stmt_140__entry__ <-| (if_stmt_134__exit__)
      assign_stmt_144__entry__ <-| (merge_stmt_140__exit__)
      bb_4_bb_5 <-| (assign_stmt_144__exit__)
      assign_stmt_151__entry__ <-| (merge_stmt_146__exit__)
      bb_5_bb_10 <-| (assign_stmt_151__exit__)
      assign_stmt_159__entry__ <-| (merge_stmt_153__exit__)
      if_stmt_160__entry__ <-| (assign_stmt_159__exit__)
      merge_stmt_166__entry__ <-| (if_stmt_160__exit__)
      assign_stmt_170_to_assign_stmt_180__entry__ <-| (merge_stmt_166__exit__)
      if_stmt_181__entry__ <-| (assign_stmt_170_to_assign_stmt_180__exit__)
      merge_stmt_187__entry__ <-| (if_stmt_181__exit__)
      assign_stmt_191__entry__ <-| (merge_stmt_187__exit__)
      bb_8_bb_9 <-| (assign_stmt_191__exit__)
      assign_stmt_198__entry__ <-| (merge_stmt_193__exit__)
      bb_9_bb_10 <-| (assign_stmt_198__exit__)
      assign_stmt_206_to_assign_stmt_211__entry__ <-| (merge_stmt_200__exit__)
      if_stmt_212__entry__ <-| (assign_stmt_206_to_assign_stmt_211__exit__)
      merge_stmt_218__entry__ <-| (if_stmt_212__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_218__exit__)
      return__ <-| (merge_stmt_220__exit__)
      merge_stmt_222__exit__ |-> (branch_block_stmt_26__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 58
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 66
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 79
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 89
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 93
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 97
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 105
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 115
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 119
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 123
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 132
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 135
    // constant-object-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 138
    // constant-object-declarations for block %checkIsdecoded%body
    //  file prog.linked.opt.aa, line 48
    // constant-object-declarations for block %checkIsdecoded
    //  file prog.linked.opt.aa, line 43
    // constant-declarations for block %checkIsdecoded%body
    //  file prog.linked.opt.aa, line 48
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_29_wire_constant] : $int<16> := _b0000000000000001// 1
    // is_decoded
    $constant $W[STORE_is_decoded_27_word_address_0] : $pointer<memory_space_6> := _b0
    // ncols
    $constant $W[LOAD_ncols_32_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_37_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 53
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 58
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_51_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_57_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_68_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_75_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 66
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_10_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 67
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_84_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(code_block[indvar])
    $constant $W[array_obj_ref_90_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_90_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(aPosteriori[indvar])
    $constant $W[array_obj_ref_95_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_95_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_100_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_110_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 74
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 79
    // ->(scevgep5)
    $constant $W[ptr_deref_122_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_131_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 84
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 89
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_143_wire_constant] : $int<16> := _b0000000000000000// 0
    // is_decoded
    $constant $W[STORE_is_decoded_141_word_address_0] : $pointer<memory_space_6> := _b0
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 93
    // ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $constant $W[type_cast_150_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // ->(scevgep5)
    $constant $W[ptr_deref_148_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 97
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_157_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 100
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 105
    // ->(scevgep5)
    $constant $W[ptr_deref_169_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_178_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 110
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 115
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_190_wire_constant] : $int<16> := _b0000000000000000// 0
    // is_decoded
    $constant $W[STORE_is_decoded_188_word_address_0] : $pointer<memory_space_6> := _b0
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 119
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_197_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ->(scevgep5)
    $constant $W[ptr_deref_195_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 123
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_204_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 127
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 132
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 135
    // constant-declarations for block %checkIsdecoded%body%
    //  file prog.linked.opt.aa, line 138
    // block %checkIsdecoded%body
    //  file prog.linked.opt.aa, line 48
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
    //  file prog.linked.opt.aa, line 50
    // is_decoded
    $constant $W[STORE_is_decoded_27_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_27_data_0] : $int<16>
    // 		iNsTr_1 := ncols
    //  file prog.linked.opt.aa, line 51
    // ncols
    $W[LOAD_ncols_32_data_0] : $int<16>
    // iNsTr_1
    $W[iNsTr_1_33] : $int<16>
    // 		iNsTr_2 := (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 52
    // iNsTr_2
    $W[iNsTr_2_40] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 53
    // 		tmp := (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 60
    // tmp
    $W[tmp_53] : $int<1>
    // 		xx_xop := (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 61
    // xx_xop
    $W[xx_xop_59] : $int<16>
    // 		iNsTr_5 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 62
    // iNsTr_5
    $W[iNsTr_5_64] : $int<64>
    // 		xx_xop6 := (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 63
    // xx_xop6
    $W[xx_xop6_70] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 64
    // tmp4
    $W[tmp4_77] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 66
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_10_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 67
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_86_wire] : $int<64>
    // indvar
    $W[indvar_80] : $int<64>
    // 		scevgep5 := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 69
    // @(code_block[indvar])
    $intermediate $W[R_indvar_89_resized] : $int<10>
    $intermediate $W[R_indvar_89_scaled] : $int<10>
    $intermediate $W[array_obj_ref_90_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_90_root_address] : $int<10>
    // scevgep5
    $W[scevgep5_92] : $int<32>
    // 		scevgep := @(aPosteriori[indvar])
    //  file prog.linked.opt.aa, line 70
    // @(aPosteriori[indvar])
    $intermediate $W[R_indvar_94_resized] : $int<10>
    $intermediate $W[R_indvar_94_scaled] : $int<10>
    $intermediate $W[array_obj_ref_95_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_95_root_address] : $int<10>
    // scevgep
    $W[scevgep_97] : $int<32>
    // 		iNsTr_7 := ->(scevgep)
    //  file prog.linked.opt.aa, line 71
    // ->(scevgep)
    $intermediate $W[ptr_deref_100_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_100_root_address] : $int<10>
    $W[ptr_deref_100_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_100_data_0] : $int<32>
    // iNsTr_7
    $W[iNsTr_7_101] : $float<8,23>
    // 		iNsTr_8 := ($cast ($float<11,52>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 72
    // iNsTr_8
    $W[iNsTr_8_106] : $float<11,52>
    // 		iNsTr_9 := (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 73
    // iNsTr_9
    $W[iNsTr_9_112] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 74
    // 		iNsTr_11 := ->(scevgep5)
    //  file prog.linked.opt.aa, line 81
    // ->(scevgep5)
    $intermediate $W[ptr_deref_122_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_122_root_address] : $int<10>
    $W[ptr_deref_122_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_122_data_0] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_123] : $float<8,23>
    // 		iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
    //  file prog.linked.opt.aa, line 82
    // iNsTr_12
    $W[iNsTr_12_127] : $float<11,52>
    // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 83
    // iNsTr_13
    $W[iNsTr_13_133] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 84
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 91
    // is_decoded
    $constant $W[STORE_is_decoded_141_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_141_data_0] : $int<16>
    // 		->(scevgep5) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    //  file prog.linked.opt.aa, line 95
    // ->(scevgep5)
    $intermediate $W[ptr_deref_148_wire] : $float<8,23>
    $intermediate $W[ptr_deref_148_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_148_root_address] : $int<10>
    $W[ptr_deref_148_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_148_data_0] : $int<32>
    // 		iNsTr_15 := (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 99
    // iNsTr_15
    $W[iNsTr_15_159] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 100
    // 		iNsTr_21 := ->(scevgep5)
    //  file prog.linked.opt.aa, line 107
    // ->(scevgep5)
    $intermediate $W[ptr_deref_169_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_169_root_address] : $int<10>
    $W[ptr_deref_169_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_169_data_0] : $int<32>
    // iNsTr_21
    $W[iNsTr_21_170] : $float<8,23>
    // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_21 )
    //  file prog.linked.opt.aa, line 108
    // iNsTr_22
    $W[iNsTr_22_174] : $float<11,52>
    // 		iNsTr_23 := (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 109
    // iNsTr_23
    $W[iNsTr_23_180] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 110
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 117
    // is_decoded
    $constant $W[STORE_is_decoded_188_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_188_data_0] : $int<16>
    // 		->(scevgep5) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    //  file prog.linked.opt.aa, line 121
    // ->(scevgep5)
    $intermediate $W[ptr_deref_195_wire] : $float<8,23>
    $intermediate $W[ptr_deref_195_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_195_root_address] : $int<10>
    $W[ptr_deref_195_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_195_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 125
    // indvarx_xnext
    $W[indvarx_xnext_206] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 126
    // exitcond1
    $W[exitcond1_211] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 127
    // datapath-instances for block %checkIsdecoded%body
    //  file prog.linked.opt.aa, line 48
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
    //  file prog.linked.opt.aa, line 50
    // is_decoded
    $store [STORE_is_decoded_27_store_0] $to memory_space_6 (STORE_is_decoded_27_word_address_0 STORE_is_decoded_27_data_0) 
    $delay STORE_is_decoded_27_store_0 4
    &/ [STORE_is_decoded_27_gather_scatter] (type_cast_29_wire_constant) (STORE_is_decoded_27_data_0) 
    $flowthrough 
    // 		iNsTr_1 := ncols
    //  file prog.linked.opt.aa, line 51
    // ncols
    $load [LOAD_ncols_32_load_0] $from memory_space_11 (LOAD_ncols_32_word_address_0) (LOAD_ncols_32_data_0) 
    $delay LOAD_ncols_32_load_0 4
    &/ [LOAD_ncols_32_gather_scatter] (LOAD_ncols_32_data_0) (iNsTr_1_33) 
    $flowthrough 
    // 		iNsTr_2 := (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 52
    // (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_38_inst] (iNsTr_1_33 type_cast_37_wire_constant) (iNsTr_2_40)   
    $buffering  $out EQ_u16_u1_38_inst iNsTr_2_40 1
    $delay EQ_u16_u1_38_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 53
    ==0? [if_stmt_41_branch] (iNsTr_2_40)
    // 		tmp := (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 60
    // (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_52_inst] (iNsTr_1_33 type_cast_51_wire_constant) (tmp_53)   
    $buffering  $out UGT_u16_u1_52_inst tmp_53 1
    $delay UGT_u16_u1_52_inst 1
    // 		xx_xop := (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 61
    // (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_58_inst] (iNsTr_1_33 type_cast_57_wire_constant) (xx_xop_59)   
    $buffering  $out ADD_u16_u16_58_inst xx_xop_59 1
    $delay ADD_u16_u16_58_inst 1
    // 		iNsTr_5 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 62
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_63_inst] (xx_xop_59) (iNsTr_5_64)   
    $buffering  $out type_cast_63_inst iNsTr_5_64 1
    $delay type_cast_63_inst 1
    // 		xx_xop6 := (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 63
    // (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_69_inst] (iNsTr_5_64 type_cast_68_wire_constant) (xx_xop6_70)   
    $buffering  $out ADD_u64_u64_69_inst xx_xop6_70 1
    $delay ADD_u64_u64_69_inst 1
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 64
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_76_inst] (tmp_53 xx_xop6_70 type_cast_75_wire_constant) (tmp4_77) 
    $buffering  $out MUX_76_inst tmp4_77 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 66
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_10_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 67
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_86_inst] (indvarx_xnext_206) (type_cast_86_wire)   
    $buffering  $out type_cast_86_inst type_cast_86_wire 1
    $delay type_cast_86_inst 1
    $phi [phi_stmt_80] (type_cast_84_wire_constant type_cast_86_wire) ( indvar_80 ) 
    // 		scevgep5 := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 69
    &/ [array_obj_ref_90_index_0_resize] (indvar_80) (R_indvar_89_resized) 
    $flowthrough 
    &/ [array_obj_ref_90_index_0_rename] (R_indvar_89_resized) (R_indvar_89_scaled) 
    $flowthrough 
    &/ [array_obj_ref_90_index_offset] (R_indvar_89_scaled) (array_obj_ref_90_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_90_root_address_inst] (array_obj_ref_90_final_offset) (array_obj_ref_90_root_address) 
    $flowthrough 
    # := [addr_of_91_final_reg] (array_obj_ref_90_root_address) (scevgep5_92)   
    $buffering  $out addr_of_91_final_reg scevgep5_92 1
    // 		scevgep := @(aPosteriori[indvar])
    //  file prog.linked.opt.aa, line 70
    &/ [array_obj_ref_95_index_0_resize] (indvar_80) (R_indvar_94_resized) 
    $flowthrough 
    &/ [array_obj_ref_95_index_0_rename] (R_indvar_94_resized) (R_indvar_94_scaled) 
    $flowthrough 
    &/ [array_obj_ref_95_index_offset] (R_indvar_94_scaled) (array_obj_ref_95_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_95_root_address_inst] (array_obj_ref_95_final_offset) (array_obj_ref_95_root_address) 
    $flowthrough 
    # := [addr_of_96_final_reg] (array_obj_ref_95_root_address) (scevgep_97)   
    $buffering  $out addr_of_96_final_reg scevgep_97 1
    // 		iNsTr_7 := ->(scevgep)
    //  file prog.linked.opt.aa, line 71
    // ->(scevgep)
    &/ [ptr_deref_100_base_resize] (scevgep_97) (ptr_deref_100_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_100_root_address_inst] (ptr_deref_100_resized_base_address) (ptr_deref_100_root_address) 
    $flowthrough 
    &/ [ptr_deref_100_addr_0] (ptr_deref_100_root_address) (ptr_deref_100_word_address_0) 
    $flowthrough 
    $load [ptr_deref_100_load_0] $from memory_space_1 (ptr_deref_100_word_address_0) (ptr_deref_100_data_0) 
    $delay ptr_deref_100_load_0 4
    &/ [ptr_deref_100_gather_scatter] (ptr_deref_100_data_0) (iNsTr_7_101) 
    $flowthrough 
    // 		iNsTr_8 := ($cast ($float<11,52>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 72
    // ($cast ($float<11,52>) iNsTr_7 )
    $F:=$F [type_cast_105_inst] (iNsTr_7_101) (iNsTr_8_106)  
    $buffering  $out type_cast_105_inst iNsTr_8_106 1
    $delay type_cast_105_inst 10
    // 		iNsTr_9 := (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 73
    // (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
    $S>$S[SGT_f64_u1_111_inst] (iNsTr_8_106 type_cast_110_wire_constant) (iNsTr_9_112)   
    $buffering  $out SGT_f64_u1_111_inst iNsTr_9_112 1
    $delay SGT_f64_u1_111_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 74
    ==0? [if_stmt_113_branch] (iNsTr_9_112)
    // 		iNsTr_11 := ->(scevgep5)
    //  file prog.linked.opt.aa, line 81
    // ->(scevgep5)
    &/ [ptr_deref_122_base_resize] (scevgep5_92) (ptr_deref_122_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_122_root_address_inst] (ptr_deref_122_resized_base_address) (ptr_deref_122_root_address) 
    $flowthrough 
    &/ [ptr_deref_122_addr_0] (ptr_deref_122_root_address) (ptr_deref_122_word_address_0) 
    $flowthrough 
    $load [ptr_deref_122_load_0] $from memory_space_3 (ptr_deref_122_word_address_0) (ptr_deref_122_data_0) 
    $delay ptr_deref_122_load_0 4
    &/ [ptr_deref_122_gather_scatter] (ptr_deref_122_data_0) (iNsTr_11_123) 
    $flowthrough 
    // 		iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
    //  file prog.linked.opt.aa, line 82
    // ($cast ($float<11,52>) iNsTr_11 )
    $F:=$F [type_cast_126_inst] (iNsTr_11_123) (iNsTr_12_127)  
    $buffering  $out type_cast_126_inst iNsTr_12_127 1
    $delay type_cast_126_inst 10
    // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 83
    // (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
    $S>$S[SGT_f64_u1_132_inst] (iNsTr_12_127 type_cast_131_wire_constant) (iNsTr_13_133)   
    $buffering  $out SGT_f64_u1_132_inst iNsTr_13_133 1
    $delay SGT_f64_u1_132_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 84
    ==0? [if_stmt_134_branch] (iNsTr_13_133)
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 91
    // is_decoded
    $store [STORE_is_decoded_141_store_0] $to memory_space_6 (STORE_is_decoded_141_word_address_0 STORE_is_decoded_141_data_0) 
    $delay STORE_is_decoded_141_store_0 4
    &/ [STORE_is_decoded_141_gather_scatter] (type_cast_143_wire_constant) (STORE_is_decoded_141_data_0) 
    $flowthrough 
    // 		->(scevgep5) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    //  file prog.linked.opt.aa, line 95
    // ->(scevgep5)
    &/ [ptr_deref_148_base_resize] (scevgep5_92) (ptr_deref_148_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_148_root_address_inst] (ptr_deref_148_resized_base_address) (ptr_deref_148_root_address) 
    $flowthrough 
    &/ [ptr_deref_148_addr_0] (ptr_deref_148_root_address) (ptr_deref_148_word_address_0) 
    $flowthrough 
    $store [ptr_deref_148_store_0] $to memory_space_3 (ptr_deref_148_word_address_0 ptr_deref_148_data_0) 
    $delay ptr_deref_148_store_0 4
    &/ [ptr_deref_148_gather_scatter] (type_cast_150_wire_constant) (ptr_deref_148_data_0) 
    $flowthrough 
    // 		iNsTr_15 := (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 99
    // (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_158_inst] (iNsTr_8_106 type_cast_157_wire_constant) (iNsTr_15_159)   
    $buffering  $out SLT_f64_u1_158_inst iNsTr_15_159 1
    $delay SLT_f64_u1_158_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 100
    ==0? [if_stmt_160_branch] (iNsTr_15_159)
    // 		iNsTr_21 := ->(scevgep5)
    //  file prog.linked.opt.aa, line 107
    // ->(scevgep5)
    &/ [ptr_deref_169_base_resize] (scevgep5_92) (ptr_deref_169_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_169_root_address_inst] (ptr_deref_169_resized_base_address) (ptr_deref_169_root_address) 
    $flowthrough 
    &/ [ptr_deref_169_addr_0] (ptr_deref_169_root_address) (ptr_deref_169_word_address_0) 
    $flowthrough 
    $load [ptr_deref_169_load_0] $from memory_space_3 (ptr_deref_169_word_address_0) (ptr_deref_169_data_0) 
    $delay ptr_deref_169_load_0 4
    &/ [ptr_deref_169_gather_scatter] (ptr_deref_169_data_0) (iNsTr_21_170) 
    $flowthrough 
    // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_21 )
    //  file prog.linked.opt.aa, line 108
    // ($cast ($float<11,52>) iNsTr_21 )
    $F:=$F [type_cast_173_inst] (iNsTr_21_170) (iNsTr_22_174)  
    $buffering  $out type_cast_173_inst iNsTr_22_174 1
    $delay type_cast_173_inst 10
    // 		iNsTr_23 := (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 109
    // (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_179_inst] (iNsTr_22_174 type_cast_178_wire_constant) (iNsTr_23_180)   
    $buffering  $out SLT_f64_u1_179_inst iNsTr_23_180 1
    $delay SLT_f64_u1_179_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 110
    ==0? [if_stmt_181_branch] (iNsTr_23_180)
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 117
    // is_decoded
    $store [STORE_is_decoded_188_store_0] $to memory_space_6 (STORE_is_decoded_188_word_address_0 STORE_is_decoded_188_data_0) 
    $delay STORE_is_decoded_188_store_0 4
    &/ [STORE_is_decoded_188_gather_scatter] (type_cast_190_wire_constant) (STORE_is_decoded_188_data_0) 
    $flowthrough 
    // 		->(scevgep5) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    //  file prog.linked.opt.aa, line 121
    // ->(scevgep5)
    &/ [ptr_deref_195_base_resize] (scevgep5_92) (ptr_deref_195_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_195_root_address_inst] (ptr_deref_195_resized_base_address) (ptr_deref_195_root_address) 
    $flowthrough 
    &/ [ptr_deref_195_addr_0] (ptr_deref_195_root_address) (ptr_deref_195_word_address_0) 
    $flowthrough 
    $store [ptr_deref_195_store_0] $to memory_space_3 (ptr_deref_195_word_address_0 ptr_deref_195_data_0) 
    $delay ptr_deref_195_store_0 4
    &/ [ptr_deref_195_gather_scatter] (type_cast_197_wire_constant) (ptr_deref_195_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 125
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_205_inst] (indvar_80 type_cast_204_wire_constant) (indvarx_xnext_206)   
    $buffering  $out ADD_u64_u64_205_inst indvarx_xnext_206 1
    $delay ADD_u64_u64_205_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 126
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_210_inst] (indvarx_xnext_206 tmp4_77) (exitcond1_211)   
    $buffering  $out EQ_u64_u1_210_inst exitcond1_211 1
    $delay EQ_u64_u1_210_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 127
    ==0? [if_stmt_212_branch] (exitcond1_211)
  }
  // end data-path
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
  //  file prog.linked.opt.aa, line 50
  // is_decoded
  STORE_is_decoded_27_gather_scatter <=> (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Sample/STORE_is_decoded_27_Split/split_req) (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Sample/STORE_is_decoded_27_Split/split_ack)
  STORE_is_decoded_27_store_0 <=> (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/STORE_is_decoded_27_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := ncols
  //  file prog.linked.opt.aa, line 51
  // ncols
  LOAD_ncols_32_gather_scatter <=> (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Update/LOAD_ncols_32_Merge/merge_req) (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Update/LOAD_ncols_32_Merge/merge_ack)
  LOAD_ncols_32_load_0 <=> (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/LOAD_ncols_32_Update/word_access_complete/word_0/ca)
  // 		iNsTr_2 := (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 52
  // (iNsTr_1 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_1
  EQ_u16_u1_38_inst <=> (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/EQ_u16_u1_38_Sample/rr branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/EQ_u16_u1_38_Update/cr) (branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/EQ_u16_u1_38_Sample/ra branch_block_stmt_26/assign_stmt_30_to_assign_stmt_40/EQ_u16_u1_38_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 53
  if_stmt_41_branch <=> (branch_block_stmt_26/if_stmt_41_eval_test/branch_req) (branch_block_stmt_26/if_stmt_41_else_link/else_choice_transition branch_block_stmt_26/if_stmt_41_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 58
  // 		tmp := (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 60
  // (iNsTr_1 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_1
  UGT_u16_u1_52_inst <=> (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/UGT_u16_u1_52_Sample/rr branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/UGT_u16_u1_52_Update/cr) (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/UGT_u16_u1_52_Sample/ra branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/UGT_u16_u1_52_Update/ca)
  // 		xx_xop := (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 61
  // (iNsTr_1 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_1
  ADD_u16_u16_58_inst <=> (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u16_u16_58_Sample/rr branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u16_u16_58_Update/cr) (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u16_u16_58_Sample/ra branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u16_u16_58_Update/ca)
  // 		iNsTr_5 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 62
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_63_inst <=> (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/type_cast_63_Sample/rr branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/type_cast_63_Update/cr) (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/type_cast_63_Sample/ra branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/type_cast_63_Update/ca)
  // 		xx_xop6 := (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 63
  // (iNsTr_5 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_5
  ADD_u64_u64_69_inst <=> (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u64_u64_69_Sample/rr branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u64_u64_69_Update/cr) (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u64_u64_69_Sample/ra branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/ADD_u64_u64_69_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 64
  // tmp
  // xx_xop6
  // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_76_inst <=> (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/MUX_76_start/req branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/MUX_76_complete/req) (branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/MUX_76_start/ack branch_block_stmt_26/assign_stmt_53_to_assign_stmt_77/MUX_76_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 66
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_86_inst <=> (branch_block_stmt_26/bb_10_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_sources/type_cast_86/SplitProtocol/Sample/rr branch_block_stmt_26/bb_10_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_sources/type_cast_86/SplitProtocol/Update/cr) (branch_block_stmt_26/bb_10_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_sources/type_cast_86/SplitProtocol/Sample/ra branch_block_stmt_26/bb_10_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_sources/type_cast_86/SplitProtocol/Update/ca)
  phi_stmt_80 <=> (branch_block_stmt_26/bbx_xnph_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_req branch_block_stmt_26/bb_10_bb_2_PhiReq/phi_stmt_80/phi_stmt_80_req) (branch_block_stmt_26/merge_stmt_79_PhiAck/phi_stmt_80_ack)
  // 		scevgep5 := @(code_block[indvar])
  //  file prog.linked.opt.aa, line 69
  // indvar
  array_obj_ref_90_index_0_resize <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_index_resize_0/index_resize_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_index_resize_0/index_resize_ack)
  array_obj_ref_90_index_0_rename <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_index_scale_0/scale_rename_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_index_scale_0/scale_rename_ack)
  array_obj_ref_90_index_offset <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_final_index_sum_regn/req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_final_index_sum_regn/ack)
  array_obj_ref_90_root_address_inst <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_90_base_plus_offset/sum_rename_ack)
  addr_of_91_final_reg <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_91_request/req branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_91_complete/req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_91_request/ack branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_91_complete/ack)
  // 		scevgep := @(aPosteriori[indvar])
  //  file prog.linked.opt.aa, line 70
  // indvar
  array_obj_ref_95_index_0_resize <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_index_resize_0/index_resize_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_index_resize_0/index_resize_ack)
  array_obj_ref_95_index_0_rename <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_index_scale_0/scale_rename_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_index_scale_0/scale_rename_ack)
  array_obj_ref_95_index_offset <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_final_index_sum_regn/req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_final_index_sum_regn/ack)
  array_obj_ref_95_root_address_inst <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/array_obj_ref_95_base_plus_offset/sum_rename_ack)
  addr_of_96_final_reg <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_96_request/req branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_96_complete/req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_96_request/ack branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/addr_of_96_complete/ack)
  // 		iNsTr_7 := ->(scevgep)
  //  file prog.linked.opt.aa, line 71
  // scevgep
  ptr_deref_100_base_resize <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_base_addr_resize/base_resize_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_base_addr_resize/base_resize_ack)
  ptr_deref_100_root_address_inst <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_base_plus_offset/sum_rename_ack)
  ptr_deref_100_addr_0 <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_word_addrgen/root_register_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_word_addrgen/root_register_ack)
  ptr_deref_100_gather_scatter <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Update/ptr_deref_100_Merge/merge_req) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Update/ptr_deref_100_Merge/merge_ack)
  ptr_deref_100_load_0 <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/ptr_deref_100_Update/word_access_complete/word_0/ca)
  // 		iNsTr_8 := ($cast ($float<11,52>) iNsTr_7 )
  //  file prog.linked.opt.aa, line 72
  // iNsTr_7
  // ($cast ($float<11,52>) iNsTr_7 )
  type_cast_105_inst <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/type_cast_105_Sample/rr branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/type_cast_105_Update/cr) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/type_cast_105_Sample/ra branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/type_cast_105_Update/ca)
  // 		iNsTr_9 := (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 73
  // (iNsTr_8 > ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_8
  SGT_f64_u1_111_inst <=> (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/SGT_f64_u1_111_Sample/rr branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/SGT_f64_u1_111_Update/cr) (branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/SGT_f64_u1_111_Sample/ra branch_block_stmt_26/assign_stmt_92_to_assign_stmt_112/SGT_f64_u1_111_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 74
  if_stmt_113_branch <=> (branch_block_stmt_26/if_stmt_113_eval_test/branch_req) (branch_block_stmt_26/if_stmt_113_else_link/else_choice_transition branch_block_stmt_26/if_stmt_113_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 79
  // 		iNsTr_11 := ->(scevgep5)
  //  file prog.linked.opt.aa, line 81
  // scevgep5
  ptr_deref_122_base_resize <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_base_addr_resize/base_resize_req) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_base_addr_resize/base_resize_ack)
  ptr_deref_122_root_address_inst <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_base_plus_offset/sum_rename_ack)
  ptr_deref_122_addr_0 <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_word_addrgen/root_register_req) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_word_addrgen/root_register_ack)
  ptr_deref_122_gather_scatter <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Update/ptr_deref_122_Merge/merge_req) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Update/ptr_deref_122_Merge/merge_ack)
  ptr_deref_122_load_0 <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/ptr_deref_122_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := ($cast ($float<11,52>) iNsTr_11 )
  //  file prog.linked.opt.aa, line 82
  // iNsTr_11
  // ($cast ($float<11,52>) iNsTr_11 )
  type_cast_126_inst <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/type_cast_126_Sample/rr branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/type_cast_126_Update/cr) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/type_cast_126_Sample/ra branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/type_cast_126_Update/ca)
  // 		iNsTr_13 := (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 83
  // (iNsTr_12 > ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_12
  SGT_f64_u1_132_inst <=> (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/SGT_f64_u1_132_Sample/rr branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/SGT_f64_u1_132_Update/cr) (branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/SGT_f64_u1_132_Sample/ra branch_block_stmt_26/assign_stmt_123_to_assign_stmt_133/SGT_f64_u1_132_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 84
  if_stmt_134_branch <=> (branch_block_stmt_26/if_stmt_134_eval_test/branch_req) (branch_block_stmt_26/if_stmt_134_else_link/else_choice_transition branch_block_stmt_26/if_stmt_134_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 89
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
  //  file prog.linked.opt.aa, line 91
  // is_decoded
  STORE_is_decoded_141_gather_scatter <=> (branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Sample/STORE_is_decoded_141_Split/split_req) (branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Sample/STORE_is_decoded_141_Split/split_ack)
  STORE_is_decoded_141_store_0 <=> (branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_144/STORE_is_decoded_141_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 93
  // 		->(scevgep5) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
  //  file prog.linked.opt.aa, line 95
  // scevgep5
  ptr_deref_148_base_resize <=> (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_base_addr_resize/base_resize_req) (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_base_addr_resize/base_resize_ack)
  ptr_deref_148_root_address_inst <=> (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_base_plus_offset/sum_rename_ack)
  ptr_deref_148_addr_0 <=> (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_word_addrgen/root_register_req) (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_word_addrgen/root_register_ack)
  ptr_deref_148_gather_scatter <=> (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Sample/ptr_deref_148_Split/split_req) (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Sample/ptr_deref_148_Split/split_ack)
  ptr_deref_148_store_0 <=> (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_151/ptr_deref_148_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 97
  // 		iNsTr_15 := (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 99
  // (iNsTr_8 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_8
  SLT_f64_u1_158_inst <=> (branch_block_stmt_26/assign_stmt_159/SLT_f64_u1_158_Sample/rr branch_block_stmt_26/assign_stmt_159/SLT_f64_u1_158_Update/cr) (branch_block_stmt_26/assign_stmt_159/SLT_f64_u1_158_Sample/ra branch_block_stmt_26/assign_stmt_159/SLT_f64_u1_158_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 100
  if_stmt_160_branch <=> (branch_block_stmt_26/if_stmt_160_eval_test/branch_req) (branch_block_stmt_26/if_stmt_160_else_link/else_choice_transition branch_block_stmt_26/if_stmt_160_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 105
  // 		iNsTr_21 := ->(scevgep5)
  //  file prog.linked.opt.aa, line 107
  // scevgep5
  ptr_deref_169_base_resize <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_base_addr_resize/base_resize_req) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_base_addr_resize/base_resize_ack)
  ptr_deref_169_root_address_inst <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_base_plus_offset/sum_rename_ack)
  ptr_deref_169_addr_0 <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_word_addrgen/root_register_req) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_word_addrgen/root_register_ack)
  ptr_deref_169_gather_scatter <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Update/ptr_deref_169_Merge/merge_req) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Update/ptr_deref_169_Merge/merge_ack)
  ptr_deref_169_load_0 <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/ptr_deref_169_Update/word_access_complete/word_0/ca)
  // 		iNsTr_22 := ($cast ($float<11,52>) iNsTr_21 )
  //  file prog.linked.opt.aa, line 108
  // iNsTr_21
  // ($cast ($float<11,52>) iNsTr_21 )
  type_cast_173_inst <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/type_cast_173_Sample/rr branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/type_cast_173_Update/cr) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/type_cast_173_Sample/ra branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/type_cast_173_Update/ca)
  // 		iNsTr_23 := (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 109
  // (iNsTr_22 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_22
  SLT_f64_u1_179_inst <=> (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/SLT_f64_u1_179_Sample/rr branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/SLT_f64_u1_179_Update/cr) (branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/SLT_f64_u1_179_Sample/ra branch_block_stmt_26/assign_stmt_170_to_assign_stmt_180/SLT_f64_u1_179_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 110
  if_stmt_181_branch <=> (branch_block_stmt_26/if_stmt_181_eval_test/branch_req) (branch_block_stmt_26/if_stmt_181_else_link/else_choice_transition branch_block_stmt_26/if_stmt_181_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 115
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
  //  file prog.linked.opt.aa, line 117
  // is_decoded
  STORE_is_decoded_188_gather_scatter <=> (branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Sample/STORE_is_decoded_188_Split/split_req) (branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Sample/STORE_is_decoded_188_Split/split_ack)
  STORE_is_decoded_188_store_0 <=> (branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_191/STORE_is_decoded_188_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 119
  // 		->(scevgep5) := ($bitcast ($float<8,23>) _f1.000000e+00 )
  //  file prog.linked.opt.aa, line 121
  // scevgep5
  ptr_deref_195_base_resize <=> (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_base_addr_resize/base_resize_req) (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_base_addr_resize/base_resize_ack)
  ptr_deref_195_root_address_inst <=> (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_base_plus_offset/sum_rename_req) (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_base_plus_offset/sum_rename_ack)
  ptr_deref_195_addr_0 <=> (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_word_addrgen/root_register_req) (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_word_addrgen/root_register_ack)
  ptr_deref_195_gather_scatter <=> (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Sample/ptr_deref_195_Split/split_req) (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Sample/ptr_deref_195_Split/split_ack)
  ptr_deref_195_store_0 <=> (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Sample/word_access_start/word_0/rr branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Update/word_access_complete/word_0/cr) (branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Sample/word_access_start/word_0/ra branch_block_stmt_26/assign_stmt_198/ptr_deref_195_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 123
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 125
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_205_inst <=> (branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/ADD_u64_u64_205_Sample/rr branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/ADD_u64_u64_205_Update/cr) (branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/ADD_u64_u64_205_Sample/ra branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/ADD_u64_u64_205_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 126
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_210_inst <=> (branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/EQ_u64_u1_210_Sample/rr branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/EQ_u64_u1_210_Update/cr) (branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/EQ_u64_u1_210_Sample/ra branch_block_stmt_26/assign_stmt_206_to_assign_stmt_211/EQ_u64_u1_210_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 127
  if_stmt_212_branch <=> (branch_block_stmt_26/if_stmt_212_eval_test/branch_req) (branch_block_stmt_26/if_stmt_212_else_link/else_choice_transition branch_block_stmt_26/if_stmt_212_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 132
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 135
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 138
}
$module [checkNodeComputeEngine] 
{
  // pipe-declarations for block %checkNodeComputeEngine
  //  file prog.linked.opt.aa, line 142
  // pipe-declarations for block %checkNodeComputeEngine%body
  //  file prog.linked.opt.aa, line 147
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 156
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 159
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 179
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 189
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 196
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 205
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 214
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 219
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 236
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 240
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 249
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 260
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 268
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 271
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 283
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 300
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 303
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 311
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 314
  // pipe-declarations for block %checkNodeComputeEngine%body%
  //  file prog.linked.opt.aa, line 317
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_226] // Branch Block  file prog.linked.opt.aa, line 147
    {
      $P [branch_block_stmt_226__entry__]
      branch_block_stmt_226__entry__ <-| ($entry)
      $P [branch_block_stmt_226__exit__]
      branch_block_stmt_226__exit__ |-> ($exit)
      $P [assign_stmt_229_to_assign_stmt_235__entry__] 
      $P [assign_stmt_229_to_assign_stmt_235__exit__] 
      $P [if_stmt_236__entry__] 
      $P [if_stmt_236__exit__] 
      $P [merge_stmt_242__entry__] 
      $P [merge_stmt_242__exit__] 
      $P [bbx_xnph11x_xpreheader_bbx_xnph11]
      $P [merge_stmt_244__exit__] 
      $P [assign_stmt_258_to_assign_stmt_309__entry__] 
      $P [assign_stmt_258_to_assign_stmt_309__exit__] 
      $P [if_stmt_310__entry__] 
      $P [if_stmt_310__exit__] 
      $P [merge_stmt_316__entry__] 
      $P [merge_stmt_316__exit__] 
      $P [assign_stmt_322_to_assign_stmt_350__entry__] 
      $P [assign_stmt_322_to_assign_stmt_350__exit__] 
      $P [bb_4_bb_5]
      $P [merge_stmt_352__exit__] 
      $P [assign_stmt_357_to_assign_stmt_372__entry__] 
      $P [assign_stmt_357_to_assign_stmt_372__exit__] 
      $P [bb_3_bb_5]
      $P [merge_stmt_374__exit__] 
      $P [assign_stmt_387__entry__] 
      $P [assign_stmt_387__exit__] 
      $P [if_stmt_388__entry__] 
      $P [if_stmt_388__exit__] 
      $P [merge_stmt_394__entry__] 
      $P [merge_stmt_394__exit__] 
      $P [assign_stmt_398_to_assign_stmt_424__entry__] 
      $P [assign_stmt_398_to_assign_stmt_424__exit__] 
      $P [bbx_xnph8_bbx_xnph]
      $P [merge_stmt_426__exit__] 
      $P [assign_stmt_439__entry__] 
      $P [assign_stmt_439__exit__] 
      $P [bbx_xnph_bb_8]
      $P [merge_stmt_441__exit__] 
      $P [assign_stmt_476_to_assign_stmt_499__entry__] 
      $P [assign_stmt_476_to_assign_stmt_499__exit__] 
      $P [if_stmt_500__entry__] 
      $P [if_stmt_500__exit__] 
      $P [merge_stmt_506__entry__] 
      $P [merge_stmt_506__exit__] 
      $P [assign_stmt_512__entry__] 
      $P [assign_stmt_512__exit__] 
      $P [bb_9_bb_10]
      $P [merge_stmt_514__exit__] 
      $P [assign_stmt_526__entry__] 
      $P [assign_stmt_526__exit__] 
      $P [if_stmt_527__entry__] 
      $P [if_stmt_527__exit__] 
      $P [merge_stmt_533__entry__] 
      $P [merge_stmt_533__exit__] 
      $P [assign_stmt_539_to_assign_stmt_554__entry__] 
      $P [assign_stmt_539_to_assign_stmt_554__exit__] 
      $P [if_stmt_555__entry__] 
      $P [if_stmt_555__exit__] 
      $P [merge_stmt_561__entry__] 
      $P [merge_stmt_561__exit__] 
      $P [assign_stmt_566__entry__] 
      $P [assign_stmt_566__exit__] 
      $P [if_stmt_567__entry__] 
      $P [if_stmt_567__exit__] 
      $P [merge_stmt_573__entry__] 
      $P [merge_stmt_573__exit__] 
      $P [bb_13_bb_14]
      $P [merge_stmt_575__exit__] 
      $P [assign_stmt_615_to_assign_stmt_620__entry__] 
      $P [assign_stmt_615_to_assign_stmt_620__exit__] 
      $P [if_stmt_621__entry__] 
      $P [if_stmt_621__exit__] 
      $P [merge_stmt_627__entry__] 
      $P [merge_stmt_627__exit__] 
      $P [assign_stmt_642_to_assign_stmt_679__entry__] 
      $P [assign_stmt_642_to_assign_stmt_679__exit__] 
      $P [if_stmt_680__entry__] 
      $P [if_stmt_680__exit__] 
      $P [merge_stmt_686__entry__] 
      $P [merge_stmt_686__exit__] 
      $P [xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9]
      $P [merge_stmt_688__exit__] 
      $P [assign_stmt_693__entry__] 
      $P [assign_stmt_693__exit__] 
      $P [if_stmt_694__entry__] 
      $P [if_stmt_694__exit__] 
      $P [merge_stmt_700__entry__] 
      $P [merge_stmt_700__exit__] 
      $P [xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12]
      $P [merge_stmt_702__exit__] 
      $P [return__]
      $P [merge_stmt_704__exit__] 
      ::[assign_stmt_229_to_assign_stmt_235] 
      {
        // start:  		iNsTr_0 := nrows
        //  file prog.linked.opt.aa, line 149
        // Source expression
        // nrows
        $T[LOAD_nrows_228_sample_start_] 
        $T[LOAD_nrows_228_sample_completed_] 
        $T[LOAD_nrows_228_update_start_] 
        $T[LOAD_nrows_228_update_completed_] 
        $T[LOAD_nrows_228_word_address_calculated] 
        $T[LOAD_nrows_228_root_address_calculated] 
        LOAD_nrows_228_word_address_calculated <-& (LOAD_nrows_228_root_address_calculated)
        ;;[LOAD_nrows_228_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_nrows_228_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_nrows_228_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_nrows_228_sample_start_ <-& (LOAD_nrows_228_word_address_calculated)
        LOAD_nrows_228_sample_start_ &-> (LOAD_nrows_228_Sample)
        LOAD_nrows_228_sample_completed_ <-& (LOAD_nrows_228_Sample)
        LOAD_nrows_228_sample_completed_ &-> ($null)
        LOAD_nrows_228_update_start_ &-> (LOAD_nrows_228_Update)
        LOAD_nrows_228_update_completed_ <-& (LOAD_nrows_228_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := nrows
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 150
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_234_sample_start_] 
        $T[EQ_u16_u1_234_sample_completed_] 
        $T[EQ_u16_u1_234_update_start_] 
        $T[EQ_u16_u1_234_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_234_sample_start_
        EQ_u16_u1_234_sample_start_ <-& (LOAD_nrows_228_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_234_sample_start_
        ;;[EQ_u16_u1_234_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_234_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_234_sample_start_ &-> (EQ_u16_u1_234_Sample)
        EQ_u16_u1_234_sample_completed_ <-& (EQ_u16_u1_234_Sample)
        EQ_u16_u1_234_sample_completed_ &-> ($null)
        EQ_u16_u1_234_update_start_ &-> (EQ_u16_u1_234_Update)
        EQ_u16_u1_234_update_completed_ <-& (EQ_u16_u1_234_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_229_to_assign_stmt_235__entry__ |-> (assign_stmt_229_to_assign_stmt_235)
      assign_stmt_229_to_assign_stmt_235__exit__ <-| (assign_stmt_229_to_assign_stmt_235)
      // if-statement  
      //  file prog.linked.opt.aa, line 151
      ;;[if_stmt_236_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_dead_link)
      if_stmt_236__exit__ <-| (if_stmt_236_dead_link)
      ;;[if_stmt_236_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_236__entry__ |-> (if_stmt_236_eval_test)
      $P [R_iNsTr_1_237_place]
      R_iNsTr_1_237_place <-| (if_stmt_236_eval_test)
      ;;[if_stmt_236_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_236_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_237_place |-> (if_stmt_236_if_link if_stmt_236_else_link)
      $P [bb_0_xx_x_crit_edge12]
      bb_0_xx_x_crit_edge12 <-| (if_stmt_236_if_link)
      $P [bb_0_bbx_xnph11x_xpreheader]
      bb_0_bbx_xnph11x_xpreheader <-| (if_stmt_236_else_link)
      ::[assign_stmt_258_to_assign_stmt_309] 
      {
        // start:  		tmp17 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 162
        // Source expression
        // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_257_sample_start_] 
        $T[ADD_u16_u16_257_sample_completed_] 
        $T[ADD_u16_u16_257_update_start_] 
        $T[ADD_u16_u16_257_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition ADD_u16_u16_257_sample_start_
        // done: Forward dependencies from iNsTr_5 to transition ADD_u16_u16_257_sample_start_
        ;;[ADD_u16_u16_257_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_257_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_257_sample_start_ &-> (ADD_u16_u16_257_Sample)
        ADD_u16_u16_257_sample_completed_ <-& (ADD_u16_u16_257_Sample)
        ADD_u16_u16_257_sample_completed_ &-> ($null)
        ADD_u16_u16_257_update_start_ &-> (ADD_u16_u16_257_Update)
        ADD_u16_u16_257_update_completed_ <-& (ADD_u16_u16_257_Update)
        // Target expression
        // (as target) tmp17
        // start: WAR dependencies for tmp17
        // done: WAR dependencies for tmp17
        // end:  		tmp17 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 163
        // Source expression
        // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_263_sample_start_] 
        $T[ADD_u16_u16_263_sample_completed_] 
        $T[ADD_u16_u16_263_update_start_] 
        $T[ADD_u16_u16_263_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition ADD_u16_u16_263_sample_start_
        // done: Forward dependencies from iNsTr_5 to transition ADD_u16_u16_263_sample_start_
        ;;[ADD_u16_u16_263_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_263_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_263_sample_start_ &-> (ADD_u16_u16_263_Sample)
        ADD_u16_u16_263_sample_completed_ <-& (ADD_u16_u16_263_Sample)
        ADD_u16_u16_263_sample_completed_ &-> ($null)
        ADD_u16_u16_263_update_start_ &-> (ADD_u16_u16_263_Update)
        ADD_u16_u16_263_update_completed_ <-& (ADD_u16_u16_263_Update)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		iNsTr_8 := ncol_ind
        //  file prog.linked.opt.aa, line 164
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_266_sample_start_] 
        $T[LOAD_ncol_ind_266_sample_completed_] 
        $T[LOAD_ncol_ind_266_update_start_] 
        $T[LOAD_ncol_ind_266_update_completed_] 
        $T[LOAD_ncol_ind_266_word_address_calculated] 
        $T[LOAD_ncol_ind_266_root_address_calculated] 
        LOAD_ncol_ind_266_word_address_calculated <-& (LOAD_ncol_ind_266_root_address_calculated)
        ;;[LOAD_ncol_ind_266_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_266_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_266_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_266_sample_start_ <-& (LOAD_ncol_ind_266_word_address_calculated)
        LOAD_ncol_ind_266_sample_start_ &-> (LOAD_ncol_ind_266_Sample)
        LOAD_ncol_ind_266_sample_completed_ <-& (LOAD_ncol_ind_266_Sample)
        LOAD_ncol_ind_266_sample_completed_ &-> ($null)
        LOAD_ncol_ind_266_update_start_ &-> (LOAD_ncol_ind_266_Update)
        LOAD_ncol_ind_266_update_completed_ <-& (LOAD_ncol_ind_266_Update)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := ncol_ind
        // start:  		iNsTr_9 := ($cast ($uint<32>) iNsTr_5 )
        //  file prog.linked.opt.aa, line 165
        // Source expression
        // ($cast ($uint<32>) iNsTr_5 )
        $T[type_cast_271_sample_start_] 
        $T[type_cast_271_sample_completed_] 
        $T[type_cast_271_update_start_] 
        $T[type_cast_271_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition type_cast_271_sample_start_
        // done: Forward dependencies from iNsTr_5 to transition type_cast_271_sample_start_
        ;;[type_cast_271_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_271_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_271_sample_start_ &-> (type_cast_271_Sample)
        type_cast_271_sample_completed_ <-& (type_cast_271_Sample)
        type_cast_271_sample_completed_ &-> ($null)
        type_cast_271_update_start_ &-> (type_cast_271_Update)
        type_cast_271_update_completed_ <-& (type_cast_271_Update)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := ($cast ($uint<32>) iNsTr_5 )
        // start:  		iNsTr_10 := nrows
        //  file prog.linked.opt.aa, line 166
        // Source expression
        // nrows
        $T[LOAD_nrows_274_sample_start_] 
        $T[LOAD_nrows_274_sample_completed_] 
        $T[LOAD_nrows_274_update_start_] 
        $T[LOAD_nrows_274_update_completed_] 
        $T[LOAD_nrows_274_word_address_calculated] 
        $T[LOAD_nrows_274_root_address_calculated] 
        LOAD_nrows_274_word_address_calculated <-& (LOAD_nrows_274_root_address_calculated)
        ;;[LOAD_nrows_274_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_nrows_274_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_nrows_274_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_nrows_274_sample_start_ <-& (LOAD_nrows_274_word_address_calculated)
        LOAD_nrows_274_sample_start_ &-> (LOAD_nrows_274_Sample)
        LOAD_nrows_274_sample_completed_ <-& (LOAD_nrows_274_Sample)
        LOAD_nrows_274_sample_completed_ &-> ($null)
        LOAD_nrows_274_update_start_ &-> (LOAD_nrows_274_Update)
        LOAD_nrows_274_update_completed_ <-& (LOAD_nrows_274_Update)
        // Target expression
        // (as target) iNsTr_10
        // start: WAR dependencies for iNsTr_10
        // done: WAR dependencies for iNsTr_10
        // end:  		iNsTr_10 := nrows
        // start:  		iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
        //  file prog.linked.opt.aa, line 167
        // Source expression
        // ($cast ($uint<32>) iNsTr_10 )
        $T[type_cast_278_sample_start_] 
        $T[type_cast_278_sample_completed_] 
        $T[type_cast_278_update_start_] 
        $T[type_cast_278_update_completed_] 
        // iNsTr_10
        // start: Forward dependencies from iNsTr_10 to transition type_cast_278_sample_start_
        type_cast_278_sample_start_ <-& (LOAD_nrows_274_update_completed_)
        // done: Forward dependencies from iNsTr_10 to transition type_cast_278_sample_start_
        ;;[type_cast_278_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_278_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_278_sample_start_ &-> (type_cast_278_Sample)
        type_cast_278_sample_completed_ <-& (type_cast_278_Sample)
        type_cast_278_sample_completed_ &-> ($null)
        type_cast_278_update_start_ &-> (type_cast_278_Update)
        type_cast_278_update_completed_ <-& (type_cast_278_Update)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
        // start:  		iNsTr_12 := (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 168
        // Source expression
        // (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_284_sample_start_] 
        $T[ADD_u32_u32_284_sample_completed_] 
        $T[ADD_u32_u32_284_update_start_] 
        $T[ADD_u32_u32_284_update_completed_] 
        // iNsTr_11
        // start: Forward dependencies from iNsTr_11 to transition ADD_u32_u32_284_sample_start_
        ADD_u32_u32_284_sample_start_ <-& (type_cast_278_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition ADD_u32_u32_284_sample_start_
        ;;[ADD_u32_u32_284_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_284_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_284_sample_start_ &-> (ADD_u32_u32_284_Sample)
        ADD_u32_u32_284_sample_completed_ <-& (ADD_u32_u32_284_Sample)
        ADD_u32_u32_284_sample_completed_ &-> ($null)
        ADD_u32_u32_284_update_start_ &-> (ADD_u32_u32_284_Update)
        ADD_u32_u32_284_update_completed_ <-& (ADD_u32_u32_284_Update)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // start:  		iNsTr_13 := (iNsTr_9 == iNsTr_12)
        //  file prog.linked.opt.aa, line 169
        // Source expression
        // (iNsTr_9 == iNsTr_12)
        $T[EQ_u32_u1_289_sample_start_] 
        $T[EQ_u32_u1_289_sample_completed_] 
        $T[EQ_u32_u1_289_update_start_] 
        $T[EQ_u32_u1_289_update_completed_] 
        // iNsTr_9
        // iNsTr_12
        // start: Forward dependencies from iNsTr_9 to transition EQ_u32_u1_289_sample_start_
        EQ_u32_u1_289_sample_start_ <-& (type_cast_271_update_completed_)
        // done: Forward dependencies from iNsTr_9 to transition EQ_u32_u1_289_sample_start_
        // start: Forward dependencies from iNsTr_12 to transition EQ_u32_u1_289_sample_start_
        EQ_u32_u1_289_sample_start_ <-& (ADD_u32_u32_284_update_completed_)
        // done: Forward dependencies from iNsTr_12 to transition EQ_u32_u1_289_sample_start_
        ;;[EQ_u32_u1_289_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_289_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_289_sample_start_ &-> (EQ_u32_u1_289_Sample)
        EQ_u32_u1_289_sample_completed_ <-& (EQ_u32_u1_289_Sample)
        EQ_u32_u1_289_sample_completed_ &-> ($null)
        EQ_u32_u1_289_update_start_ &-> (EQ_u32_u1_289_Update)
        EQ_u32_u1_289_update_completed_ <-& (EQ_u32_u1_289_Update)
        // Target expression
        // (as target) iNsTr_13
        // start: WAR dependencies for iNsTr_13
        // done: WAR dependencies for iNsTr_13
        // end:  		iNsTr_13 := (iNsTr_9 == iNsTr_12)
        // start:  		iNsTr_14 := ($cast ($uint<64>) iNsTr_8 )
        //  file prog.linked.opt.aa, line 170
        // Source expression
        // ($cast ($uint<64>) iNsTr_8 )
        $T[type_cast_293_sample_start_] 
        $T[type_cast_293_sample_completed_] 
        $T[type_cast_293_update_start_] 
        $T[type_cast_293_update_completed_] 
        // iNsTr_8
        // start: Forward dependencies from iNsTr_8 to transition type_cast_293_sample_start_
        type_cast_293_sample_start_ <-& (LOAD_ncol_ind_266_update_completed_)
        // done: Forward dependencies from iNsTr_8 to transition type_cast_293_sample_start_
        ;;[type_cast_293_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_293_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_293_sample_start_ &-> (type_cast_293_Sample)
        type_cast_293_sample_completed_ <-& (type_cast_293_Sample)
        type_cast_293_sample_completed_ &-> ($null)
        type_cast_293_update_start_ &-> (type_cast_293_Update)
        type_cast_293_update_completed_ <-& (type_cast_293_Update)
        // Target expression
        // (as target) iNsTr_14
        // start: WAR dependencies for iNsTr_14
        // done: WAR dependencies for iNsTr_14
        // end:  		iNsTr_14 := ($cast ($uint<64>) iNsTr_8 )
        // start:  		iNsTr_15 := ($cast ($uint<64>) iNsTr_5 )
        //  file prog.linked.opt.aa, line 171
        // Source expression
        // ($cast ($uint<64>) iNsTr_5 )
        $T[type_cast_297_sample_start_] 
        $T[type_cast_297_sample_completed_] 
        $T[type_cast_297_update_start_] 
        $T[type_cast_297_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition type_cast_297_sample_start_
        // done: Forward dependencies from iNsTr_5 to transition type_cast_297_sample_start_
        ;;[type_cast_297_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_297_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_297_sample_start_ &-> (type_cast_297_Sample)
        type_cast_297_sample_completed_ <-& (type_cast_297_Sample)
        type_cast_297_sample_completed_ &-> ($null)
        type_cast_297_update_start_ &-> (type_cast_297_Update)
        type_cast_297_update_completed_ <-& (type_cast_297_Update)
        // Target expression
        // (as target) iNsTr_15
        // start: WAR dependencies for iNsTr_15
        // done: WAR dependencies for iNsTr_15
        // end:  		iNsTr_15 := ($cast ($uint<64>) iNsTr_5 )
        // start:  		iNsTr_16 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 172
        // Source expression
        // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_303_sample_start_] 
        $T[ADD_u64_u64_303_sample_completed_] 
        $T[ADD_u64_u64_303_update_start_] 
        $T[ADD_u64_u64_303_update_completed_] 
        // iNsTr_15
        // start: Forward dependencies from iNsTr_15 to transition ADD_u64_u64_303_sample_start_
        ADD_u64_u64_303_sample_start_ <-& (type_cast_297_update_completed_)
        // done: Forward dependencies from iNsTr_15 to transition ADD_u64_u64_303_sample_start_
        ;;[ADD_u64_u64_303_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_303_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_303_sample_start_ &-> (ADD_u64_u64_303_Sample)
        ADD_u64_u64_303_sample_completed_ <-& (ADD_u64_u64_303_Sample)
        ADD_u64_u64_303_sample_completed_ &-> ($null)
        ADD_u64_u64_303_update_start_ &-> (ADD_u64_u64_303_Update)
        ADD_u64_u64_303_update_completed_ <-& (ADD_u64_u64_303_Update)
        // Target expression
        // (as target) iNsTr_16
        // start: WAR dependencies for iNsTr_16
        // done: WAR dependencies for iNsTr_16
        // end:  		iNsTr_16 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		iNsTr_17 := (iNsTr_16 + iNsTr_14)
        //  file prog.linked.opt.aa, line 173
        // Source expression
        // (iNsTr_16 + iNsTr_14)
        $T[ADD_u64_u64_308_sample_start_] 
        $T[ADD_u64_u64_308_sample_completed_] 
        $T[ADD_u64_u64_308_update_start_] 
        $T[ADD_u64_u64_308_update_completed_] 
        // iNsTr_16
        // iNsTr_14
        // start: Forward dependencies from iNsTr_16 to transition ADD_u64_u64_308_sample_start_
        ADD_u64_u64_308_sample_start_ <-& (ADD_u64_u64_303_update_completed_)
        // done: Forward dependencies from iNsTr_16 to transition ADD_u64_u64_308_sample_start_
        // start: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_308_sample_start_
        ADD_u64_u64_308_sample_start_ <-& (type_cast_293_update_completed_)
        // done: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_308_sample_start_
        ;;[ADD_u64_u64_308_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_308_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_308_sample_start_ &-> (ADD_u64_u64_308_Sample)
        ADD_u64_u64_308_sample_completed_ <-& (ADD_u64_u64_308_Sample)
        ADD_u64_u64_308_sample_completed_ &-> ($null)
        ADD_u64_u64_308_update_start_ &-> (ADD_u64_u64_308_Update)
        ADD_u64_u64_308_update_completed_ <-& (ADD_u64_u64_308_Update)
        // Target expression
        // (as target) iNsTr_17
        // start: WAR dependencies for iNsTr_17
        // done: WAR dependencies for iNsTr_17
        // end:  		iNsTr_17 := (iNsTr_16 + iNsTr_14)
        // load-store dependencies..
      }
      assign_stmt_258_to_assign_stmt_309__entry__ |-> (assign_stmt_258_to_assign_stmt_309)
      assign_stmt_258_to_assign_stmt_309__exit__ <-| (assign_stmt_258_to_assign_stmt_309)
      // if-statement  
      //  file prog.linked.opt.aa, line 174
      ;;[if_stmt_310_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_310__entry__ |-> (if_stmt_310_dead_link)
      if_stmt_310__exit__ <-| (if_stmt_310_dead_link)
      ;;[if_stmt_310_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_310__entry__ |-> (if_stmt_310_eval_test)
      $P [R_iNsTr_13_311_place]
      R_iNsTr_13_311_place <-| (if_stmt_310_eval_test)
      ;;[if_stmt_310_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_310_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_13_311_place |-> (if_stmt_310_if_link if_stmt_310_else_link)
      $P [bbx_xnph11_bb_3]
      bbx_xnph11_bb_3 <-| (if_stmt_310_if_link)
      $P [bbx_xnph11_bb_4]
      bbx_xnph11_bb_4 <-| (if_stmt_310_else_link)
      ::[assign_stmt_322_to_assign_stmt_350] 
      {
        // start:  		iNsTr_23 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        //  file prog.linked.opt.aa, line 181
        // Source expression
        // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        $T[ADD_u64_u64_321_sample_start_] 
        $T[ADD_u64_u64_321_sample_completed_] 
        $T[ADD_u64_u64_321_update_start_] 
        $T[ADD_u64_u64_321_update_completed_] 
        // iNsTr_15
        // start: Forward dependencies from iNsTr_15 to transition ADD_u64_u64_321_sample_start_
        // done: Forward dependencies from iNsTr_15 to transition ADD_u64_u64_321_sample_start_
        ;;[ADD_u64_u64_321_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_321_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_321_sample_start_ &-> (ADD_u64_u64_321_Sample)
        ADD_u64_u64_321_sample_completed_ <-& (ADD_u64_u64_321_Sample)
        ADD_u64_u64_321_sample_completed_ &-> ($null)
        ADD_u64_u64_321_update_start_ &-> (ADD_u64_u64_321_Update)
        ADD_u64_u64_321_update_completed_ <-& (ADD_u64_u64_321_Update)
        // Target expression
        // (as target) iNsTr_23
        // start: WAR dependencies for iNsTr_23
        // done: WAR dependencies for iNsTr_23
        // end:  		iNsTr_23 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        // start:  		iNsTr_24 := (iNsTr_23 + iNsTr_14)
        //  file prog.linked.opt.aa, line 182
        // Source expression
        // (iNsTr_23 + iNsTr_14)
        $T[ADD_u64_u64_326_sample_start_] 
        $T[ADD_u64_u64_326_sample_completed_] 
        $T[ADD_u64_u64_326_update_start_] 
        $T[ADD_u64_u64_326_update_completed_] 
        // iNsTr_23
        // iNsTr_14
        // start: Forward dependencies from iNsTr_23 to transition ADD_u64_u64_326_sample_start_
        ADD_u64_u64_326_sample_start_ <-& (ADD_u64_u64_321_update_completed_)
        // done: Forward dependencies from iNsTr_23 to transition ADD_u64_u64_326_sample_start_
        // start: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_326_sample_start_
        // done: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_326_sample_start_
        ;;[ADD_u64_u64_326_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_326_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_326_sample_start_ &-> (ADD_u64_u64_326_Sample)
        ADD_u64_u64_326_sample_completed_ <-& (ADD_u64_u64_326_Sample)
        ADD_u64_u64_326_sample_completed_ &-> ($null)
        ADD_u64_u64_326_update_start_ &-> (ADD_u64_u64_326_Update)
        ADD_u64_u64_326_update_completed_ <-& (ADD_u64_u64_326_Update)
        // Target expression
        // (as target) iNsTr_24
        // start: WAR dependencies for iNsTr_24
        // done: WAR dependencies for iNsTr_24
        // end:  		iNsTr_24 := (iNsTr_23 + iNsTr_14)
        // start:  		iNsTr_25 := @(mem[iNsTr_17])
        //  file prog.linked.opt.aa, line 183
        // Source expression
        // @(mem[iNsTr_17])
        $T[addr_of_331_sample_start_] 
        $T[addr_of_331_sample_completed_] 
        $T[addr_of_331_update_start_] 
        $T[addr_of_331_update_completed_] 
        $T[array_obj_ref_330_root_address_calculated] 
        $T[array_obj_ref_330_offset_calculated] 
        $T[array_obj_ref_330_index_resized_0] 
        $T[array_obj_ref_330_index_scaled_0] 
        $T[array_obj_ref_330_index_computed_0] 
        // iNsTr_17
        // start: Forward dependencies from iNsTr_17 to transition array_obj_ref_330_index_computed_0
        // done: Forward dependencies from iNsTr_17 to transition array_obj_ref_330_index_computed_0
        ;;[array_obj_ref_330_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_330_index_computed_0 &-> (array_obj_ref_330_index_resize_0)
        array_obj_ref_330_index_resized_0 <-& (array_obj_ref_330_index_resize_0)
        ;;[array_obj_ref_330_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_330_index_resized_0 &-> (array_obj_ref_330_index_scale_0)
        array_obj_ref_330_index_scaled_0 <-& (array_obj_ref_330_index_scale_0)
        ;;[array_obj_ref_330_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_330_index_scaled_0 &-> (array_obj_ref_330_final_index_sum_regn)
        array_obj_ref_330_offset_calculated <-& (array_obj_ref_330_final_index_sum_regn)
        ;;[array_obj_ref_330_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_330_offset_calculated &-> (array_obj_ref_330_base_plus_offset)
        array_obj_ref_330_root_address_calculated <-& (array_obj_ref_330_base_plus_offset)
        ;;[addr_of_331_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_331_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_331_sample_start_ <-& (array_obj_ref_330_root_address_calculated)
        addr_of_331_sample_start_ &-> (addr_of_331_request)
        addr_of_331_sample_completed_ <-& (addr_of_331_request)
        addr_of_331_update_start_ &-> (addr_of_331_complete)
        addr_of_331_update_completed_ <-& (addr_of_331_complete)
        // Target expression
        // (as target) iNsTr_25
        // start: WAR dependencies for iNsTr_25
        // done: WAR dependencies for iNsTr_25
        // end:  		iNsTr_25 := @(mem[iNsTr_17])
        // start:  		iNsTr_26 := @(mem[iNsTr_24])
        //  file prog.linked.opt.aa, line 184
        // Source expression
        // @(mem[iNsTr_24])
        $T[addr_of_336_sample_start_] 
        $T[addr_of_336_sample_completed_] 
        $T[addr_of_336_update_start_] 
        $T[addr_of_336_update_completed_] 
        $T[array_obj_ref_335_root_address_calculated] 
        $T[array_obj_ref_335_offset_calculated] 
        $T[array_obj_ref_335_index_resized_0] 
        $T[array_obj_ref_335_index_scaled_0] 
        $T[array_obj_ref_335_index_computed_0] 
        // iNsTr_24
        // start: Forward dependencies from iNsTr_24 to transition array_obj_ref_335_index_computed_0
        array_obj_ref_335_index_computed_0 <-& (ADD_u64_u64_326_update_completed_)
        // done: Forward dependencies from iNsTr_24 to transition array_obj_ref_335_index_computed_0
        ;;[array_obj_ref_335_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_335_index_computed_0 &-> (array_obj_ref_335_index_resize_0)
        array_obj_ref_335_index_resized_0 <-& (array_obj_ref_335_index_resize_0)
        ;;[array_obj_ref_335_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_335_index_resized_0 &-> (array_obj_ref_335_index_scale_0)
        array_obj_ref_335_index_scaled_0 <-& (array_obj_ref_335_index_scale_0)
        ;;[array_obj_ref_335_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_335_index_scaled_0 &-> (array_obj_ref_335_final_index_sum_regn)
        array_obj_ref_335_offset_calculated <-& (array_obj_ref_335_final_index_sum_regn)
        ;;[array_obj_ref_335_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_335_offset_calculated &-> (array_obj_ref_335_base_plus_offset)
        array_obj_ref_335_root_address_calculated <-& (array_obj_ref_335_base_plus_offset)
        ;;[addr_of_336_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_336_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_336_sample_start_ <-& (array_obj_ref_335_root_address_calculated)
        addr_of_336_sample_start_ &-> (addr_of_336_request)
        addr_of_336_sample_completed_ <-& (addr_of_336_request)
        addr_of_336_update_start_ &-> (addr_of_336_complete)
        addr_of_336_update_completed_ <-& (addr_of_336_complete)
        // Target expression
        // (as target) iNsTr_26
        // start: WAR dependencies for iNsTr_26
        // done: WAR dependencies for iNsTr_26
        // end:  		iNsTr_26 := @(mem[iNsTr_24])
        // start:  		iNsTr_27 := ->(iNsTr_25)
        //  file prog.linked.opt.aa, line 185
        // Source expression
        // ->(iNsTr_25)
        $T[ptr_deref_340_sample_start_] 
        $T[ptr_deref_340_sample_completed_] 
        $T[ptr_deref_340_update_start_] 
        $T[ptr_deref_340_update_completed_] 
        $T[ptr_deref_340_base_address_calculated] 
        // iNsTr_25
        $T[ptr_deref_340_word_address_calculated] 
        $T[ptr_deref_340_root_address_calculated] 
        $T[ptr_deref_340_base_address_resized] 
        ;;[ptr_deref_340_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_340_base_address_calculated &-> (ptr_deref_340_base_addr_resize)
        ptr_deref_340_base_address_resized <-& (ptr_deref_340_base_addr_resize)
        ;;[ptr_deref_340_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_340_base_address_resized &-> (ptr_deref_340_base_plus_offset)
        ptr_deref_340_root_address_calculated <-& (ptr_deref_340_base_plus_offset)
        ;;[ptr_deref_340_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_340_root_address_calculated &-> (ptr_deref_340_word_addrgen)
        ptr_deref_340_word_address_calculated <-& (ptr_deref_340_word_addrgen)
        ;;[ptr_deref_340_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_340_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_340_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_340_sample_start_ <-& (ptr_deref_340_word_address_calculated)
        ptr_deref_340_sample_start_ &-> (ptr_deref_340_Sample)
        ptr_deref_340_sample_completed_ <-& (ptr_deref_340_Sample)
        ptr_deref_340_sample_completed_ &-> ($null)
        ptr_deref_340_update_start_ &-> (ptr_deref_340_Update)
        ptr_deref_340_update_completed_ <-& (ptr_deref_340_Update)
        // start: Forward dependencies from iNsTr_25 to transition ptr_deref_340_base_address_calculated
        ptr_deref_340_base_address_calculated <-& (addr_of_331_update_completed_)
        // done: Forward dependencies from iNsTr_25 to transition ptr_deref_340_base_address_calculated
        ptr_deref_340_sample_start_ <-& (ptr_deref_340_base_address_calculated)
        // Target expression
        // (as target) iNsTr_27
        // start: WAR dependencies for iNsTr_27
        // done: WAR dependencies for iNsTr_27
        // end:  		iNsTr_27 := ->(iNsTr_25)
        // start:  		iNsTr_28 := ->(iNsTr_26)
        //  file prog.linked.opt.aa, line 186
        // Source expression
        // ->(iNsTr_26)
        $T[ptr_deref_344_sample_start_] 
        $T[ptr_deref_344_sample_completed_] 
        $T[ptr_deref_344_update_start_] 
        $T[ptr_deref_344_update_completed_] 
        $T[ptr_deref_344_base_address_calculated] 
        // iNsTr_26
        $T[ptr_deref_344_word_address_calculated] 
        $T[ptr_deref_344_root_address_calculated] 
        $T[ptr_deref_344_base_address_resized] 
        ;;[ptr_deref_344_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_344_base_address_calculated &-> (ptr_deref_344_base_addr_resize)
        ptr_deref_344_base_address_resized <-& (ptr_deref_344_base_addr_resize)
        ;;[ptr_deref_344_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_344_base_address_resized &-> (ptr_deref_344_base_plus_offset)
        ptr_deref_344_root_address_calculated <-& (ptr_deref_344_base_plus_offset)
        ;;[ptr_deref_344_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_344_root_address_calculated &-> (ptr_deref_344_word_addrgen)
        ptr_deref_344_word_address_calculated <-& (ptr_deref_344_word_addrgen)
        ;;[ptr_deref_344_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_344_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_344_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_344_sample_start_ <-& (ptr_deref_344_word_address_calculated)
        ptr_deref_344_sample_start_ &-> (ptr_deref_344_Sample)
        ptr_deref_344_sample_completed_ <-& (ptr_deref_344_Sample)
        ptr_deref_344_sample_completed_ &-> ($null)
        ptr_deref_344_update_start_ &-> (ptr_deref_344_Update)
        ptr_deref_344_update_completed_ <-& (ptr_deref_344_Update)
        // start: Forward dependencies from iNsTr_26 to transition ptr_deref_344_base_address_calculated
        ptr_deref_344_base_address_calculated <-& (addr_of_336_update_completed_)
        // done: Forward dependencies from iNsTr_26 to transition ptr_deref_344_base_address_calculated
        ptr_deref_344_sample_start_ <-& (ptr_deref_344_base_address_calculated)
        // Target expression
        // (as target) iNsTr_28
        // start: WAR dependencies for iNsTr_28
        // done: WAR dependencies for iNsTr_28
        // end:  		iNsTr_28 := ->(iNsTr_26)
        // start:  		iNsTr_29 := (iNsTr_28 - iNsTr_27)
        //  file prog.linked.opt.aa, line 187
        // Source expression
        // (iNsTr_28 - iNsTr_27)
        $T[SUB_u16_u16_349_sample_start_] 
        $T[SUB_u16_u16_349_sample_completed_] 
        $T[SUB_u16_u16_349_update_start_] 
        $T[SUB_u16_u16_349_update_completed_] 
        // iNsTr_28
        // iNsTr_27
        // start: Forward dependencies from iNsTr_28 to transition SUB_u16_u16_349_sample_start_
        SUB_u16_u16_349_sample_start_ <-& (ptr_deref_344_update_completed_)
        // done: Forward dependencies from iNsTr_28 to transition SUB_u16_u16_349_sample_start_
        // start: Forward dependencies from iNsTr_27 to transition SUB_u16_u16_349_sample_start_
        SUB_u16_u16_349_sample_start_ <-& (ptr_deref_340_update_completed_)
        // done: Forward dependencies from iNsTr_27 to transition SUB_u16_u16_349_sample_start_
        ;;[SUB_u16_u16_349_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_349_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_349_sample_start_ &-> (SUB_u16_u16_349_Sample)
        SUB_u16_u16_349_sample_completed_ <-& (SUB_u16_u16_349_Sample)
        SUB_u16_u16_349_sample_completed_ &-> ($null)
        SUB_u16_u16_349_update_start_ &-> (SUB_u16_u16_349_Update)
        SUB_u16_u16_349_update_completed_ <-& (SUB_u16_u16_349_Update)
        // Target expression
        // (as target) iNsTr_29
        // start: WAR dependencies for iNsTr_29
        // done: WAR dependencies for iNsTr_29
        // end:  		iNsTr_29 := (iNsTr_28 - iNsTr_27)
        // load-store dependencies..
      }
      assign_stmt_322_to_assign_stmt_350__entry__ |-> (assign_stmt_322_to_assign_stmt_350)
      assign_stmt_322_to_assign_stmt_350__exit__ <-| (assign_stmt_322_to_assign_stmt_350)
      ::[assign_stmt_357_to_assign_stmt_372] 
      {
        // start:  		iNsTr_19 := @(mem[iNsTr_17])
        //  file prog.linked.opt.aa, line 191
        // Source expression
        // @(mem[iNsTr_17])
        $T[addr_of_356_sample_start_] 
        $T[addr_of_356_sample_completed_] 
        $T[addr_of_356_update_start_] 
        $T[addr_of_356_update_completed_] 
        $T[array_obj_ref_355_root_address_calculated] 
        $T[array_obj_ref_355_offset_calculated] 
        $T[array_obj_ref_355_index_resized_0] 
        $T[array_obj_ref_355_index_scaled_0] 
        $T[array_obj_ref_355_index_computed_0] 
        // iNsTr_17
        // start: Forward dependencies from iNsTr_17 to transition array_obj_ref_355_index_computed_0
        // done: Forward dependencies from iNsTr_17 to transition array_obj_ref_355_index_computed_0
        ;;[array_obj_ref_355_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_355_index_computed_0 &-> (array_obj_ref_355_index_resize_0)
        array_obj_ref_355_index_resized_0 <-& (array_obj_ref_355_index_resize_0)
        ;;[array_obj_ref_355_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_355_index_resized_0 &-> (array_obj_ref_355_index_scale_0)
        array_obj_ref_355_index_scaled_0 <-& (array_obj_ref_355_index_scale_0)
        ;;[array_obj_ref_355_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_355_index_scaled_0 &-> (array_obj_ref_355_final_index_sum_regn)
        array_obj_ref_355_offset_calculated <-& (array_obj_ref_355_final_index_sum_regn)
        ;;[array_obj_ref_355_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_355_offset_calculated &-> (array_obj_ref_355_base_plus_offset)
        array_obj_ref_355_root_address_calculated <-& (array_obj_ref_355_base_plus_offset)
        ;;[addr_of_356_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_356_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_356_sample_start_ <-& (array_obj_ref_355_root_address_calculated)
        addr_of_356_sample_start_ &-> (addr_of_356_request)
        addr_of_356_sample_completed_ <-& (addr_of_356_request)
        addr_of_356_update_start_ &-> (addr_of_356_complete)
        addr_of_356_update_completed_ <-& (addr_of_356_complete)
        // Target expression
        // (as target) iNsTr_19
        // start: WAR dependencies for iNsTr_19
        // done: WAR dependencies for iNsTr_19
        // end:  		iNsTr_19 := @(mem[iNsTr_17])
        // start:  		iNsTr_20 := ->(iNsTr_19)
        //  file prog.linked.opt.aa, line 192
        // Source expression
        // ->(iNsTr_19)
        $T[ptr_deref_360_sample_start_] 
        $T[ptr_deref_360_sample_completed_] 
        $T[ptr_deref_360_update_start_] 
        $T[ptr_deref_360_update_completed_] 
        $T[ptr_deref_360_base_address_calculated] 
        // iNsTr_19
        $T[ptr_deref_360_word_address_calculated] 
        $T[ptr_deref_360_root_address_calculated] 
        $T[ptr_deref_360_base_address_resized] 
        ;;[ptr_deref_360_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_360_base_address_calculated &-> (ptr_deref_360_base_addr_resize)
        ptr_deref_360_base_address_resized <-& (ptr_deref_360_base_addr_resize)
        ;;[ptr_deref_360_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_360_base_address_resized &-> (ptr_deref_360_base_plus_offset)
        ptr_deref_360_root_address_calculated <-& (ptr_deref_360_base_plus_offset)
        ;;[ptr_deref_360_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_360_root_address_calculated &-> (ptr_deref_360_word_addrgen)
        ptr_deref_360_word_address_calculated <-& (ptr_deref_360_word_addrgen)
        ;;[ptr_deref_360_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_360_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_360_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_360_sample_start_ <-& (ptr_deref_360_word_address_calculated)
        ptr_deref_360_sample_start_ &-> (ptr_deref_360_Sample)
        ptr_deref_360_sample_completed_ <-& (ptr_deref_360_Sample)
        ptr_deref_360_sample_completed_ &-> ($null)
        ptr_deref_360_update_start_ &-> (ptr_deref_360_Update)
        ptr_deref_360_update_completed_ <-& (ptr_deref_360_Update)
        // start: Forward dependencies from iNsTr_19 to transition ptr_deref_360_base_address_calculated
        ptr_deref_360_base_address_calculated <-& (addr_of_356_update_completed_)
        // done: Forward dependencies from iNsTr_19 to transition ptr_deref_360_base_address_calculated
        ptr_deref_360_sample_start_ <-& (ptr_deref_360_base_address_calculated)
        // Target expression
        // (as target) iNsTr_20
        // start: WAR dependencies for iNsTr_20
        // done: WAR dependencies for iNsTr_20
        // end:  		iNsTr_20 := ->(iNsTr_19)
        // start:  		xx_xneg1 := (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 193
        // Source expression
        // (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_366_sample_start_] 
        $T[ADD_u16_u16_366_sample_completed_] 
        $T[ADD_u16_u16_366_update_start_] 
        $T[ADD_u16_u16_366_update_completed_] 
        // iNsTr_8
        // start: Forward dependencies from iNsTr_8 to transition ADD_u16_u16_366_sample_start_
        // done: Forward dependencies from iNsTr_8 to transition ADD_u16_u16_366_sample_start_
        ;;[ADD_u16_u16_366_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_366_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_366_sample_start_ &-> (ADD_u16_u16_366_Sample)
        ADD_u16_u16_366_sample_completed_ <-& (ADD_u16_u16_366_Sample)
        ADD_u16_u16_366_sample_completed_ &-> ($null)
        ADD_u16_u16_366_update_start_ &-> (ADD_u16_u16_366_Update)
        ADD_u16_u16_366_update_completed_ <-& (ADD_u16_u16_366_Update)
        // Target expression
        // (as target) xx_xneg1
        // start: WAR dependencies for xx_xneg1
        // done: WAR dependencies for xx_xneg1
        // end:  		xx_xneg1 := (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		iNsTr_21 := (xx_xneg1 - iNsTr_20)
        //  file prog.linked.opt.aa, line 194
        // Source expression
        // (xx_xneg1 - iNsTr_20)
        $T[SUB_u16_u16_371_sample_start_] 
        $T[SUB_u16_u16_371_sample_completed_] 
        $T[SUB_u16_u16_371_update_start_] 
        $T[SUB_u16_u16_371_update_completed_] 
        // xx_xneg1
        // iNsTr_20
        // start: Forward dependencies from xx_xneg1 to transition SUB_u16_u16_371_sample_start_
        SUB_u16_u16_371_sample_start_ <-& (ADD_u16_u16_366_update_completed_)
        // done: Forward dependencies from xx_xneg1 to transition SUB_u16_u16_371_sample_start_
        // start: Forward dependencies from iNsTr_20 to transition SUB_u16_u16_371_sample_start_
        SUB_u16_u16_371_sample_start_ <-& (ptr_deref_360_update_completed_)
        // done: Forward dependencies from iNsTr_20 to transition SUB_u16_u16_371_sample_start_
        ;;[SUB_u16_u16_371_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_371_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_371_sample_start_ &-> (SUB_u16_u16_371_Sample)
        SUB_u16_u16_371_sample_completed_ <-& (SUB_u16_u16_371_Sample)
        SUB_u16_u16_371_sample_completed_ &-> ($null)
        SUB_u16_u16_371_update_start_ &-> (SUB_u16_u16_371_Update)
        SUB_u16_u16_371_update_completed_ <-& (SUB_u16_u16_371_Update)
        // Target expression
        // (as target) iNsTr_21
        // start: WAR dependencies for iNsTr_21
        // done: WAR dependencies for iNsTr_21
        // end:  		iNsTr_21 := (xx_xneg1 - iNsTr_20)
        // load-store dependencies..
      }
      assign_stmt_357_to_assign_stmt_372__entry__ |-> (assign_stmt_357_to_assign_stmt_372)
      assign_stmt_357_to_assign_stmt_372__exit__ <-| (assign_stmt_357_to_assign_stmt_372)
      ::[assign_stmt_387] 
      {
        // start:  		iNsTr_31 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 199
        // Source expression
        // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_386_sample_start_] 
        $T[EQ_u16_u1_386_sample_completed_] 
        $T[EQ_u16_u1_386_update_start_] 
        $T[EQ_u16_u1_386_update_completed_] 
        // rangex_x0
        // start: Forward dependencies from rangex_x0 to transition EQ_u16_u1_386_sample_start_
        // done: Forward dependencies from rangex_x0 to transition EQ_u16_u1_386_sample_start_
        ;;[EQ_u16_u1_386_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_386_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_386_sample_start_ &-> (EQ_u16_u1_386_Sample)
        EQ_u16_u1_386_sample_completed_ <-& (EQ_u16_u1_386_Sample)
        EQ_u16_u1_386_sample_completed_ &-> ($null)
        EQ_u16_u1_386_update_start_ &-> (EQ_u16_u1_386_Update)
        EQ_u16_u1_386_update_completed_ <-& (EQ_u16_u1_386_Update)
        // Target expression
        // (as target) iNsTr_31
        // start: WAR dependencies for iNsTr_31
        // done: WAR dependencies for iNsTr_31
        // end:  		iNsTr_31 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_387__entry__ |-> (assign_stmt_387)
      assign_stmt_387__exit__ <-| (assign_stmt_387)
      // if-statement  
      //  file prog.linked.opt.aa, line 200
      ;;[if_stmt_388_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_388__entry__ |-> (if_stmt_388_dead_link)
      if_stmt_388__exit__ <-| (if_stmt_388_dead_link)
      ;;[if_stmt_388_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_388__entry__ |-> (if_stmt_388_eval_test)
      $P [R_iNsTr_31_389_place]
      R_iNsTr_31_389_place <-| (if_stmt_388_eval_test)
      ;;[if_stmt_388_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_388_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_31_389_place |-> (if_stmt_388_if_link if_stmt_388_else_link)
      $P [bb_5_xx_x_crit_edge9]
      bb_5_xx_x_crit_edge9 <-| (if_stmt_388_if_link)
      $P [bb_5_bbx_xnph8]
      bb_5_bbx_xnph8 <-| (if_stmt_388_else_link)
      ::[assign_stmt_398_to_assign_stmt_424] 
      {
        // start:  		iNsTr_35 := ($cast ($uint<64>) iNsTr_5 )
        //  file prog.linked.opt.aa, line 207
        // Source expression
        // ($cast ($uint<64>) iNsTr_5 )
        $T[type_cast_397_sample_start_] 
        $T[type_cast_397_sample_completed_] 
        $T[type_cast_397_update_start_] 
        $T[type_cast_397_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition type_cast_397_sample_start_
        // done: Forward dependencies from iNsTr_5 to transition type_cast_397_sample_start_
        ;;[type_cast_397_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_397_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_397_sample_start_ &-> (type_cast_397_Sample)
        type_cast_397_sample_completed_ <-& (type_cast_397_Sample)
        type_cast_397_sample_completed_ &-> ($null)
        type_cast_397_update_start_ &-> (type_cast_397_Update)
        type_cast_397_update_completed_ <-& (type_cast_397_Update)
        // Target expression
        // (as target) iNsTr_35
        // start: WAR dependencies for iNsTr_35
        // done: WAR dependencies for iNsTr_35
        // end:  		iNsTr_35 := ($cast ($uint<64>) iNsTr_5 )
        // start:  		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 208
        // Source expression
        // (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_403_sample_start_] 
        $T[ADD_u64_u64_403_sample_completed_] 
        $T[ADD_u64_u64_403_update_start_] 
        $T[ADD_u64_u64_403_update_completed_] 
        // iNsTr_35
        // start: Forward dependencies from iNsTr_35 to transition ADD_u64_u64_403_sample_start_
        ADD_u64_u64_403_sample_start_ <-& (type_cast_397_update_completed_)
        // done: Forward dependencies from iNsTr_35 to transition ADD_u64_u64_403_sample_start_
        ;;[ADD_u64_u64_403_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_403_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_403_sample_start_ &-> (ADD_u64_u64_403_Sample)
        ADD_u64_u64_403_sample_completed_ <-& (ADD_u64_u64_403_Sample)
        ADD_u64_u64_403_sample_completed_ &-> ($null)
        ADD_u64_u64_403_update_start_ &-> (ADD_u64_u64_403_Update)
        ADD_u64_u64_403_update_completed_ <-& (ADD_u64_u64_403_Update)
        // Target expression
        // (as target) iNsTr_36
        // start: WAR dependencies for iNsTr_36
        // done: WAR dependencies for iNsTr_36
        // end:  		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		iNsTr_37 := (iNsTr_36 + iNsTr_14)
        //  file prog.linked.opt.aa, line 209
        // Source expression
        // (iNsTr_36 + iNsTr_14)
        $T[ADD_u64_u64_408_sample_start_] 
        $T[ADD_u64_u64_408_sample_completed_] 
        $T[ADD_u64_u64_408_update_start_] 
        $T[ADD_u64_u64_408_update_completed_] 
        // iNsTr_36
        // iNsTr_14
        // start: Forward dependencies from iNsTr_36 to transition ADD_u64_u64_408_sample_start_
        ADD_u64_u64_408_sample_start_ <-& (ADD_u64_u64_403_update_completed_)
        // done: Forward dependencies from iNsTr_36 to transition ADD_u64_u64_408_sample_start_
        // start: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_408_sample_start_
        // done: Forward dependencies from iNsTr_14 to transition ADD_u64_u64_408_sample_start_
        ;;[ADD_u64_u64_408_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_408_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_408_sample_start_ &-> (ADD_u64_u64_408_Sample)
        ADD_u64_u64_408_sample_completed_ <-& (ADD_u64_u64_408_Sample)
        ADD_u64_u64_408_sample_completed_ &-> ($null)
        ADD_u64_u64_408_update_start_ &-> (ADD_u64_u64_408_Update)
        ADD_u64_u64_408_update_completed_ <-& (ADD_u64_u64_408_Update)
        // Target expression
        // (as target) iNsTr_37
        // start: WAR dependencies for iNsTr_37
        // done: WAR dependencies for iNsTr_37
        // end:  		iNsTr_37 := (iNsTr_36 + iNsTr_14)
        // start:  		iNsTr_38 := @(mem[iNsTr_37])
        //  file prog.linked.opt.aa, line 210
        // Source expression
        // @(mem[iNsTr_37])
        $T[addr_of_413_sample_start_] 
        $T[addr_of_413_sample_completed_] 
        $T[addr_of_413_update_start_] 
        $T[addr_of_413_update_completed_] 
        $T[array_obj_ref_412_root_address_calculated] 
        $T[array_obj_ref_412_offset_calculated] 
        $T[array_obj_ref_412_index_resized_0] 
        $T[array_obj_ref_412_index_scaled_0] 
        $T[array_obj_ref_412_index_computed_0] 
        // iNsTr_37
        // start: Forward dependencies from iNsTr_37 to transition array_obj_ref_412_index_computed_0
        array_obj_ref_412_index_computed_0 <-& (ADD_u64_u64_408_update_completed_)
        // done: Forward dependencies from iNsTr_37 to transition array_obj_ref_412_index_computed_0
        ;;[array_obj_ref_412_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_412_index_computed_0 &-> (array_obj_ref_412_index_resize_0)
        array_obj_ref_412_index_resized_0 <-& (array_obj_ref_412_index_resize_0)
        ;;[array_obj_ref_412_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_412_index_resized_0 &-> (array_obj_ref_412_index_scale_0)
        array_obj_ref_412_index_scaled_0 <-& (array_obj_ref_412_index_scale_0)
        ;;[array_obj_ref_412_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_412_index_scaled_0 &-> (array_obj_ref_412_final_index_sum_regn)
        array_obj_ref_412_offset_calculated <-& (array_obj_ref_412_final_index_sum_regn)
        ;;[array_obj_ref_412_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_412_offset_calculated &-> (array_obj_ref_412_base_plus_offset)
        array_obj_ref_412_root_address_calculated <-& (array_obj_ref_412_base_plus_offset)
        ;;[addr_of_413_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_413_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_413_sample_start_ <-& (array_obj_ref_412_root_address_calculated)
        addr_of_413_sample_start_ &-> (addr_of_413_request)
        addr_of_413_sample_completed_ <-& (addr_of_413_request)
        addr_of_413_update_start_ &-> (addr_of_413_complete)
        addr_of_413_update_completed_ <-& (addr_of_413_complete)
        // Target expression
        // (as target) iNsTr_38
        // start: WAR dependencies for iNsTr_38
        // done: WAR dependencies for iNsTr_38
        // end:  		iNsTr_38 := @(mem[iNsTr_37])
        // start:  		iNsTr_39 := ->(iNsTr_38)
        //  file prog.linked.opt.aa, line 211
        // Source expression
        // ->(iNsTr_38)
        $T[ptr_deref_417_sample_start_] 
        $T[ptr_deref_417_sample_completed_] 
        $T[ptr_deref_417_update_start_] 
        $T[ptr_deref_417_update_completed_] 
        $T[ptr_deref_417_base_address_calculated] 
        // iNsTr_38
        $T[ptr_deref_417_word_address_calculated] 
        $T[ptr_deref_417_root_address_calculated] 
        $T[ptr_deref_417_base_address_resized] 
        ;;[ptr_deref_417_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_417_base_address_calculated &-> (ptr_deref_417_base_addr_resize)
        ptr_deref_417_base_address_resized <-& (ptr_deref_417_base_addr_resize)
        ;;[ptr_deref_417_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_417_base_address_resized &-> (ptr_deref_417_base_plus_offset)
        ptr_deref_417_root_address_calculated <-& (ptr_deref_417_base_plus_offset)
        ;;[ptr_deref_417_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_417_root_address_calculated &-> (ptr_deref_417_word_addrgen)
        ptr_deref_417_word_address_calculated <-& (ptr_deref_417_word_addrgen)
        ;;[ptr_deref_417_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_417_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_417_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_417_sample_start_ <-& (ptr_deref_417_word_address_calculated)
        ptr_deref_417_sample_start_ &-> (ptr_deref_417_Sample)
        ptr_deref_417_sample_completed_ <-& (ptr_deref_417_Sample)
        ptr_deref_417_sample_completed_ &-> ($null)
        ptr_deref_417_update_start_ &-> (ptr_deref_417_Update)
        ptr_deref_417_update_completed_ <-& (ptr_deref_417_Update)
        // start: Forward dependencies from iNsTr_38 to transition ptr_deref_417_base_address_calculated
        ptr_deref_417_base_address_calculated <-& (addr_of_413_update_completed_)
        // done: Forward dependencies from iNsTr_38 to transition ptr_deref_417_base_address_calculated
        ptr_deref_417_sample_start_ <-& (ptr_deref_417_base_address_calculated)
        // Target expression
        // (as target) iNsTr_39
        // start: WAR dependencies for iNsTr_39
        // done: WAR dependencies for iNsTr_39
        // end:  		iNsTr_39 := ->(iNsTr_38)
        // start:  		tmp15 := (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 212
        // Source expression
        // (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_423_sample_start_] 
        $T[ADD_u16_u16_423_sample_completed_] 
        $T[ADD_u16_u16_423_update_start_] 
        $T[ADD_u16_u16_423_update_completed_] 
        // iNsTr_39
        // start: Forward dependencies from iNsTr_39 to transition ADD_u16_u16_423_sample_start_
        ADD_u16_u16_423_sample_start_ <-& (ptr_deref_417_update_completed_)
        // done: Forward dependencies from iNsTr_39 to transition ADD_u16_u16_423_sample_start_
        ;;[ADD_u16_u16_423_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_423_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_423_sample_start_ &-> (ADD_u16_u16_423_Sample)
        ADD_u16_u16_423_sample_completed_ <-& (ADD_u16_u16_423_Sample)
        ADD_u16_u16_423_sample_completed_ &-> ($null)
        ADD_u16_u16_423_update_start_ &-> (ADD_u16_u16_423_Update)
        ADD_u16_u16_423_update_completed_ <-& (ADD_u16_u16_423_Update)
        // Target expression
        // (as target) tmp15
        // start: WAR dependencies for tmp15
        // done: WAR dependencies for tmp15
        // end:  		tmp15 := (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // load-store dependencies..
      }
      assign_stmt_398_to_assign_stmt_424__entry__ |-> (assign_stmt_398_to_assign_stmt_424)
      assign_stmt_398_to_assign_stmt_424__exit__ <-| (assign_stmt_398_to_assign_stmt_424)
      ::[assign_stmt_439] 
      {
        // start:  		tmp16 := (tmp15 + iNsTr_42)
        //  file prog.linked.opt.aa, line 217
        // Source expression
        // (tmp15 + iNsTr_42)
        $T[ADD_u16_u16_438_sample_start_] 
        $T[ADD_u16_u16_438_sample_completed_] 
        $T[ADD_u16_u16_438_update_start_] 
        $T[ADD_u16_u16_438_update_completed_] 
        // tmp15
        // iNsTr_42
        // start: Forward dependencies from tmp15 to transition ADD_u16_u16_438_sample_start_
        // done: Forward dependencies from tmp15 to transition ADD_u16_u16_438_sample_start_
        // start: Forward dependencies from iNsTr_42 to transition ADD_u16_u16_438_sample_start_
        // done: Forward dependencies from iNsTr_42 to transition ADD_u16_u16_438_sample_start_
        ;;[ADD_u16_u16_438_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_438_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_438_sample_start_ &-> (ADD_u16_u16_438_Sample)
        ADD_u16_u16_438_sample_completed_ <-& (ADD_u16_u16_438_Sample)
        ADD_u16_u16_438_sample_completed_ &-> ($null)
        ADD_u16_u16_438_update_start_ &-> (ADD_u16_u16_438_Update)
        ADD_u16_u16_438_update_completed_ <-& (ADD_u16_u16_438_Update)
        // Target expression
        // (as target) tmp16
        // start: WAR dependencies for tmp16
        // done: WAR dependencies for tmp16
        // end:  		tmp16 := (tmp15 + iNsTr_42)
        // load-store dependencies..
      }
      assign_stmt_439__entry__ |-> (assign_stmt_439)
      assign_stmt_439__exit__ <-| (assign_stmt_439)
      ::[assign_stmt_476_to_assign_stmt_499] 
      {
        // start:  		tmp13 := (tmp15 + iNsTr_44)
        //  file prog.linked.opt.aa, line 225
        // Source expression
        // (tmp15 + iNsTr_44)
        $T[ADD_u16_u16_475_sample_start_] 
        $T[ADD_u16_u16_475_sample_completed_] 
        $T[ADD_u16_u16_475_update_start_] 
        $T[ADD_u16_u16_475_update_completed_] 
        // tmp15
        // iNsTr_44
        // start: Forward dependencies from tmp15 to transition ADD_u16_u16_475_sample_start_
        // done: Forward dependencies from tmp15 to transition ADD_u16_u16_475_sample_start_
        // start: Forward dependencies from iNsTr_44 to transition ADD_u16_u16_475_sample_start_
        // done: Forward dependencies from iNsTr_44 to transition ADD_u16_u16_475_sample_start_
        ;;[ADD_u16_u16_475_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_475_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_475_sample_start_ &-> (ADD_u16_u16_475_Sample)
        ADD_u16_u16_475_sample_completed_ <-& (ADD_u16_u16_475_Sample)
        ADD_u16_u16_475_sample_completed_ &-> ($null)
        ADD_u16_u16_475_update_start_ &-> (ADD_u16_u16_475_Update)
        ADD_u16_u16_475_update_completed_ <-& (ADD_u16_u16_475_Update)
        // Target expression
        // (as target) tmp13
        // start: WAR dependencies for tmp13
        // done: WAR dependencies for tmp13
        // end:  		tmp13 := (tmp15 + iNsTr_44)
        // start:  		iNsTr_45 := ($cast ($uint<64>) tmp13 )
        //  file prog.linked.opt.aa, line 226
        // Source expression
        // ($cast ($uint<64>) tmp13 )
        $T[type_cast_479_sample_start_] 
        $T[type_cast_479_sample_completed_] 
        $T[type_cast_479_update_start_] 
        $T[type_cast_479_update_completed_] 
        // tmp13
        // start: Forward dependencies from tmp13 to transition type_cast_479_sample_start_
        type_cast_479_sample_start_ <-& (ADD_u16_u16_475_update_completed_)
        // done: Forward dependencies from tmp13 to transition type_cast_479_sample_start_
        ;;[type_cast_479_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_479_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_479_sample_start_ &-> (type_cast_479_Sample)
        type_cast_479_sample_completed_ <-& (type_cast_479_Sample)
        type_cast_479_sample_completed_ &-> ($null)
        type_cast_479_update_start_ &-> (type_cast_479_Update)
        type_cast_479_update_completed_ <-& (type_cast_479_Update)
        // Target expression
        // (as target) iNsTr_45
        // start: WAR dependencies for iNsTr_45
        // done: WAR dependencies for iNsTr_45
        // end:  		iNsTr_45 := ($cast ($uint<64>) tmp13 )
        // start:  		iNsTr_46 := @(message[iNsTr_45])
        //  file prog.linked.opt.aa, line 227
        // Source expression
        // @(message[iNsTr_45])
        $T[addr_of_484_sample_start_] 
        $T[addr_of_484_sample_completed_] 
        $T[addr_of_484_update_start_] 
        $T[addr_of_484_update_completed_] 
        $T[array_obj_ref_483_root_address_calculated] 
        $T[array_obj_ref_483_offset_calculated] 
        $T[array_obj_ref_483_index_resized_0] 
        $T[array_obj_ref_483_index_scaled_0] 
        $T[array_obj_ref_483_index_computed_0] 
        // iNsTr_45
        // start: Forward dependencies from iNsTr_45 to transition array_obj_ref_483_index_computed_0
        array_obj_ref_483_index_computed_0 <-& (type_cast_479_update_completed_)
        // done: Forward dependencies from iNsTr_45 to transition array_obj_ref_483_index_computed_0
        ;;[array_obj_ref_483_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_483_index_computed_0 &-> (array_obj_ref_483_index_resize_0)
        array_obj_ref_483_index_resized_0 <-& (array_obj_ref_483_index_resize_0)
        ;;[array_obj_ref_483_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_483_index_resized_0 &-> (array_obj_ref_483_index_scale_0)
        array_obj_ref_483_index_scaled_0 <-& (array_obj_ref_483_index_scale_0)
        ;;[array_obj_ref_483_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_483_index_scaled_0 &-> (array_obj_ref_483_final_index_sum_regn)
        array_obj_ref_483_offset_calculated <-& (array_obj_ref_483_final_index_sum_regn)
        ;;[array_obj_ref_483_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_483_offset_calculated &-> (array_obj_ref_483_base_plus_offset)
        array_obj_ref_483_root_address_calculated <-& (array_obj_ref_483_base_plus_offset)
        ;;[addr_of_484_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_484_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_484_sample_start_ <-& (array_obj_ref_483_root_address_calculated)
        addr_of_484_sample_start_ &-> (addr_of_484_request)
        addr_of_484_sample_completed_ <-& (addr_of_484_request)
        addr_of_484_update_start_ &-> (addr_of_484_complete)
        addr_of_484_update_completed_ <-& (addr_of_484_complete)
        // Target expression
        // (as target) iNsTr_46
        // start: WAR dependencies for iNsTr_46
        // done: WAR dependencies for iNsTr_46
        // end:  		iNsTr_46 := @(message[iNsTr_45])
        // start:  		iNsTr_47 := ->(iNsTr_46)
        //  file prog.linked.opt.aa, line 228
        // Source expression
        // ->(iNsTr_46)
        $T[ptr_deref_488_sample_start_] 
        $T[ptr_deref_488_sample_completed_] 
        $T[ptr_deref_488_update_start_] 
        $T[ptr_deref_488_update_completed_] 
        $T[ptr_deref_488_base_address_calculated] 
        // iNsTr_46
        $T[ptr_deref_488_word_address_calculated] 
        $T[ptr_deref_488_root_address_calculated] 
        $T[ptr_deref_488_base_address_resized] 
        ;;[ptr_deref_488_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_488_base_address_calculated &-> (ptr_deref_488_base_addr_resize)
        ptr_deref_488_base_address_resized <-& (ptr_deref_488_base_addr_resize)
        ;;[ptr_deref_488_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_488_base_address_resized &-> (ptr_deref_488_base_plus_offset)
        ptr_deref_488_root_address_calculated <-& (ptr_deref_488_base_plus_offset)
        ;;[ptr_deref_488_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_488_root_address_calculated &-> (ptr_deref_488_word_addrgen)
        ptr_deref_488_word_address_calculated <-& (ptr_deref_488_word_addrgen)
        ;;[ptr_deref_488_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_488_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_488_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_488_sample_start_ <-& (ptr_deref_488_word_address_calculated)
        ptr_deref_488_sample_start_ &-> (ptr_deref_488_Sample)
        ptr_deref_488_sample_completed_ <-& (ptr_deref_488_Sample)
        ptr_deref_488_sample_completed_ &-> ($null)
        ptr_deref_488_update_start_ &-> (ptr_deref_488_Update)
        ptr_deref_488_update_completed_ <-& (ptr_deref_488_Update)
        // start: Forward dependencies from iNsTr_46 to transition ptr_deref_488_base_address_calculated
        ptr_deref_488_base_address_calculated <-& (addr_of_484_update_completed_)
        // done: Forward dependencies from iNsTr_46 to transition ptr_deref_488_base_address_calculated
        ptr_deref_488_sample_start_ <-& (ptr_deref_488_base_address_calculated)
        // Target expression
        // (as target) iNsTr_47
        // start: WAR dependencies for iNsTr_47
        // done: WAR dependencies for iNsTr_47
        // end:  		iNsTr_47 := ->(iNsTr_46)
        // start:  		iNsTr_48 := ($cast ($float<11,52>) iNsTr_47 )
        //  file prog.linked.opt.aa, line 229
        // Source expression
        // ($cast ($float<11,52>) iNsTr_47 )
        $T[type_cast_492_sample_start_] 
        $T[type_cast_492_sample_completed_] 
        $T[type_cast_492_update_start_] 
        $T[type_cast_492_update_completed_] 
        // iNsTr_47
        // start: Forward dependencies from iNsTr_47 to transition type_cast_492_sample_start_
        type_cast_492_sample_start_ <-& (ptr_deref_488_update_completed_)
        // done: Forward dependencies from iNsTr_47 to transition type_cast_492_sample_start_
        ;;[type_cast_492_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_492_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_492_sample_start_ &-> (type_cast_492_Sample)
        type_cast_492_sample_completed_ <-& (type_cast_492_Sample)
        type_cast_492_sample_completed_ &-> ($null)
        type_cast_492_update_start_ &-> (type_cast_492_Update)
        type_cast_492_update_completed_ <-& (type_cast_492_Update)
        // Target expression
        // (as target) iNsTr_48
        // start: WAR dependencies for iNsTr_48
        // done: WAR dependencies for iNsTr_48
        // end:  		iNsTr_48 := ($cast ($float<11,52>) iNsTr_47 )
        // start:  		iNsTr_49 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 230
        // Source expression
        // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_498_sample_start_] 
        $T[SLT_f64_u1_498_sample_completed_] 
        $T[SLT_f64_u1_498_update_start_] 
        $T[SLT_f64_u1_498_update_completed_] 
        // iNsTr_48
        // start: Forward dependencies from iNsTr_48 to transition SLT_f64_u1_498_sample_start_
        SLT_f64_u1_498_sample_start_ <-& (type_cast_492_update_completed_)
        // done: Forward dependencies from iNsTr_48 to transition SLT_f64_u1_498_sample_start_
        ;;[SLT_f64_u1_498_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_498_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_498_sample_start_ &-> (SLT_f64_u1_498_Sample)
        SLT_f64_u1_498_sample_completed_ <-& (SLT_f64_u1_498_Sample)
        SLT_f64_u1_498_sample_completed_ &-> ($null)
        SLT_f64_u1_498_update_start_ &-> (SLT_f64_u1_498_Update)
        SLT_f64_u1_498_update_completed_ <-& (SLT_f64_u1_498_Update)
        // Target expression
        // (as target) iNsTr_49
        // start: WAR dependencies for iNsTr_49
        // done: WAR dependencies for iNsTr_49
        // end:  		iNsTr_49 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_476_to_assign_stmt_499__entry__ |-> (assign_stmt_476_to_assign_stmt_499)
      assign_stmt_476_to_assign_stmt_499__exit__ <-| (assign_stmt_476_to_assign_stmt_499)
      // if-statement  
      //  file prog.linked.opt.aa, line 231
      ;;[if_stmt_500_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_500__entry__ |-> (if_stmt_500_dead_link)
      if_stmt_500__exit__ <-| (if_stmt_500_dead_link)
      ;;[if_stmt_500_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_500__entry__ |-> (if_stmt_500_eval_test)
      $P [R_iNsTr_49_501_place]
      R_iNsTr_49_501_place <-| (if_stmt_500_eval_test)
      ;;[if_stmt_500_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_500_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_49_501_place |-> (if_stmt_500_if_link if_stmt_500_else_link)
      $P [bb_8_bb_9]
      bb_8_bb_9 <-| (if_stmt_500_if_link)
      $P [bb_8_bb_10]
      bb_8_bb_10 <-| (if_stmt_500_else_link)
      ::[assign_stmt_512] 
      {
        // start:  		iNsTr_51 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
        //  file prog.linked.opt.aa, line 238
        // Source expression
        // (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
        $T[SUB_f32_f32_511_sample_start_] 
        $T[SUB_f32_f32_511_sample_completed_] 
        $T[SUB_f32_f32_511_update_start_] 
        $T[SUB_f32_f32_511_update_completed_] 
        // iNsTr_47
        // start: Forward dependencies from iNsTr_47 to transition SUB_f32_f32_511_sample_start_
        // done: Forward dependencies from iNsTr_47 to transition SUB_f32_f32_511_sample_start_
        ;;[SUB_f32_f32_511_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_511_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_511_sample_start_ &-> (SUB_f32_f32_511_Sample)
        SUB_f32_f32_511_sample_completed_ <-& (SUB_f32_f32_511_Sample)
        SUB_f32_f32_511_sample_completed_ &-> ($null)
        SUB_f32_f32_511_update_start_ &-> (SUB_f32_f32_511_Update)
        SUB_f32_f32_511_update_completed_ <-& (SUB_f32_f32_511_Update)
        // Target expression
        // (as target) iNsTr_51
        // start: WAR dependencies for iNsTr_51
        // done: WAR dependencies for iNsTr_51
        // end:  		iNsTr_51 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
        // load-store dependencies..
      }
      assign_stmt_512__entry__ |-> (assign_stmt_512)
      assign_stmt_512__exit__ <-| (assign_stmt_512)
      ::[assign_stmt_526] 
      {
        // start:  		iNsTr_53 := (iNsTr_44 == iNsTr_42)
        //  file prog.linked.opt.aa, line 243
        // Source expression
        // (iNsTr_44 == iNsTr_42)
        $T[EQ_u16_u1_525_sample_start_] 
        $T[EQ_u16_u1_525_sample_completed_] 
        $T[EQ_u16_u1_525_update_start_] 
        $T[EQ_u16_u1_525_update_completed_] 
        // iNsTr_44
        // iNsTr_42
        // start: Forward dependencies from iNsTr_44 to transition EQ_u16_u1_525_sample_start_
        // done: Forward dependencies from iNsTr_44 to transition EQ_u16_u1_525_sample_start_
        // start: Forward dependencies from iNsTr_42 to transition EQ_u16_u1_525_sample_start_
        // done: Forward dependencies from iNsTr_42 to transition EQ_u16_u1_525_sample_start_
        ;;[EQ_u16_u1_525_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_525_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_525_sample_start_ &-> (EQ_u16_u1_525_Sample)
        EQ_u16_u1_525_sample_completed_ <-& (EQ_u16_u1_525_Sample)
        EQ_u16_u1_525_sample_completed_ &-> ($null)
        EQ_u16_u1_525_update_start_ &-> (EQ_u16_u1_525_Update)
        EQ_u16_u1_525_update_completed_ <-& (EQ_u16_u1_525_Update)
        // Target expression
        // (as target) iNsTr_53
        // start: WAR dependencies for iNsTr_53
        // done: WAR dependencies for iNsTr_53
        // end:  		iNsTr_53 := (iNsTr_44 == iNsTr_42)
        // load-store dependencies..
      }
      assign_stmt_526__entry__ |-> (assign_stmt_526)
      assign_stmt_526__exit__ <-| (assign_stmt_526)
      // if-statement  
      //  file prog.linked.opt.aa, line 244
      ;;[if_stmt_527_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_527__entry__ |-> (if_stmt_527_dead_link)
      if_stmt_527__exit__ <-| (if_stmt_527_dead_link)
      ;;[if_stmt_527_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_527__entry__ |-> (if_stmt_527_eval_test)
      $P [R_iNsTr_53_528_place]
      R_iNsTr_53_528_place <-| (if_stmt_527_eval_test)
      ;;[if_stmt_527_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_527_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_53_528_place |-> (if_stmt_527_if_link if_stmt_527_else_link)
      $P [bb_10_bb_14]
      bb_10_bb_14 <-| (if_stmt_527_if_link)
      $P [bb_10_bb_11]
      bb_10_bb_11 <-| (if_stmt_527_else_link)
      ::[assign_stmt_539_to_assign_stmt_554] 
      {
        // start:  		iNsTr_57 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 251
        // Source expression
        // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_538_sample_start_] 
        $T[SLT_f64_u1_538_sample_completed_] 
        $T[SLT_f64_u1_538_update_start_] 
        $T[SLT_f64_u1_538_update_completed_] 
        // iNsTr_48
        // start: Forward dependencies from iNsTr_48 to transition SLT_f64_u1_538_sample_start_
        // done: Forward dependencies from iNsTr_48 to transition SLT_f64_u1_538_sample_start_
        ;;[SLT_f64_u1_538_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_538_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_538_sample_start_ &-> (SLT_f64_u1_538_Sample)
        SLT_f64_u1_538_sample_completed_ <-& (SLT_f64_u1_538_Sample)
        SLT_f64_u1_538_sample_completed_ &-> ($null)
        SLT_f64_u1_538_update_start_ &-> (SLT_f64_u1_538_Update)
        SLT_f64_u1_538_update_completed_ <-& (SLT_f64_u1_538_Update)
        // Target expression
        // (as target) iNsTr_57
        // start: WAR dependencies for iNsTr_57
        // done: WAR dependencies for iNsTr_57
        // end:  		iNsTr_57 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
        // start:  		iNsTr_58 := ($cast ($uint<8>) iNsTr_57 )
        //  file prog.linked.opt.aa, line 252
        // Source expression
        // ($cast ($uint<8>) iNsTr_57 )
        $T[type_cast_542_sample_start_] 
        $T[type_cast_542_sample_completed_] 
        $T[type_cast_542_update_start_] 
        $T[type_cast_542_update_completed_] 
        // iNsTr_57
        // start: Forward dependencies from iNsTr_57 to transition type_cast_542_sample_start_
        type_cast_542_sample_start_ <-& (SLT_f64_u1_538_update_completed_)
        // done: Forward dependencies from iNsTr_57 to transition type_cast_542_sample_start_
        ;;[type_cast_542_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_542_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_542_sample_start_ &-> (type_cast_542_Sample)
        type_cast_542_sample_completed_ <-& (type_cast_542_Sample)
        type_cast_542_sample_completed_ &-> ($null)
        type_cast_542_update_start_ &-> (type_cast_542_Update)
        type_cast_542_update_completed_ <-& (type_cast_542_Update)
        // Target expression
        // (as target) iNsTr_58
        // start: WAR dependencies for iNsTr_58
        // done: WAR dependencies for iNsTr_58
        // end:  		iNsTr_58 := ($cast ($uint<8>) iNsTr_57 )
        // start:  		exorx_x0 := (iNsTr_58 ^ exorx_x25)
        //  file prog.linked.opt.aa, line 253
        // Source expression
        // (iNsTr_58 ^ exorx_x25)
        $T[XOR_u8_u8_547_sample_start_] 
        $T[XOR_u8_u8_547_sample_completed_] 
        $T[XOR_u8_u8_547_update_start_] 
        $T[XOR_u8_u8_547_update_completed_] 
        // iNsTr_58
        // exorx_x25
        // start: Forward dependencies from iNsTr_58 to transition XOR_u8_u8_547_sample_start_
        XOR_u8_u8_547_sample_start_ <-& (type_cast_542_update_completed_)
        // done: Forward dependencies from iNsTr_58 to transition XOR_u8_u8_547_sample_start_
        // start: Forward dependencies from exorx_x25 to transition XOR_u8_u8_547_sample_start_
        // done: Forward dependencies from exorx_x25 to transition XOR_u8_u8_547_sample_start_
        ;;[XOR_u8_u8_547_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[XOR_u8_u8_547_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        XOR_u8_u8_547_sample_start_ &-> (XOR_u8_u8_547_Sample)
        XOR_u8_u8_547_sample_completed_ <-& (XOR_u8_u8_547_Sample)
        XOR_u8_u8_547_sample_completed_ &-> ($null)
        XOR_u8_u8_547_update_start_ &-> (XOR_u8_u8_547_Update)
        XOR_u8_u8_547_update_completed_ <-& (XOR_u8_u8_547_Update)
        // Target expression
        // (as target) exorx_x0
        // start: WAR dependencies for exorx_x0
        // done: WAR dependencies for exorx_x0
        // end:  		exorx_x0 := (iNsTr_58 ^ exorx_x25)
        // start:  		iNsTr_59 := (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
        //  file prog.linked.opt.aa, line 254
        // Source expression
        // (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
        $T[EQ_u8_u1_553_sample_start_] 
        $T[EQ_u8_u1_553_sample_completed_] 
        $T[EQ_u8_u1_553_update_start_] 
        $T[EQ_u8_u1_553_update_completed_] 
        // flagx_x12
        // start: Forward dependencies from flagx_x12 to transition EQ_u8_u1_553_sample_start_
        // done: Forward dependencies from flagx_x12 to transition EQ_u8_u1_553_sample_start_
        ;;[EQ_u8_u1_553_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_553_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_553_sample_start_ &-> (EQ_u8_u1_553_Sample)
        EQ_u8_u1_553_sample_completed_ <-& (EQ_u8_u1_553_Sample)
        EQ_u8_u1_553_sample_completed_ &-> ($null)
        EQ_u8_u1_553_update_start_ &-> (EQ_u8_u1_553_Update)
        EQ_u8_u1_553_update_completed_ <-& (EQ_u8_u1_553_Update)
        // Target expression
        // (as target) iNsTr_59
        // start: WAR dependencies for iNsTr_59
        // done: WAR dependencies for iNsTr_59
        // end:  		iNsTr_59 := (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
        // load-store dependencies..
      }
      assign_stmt_539_to_assign_stmt_554__entry__ |-> (assign_stmt_539_to_assign_stmt_554)
      assign_stmt_539_to_assign_stmt_554__exit__ <-| (assign_stmt_539_to_assign_stmt_554)
      // if-statement  
      //  file prog.linked.opt.aa, line 255
      ;;[if_stmt_555_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_555__entry__ |-> (if_stmt_555_dead_link)
      if_stmt_555__exit__ <-| (if_stmt_555_dead_link)
      ;;[if_stmt_555_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_555__entry__ |-> (if_stmt_555_eval_test)
      $P [R_iNsTr_59_556_place]
      R_iNsTr_59_556_place <-| (if_stmt_555_eval_test)
      ;;[if_stmt_555_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_555_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_59_556_place |-> (if_stmt_555_if_link if_stmt_555_else_link)
      $P [bb_11_bb_14]
      bb_11_bb_14 <-| (if_stmt_555_if_link)
      $P [bb_11_bb_12]
      bb_11_bb_12 <-| (if_stmt_555_else_link)
      ::[assign_stmt_566] 
      {
        // start:  		iNsTr_68 := (temp1x_x0 < valx_x23)
        //  file prog.linked.opt.aa, line 262
        // Source expression
        // (temp1x_x0 < valx_x23)
        $T[SLT_f32_u1_565_sample_start_] 
        $T[SLT_f32_u1_565_sample_completed_] 
        $T[SLT_f32_u1_565_update_start_] 
        $T[SLT_f32_u1_565_update_completed_] 
        // temp1x_x0
        // valx_x23
        // start: Forward dependencies from temp1x_x0 to transition SLT_f32_u1_565_sample_start_
        // done: Forward dependencies from temp1x_x0 to transition SLT_f32_u1_565_sample_start_
        // start: Forward dependencies from valx_x23 to transition SLT_f32_u1_565_sample_start_
        // done: Forward dependencies from valx_x23 to transition SLT_f32_u1_565_sample_start_
        ;;[SLT_f32_u1_565_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f32_u1_565_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f32_u1_565_sample_start_ &-> (SLT_f32_u1_565_Sample)
        SLT_f32_u1_565_sample_completed_ <-& (SLT_f32_u1_565_Sample)
        SLT_f32_u1_565_sample_completed_ &-> ($null)
        SLT_f32_u1_565_update_start_ &-> (SLT_f32_u1_565_Update)
        SLT_f32_u1_565_update_completed_ <-& (SLT_f32_u1_565_Update)
        // Target expression
        // (as target) iNsTr_68
        // start: WAR dependencies for iNsTr_68
        // done: WAR dependencies for iNsTr_68
        // end:  		iNsTr_68 := (temp1x_x0 < valx_x23)
        // load-store dependencies..
      }
      assign_stmt_566__entry__ |-> (assign_stmt_566)
      assign_stmt_566__exit__ <-| (assign_stmt_566)
      // if-statement  
      //  file prog.linked.opt.aa, line 263
      ;;[if_stmt_567_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_567__entry__ |-> (if_stmt_567_dead_link)
      if_stmt_567__exit__ <-| (if_stmt_567_dead_link)
      ;;[if_stmt_567_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_567__entry__ |-> (if_stmt_567_eval_test)
      $P [R_iNsTr_68_568_place]
      R_iNsTr_68_568_place <-| (if_stmt_567_eval_test)
      ;;[if_stmt_567_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_567_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_68_568_place |-> (if_stmt_567_if_link if_stmt_567_else_link)
      $P [bb_12_bb_13]
      bb_12_bb_13 <-| (if_stmt_567_if_link)
      $P [bb_12_bb_14]
      bb_12_bb_14 <-| (if_stmt_567_else_link)
      ::[assign_stmt_615_to_assign_stmt_620] 
      {
        // start:  		iNsTr_55 := (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 276
        // Source expression
        // (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_614_sample_start_] 
        $T[ADD_u16_u16_614_sample_completed_] 
        $T[ADD_u16_u16_614_update_start_] 
        $T[ADD_u16_u16_614_update_completed_] 
        // iNsTr_44
        // start: Forward dependencies from iNsTr_44 to transition ADD_u16_u16_614_sample_start_
        // done: Forward dependencies from iNsTr_44 to transition ADD_u16_u16_614_sample_start_
        ;;[ADD_u16_u16_614_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_614_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_614_sample_start_ &-> (ADD_u16_u16_614_Sample)
        ADD_u16_u16_614_sample_completed_ <-& (ADD_u16_u16_614_Sample)
        ADD_u16_u16_614_sample_completed_ &-> ($null)
        ADD_u16_u16_614_update_start_ &-> (ADD_u16_u16_614_Update)
        ADD_u16_u16_614_update_completed_ <-& (ADD_u16_u16_614_Update)
        // Target expression
        // (as target) iNsTr_55
        // start: WAR dependencies for iNsTr_55
        // done: WAR dependencies for iNsTr_55
        // end:  		iNsTr_55 := (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		exitcond1 := (iNsTr_55 == rangex_x0)
        //  file prog.linked.opt.aa, line 277
        // Source expression
        // (iNsTr_55 == rangex_x0)
        $T[EQ_u16_u1_619_sample_start_] 
        $T[EQ_u16_u1_619_sample_completed_] 
        $T[EQ_u16_u1_619_update_start_] 
        $T[EQ_u16_u1_619_update_completed_] 
        // iNsTr_55
        // rangex_x0
        // start: Forward dependencies from iNsTr_55 to transition EQ_u16_u1_619_sample_start_
        EQ_u16_u1_619_sample_start_ <-& (ADD_u16_u16_614_update_completed_)
        // done: Forward dependencies from iNsTr_55 to transition EQ_u16_u1_619_sample_start_
        // start: Forward dependencies from rangex_x0 to transition EQ_u16_u1_619_sample_start_
        // done: Forward dependencies from rangex_x0 to transition EQ_u16_u1_619_sample_start_
        ;;[EQ_u16_u1_619_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_619_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_619_sample_start_ &-> (EQ_u16_u1_619_Sample)
        EQ_u16_u1_619_sample_completed_ <-& (EQ_u16_u1_619_Sample)
        EQ_u16_u1_619_sample_completed_ &-> ($null)
        EQ_u16_u1_619_update_start_ &-> (EQ_u16_u1_619_Update)
        EQ_u16_u1_619_update_completed_ <-& (EQ_u16_u1_619_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (iNsTr_55 == rangex_x0)
        // load-store dependencies..
      }
      assign_stmt_615_to_assign_stmt_620__entry__ |-> (assign_stmt_615_to_assign_stmt_620)
      assign_stmt_615_to_assign_stmt_620__exit__ <-| (assign_stmt_615_to_assign_stmt_620)
      // if-statement  
      //  file prog.linked.opt.aa, line 278
      ;;[if_stmt_621_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_621__entry__ |-> (if_stmt_621_dead_link)
      if_stmt_621__exit__ <-| (if_stmt_621_dead_link)
      ;;[if_stmt_621_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_621__entry__ |-> (if_stmt_621_eval_test)
      $P [R_exitcond1_622_place]
      R_exitcond1_622_place <-| (if_stmt_621_eval_test)
      ;;[if_stmt_621_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_621_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_622_place |-> (if_stmt_621_if_link if_stmt_621_else_link)
      $P [bb_14_xx_x_crit_edge]
      bb_14_xx_x_crit_edge <-| (if_stmt_621_if_link)
      $P [bb_14_bb_8]
      bb_14_bb_8 <-| (if_stmt_621_else_link)
      ::[assign_stmt_642_to_assign_stmt_679] 
      {
        // start:  		iNsTr_61 := (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
        //  file prog.linked.opt.aa, line 287
        // Source expression
        // (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
        $T[EQ_u8_u1_641_sample_start_] 
        $T[EQ_u8_u1_641_sample_completed_] 
        $T[EQ_u8_u1_641_update_start_] 
        $T[EQ_u8_u1_641_update_completed_] 
        // exorx_x1x_xlcssa
        // start: Forward dependencies from exorx_x1x_xlcssa to transition EQ_u8_u1_641_sample_start_
        // done: Forward dependencies from exorx_x1x_xlcssa to transition EQ_u8_u1_641_sample_start_
        ;;[EQ_u8_u1_641_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u8_u1_641_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u8_u1_641_sample_start_ &-> (EQ_u8_u1_641_Sample)
        EQ_u8_u1_641_sample_completed_ <-& (EQ_u8_u1_641_Sample)
        EQ_u8_u1_641_sample_completed_ &-> ($null)
        EQ_u8_u1_641_update_start_ &-> (EQ_u8_u1_641_Update)
        EQ_u8_u1_641_update_completed_ <-& (EQ_u8_u1_641_Update)
        // Target expression
        // (as target) iNsTr_61
        // start: WAR dependencies for iNsTr_61
        // done: WAR dependencies for iNsTr_61
        // end:  		iNsTr_61 := (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
        // start:  		signx_x0 := ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
        //  file prog.linked.opt.aa, line 288
        // Source expression
        // ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
        $T[MUX_649_sample_start_] 
        $T[MUX_649_sample_completed_] 
        $T[MUX_649_update_start_] 
        $T[MUX_649_update_completed_] 
        // iNsTr_61
        // start: Forward dependencies from iNsTr_61 to transition MUX_649_sample_start_
        MUX_649_sample_start_ <-& (EQ_u8_u1_641_update_completed_)
        // done: Forward dependencies from iNsTr_61 to transition MUX_649_sample_start_
        ;;[MUX_649_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_649_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_649_sample_start_ &-> (MUX_649_start)
        MUX_649_sample_completed_ <-& (MUX_649_start)
        MUX_649_update_start_ &-> (MUX_649_complete)
        MUX_649_update_completed_ <-& (MUX_649_complete)
        // Target expression
        // (as target) signx_x0
        // start: WAR dependencies for signx_x0
        // done: WAR dependencies for signx_x0
        // end:  		signx_x0 := ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
        // start:  		iNsTr_62 := (valx_x1x_xlcssa * signx_x0)
        //  file prog.linked.opt.aa, line 289
        // Source expression
        // (valx_x1x_xlcssa * signx_x0)
        $T[MUL_f32_f32_654_sample_start_] 
        $T[MUL_f32_f32_654_sample_completed_] 
        $T[MUL_f32_f32_654_update_start_] 
        $T[MUL_f32_f32_654_update_completed_] 
        // valx_x1x_xlcssa
        // signx_x0
        // start: Forward dependencies from valx_x1x_xlcssa to transition MUL_f32_f32_654_sample_start_
        // done: Forward dependencies from valx_x1x_xlcssa to transition MUL_f32_f32_654_sample_start_
        // start: Forward dependencies from signx_x0 to transition MUL_f32_f32_654_sample_start_
        MUL_f32_f32_654_sample_start_ <-& (MUX_649_update_completed_)
        // done: Forward dependencies from signx_x0 to transition MUL_f32_f32_654_sample_start_
        ;;[MUL_f32_f32_654_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_654_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_654_sample_start_ &-> (MUL_f32_f32_654_Sample)
        MUL_f32_f32_654_sample_completed_ <-& (MUL_f32_f32_654_Sample)
        MUL_f32_f32_654_sample_completed_ &-> ($null)
        MUL_f32_f32_654_update_start_ &-> (MUL_f32_f32_654_Update)
        MUL_f32_f32_654_update_completed_ <-& (MUL_f32_f32_654_Update)
        // Target expression
        // (as target) iNsTr_62
        // start: WAR dependencies for iNsTr_62
        // done: WAR dependencies for iNsTr_62
        // end:  		iNsTr_62 := (valx_x1x_xlcssa * signx_x0)
        // start:  		iNsTr_63 := ($cast ($uint<64>) tmp16 )
        //  file prog.linked.opt.aa, line 290
        // Source expression
        // ($cast ($uint<64>) tmp16 )
        $T[type_cast_658_sample_start_] 
        $T[type_cast_658_sample_completed_] 
        $T[type_cast_658_update_start_] 
        $T[type_cast_658_update_completed_] 
        // tmp16
        // start: Forward dependencies from tmp16 to transition type_cast_658_sample_start_
        // done: Forward dependencies from tmp16 to transition type_cast_658_sample_start_
        ;;[type_cast_658_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_658_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_658_sample_start_ &-> (type_cast_658_Sample)
        type_cast_658_sample_completed_ <-& (type_cast_658_Sample)
        type_cast_658_sample_completed_ &-> ($null)
        type_cast_658_update_start_ &-> (type_cast_658_Update)
        type_cast_658_update_completed_ <-& (type_cast_658_Update)
        // Target expression
        // (as target) iNsTr_63
        // start: WAR dependencies for iNsTr_63
        // done: WAR dependencies for iNsTr_63
        // end:  		iNsTr_63 := ($cast ($uint<64>) tmp16 )
        // start:  		iNsTr_64 := @(ext_info[iNsTr_63])
        //  file prog.linked.opt.aa, line 291
        // Source expression
        // @(ext_info[iNsTr_63])
        $T[addr_of_663_sample_start_] 
        $T[addr_of_663_sample_completed_] 
        $T[addr_of_663_update_start_] 
        $T[addr_of_663_update_completed_] 
        $T[array_obj_ref_662_root_address_calculated] 
        $T[array_obj_ref_662_offset_calculated] 
        $T[array_obj_ref_662_index_resized_0] 
        $T[array_obj_ref_662_index_scaled_0] 
        $T[array_obj_ref_662_index_computed_0] 
        // iNsTr_63
        // start: Forward dependencies from iNsTr_63 to transition array_obj_ref_662_index_computed_0
        array_obj_ref_662_index_computed_0 <-& (type_cast_658_update_completed_)
        // done: Forward dependencies from iNsTr_63 to transition array_obj_ref_662_index_computed_0
        ;;[array_obj_ref_662_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_662_index_computed_0 &-> (array_obj_ref_662_index_resize_0)
        array_obj_ref_662_index_resized_0 <-& (array_obj_ref_662_index_resize_0)
        ;;[array_obj_ref_662_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_662_index_resized_0 &-> (array_obj_ref_662_index_scale_0)
        array_obj_ref_662_index_scaled_0 <-& (array_obj_ref_662_index_scale_0)
        ;;[array_obj_ref_662_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_662_index_scaled_0 &-> (array_obj_ref_662_final_index_sum_regn)
        array_obj_ref_662_offset_calculated <-& (array_obj_ref_662_final_index_sum_regn)
        ;;[array_obj_ref_662_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_662_offset_calculated &-> (array_obj_ref_662_base_plus_offset)
        array_obj_ref_662_root_address_calculated <-& (array_obj_ref_662_base_plus_offset)
        ;;[addr_of_663_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_663_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_663_sample_start_ <-& (array_obj_ref_662_root_address_calculated)
        addr_of_663_sample_start_ &-> (addr_of_663_request)
        addr_of_663_sample_completed_ <-& (addr_of_663_request)
        addr_of_663_update_start_ &-> (addr_of_663_complete)
        addr_of_663_update_completed_ <-& (addr_of_663_complete)
        // Target expression
        // (as target) iNsTr_64
        // start: WAR dependencies for iNsTr_64
        // done: WAR dependencies for iNsTr_64
        // end:  		iNsTr_64 := @(ext_info[iNsTr_63])
        // start:  		->(iNsTr_64) := iNsTr_62
        //  file prog.linked.opt.aa, line 292
        // Source expression
        // iNsTr_62
        // Target expression
        // ->(iNsTr_64)
        $T[ptr_deref_666_sample_start_] 
        $T[ptr_deref_666_sample_completed_] 
        $T[ptr_deref_666_update_start_] 
        $T[ptr_deref_666_update_completed_] 
        $T[ptr_deref_666_base_address_calculated] 
        // iNsTr_64
        $T[ptr_deref_666_word_address_calculated] 
        $T[ptr_deref_666_root_address_calculated] 
        $T[ptr_deref_666_base_address_resized] 
        ;;[ptr_deref_666_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_666_base_address_calculated &-> (ptr_deref_666_base_addr_resize)
        ptr_deref_666_base_address_resized <-& (ptr_deref_666_base_addr_resize)
        ;;[ptr_deref_666_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_666_base_address_resized &-> (ptr_deref_666_base_plus_offset)
        ptr_deref_666_root_address_calculated <-& (ptr_deref_666_base_plus_offset)
        ;;[ptr_deref_666_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_666_root_address_calculated &-> (ptr_deref_666_word_addrgen)
        ptr_deref_666_word_address_calculated <-& (ptr_deref_666_word_addrgen)
        ;;[ptr_deref_666_Sample] 
        {
          ;;[ptr_deref_666_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_666_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_666_sample_start_ <-& (ptr_deref_666_word_address_calculated)
        ptr_deref_666_sample_start_ &-> (ptr_deref_666_Sample)
        ptr_deref_666_sample_completed_ <-& (ptr_deref_666_Sample)
        ptr_deref_666_sample_completed_ &-> ($null)
        ptr_deref_666_update_start_ &-> (ptr_deref_666_Update)
        ptr_deref_666_update_completed_ <-& (ptr_deref_666_Update)
        // start: Forward dependencies from iNsTr_64 to transition ptr_deref_666_base_address_calculated
        ptr_deref_666_base_address_calculated <-& (addr_of_663_update_completed_)
        // done: Forward dependencies from iNsTr_64 to transition ptr_deref_666_base_address_calculated
        ptr_deref_666_sample_start_ <-& (ptr_deref_666_base_address_calculated)
        // start: Forward dependencies from iNsTr_62 to transition ptr_deref_666_sample_start_
        ptr_deref_666_sample_start_ <-& (MUL_f32_f32_654_update_completed_)
        // done: Forward dependencies from iNsTr_62 to transition ptr_deref_666_sample_start_
        // end:  		->(iNsTr_64) := iNsTr_62
        // start:  		iNsTr_66 := (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 293
        // Source expression
        // (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_673_sample_start_] 
        $T[ADD_u16_u16_673_sample_completed_] 
        $T[ADD_u16_u16_673_update_start_] 
        $T[ADD_u16_u16_673_update_completed_] 
        // iNsTr_42
        // start: Forward dependencies from iNsTr_42 to transition ADD_u16_u16_673_sample_start_
        // done: Forward dependencies from iNsTr_42 to transition ADD_u16_u16_673_sample_start_
        ;;[ADD_u16_u16_673_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_673_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_673_sample_start_ &-> (ADD_u16_u16_673_Sample)
        ADD_u16_u16_673_sample_completed_ <-& (ADD_u16_u16_673_Sample)
        ADD_u16_u16_673_sample_completed_ &-> ($null)
        ADD_u16_u16_673_update_start_ &-> (ADD_u16_u16_673_Update)
        ADD_u16_u16_673_update_completed_ <-& (ADD_u16_u16_673_Update)
        // Target expression
        // (as target) iNsTr_66
        // start: WAR dependencies for iNsTr_66
        // done: WAR dependencies for iNsTr_66
        // end:  		iNsTr_66 := (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		exitcond := (iNsTr_66 == rangex_x0)
        //  file prog.linked.opt.aa, line 294
        // Source expression
        // (iNsTr_66 == rangex_x0)
        $T[EQ_u16_u1_678_sample_start_] 
        $T[EQ_u16_u1_678_sample_completed_] 
        $T[EQ_u16_u1_678_update_start_] 
        $T[EQ_u16_u1_678_update_completed_] 
        // iNsTr_66
        // rangex_x0
        // start: Forward dependencies from iNsTr_66 to transition EQ_u16_u1_678_sample_start_
        EQ_u16_u1_678_sample_start_ <-& (ADD_u16_u16_673_update_completed_)
        // done: Forward dependencies from iNsTr_66 to transition EQ_u16_u1_678_sample_start_
        // start: Forward dependencies from rangex_x0 to transition EQ_u16_u1_678_sample_start_
        // done: Forward dependencies from rangex_x0 to transition EQ_u16_u1_678_sample_start_
        ;;[EQ_u16_u1_678_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_678_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_678_sample_start_ &-> (EQ_u16_u1_678_Sample)
        EQ_u16_u1_678_sample_completed_ <-& (EQ_u16_u1_678_Sample)
        EQ_u16_u1_678_sample_completed_ &-> ($null)
        EQ_u16_u1_678_update_start_ &-> (EQ_u16_u1_678_Update)
        EQ_u16_u1_678_update_completed_ <-& (EQ_u16_u1_678_Update)
        // Target expression
        // (as target) exitcond
        // start: WAR dependencies for exitcond
        // done: WAR dependencies for exitcond
        // end:  		exitcond := (iNsTr_66 == rangex_x0)
        // load-store dependencies..
      }
      assign_stmt_642_to_assign_stmt_679__entry__ |-> (assign_stmt_642_to_assign_stmt_679)
      assign_stmt_642_to_assign_stmt_679__exit__ <-| (assign_stmt_642_to_assign_stmt_679)
      // if-statement  
      //  file prog.linked.opt.aa, line 295
      ;;[if_stmt_680_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_680__entry__ |-> (if_stmt_680_dead_link)
      if_stmt_680__exit__ <-| (if_stmt_680_dead_link)
      ;;[if_stmt_680_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_680__entry__ |-> (if_stmt_680_eval_test)
      $P [R_exitcond_681_place]
      R_exitcond_681_place <-| (if_stmt_680_eval_test)
      ;;[if_stmt_680_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_680_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond_681_place |-> (if_stmt_680_if_link if_stmt_680_else_link)
      $P [xx_x_crit_edge_xx_x_crit_edge9x_xloopexit]
      xx_x_crit_edge_xx_x_crit_edge9x_xloopexit <-| (if_stmt_680_if_link)
      $P [xx_x_crit_edge_bbx_xnph]
      xx_x_crit_edge_bbx_xnph <-| (if_stmt_680_else_link)
      ::[assign_stmt_693] 
      {
        // start:  		iNsTr_33 := (tmp17 < iNsTr_10)
        //  file prog.linked.opt.aa, line 305
        // Source expression
        // (tmp17 < iNsTr_10)
        $T[ULT_u16_u1_692_sample_start_] 
        $T[ULT_u16_u1_692_sample_completed_] 
        $T[ULT_u16_u1_692_update_start_] 
        $T[ULT_u16_u1_692_update_completed_] 
        // tmp17
        // iNsTr_10
        // start: Forward dependencies from tmp17 to transition ULT_u16_u1_692_sample_start_
        // done: Forward dependencies from tmp17 to transition ULT_u16_u1_692_sample_start_
        // start: Forward dependencies from iNsTr_10 to transition ULT_u16_u1_692_sample_start_
        // done: Forward dependencies from iNsTr_10 to transition ULT_u16_u1_692_sample_start_
        ;;[ULT_u16_u1_692_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u16_u1_692_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u16_u1_692_sample_start_ &-> (ULT_u16_u1_692_Sample)
        ULT_u16_u1_692_sample_completed_ <-& (ULT_u16_u1_692_Sample)
        ULT_u16_u1_692_sample_completed_ &-> ($null)
        ULT_u16_u1_692_update_start_ &-> (ULT_u16_u1_692_Update)
        ULT_u16_u1_692_update_completed_ <-& (ULT_u16_u1_692_Update)
        // Target expression
        // (as target) iNsTr_33
        // start: WAR dependencies for iNsTr_33
        // done: WAR dependencies for iNsTr_33
        // end:  		iNsTr_33 := (tmp17 < iNsTr_10)
        // load-store dependencies..
      }
      assign_stmt_693__entry__ |-> (assign_stmt_693)
      assign_stmt_693__exit__ <-| (assign_stmt_693)
      // if-statement  
      //  file prog.linked.opt.aa, line 306
      ;;[if_stmt_694_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_694__entry__ |-> (if_stmt_694_dead_link)
      if_stmt_694__exit__ <-| (if_stmt_694_dead_link)
      ;;[if_stmt_694_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_694__entry__ |-> (if_stmt_694_eval_test)
      $P [R_iNsTr_33_695_place]
      R_iNsTr_33_695_place <-| (if_stmt_694_eval_test)
      ;;[if_stmt_694_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_694_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_33_695_place |-> (if_stmt_694_if_link if_stmt_694_else_link)
      $P [xx_x_crit_edge9_bbx_xnph11]
      xx_x_crit_edge9_bbx_xnph11 <-| (if_stmt_694_if_link)
      $P [xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit]
      xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit <-| (if_stmt_694_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 156
      ;;[merge_stmt_242_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_242__entry__ |-> (merge_stmt_242_dead_link)
      merge_stmt_242__exit__ <-| (merge_stmt_242_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 156  --------------------------
      ||[bb_0_bbx_xnph11x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph11x_xpreheader |-> (bb_0_bbx_xnph11x_xpreheader_PhiReq)
      $P [merge_stmt_242_PhiReqMerge] 
      merge_stmt_242_PhiReqMerge <-| ( bb_0_bbx_xnph11x_xpreheader_PhiReq )
      ||[merge_stmt_242_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_242_PhiReqMerge |-> (merge_stmt_242_PhiAck)
      merge_stmt_242__exit__  <-| (merge_stmt_242_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 156  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 159
      //---------------------   merge statement  file prog.linked.opt.aa, line 159  --------------------------
      ||[bbx_xnph11x_xpreheader_bbx_xnph11_PhiReq] 
      {
        ;;[phi_stmt_245] 
        {
          ||[phi_stmt_245_sources] 
          {
            // sources for 			$phi iNsTr_5 := 			  ($cast ($uint<16>) iNsTr_6 ) $on xx_x_crit_edge9_bbx_xnph11			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph11x_xpreheader_bbx_xnph11 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_251_konst_delay_trans] $delay
          }
          $T [phi_stmt_245_req] 
        }
      }
      bbx_xnph11x_xpreheader_bbx_xnph11 |-> (bbx_xnph11x_xpreheader_bbx_xnph11_PhiReq)
      ||[xx_x_crit_edge9_bbx_xnph11_PhiReq] 
      {
        ;;[phi_stmt_245] 
        {
          ||[phi_stmt_245_sources] 
          {
            // sources for 			$phi iNsTr_5 := 			  ($cast ($uint<16>) iNsTr_6 ) $on xx_x_crit_edge9_bbx_xnph11			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph11x_xpreheader_bbx_xnph11 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_6 )
            ;;[type_cast_248] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_245_req] 
        }
      }
      xx_x_crit_edge9_bbx_xnph11 |-> (xx_x_crit_edge9_bbx_xnph11_PhiReq)
      $P [merge_stmt_244_PhiReqMerge] 
      merge_stmt_244_PhiReqMerge <-| ( bbx_xnph11x_xpreheader_bbx_xnph11_PhiReq  xx_x_crit_edge9_bbx_xnph11_PhiReq )
      ||[merge_stmt_244_PhiAck] 
      {
        $T [phi_stmt_245_ack] 
      }
      merge_stmt_244_PhiReqMerge |-> (merge_stmt_244_PhiAck)
      merge_stmt_244__exit__  <-| (merge_stmt_244_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 159  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 179
      ;;[merge_stmt_316_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_316__entry__ |-> (merge_stmt_316_dead_link)
      merge_stmt_316__exit__ <-| (merge_stmt_316_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 179  --------------------------
      ||[bbx_xnph11_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph11_bb_4 |-> (bbx_xnph11_bb_4_PhiReq)
      $P [merge_stmt_316_PhiReqMerge] 
      merge_stmt_316_PhiReqMerge <-| ( bbx_xnph11_bb_4_PhiReq )
      ||[merge_stmt_316_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_316_PhiReqMerge |-> (merge_stmt_316_PhiAck)
      merge_stmt_316__exit__  <-| (merge_stmt_316_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 179  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 189
      //---------------------   merge statement  file prog.linked.opt.aa, line 189  --------------------------
      ||[bbx_xnph11_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph11_bb_3 |-> (bbx_xnph11_bb_3_PhiReq)
      $P [merge_stmt_352_PhiReqMerge] 
      merge_stmt_352_PhiReqMerge <-| ( bbx_xnph11_bb_3_PhiReq )
      ||[merge_stmt_352_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_352_PhiReqMerge |-> (merge_stmt_352_PhiAck)
      merge_stmt_352__exit__  <-| (merge_stmt_352_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 189  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 196
      //---------------------   merge statement  file prog.linked.opt.aa, line 196  --------------------------
      ||[bb_3_bb_5_PhiReq] 
      {
        ;;[phi_stmt_375] 
        {
          ||[phi_stmt_375_sources] 
          {
            // sources for 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_21 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_29 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_21 )
            ;;[type_cast_378] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_375_req] 
        }
      }
      bb_3_bb_5 |-> (bb_3_bb_5_PhiReq)
      ||[bb_4_bb_5_PhiReq] 
      {
        ;;[phi_stmt_375] 
        {
          ||[phi_stmt_375_sources] 
          {
            // sources for 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_21 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_29 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_29 )
            ;;[type_cast_380] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_375_req] 
        }
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_374_PhiReqMerge] 
      merge_stmt_374_PhiReqMerge <-| ( bb_3_bb_5_PhiReq  bb_4_bb_5_PhiReq )
      ||[merge_stmt_374_PhiAck] 
      {
        $T [phi_stmt_375_ack] 
      }
      merge_stmt_374_PhiReqMerge |-> (merge_stmt_374_PhiAck)
      merge_stmt_374__exit__  <-| (merge_stmt_374_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 196  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 205
      ;;[merge_stmt_394_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_394__entry__ |-> (merge_stmt_394_dead_link)
      merge_stmt_394__exit__ <-| (merge_stmt_394_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 205  --------------------------
      ||[bb_5_bbx_xnph8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bbx_xnph8 |-> (bb_5_bbx_xnph8_PhiReq)
      $P [merge_stmt_394_PhiReqMerge] 
      merge_stmt_394_PhiReqMerge <-| ( bb_5_bbx_xnph8_PhiReq )
      ||[merge_stmt_394_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_394_PhiReqMerge |-> (merge_stmt_394_PhiAck)
      merge_stmt_394__exit__  <-| (merge_stmt_394_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 205  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 214
      //---------------------   merge statement  file prog.linked.opt.aa, line 214  --------------------------
      ||[bbx_xnph8_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_427] 
        {
          ||[phi_stmt_427_sources] 
          {
            // sources for 			$phi iNsTr_42 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph8_bbx_xnph			  ($cast ($uint<16>) iNsTr_66 ) $on xx_x_crit_edge_bbx_xnph // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_431_konst_delay_trans] $delay
          }
          $T [phi_stmt_427_req] 
        }
      }
      bbx_xnph8_bbx_xnph |-> (bbx_xnph8_bbx_xnph_PhiReq)
      ||[xx_x_crit_edge_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_427] 
        {
          ||[phi_stmt_427_sources] 
          {
            // sources for 			$phi iNsTr_42 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph8_bbx_xnph			  ($cast ($uint<16>) iNsTr_66 ) $on xx_x_crit_edge_bbx_xnph // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_66 )
            ;;[type_cast_433] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_427_req] 
        }
      }
      xx_x_crit_edge_bbx_xnph |-> (xx_x_crit_edge_bbx_xnph_PhiReq)
      $P [merge_stmt_426_PhiReqMerge] 
      merge_stmt_426_PhiReqMerge <-| ( bbx_xnph8_bbx_xnph_PhiReq  xx_x_crit_edge_bbx_xnph_PhiReq )
      ||[merge_stmt_426_PhiAck] 
      {
        $T [phi_stmt_427_ack] 
      }
      merge_stmt_426_PhiReqMerge |-> (merge_stmt_426_PhiAck)
      merge_stmt_426__exit__  <-| (merge_stmt_426_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 214  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 219
      //---------------------   merge statement  file prog.linked.opt.aa, line 219  --------------------------
      ||[bb_14_bb_8_PhiReq] 
      {
        ;;[phi_stmt_442] 
        {
          ||[phi_stmt_442_sources] 
          {
            // sources for 			$phi exorx_x25 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_bb_8 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x1 )
            ;;[type_cast_449] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_442_req] 
        }
        ;;[phi_stmt_450] 
        {
          ||[phi_stmt_450_sources] 
          {
            // sources for 			$phi iNsTr_44 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<16>) iNsTr_55 ) $on bb_14_bb_8 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_55 )
            ;;[type_cast_456] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_450_req] 
        }
        ;;[phi_stmt_457] 
        {
          ||[phi_stmt_457_sources] 
          {
            // sources for 			$phi valx_x23 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) ) $on bbx_xnph_bb_8			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_bb_8 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) valx_x1 )
            ;;[type_cast_463] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_457_req] 
        }
        ;;[phi_stmt_464] 
        {
          ||[phi_stmt_464_sources] 
          {
            // sources for 			$phi flagx_x12 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) flagx_x0 ) $on bb_14_bb_8 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) flagx_x0 )
            ;;[type_cast_470] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_464_req] 
        }
      }
      bb_14_bb_8 |-> (bb_14_bb_8_PhiReq)
      ||[bbx_xnph_bb_8_PhiReq] 
      {
        ;;[phi_stmt_442] 
        {
          ||[phi_stmt_442_sources] 
          {
            // sources for 			$phi exorx_x25 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_bb_8 // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_447_konst_delay_trans] $delay
          }
          $T [phi_stmt_442_req] 
        }
        ;;[phi_stmt_450] 
        {
          ||[phi_stmt_450_sources] 
          {
            // sources for 			$phi iNsTr_44 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<16>) iNsTr_55 ) $on bb_14_bb_8 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_454_konst_delay_trans] $delay
          }
          $T [phi_stmt_450_req] 
        }
        ;;[phi_stmt_457] 
        {
          ||[phi_stmt_457_sources] 
          {
            // sources for 			$phi valx_x23 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) ) $on bbx_xnph_bb_8			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_bb_8 // type of target is $float<8,23>
            // constant source .... delay transition 
            $T [type_cast_461_konst_delay_trans] $delay
          }
          $T [phi_stmt_457_req] 
        }
        ;;[phi_stmt_464] 
        {
          ||[phi_stmt_464_sources] 
          {
            // sources for 			$phi flagx_x12 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) flagx_x0 ) $on bb_14_bb_8 // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_468_konst_delay_trans] $delay
          }
          $T [phi_stmt_464_req] 
        }
      }
      bbx_xnph_bb_8 |-> (bbx_xnph_bb_8_PhiReq)
      $P [merge_stmt_441_PhiReqMerge] 
      merge_stmt_441_PhiReqMerge <-| ( bb_14_bb_8_PhiReq  bbx_xnph_bb_8_PhiReq )
      ||[merge_stmt_441_PhiAck] 
      {
        $T [phi_stmt_442_ack] 
        $T [phi_stmt_450_ack] 
        $T [phi_stmt_457_ack] 
        $T [phi_stmt_464_ack] 
      }
      merge_stmt_441_PhiReqMerge |-> (merge_stmt_441_PhiAck)
      merge_stmt_441__exit__  <-| (merge_stmt_441_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 219  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 236
      ;;[merge_stmt_506_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_506__entry__ |-> (merge_stmt_506_dead_link)
      merge_stmt_506__exit__ <-| (merge_stmt_506_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 236  --------------------------
      ||[bb_8_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_bb_9 |-> (bb_8_bb_9_PhiReq)
      $P [merge_stmt_506_PhiReqMerge] 
      merge_stmt_506_PhiReqMerge <-| ( bb_8_bb_9_PhiReq )
      ||[merge_stmt_506_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_506_PhiReqMerge |-> (merge_stmt_506_PhiAck)
      merge_stmt_506__exit__  <-| (merge_stmt_506_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 236  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 240
      //---------------------   merge statement  file prog.linked.opt.aa, line 240  --------------------------
      ||[bb_8_bb_10_PhiReq] 
      {
        ;;[phi_stmt_515] 
        {
          ||[phi_stmt_515_sources] 
          {
            // sources for 			$phi temp1x_x0 := 			  ($cast ($float<8,23>) iNsTr_51 ) $on bb_9_bb_10			  ($cast ($float<8,23>) iNsTr_47 ) $on bb_8_bb_10 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) iNsTr_47 )
            ;;[type_cast_520] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_515_req] 
        }
      }
      bb_8_bb_10 |-> (bb_8_bb_10_PhiReq)
      ||[bb_9_bb_10_PhiReq] 
      {
        ;;[phi_stmt_515] 
        {
          ||[phi_stmt_515_sources] 
          {
            // sources for 			$phi temp1x_x0 := 			  ($cast ($float<8,23>) iNsTr_51 ) $on bb_9_bb_10			  ($cast ($float<8,23>) iNsTr_47 ) $on bb_8_bb_10 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) iNsTr_51 )
            ;;[type_cast_518] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_515_req] 
        }
      }
      bb_9_bb_10 |-> (bb_9_bb_10_PhiReq)
      $P [merge_stmt_514_PhiReqMerge] 
      merge_stmt_514_PhiReqMerge <-| ( bb_8_bb_10_PhiReq  bb_9_bb_10_PhiReq )
      ||[merge_stmt_514_PhiAck] 
      {
        $T [phi_stmt_515_ack] 
      }
      merge_stmt_514_PhiReqMerge |-> (merge_stmt_514_PhiAck)
      merge_stmt_514__exit__  <-| (merge_stmt_514_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 240  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 249
      ;;[merge_stmt_533_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_533__entry__ |-> (merge_stmt_533_dead_link)
      merge_stmt_533__exit__ <-| (merge_stmt_533_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 249  --------------------------
      ||[bb_10_bb_11_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_bb_11 |-> (bb_10_bb_11_PhiReq)
      $P [merge_stmt_533_PhiReqMerge] 
      merge_stmt_533_PhiReqMerge <-| ( bb_10_bb_11_PhiReq )
      ||[merge_stmt_533_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_533_PhiReqMerge |-> (merge_stmt_533_PhiAck)
      merge_stmt_533__exit__  <-| (merge_stmt_533_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 249  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 260
      ;;[merge_stmt_561_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_561__entry__ |-> (merge_stmt_561_dead_link)
      merge_stmt_561__exit__ <-| (merge_stmt_561_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 260  --------------------------
      ||[bb_11_bb_12_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_11_bb_12 |-> (bb_11_bb_12_PhiReq)
      $P [merge_stmt_561_PhiReqMerge] 
      merge_stmt_561_PhiReqMerge <-| ( bb_11_bb_12_PhiReq )
      ||[merge_stmt_561_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_561_PhiReqMerge |-> (merge_stmt_561_PhiAck)
      merge_stmt_561__exit__  <-| (merge_stmt_561_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 260  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 268
      ;;[merge_stmt_573_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_573__entry__ |-> (merge_stmt_573_dead_link)
      merge_stmt_573__exit__ <-| (merge_stmt_573_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 268  --------------------------
      ||[bb_12_bb_13_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_12_bb_13 |-> (bb_12_bb_13_PhiReq)
      $P [merge_stmt_573_PhiReqMerge] 
      merge_stmt_573_PhiReqMerge <-| ( bb_12_bb_13_PhiReq )
      ||[merge_stmt_573_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_573_PhiReqMerge |-> (merge_stmt_573_PhiAck)
      merge_stmt_573__exit__  <-| (merge_stmt_573_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 268  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 271
      //---------------------   merge statement  file prog.linked.opt.aa, line 271  --------------------------
      ||[bb_10_bb_14_PhiReq] 
      {
        ;;[phi_stmt_576] 
        {
          ||[phi_stmt_576_sources] 
          {
            // sources for 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) flagx_x12 )
            ;;[type_cast_579] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_576_req] 
        }
        ;;[phi_stmt_589] 
        {
          ||[phi_stmt_589_sources] 
          {
            // sources for 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) valx_x23 )
            ;;[type_cast_592] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_589_req] 
        }
        ;;[phi_stmt_599] 
        {
          ||[phi_stmt_599_sources] 
          {
            // sources for 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x25 )
            ;;[type_cast_602] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_599_req] 
        }
      }
      bb_10_bb_14 |-> (bb_10_bb_14_PhiReq)
      ||[bb_11_bb_14_PhiReq] 
      {
        ;;[phi_stmt_576] 
        {
          ||[phi_stmt_576_sources] 
          {
            // sources for 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_582_konst_delay_trans] $delay
          }
          $T [phi_stmt_576_req] 
        }
        ;;[phi_stmt_589] 
        {
          ||[phi_stmt_589_sources] 
          {
            // sources for 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) temp1x_x0 )
            ;;[type_cast_594] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_589_req] 
        }
        ;;[phi_stmt_599] 
        {
          ||[phi_stmt_599_sources] 
          {
            // sources for 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x0 )
            ;;[type_cast_604] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_599_req] 
        }
      }
      bb_11_bb_14 |-> (bb_11_bb_14_PhiReq)
      ||[bb_12_bb_14_PhiReq] 
      {
        ;;[phi_stmt_576] 
        {
          ||[phi_stmt_576_sources] 
          {
            // sources for 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_588_konst_delay_trans] $delay
          }
          $T [phi_stmt_576_req] 
        }
        ;;[phi_stmt_589] 
        {
          ||[phi_stmt_589_sources] 
          {
            // sources for 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) valx_x23 )
            ;;[type_cast_598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_589_req] 
        }
        ;;[phi_stmt_599] 
        {
          ||[phi_stmt_599_sources] 
          {
            // sources for 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x0 )
            ;;[type_cast_608] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_599_req] 
        }
      }
      bb_12_bb_14 |-> (bb_12_bb_14_PhiReq)
      ||[bb_13_bb_14_PhiReq] 
      {
        ;;[phi_stmt_576] 
        {
          ||[phi_stmt_576_sources] 
          {
            // sources for 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_585_konst_delay_trans] $delay
          }
          $T [phi_stmt_576_req] 
        }
        ;;[phi_stmt_589] 
        {
          ||[phi_stmt_589_sources] 
          {
            // sources for 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) temp1x_x0 )
            ;;[type_cast_596] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_589_req] 
        }
        ;;[phi_stmt_599] 
        {
          ||[phi_stmt_599_sources] 
          {
            // sources for 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x0 )
            ;;[type_cast_606] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_599_req] 
        }
      }
      bb_13_bb_14 |-> (bb_13_bb_14_PhiReq)
      $P [merge_stmt_575_PhiReqMerge] 
      merge_stmt_575_PhiReqMerge <-| ( bb_10_bb_14_PhiReq  bb_11_bb_14_PhiReq  bb_12_bb_14_PhiReq  bb_13_bb_14_PhiReq )
      ||[merge_stmt_575_PhiAck] 
      {
        $T [phi_stmt_576_ack] 
        $T [phi_stmt_589_ack] 
        $T [phi_stmt_599_ack] 
      }
      merge_stmt_575_PhiReqMerge |-> (merge_stmt_575_PhiAck)
      merge_stmt_575__exit__  <-| (merge_stmt_575_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 271  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 283
      ;;[merge_stmt_627_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_627__entry__ |-> (merge_stmt_627_dead_link)
      merge_stmt_627__exit__ <-| (merge_stmt_627_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 283  --------------------------
      ||[bb_14_xx_x_crit_edge_PhiReq] 
      {
        ;;[phi_stmt_628] 
        {
          ||[phi_stmt_628_sources] 
          {
            // sources for 			$phi exorx_x1x_xlcssa := 			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<8>) exorx_x1 )
            ;;[type_cast_631] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_628_req] 
        }
        ;;[phi_stmt_632] 
        {
          ||[phi_stmt_632_sources] 
          {
            // sources for 			$phi valx_x1x_xlcssa := 			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $float<8,23>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($float<8,23>) valx_x1 )
            ;;[type_cast_635] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_632_req] 
        }
      }
      bb_14_xx_x_crit_edge |-> (bb_14_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_627_PhiReqMerge] 
      merge_stmt_627_PhiReqMerge <-| ( bb_14_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_627_PhiAck] 
      {
        $T [phi_stmt_628_ack] 
        $T [phi_stmt_632_ack] 
      }
      merge_stmt_627_PhiReqMerge |-> (merge_stmt_627_PhiAck)
      merge_stmt_627__exit__  <-| (merge_stmt_627_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 283  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 300
      ;;[merge_stmt_686_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_686__entry__ |-> (merge_stmt_686_dead_link)
      merge_stmt_686__exit__ <-| (merge_stmt_686_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 300  --------------------------
      ||[xx_x_crit_edge_xx_x_crit_edge9x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge_xx_x_crit_edge9x_xloopexit |-> (xx_x_crit_edge_xx_x_crit_edge9x_xloopexit_PhiReq)
      $P [merge_stmt_686_PhiReqMerge] 
      merge_stmt_686_PhiReqMerge <-| ( xx_x_crit_edge_xx_x_crit_edge9x_xloopexit_PhiReq )
      ||[merge_stmt_686_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_686_PhiReqMerge |-> (merge_stmt_686_PhiAck)
      merge_stmt_686__exit__  <-| (merge_stmt_686_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 300  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 303
      //---------------------   merge statement  file prog.linked.opt.aa, line 303  --------------------------
      ||[bb_5_xx_x_crit_edge9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_xx_x_crit_edge9 |-> (bb_5_xx_x_crit_edge9_PhiReq)
      ||[xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9 |-> (xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9_PhiReq)
      $P [merge_stmt_688_PhiReqMerge] 
      merge_stmt_688_PhiReqMerge <-| ( bb_5_xx_x_crit_edge9_PhiReq  xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9_PhiReq )
      ||[merge_stmt_688_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_688_PhiReqMerge |-> (merge_stmt_688_PhiAck)
      merge_stmt_688__exit__  <-| (merge_stmt_688_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 303  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 311
      ;;[merge_stmt_700_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_700__entry__ |-> (merge_stmt_700_dead_link)
      merge_stmt_700__exit__ <-| (merge_stmt_700_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 311  --------------------------
      ||[xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit |-> (xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit_PhiReq)
      $P [merge_stmt_700_PhiReqMerge] 
      merge_stmt_700_PhiReqMerge <-| ( xx_x_crit_edge9_xx_x_crit_edge12x_xloopexit_PhiReq )
      ||[merge_stmt_700_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_700_PhiReqMerge |-> (merge_stmt_700_PhiAck)
      merge_stmt_700__exit__  <-| (merge_stmt_700_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 311  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 314
      //---------------------   merge statement  file prog.linked.opt.aa, line 314  --------------------------
      ||[bb_0_xx_x_crit_edge12_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge12 |-> (bb_0_xx_x_crit_edge12_PhiReq)
      ||[xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12 |-> (xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12_PhiReq)
      $P [merge_stmt_702_PhiReqMerge] 
      merge_stmt_702_PhiReqMerge <-| ( bb_0_xx_x_crit_edge12_PhiReq  xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12_PhiReq )
      ||[merge_stmt_702_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_702_PhiReqMerge |-> (merge_stmt_702_PhiAck)
      merge_stmt_702__exit__  <-| (merge_stmt_702_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 314  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 317
      //---------------------   merge statement  file prog.linked.opt.aa, line 317  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_704_PhiReqMerge] 
      merge_stmt_704_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_704_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_704_PhiReqMerge |-> (merge_stmt_704_PhiAck)
      merge_stmt_704__exit__  <-| (merge_stmt_704_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 317  --------------------------
      assign_stmt_229_to_assign_stmt_235__entry__ <-| (branch_block_stmt_226__entry__)
      if_stmt_236__entry__ <-| (assign_stmt_229_to_assign_stmt_235__exit__)
      merge_stmt_242__entry__ <-| (if_stmt_236__exit__)
      bbx_xnph11x_xpreheader_bbx_xnph11 <-| (merge_stmt_242__exit__)
      assign_stmt_258_to_assign_stmt_309__entry__ <-| (merge_stmt_244__exit__)
      if_stmt_310__entry__ <-| (assign_stmt_258_to_assign_stmt_309__exit__)
      merge_stmt_316__entry__ <-| (if_stmt_310__exit__)
      assign_stmt_322_to_assign_stmt_350__entry__ <-| (merge_stmt_316__exit__)
      bb_4_bb_5 <-| (assign_stmt_322_to_assign_stmt_350__exit__)
      assign_stmt_357_to_assign_stmt_372__entry__ <-| (merge_stmt_352__exit__)
      bb_3_bb_5 <-| (assign_stmt_357_to_assign_stmt_372__exit__)
      assign_stmt_387__entry__ <-| (merge_stmt_374__exit__)
      if_stmt_388__entry__ <-| (assign_stmt_387__exit__)
      merge_stmt_394__entry__ <-| (if_stmt_388__exit__)
      assign_stmt_398_to_assign_stmt_424__entry__ <-| (merge_stmt_394__exit__)
      bbx_xnph8_bbx_xnph <-| (assign_stmt_398_to_assign_stmt_424__exit__)
      assign_stmt_439__entry__ <-| (merge_stmt_426__exit__)
      bbx_xnph_bb_8 <-| (assign_stmt_439__exit__)
      assign_stmt_476_to_assign_stmt_499__entry__ <-| (merge_stmt_441__exit__)
      if_stmt_500__entry__ <-| (assign_stmt_476_to_assign_stmt_499__exit__)
      merge_stmt_506__entry__ <-| (if_stmt_500__exit__)
      assign_stmt_512__entry__ <-| (merge_stmt_506__exit__)
      bb_9_bb_10 <-| (assign_stmt_512__exit__)
      assign_stmt_526__entry__ <-| (merge_stmt_514__exit__)
      if_stmt_527__entry__ <-| (assign_stmt_526__exit__)
      merge_stmt_533__entry__ <-| (if_stmt_527__exit__)
      assign_stmt_539_to_assign_stmt_554__entry__ <-| (merge_stmt_533__exit__)
      if_stmt_555__entry__ <-| (assign_stmt_539_to_assign_stmt_554__exit__)
      merge_stmt_561__entry__ <-| (if_stmt_555__exit__)
      assign_stmt_566__entry__ <-| (merge_stmt_561__exit__)
      if_stmt_567__entry__ <-| (assign_stmt_566__exit__)
      merge_stmt_573__entry__ <-| (if_stmt_567__exit__)
      bb_13_bb_14 <-| (merge_stmt_573__exit__)
      assign_stmt_615_to_assign_stmt_620__entry__ <-| (merge_stmt_575__exit__)
      if_stmt_621__entry__ <-| (assign_stmt_615_to_assign_stmt_620__exit__)
      merge_stmt_627__entry__ <-| (if_stmt_621__exit__)
      assign_stmt_642_to_assign_stmt_679__entry__ <-| (merge_stmt_627__exit__)
      if_stmt_680__entry__ <-| (assign_stmt_642_to_assign_stmt_679__exit__)
      merge_stmt_686__entry__ <-| (if_stmt_680__exit__)
      xx_x_crit_edge9x_xloopexit_xx_x_crit_edge9 <-| (merge_stmt_686__exit__)
      assign_stmt_693__entry__ <-| (merge_stmt_688__exit__)
      if_stmt_694__entry__ <-| (assign_stmt_693__exit__)
      merge_stmt_700__entry__ <-| (if_stmt_694__exit__)
      xx_x_crit_edge12x_xloopexit_xx_x_crit_edge12 <-| (merge_stmt_700__exit__)
      return__ <-| (merge_stmt_702__exit__)
      merge_stmt_704__exit__ |-> (branch_block_stmt_226__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 156
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 159
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 179
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 189
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 196
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 205
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 214
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 219
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 236
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 240
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 249
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 260
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 268
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 271
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 283
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 300
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 303
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 311
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 314
    // constant-object-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 317
    // constant-object-declarations for block %checkNodeComputeEngine%body
    //  file prog.linked.opt.aa, line 147
    // constant-object-declarations for block %checkNodeComputeEngine
    //  file prog.linked.opt.aa, line 142
    // constant-declarations for block %checkNodeComputeEngine%body
    //  file prog.linked.opt.aa, line 147
    // nrows
    $constant $W[LOAD_nrows_228_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_233_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 151
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 156
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 159
    // constant-declarations for phi:  			$phi iNsTr_5 := 			  ($cast ($uint<16>) iNsTr_6 ) $on xx_x_crit_edge9_bbx_xnph11			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph11x_xpreheader_bbx_xnph11 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_251_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_256_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_262_wire_constant] : $int<16> := _b0000000000000001// 1
    // ncol_ind
    $constant $W[LOAD_ncol_ind_266_word_address_0] : $pointer<memory_space_10> := _b0
    // nrows
    $constant $W[LOAD_nrows_274_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_283_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_302_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 174
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 179
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )
    $constant $W[type_cast_320_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000100// 4
    // @(mem[iNsTr_17])
    $constant $W[array_obj_ref_330_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_330_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(mem[iNsTr_24])
    $constant $W[array_obj_ref_335_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_335_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_25)
    $constant $W[ptr_deref_340_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(iNsTr_26)
    $constant $W[ptr_deref_344_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 189
    // @(mem[iNsTr_17])
    $constant $W[array_obj_ref_355_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_355_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_19)
    $constant $W[ptr_deref_360_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_365_wire_constant] : $int<16> := _b0000000000000001// 1
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 196
    // constant-declarations for phi:  			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_21 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_29 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 197
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_385_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 200
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 205
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_402_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[iNsTr_37])
    $constant $W[array_obj_ref_412_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_412_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_38)
    $constant $W[ptr_deref_417_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_422_wire_constant] : $int<16> := _b1111111111111111// 65535
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 214
    // constant-declarations for phi:  			$phi iNsTr_42 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph8_bbx_xnph			  ($cast ($uint<16>) iNsTr_66 ) $on xx_x_crit_edge_bbx_xnph // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 215
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_431_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 219
    // constant-declarations for phi:  			$phi exorx_x25 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) )
    $constant $W[type_cast_447_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for phi:  			$phi iNsTr_44 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<16>) iNsTr_55 ) $on bb_14_bb_8 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 221
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_454_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi valx_x23 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) ) $on bbx_xnph_bb_8			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_bb_8 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 222
    // ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) )
    $constant $W[type_cast_461_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // constant-declarations for phi:  			$phi flagx_x12 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) flagx_x0 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 223
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) )
    $constant $W[type_cast_468_wire_constant] : $int<8> := _b00000000// 0
    // @(message[iNsTr_45])
    $constant $W[array_obj_ref_483_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_483_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_46)
    $constant $W[ptr_deref_488_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_497_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 231
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 236
    // ($bitcast ($float<8,23>) _h80000000  )
    $constant $W[type_cast_509_wire_constant] : $float<8,23> := _b10000000000000000000000000000000// -0.000000e+00
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 240
    // constant-declarations for phi:  			$phi temp1x_x0 := 			  ($cast ($float<8,23>) iNsTr_51 ) $on bb_9_bb_10			  ($cast ($float<8,23>) iNsTr_47 ) $on bb_8_bb_10 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 241
    // if-statement  
    //  file prog.linked.opt.aa, line 244
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 249
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_537_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_552_wire_constant] : $int<8> := _b00000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 255
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 260
    // if-statement  
    //  file prog.linked.opt.aa, line 263
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 268
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 271
    // constant-declarations for phi:  			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 272
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) )
    $constant $W[type_cast_582_wire_constant] : $int<8> := _b00000001// 1
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) )
    $constant $W[type_cast_585_wire_constant] : $int<8> := _b00000001// 1
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) )
    $constant $W[type_cast_588_wire_constant] : $int<8> := _b00000001// 1
    // constant-declarations for phi:  			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 273
    // constant-declarations for phi:  			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 274
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_613_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 278
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 283
    // constant-declarations for phi:  			$phi exorx_x1x_xlcssa := 			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 284
    // constant-declarations for phi:  			$phi valx_x1x_xlcssa := 			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 285
    // ($bitcast ($uint<8>) _b00000000  )
    $constant $W[type_cast_640_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_646_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $constant $W[type_cast_648_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // @(ext_info[iNsTr_63])
    $constant $W[array_obj_ref_662_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_662_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_64)
    $constant $W[ptr_deref_666_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_672_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 295
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 300
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 303
    // if-statement  
    //  file prog.linked.opt.aa, line 306
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 311
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 314
    // constant-declarations for block %checkNodeComputeEngine%body%
    //  file prog.linked.opt.aa, line 317
    // block %checkNodeComputeEngine%body
    //  file prog.linked.opt.aa, line 147
    // 		iNsTr_0 := nrows
    //  file prog.linked.opt.aa, line 149
    // nrows
    $W[LOAD_nrows_228_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_229] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 150
    // iNsTr_1
    $W[iNsTr_1_235] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 151
    // merge-statement  
    //  file prog.linked.opt.aa, line 159
    // 			$phi iNsTr_5 := 			  ($cast ($uint<16>) iNsTr_6 ) $on xx_x_crit_edge9_bbx_xnph11			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph11x_xpreheader_bbx_xnph11 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<16>) iNsTr_6 )
    $intermediate $W[type_cast_248_wire] : $int<16>
    // iNsTr_5
    $W[iNsTr_5_245] : $int<16>
    // 		tmp17 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 162
    // tmp17
    $W[tmp17_258] : $int<16>
    // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 163
    // iNsTr_6
    $W[iNsTr_6_264] : $int<16>
    // 		iNsTr_8 := ncol_ind
    //  file prog.linked.opt.aa, line 164
    // ncol_ind
    $W[LOAD_ncol_ind_266_data_0] : $int<16>
    // iNsTr_8
    $W[iNsTr_8_267] : $int<16>
    // 		iNsTr_9 := ($cast ($uint<32>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 165
    // iNsTr_9
    $W[iNsTr_9_272] : $int<32>
    // 		iNsTr_10 := nrows
    //  file prog.linked.opt.aa, line 166
    // nrows
    $W[LOAD_nrows_274_data_0] : $int<16>
    // iNsTr_10
    $W[iNsTr_10_275] : $int<16>
    // 		iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    //  file prog.linked.opt.aa, line 167
    // iNsTr_11
    $W[iNsTr_11_279] : $int<32>
    // 		iNsTr_12 := (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 168
    // iNsTr_12
    $W[iNsTr_12_285] : $int<32>
    // 		iNsTr_13 := (iNsTr_9 == iNsTr_12)
    //  file prog.linked.opt.aa, line 169
    // iNsTr_13
    $W[iNsTr_13_290] : $int<1>
    // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_8 )
    //  file prog.linked.opt.aa, line 170
    // iNsTr_14
    $W[iNsTr_14_294] : $int<64>
    // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 171
    // iNsTr_15
    $W[iNsTr_15_298] : $int<64>
    // 		iNsTr_16 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 172
    // iNsTr_16
    $W[iNsTr_16_304] : $int<64>
    // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
    //  file prog.linked.opt.aa, line 173
    // iNsTr_17
    $W[iNsTr_17_309] : $int<64>
    // if statement  
    //  file prog.linked.opt.aa, line 174
    // 		iNsTr_23 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 181
    // iNsTr_23
    $W[iNsTr_23_322] : $int<64>
    // 		iNsTr_24 := (iNsTr_23 + iNsTr_14)
    //  file prog.linked.opt.aa, line 182
    // iNsTr_24
    $W[iNsTr_24_327] : $int<64>
    // 		iNsTr_25 := @(mem[iNsTr_17])
    //  file prog.linked.opt.aa, line 183
    // @(mem[iNsTr_17])
    $intermediate $W[R_iNsTr_17_329_resized] : $int<10>
    $intermediate $W[R_iNsTr_17_329_scaled] : $int<10>
    $intermediate $W[array_obj_ref_330_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_330_root_address] : $int<10>
    // iNsTr_25
    $W[iNsTr_25_332] : $int<32>
    // 		iNsTr_26 := @(mem[iNsTr_24])
    //  file prog.linked.opt.aa, line 184
    // @(mem[iNsTr_24])
    $intermediate $W[R_iNsTr_24_334_resized] : $int<10>
    $intermediate $W[R_iNsTr_24_334_scaled] : $int<10>
    $intermediate $W[array_obj_ref_335_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_335_root_address] : $int<10>
    // iNsTr_26
    $W[iNsTr_26_337] : $int<32>
    // 		iNsTr_27 := ->(iNsTr_25)
    //  file prog.linked.opt.aa, line 185
    // ->(iNsTr_25)
    $intermediate $W[ptr_deref_340_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_340_root_address] : $int<10>
    $W[ptr_deref_340_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_340_data_0] : $int<16>
    // iNsTr_27
    $W[iNsTr_27_341] : $int<16>
    // 		iNsTr_28 := ->(iNsTr_26)
    //  file prog.linked.opt.aa, line 186
    // ->(iNsTr_26)
    $intermediate $W[ptr_deref_344_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_344_root_address] : $int<10>
    $W[ptr_deref_344_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_344_data_0] : $int<16>
    // iNsTr_28
    $W[iNsTr_28_345] : $int<16>
    // 		iNsTr_29 := (iNsTr_28 - iNsTr_27)
    //  file prog.linked.opt.aa, line 187
    // iNsTr_29
    $W[iNsTr_29_350] : $int<16>
    // 		iNsTr_19 := @(mem[iNsTr_17])
    //  file prog.linked.opt.aa, line 191
    // @(mem[iNsTr_17])
    $intermediate $W[R_iNsTr_17_354_resized] : $int<10>
    $intermediate $W[R_iNsTr_17_354_scaled] : $int<10>
    $intermediate $W[array_obj_ref_355_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_355_root_address] : $int<10>
    // iNsTr_19
    $W[iNsTr_19_357] : $int<32>
    // 		iNsTr_20 := ->(iNsTr_19)
    //  file prog.linked.opt.aa, line 192
    // ->(iNsTr_19)
    $intermediate $W[ptr_deref_360_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_360_root_address] : $int<10>
    $W[ptr_deref_360_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_360_data_0] : $int<16>
    // iNsTr_20
    $W[iNsTr_20_361] : $int<16>
    // 		xx_xneg1 := (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 193
    // xx_xneg1
    $W[xx_xneg1_367] : $int<16>
    // 		iNsTr_21 := (xx_xneg1 - iNsTr_20)
    //  file prog.linked.opt.aa, line 194
    // iNsTr_21
    $W[iNsTr_21_372] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 196
    // 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_21 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_29 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 197
    // ($cast ($uint<16>) iNsTr_21 )
    $intermediate $W[type_cast_378_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_29 )
    $intermediate $W[type_cast_380_wire] : $int<16>
    // rangex_x0
    $W[rangex_x0_375] : $int<16>
    // 		iNsTr_31 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 199
    // iNsTr_31
    $W[iNsTr_31_387] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 200
    // 		iNsTr_35 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 207
    // iNsTr_35
    $W[iNsTr_35_398] : $int<64>
    // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 208
    // iNsTr_36
    $W[iNsTr_36_404] : $int<64>
    // 		iNsTr_37 := (iNsTr_36 + iNsTr_14)
    //  file prog.linked.opt.aa, line 209
    // iNsTr_37
    $W[iNsTr_37_409] : $int<64>
    // 		iNsTr_38 := @(mem[iNsTr_37])
    //  file prog.linked.opt.aa, line 210
    // @(mem[iNsTr_37])
    $intermediate $W[R_iNsTr_37_411_resized] : $int<10>
    $intermediate $W[R_iNsTr_37_411_scaled] : $int<10>
    $intermediate $W[array_obj_ref_412_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_412_root_address] : $int<10>
    // iNsTr_38
    $W[iNsTr_38_414] : $int<32>
    // 		iNsTr_39 := ->(iNsTr_38)
    //  file prog.linked.opt.aa, line 211
    // ->(iNsTr_38)
    $intermediate $W[ptr_deref_417_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_417_root_address] : $int<10>
    $W[ptr_deref_417_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_417_data_0] : $int<16>
    // iNsTr_39
    $W[iNsTr_39_418] : $int<16>
    // 		tmp15 := (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 212
    // tmp15
    $W[tmp15_424] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 214
    // 			$phi iNsTr_42 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph8_bbx_xnph			  ($cast ($uint<16>) iNsTr_66 ) $on xx_x_crit_edge_bbx_xnph // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 215
    // ($cast ($uint<16>) iNsTr_66 )
    $intermediate $W[type_cast_433_wire] : $int<16>
    // iNsTr_42
    $W[iNsTr_42_427] : $int<16>
    // 		tmp16 := (tmp15 + iNsTr_42)
    //  file prog.linked.opt.aa, line 217
    // tmp16
    $W[tmp16_439] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 219
    // 			$phi exorx_x25 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<8>) exorx_x1 )
    $intermediate $W[type_cast_449_wire] : $int<8>
    // exorx_x25
    $W[exorx_x25_442] : $int<8>
    // 			$phi iNsTr_44 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<16>) iNsTr_55 ) $on bb_14_bb_8 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 221
    // ($cast ($uint<16>) iNsTr_55 )
    $intermediate $W[type_cast_456_wire] : $int<16>
    // iNsTr_44
    $W[iNsTr_44_450] : $int<16>
    // 			$phi valx_x23 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) ) $on bbx_xnph_bb_8			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_bb_8 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 222
    // ($cast ($float<8,23>) valx_x1 )
    $intermediate $W[type_cast_463_wire] : $float<8,23>
    // valx_x23
    $W[valx_x23_457] : $float<8,23>
    // 			$phi flagx_x12 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) flagx_x0 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 223
    // ($cast ($uint<8>) flagx_x0 )
    $intermediate $W[type_cast_470_wire] : $int<8>
    // flagx_x12
    $W[flagx_x12_464] : $int<8>
    // 		tmp13 := (tmp15 + iNsTr_44)
    //  file prog.linked.opt.aa, line 225
    // tmp13
    $W[tmp13_476] : $int<16>
    // 		iNsTr_45 := ($cast ($uint<64>) tmp13 )
    //  file prog.linked.opt.aa, line 226
    // iNsTr_45
    $W[iNsTr_45_480] : $int<64>
    // 		iNsTr_46 := @(message[iNsTr_45])
    //  file prog.linked.opt.aa, line 227
    // @(message[iNsTr_45])
    $intermediate $W[R_iNsTr_45_482_resized] : $int<10>
    $intermediate $W[R_iNsTr_45_482_scaled] : $int<10>
    $intermediate $W[array_obj_ref_483_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_483_root_address] : $int<10>
    // iNsTr_46
    $W[iNsTr_46_485] : $int<32>
    // 		iNsTr_47 := ->(iNsTr_46)
    //  file prog.linked.opt.aa, line 228
    // ->(iNsTr_46)
    $intermediate $W[ptr_deref_488_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_488_root_address] : $int<10>
    $W[ptr_deref_488_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_488_data_0] : $int<32>
    // iNsTr_47
    $W[iNsTr_47_489] : $float<8,23>
    // 		iNsTr_48 := ($cast ($float<11,52>) iNsTr_47 )
    //  file prog.linked.opt.aa, line 229
    // iNsTr_48
    $W[iNsTr_48_493] : $float<11,52>
    // 		iNsTr_49 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 230
    // iNsTr_49
    $W[iNsTr_49_499] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 231
    // 		iNsTr_51 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
    //  file prog.linked.opt.aa, line 238
    // iNsTr_51
    $W[iNsTr_51_512] : $float<8,23>
    // merge-statement  
    //  file prog.linked.opt.aa, line 240
    // 			$phi temp1x_x0 := 			  ($cast ($float<8,23>) iNsTr_51 ) $on bb_9_bb_10			  ($cast ($float<8,23>) iNsTr_47 ) $on bb_8_bb_10 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 241
    // ($cast ($float<8,23>) iNsTr_51 )
    $intermediate $W[type_cast_518_wire] : $float<8,23>
    // ($cast ($float<8,23>) iNsTr_47 )
    $intermediate $W[type_cast_520_wire] : $float<8,23>
    // temp1x_x0
    $W[temp1x_x0_515] : $float<8,23>
    // 		iNsTr_53 := (iNsTr_44 == iNsTr_42)
    //  file prog.linked.opt.aa, line 243
    // iNsTr_53
    $W[iNsTr_53_526] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 244
    // 		iNsTr_57 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 251
    // iNsTr_57
    $W[iNsTr_57_539] : $int<1>
    // 		iNsTr_58 := ($cast ($uint<8>) iNsTr_57 )
    //  file prog.linked.opt.aa, line 252
    // iNsTr_58
    $W[iNsTr_58_543] : $int<8>
    // 		exorx_x0 := (iNsTr_58 ^ exorx_x25)
    //  file prog.linked.opt.aa, line 253
    // exorx_x0
    $W[exorx_x0_548] : $int<8>
    // 		iNsTr_59 := (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 254
    // iNsTr_59
    $W[iNsTr_59_554] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 255
    // 		iNsTr_68 := (temp1x_x0 < valx_x23)
    //  file prog.linked.opt.aa, line 262
    // iNsTr_68
    $W[iNsTr_68_566] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 263
    // merge-statement  
    //  file prog.linked.opt.aa, line 271
    // 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 272
    // ($cast ($uint<8>) flagx_x12 )
    $intermediate $W[type_cast_579_wire] : $int<8>
    // flagx_x0
    $W[flagx_x0_576] : $int<8>
    // 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 273
    // ($cast ($float<8,23>) valx_x23 )
    $intermediate $W[type_cast_592_wire] : $float<8,23>
    // ($cast ($float<8,23>) temp1x_x0 )
    $intermediate $W[type_cast_594_wire] : $float<8,23>
    // ($cast ($float<8,23>) temp1x_x0 )
    $intermediate $W[type_cast_596_wire] : $float<8,23>
    // ($cast ($float<8,23>) valx_x23 )
    $intermediate $W[type_cast_598_wire] : $float<8,23>
    // valx_x1
    $W[valx_x1_589] : $float<8,23>
    // 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 274
    // ($cast ($uint<8>) exorx_x25 )
    $intermediate $W[type_cast_602_wire] : $int<8>
    // ($cast ($uint<8>) exorx_x0 )
    $intermediate $W[type_cast_604_wire] : $int<8>
    // ($cast ($uint<8>) exorx_x0 )
    $intermediate $W[type_cast_606_wire] : $int<8>
    // ($cast ($uint<8>) exorx_x0 )
    $intermediate $W[type_cast_608_wire] : $int<8>
    // exorx_x1
    $W[exorx_x1_599] : $int<8>
    // 		iNsTr_55 := (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 276
    // iNsTr_55
    $W[iNsTr_55_615] : $int<16>
    // 		exitcond1 := (iNsTr_55 == rangex_x0)
    //  file prog.linked.opt.aa, line 277
    // exitcond1
    $W[exitcond1_620] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 278
    // merge-statement  
    //  file prog.linked.opt.aa, line 283
    // 			$phi exorx_x1x_xlcssa := 			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 284
    // ($cast ($uint<8>) exorx_x1 )
    $intermediate $W[type_cast_631_wire] : $int<8>
    // exorx_x1x_xlcssa
    $W[exorx_x1x_xlcssa_628] : $int<8>
    // 			$phi valx_x1x_xlcssa := 			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 285
    // ($cast ($float<8,23>) valx_x1 )
    $intermediate $W[type_cast_635_wire] : $float<8,23>
    // valx_x1x_xlcssa
    $W[valx_x1x_xlcssa_632] : $float<8,23>
    // 		iNsTr_61 := (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 287
    // iNsTr_61
    $W[iNsTr_61_642] : $int<1>
    // 		signx_x0 := ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
    //  file prog.linked.opt.aa, line 288
    // signx_x0
    $W[signx_x0_650] : $float<8,23>
    // 		iNsTr_62 := (valx_x1x_xlcssa * signx_x0)
    //  file prog.linked.opt.aa, line 289
    // iNsTr_62
    $W[iNsTr_62_655] : $float<8,23>
    // 		iNsTr_63 := ($cast ($uint<64>) tmp16 )
    //  file prog.linked.opt.aa, line 290
    // iNsTr_63
    $W[iNsTr_63_659] : $int<64>
    // 		iNsTr_64 := @(ext_info[iNsTr_63])
    //  file prog.linked.opt.aa, line 291
    // @(ext_info[iNsTr_63])
    $intermediate $W[R_iNsTr_63_661_resized] : $int<10>
    $intermediate $W[R_iNsTr_63_661_scaled] : $int<10>
    $intermediate $W[array_obj_ref_662_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_662_root_address] : $int<10>
    // iNsTr_64
    $W[iNsTr_64_664] : $int<32>
    // 		->(iNsTr_64) := iNsTr_62
    //  file prog.linked.opt.aa, line 292
    // ->(iNsTr_64)
    $intermediate $W[ptr_deref_666_wire] : $float<8,23>
    $intermediate $W[ptr_deref_666_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_666_root_address] : $int<10>
    $W[ptr_deref_666_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_666_data_0] : $int<32>
    // 		iNsTr_66 := (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 293
    // iNsTr_66
    $W[iNsTr_66_674] : $int<16>
    // 		exitcond := (iNsTr_66 == rangex_x0)
    //  file prog.linked.opt.aa, line 294
    // exitcond
    $W[exitcond_679] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 295
    // 		iNsTr_33 := (tmp17 < iNsTr_10)
    //  file prog.linked.opt.aa, line 305
    // iNsTr_33
    $W[iNsTr_33_693] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 306
    // datapath-instances for block %checkNodeComputeEngine%body
    //  file prog.linked.opt.aa, line 147
    // 		iNsTr_0 := nrows
    //  file prog.linked.opt.aa, line 149
    // nrows
    $load [LOAD_nrows_228_load_0] $from memory_space_12 (LOAD_nrows_228_word_address_0) (LOAD_nrows_228_data_0) 
    $delay LOAD_nrows_228_load_0 4
    &/ [LOAD_nrows_228_gather_scatter] (LOAD_nrows_228_data_0) (iNsTr_0_229) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 150
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_234_inst] (iNsTr_0_229 type_cast_233_wire_constant) (iNsTr_1_235)   
    $buffering  $out EQ_u16_u1_234_inst iNsTr_1_235 1
    $delay EQ_u16_u1_234_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 151
    ==0? [if_stmt_236_branch] (iNsTr_1_235)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 159
    // 			$phi iNsTr_5 := 			  ($cast ($uint<16>) iNsTr_6 ) $on xx_x_crit_edge9_bbx_xnph11			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph11x_xpreheader_bbx_xnph11 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 160
    // ($cast ($uint<16>) iNsTr_6 )
    # := [type_cast_248_inst] (iNsTr_6_264) (type_cast_248_wire)   
    $buffering  $out type_cast_248_inst type_cast_248_wire 1
    $delay type_cast_248_inst 1
    $phi [phi_stmt_245] (type_cast_248_wire type_cast_251_wire_constant) ( iNsTr_5_245 ) 
    // 		tmp17 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 162
    // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_257_inst] (iNsTr_5_245 type_cast_256_wire_constant) (tmp17_258)   
    $buffering  $out ADD_u16_u16_257_inst tmp17_258 1
    $delay ADD_u16_u16_257_inst 1
    // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 163
    // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_263_inst] (iNsTr_5_245 type_cast_262_wire_constant) (iNsTr_6_264)   
    $buffering  $out ADD_u16_u16_263_inst iNsTr_6_264 1
    $delay ADD_u16_u16_263_inst 1
    // 		iNsTr_8 := ncol_ind
    //  file prog.linked.opt.aa, line 164
    // ncol_ind
    $load [LOAD_ncol_ind_266_load_0] $from memory_space_10 (LOAD_ncol_ind_266_word_address_0) (LOAD_ncol_ind_266_data_0) 
    $delay LOAD_ncol_ind_266_load_0 4
    &/ [LOAD_ncol_ind_266_gather_scatter] (LOAD_ncol_ind_266_data_0) (iNsTr_8_267) 
    $flowthrough 
    // 		iNsTr_9 := ($cast ($uint<32>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 165
    // ($cast ($uint<32>) iNsTr_5 )
    # := [type_cast_271_inst] (iNsTr_5_245) (iNsTr_9_272)   
    $buffering  $out type_cast_271_inst iNsTr_9_272 1
    $delay type_cast_271_inst 1
    // 		iNsTr_10 := nrows
    //  file prog.linked.opt.aa, line 166
    // nrows
    $load [LOAD_nrows_274_load_0] $from memory_space_12 (LOAD_nrows_274_word_address_0) (LOAD_nrows_274_data_0) 
    $delay LOAD_nrows_274_load_0 4
    &/ [LOAD_nrows_274_gather_scatter] (LOAD_nrows_274_data_0) (iNsTr_10_275) 
    $flowthrough 
    // 		iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
    //  file prog.linked.opt.aa, line 167
    // ($cast ($uint<32>) iNsTr_10 )
    # := [type_cast_278_inst] (iNsTr_10_275) (iNsTr_11_279)   
    $buffering  $out type_cast_278_inst iNsTr_11_279 1
    $delay type_cast_278_inst 1
    // 		iNsTr_12 := (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 168
    // (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_284_inst] (iNsTr_11_279 type_cast_283_wire_constant) (iNsTr_12_285)   
    $buffering  $out ADD_u32_u32_284_inst iNsTr_12_285 1
    $delay ADD_u32_u32_284_inst 1
    // 		iNsTr_13 := (iNsTr_9 == iNsTr_12)
    //  file prog.linked.opt.aa, line 169
    // (iNsTr_9 == iNsTr_12)
    ==[EQ_u32_u1_289_inst] (iNsTr_9_272 iNsTr_12_285) (iNsTr_13_290)   
    $buffering  $out EQ_u32_u1_289_inst iNsTr_13_290 1
    $delay EQ_u32_u1_289_inst 1
    // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_8 )
    //  file prog.linked.opt.aa, line 170
    // ($cast ($uint<64>) iNsTr_8 )
    # := [type_cast_293_inst] (iNsTr_8_267) (iNsTr_14_294)   
    $buffering  $out type_cast_293_inst iNsTr_14_294 1
    $delay type_cast_293_inst 1
    // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 171
    // ($cast ($uint<64>) iNsTr_5 )
    # := [type_cast_297_inst] (iNsTr_5_245) (iNsTr_15_298)   
    $buffering  $out type_cast_297_inst iNsTr_15_298 1
    $delay type_cast_297_inst 1
    // 		iNsTr_16 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 172
    // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_303_inst] (iNsTr_15_298 type_cast_302_wire_constant) (iNsTr_16_304)   
    $buffering  $out ADD_u64_u64_303_inst iNsTr_16_304 1
    $delay ADD_u64_u64_303_inst 1
    // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
    //  file prog.linked.opt.aa, line 173
    // (iNsTr_16 + iNsTr_14)
    +[ADD_u64_u64_308_inst] (iNsTr_16_304 iNsTr_14_294) (iNsTr_17_309)   
    $buffering  $out ADD_u64_u64_308_inst iNsTr_17_309 1
    $delay ADD_u64_u64_308_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 174
    ==0? [if_stmt_310_branch] (iNsTr_13_290)
    // 		iNsTr_23 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 181
    // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    +[ADD_u64_u64_321_inst] (iNsTr_15_298 type_cast_320_wire_constant) (iNsTr_23_322)   
    $buffering  $out ADD_u64_u64_321_inst iNsTr_23_322 1
    $delay ADD_u64_u64_321_inst 1
    // 		iNsTr_24 := (iNsTr_23 + iNsTr_14)
    //  file prog.linked.opt.aa, line 182
    // (iNsTr_23 + iNsTr_14)
    +[ADD_u64_u64_326_inst] (iNsTr_23_322 iNsTr_14_294) (iNsTr_24_327)   
    $buffering  $out ADD_u64_u64_326_inst iNsTr_24_327 1
    $delay ADD_u64_u64_326_inst 1
    // 		iNsTr_25 := @(mem[iNsTr_17])
    //  file prog.linked.opt.aa, line 183
    &/ [array_obj_ref_330_index_0_resize] (iNsTr_17_309) (R_iNsTr_17_329_resized) 
    $flowthrough 
    &/ [array_obj_ref_330_index_0_rename] (R_iNsTr_17_329_resized) (R_iNsTr_17_329_scaled) 
    $flowthrough 
    &/ [array_obj_ref_330_index_offset] (R_iNsTr_17_329_scaled) (array_obj_ref_330_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_330_root_address_inst] (array_obj_ref_330_final_offset) (array_obj_ref_330_root_address) 
    $flowthrough 
    # := [addr_of_331_final_reg] (array_obj_ref_330_root_address) (iNsTr_25_332)   
    $buffering  $out addr_of_331_final_reg iNsTr_25_332 1
    // 		iNsTr_26 := @(mem[iNsTr_24])
    //  file prog.linked.opt.aa, line 184
    &/ [array_obj_ref_335_index_0_resize] (iNsTr_24_327) (R_iNsTr_24_334_resized) 
    $flowthrough 
    &/ [array_obj_ref_335_index_0_rename] (R_iNsTr_24_334_resized) (R_iNsTr_24_334_scaled) 
    $flowthrough 
    &/ [array_obj_ref_335_index_offset] (R_iNsTr_24_334_scaled) (array_obj_ref_335_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_335_root_address_inst] (array_obj_ref_335_final_offset) (array_obj_ref_335_root_address) 
    $flowthrough 
    # := [addr_of_336_final_reg] (array_obj_ref_335_root_address) (iNsTr_26_337)   
    $buffering  $out addr_of_336_final_reg iNsTr_26_337 1
    // 		iNsTr_27 := ->(iNsTr_25)
    //  file prog.linked.opt.aa, line 185
    // ->(iNsTr_25)
    &/ [ptr_deref_340_base_resize] (iNsTr_25_332) (ptr_deref_340_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_340_root_address_inst] (ptr_deref_340_resized_base_address) (ptr_deref_340_root_address) 
    $flowthrough 
    &/ [ptr_deref_340_addr_0] (ptr_deref_340_root_address) (ptr_deref_340_word_address_0) 
    $flowthrough 
    $load [ptr_deref_340_load_0] $from memory_space_8 (ptr_deref_340_word_address_0) (ptr_deref_340_data_0) 
    $delay ptr_deref_340_load_0 4
    &/ [ptr_deref_340_gather_scatter] (ptr_deref_340_data_0) (iNsTr_27_341) 
    $flowthrough 
    // 		iNsTr_28 := ->(iNsTr_26)
    //  file prog.linked.opt.aa, line 186
    // ->(iNsTr_26)
    &/ [ptr_deref_344_base_resize] (iNsTr_26_337) (ptr_deref_344_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_344_root_address_inst] (ptr_deref_344_resized_base_address) (ptr_deref_344_root_address) 
    $flowthrough 
    &/ [ptr_deref_344_addr_0] (ptr_deref_344_root_address) (ptr_deref_344_word_address_0) 
    $flowthrough 
    $load [ptr_deref_344_load_0] $from memory_space_8 (ptr_deref_344_word_address_0) (ptr_deref_344_data_0) 
    $delay ptr_deref_344_load_0 4
    &/ [ptr_deref_344_gather_scatter] (ptr_deref_344_data_0) (iNsTr_28_345) 
    $flowthrough 
    // 		iNsTr_29 := (iNsTr_28 - iNsTr_27)
    //  file prog.linked.opt.aa, line 187
    // (iNsTr_28 - iNsTr_27)
    -[SUB_u16_u16_349_inst] (iNsTr_28_345 iNsTr_27_341) (iNsTr_29_350)   
    $buffering  $out SUB_u16_u16_349_inst iNsTr_29_350 1
    $delay SUB_u16_u16_349_inst 1
    // 		iNsTr_19 := @(mem[iNsTr_17])
    //  file prog.linked.opt.aa, line 191
    &/ [array_obj_ref_355_index_0_resize] (iNsTr_17_309) (R_iNsTr_17_354_resized) 
    $flowthrough 
    &/ [array_obj_ref_355_index_0_rename] (R_iNsTr_17_354_resized) (R_iNsTr_17_354_scaled) 
    $flowthrough 
    &/ [array_obj_ref_355_index_offset] (R_iNsTr_17_354_scaled) (array_obj_ref_355_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_355_root_address_inst] (array_obj_ref_355_final_offset) (array_obj_ref_355_root_address) 
    $flowthrough 
    # := [addr_of_356_final_reg] (array_obj_ref_355_root_address) (iNsTr_19_357)   
    $buffering  $out addr_of_356_final_reg iNsTr_19_357 1
    // 		iNsTr_20 := ->(iNsTr_19)
    //  file prog.linked.opt.aa, line 192
    // ->(iNsTr_19)
    &/ [ptr_deref_360_base_resize] (iNsTr_19_357) (ptr_deref_360_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_360_root_address_inst] (ptr_deref_360_resized_base_address) (ptr_deref_360_root_address) 
    $flowthrough 
    &/ [ptr_deref_360_addr_0] (ptr_deref_360_root_address) (ptr_deref_360_word_address_0) 
    $flowthrough 
    $load [ptr_deref_360_load_0] $from memory_space_8 (ptr_deref_360_word_address_0) (ptr_deref_360_data_0) 
    $delay ptr_deref_360_load_0 4
    &/ [ptr_deref_360_gather_scatter] (ptr_deref_360_data_0) (iNsTr_20_361) 
    $flowthrough 
    // 		xx_xneg1 := (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 193
    // (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_366_inst] (iNsTr_8_267 type_cast_365_wire_constant) (xx_xneg1_367)   
    $buffering  $out ADD_u16_u16_366_inst xx_xneg1_367 1
    $delay ADD_u16_u16_366_inst 1
    // 		iNsTr_21 := (xx_xneg1 - iNsTr_20)
    //  file prog.linked.opt.aa, line 194
    // (xx_xneg1 - iNsTr_20)
    -[SUB_u16_u16_371_inst] (xx_xneg1_367 iNsTr_20_361) (iNsTr_21_372)   
    $buffering  $out SUB_u16_u16_371_inst iNsTr_21_372 1
    $delay SUB_u16_u16_371_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 196
    // 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_21 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_29 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 197
    // ($cast ($uint<16>) iNsTr_21 )
    # := [type_cast_378_inst] (iNsTr_21_372) (type_cast_378_wire)   
    $buffering  $out type_cast_378_inst type_cast_378_wire 1
    $delay type_cast_378_inst 1
    // ($cast ($uint<16>) iNsTr_29 )
    # := [type_cast_380_inst] (iNsTr_29_350) (type_cast_380_wire)   
    $buffering  $out type_cast_380_inst type_cast_380_wire 1
    $delay type_cast_380_inst 1
    $phi [phi_stmt_375] (type_cast_378_wire type_cast_380_wire) ( rangex_x0_375 ) 
    // 		iNsTr_31 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 199
    // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_386_inst] (rangex_x0_375 type_cast_385_wire_constant) (iNsTr_31_387)   
    $buffering  $out EQ_u16_u1_386_inst iNsTr_31_387 1
    $delay EQ_u16_u1_386_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 200
    ==0? [if_stmt_388_branch] (iNsTr_31_387)
    // 		iNsTr_35 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 207
    // ($cast ($uint<64>) iNsTr_5 )
    # := [type_cast_397_inst] (iNsTr_5_245) (iNsTr_35_398)   
    $buffering  $out type_cast_397_inst iNsTr_35_398 1
    $delay type_cast_397_inst 1
    // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 208
    // (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_403_inst] (iNsTr_35_398 type_cast_402_wire_constant) (iNsTr_36_404)   
    $buffering  $out ADD_u64_u64_403_inst iNsTr_36_404 1
    $delay ADD_u64_u64_403_inst 1
    // 		iNsTr_37 := (iNsTr_36 + iNsTr_14)
    //  file prog.linked.opt.aa, line 209
    // (iNsTr_36 + iNsTr_14)
    +[ADD_u64_u64_408_inst] (iNsTr_36_404 iNsTr_14_294) (iNsTr_37_409)   
    $buffering  $out ADD_u64_u64_408_inst iNsTr_37_409 1
    $delay ADD_u64_u64_408_inst 1
    // 		iNsTr_38 := @(mem[iNsTr_37])
    //  file prog.linked.opt.aa, line 210
    &/ [array_obj_ref_412_index_0_resize] (iNsTr_37_409) (R_iNsTr_37_411_resized) 
    $flowthrough 
    &/ [array_obj_ref_412_index_0_rename] (R_iNsTr_37_411_resized) (R_iNsTr_37_411_scaled) 
    $flowthrough 
    &/ [array_obj_ref_412_index_offset] (R_iNsTr_37_411_scaled) (array_obj_ref_412_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_412_root_address_inst] (array_obj_ref_412_final_offset) (array_obj_ref_412_root_address) 
    $flowthrough 
    # := [addr_of_413_final_reg] (array_obj_ref_412_root_address) (iNsTr_38_414)   
    $buffering  $out addr_of_413_final_reg iNsTr_38_414 1
    // 		iNsTr_39 := ->(iNsTr_38)
    //  file prog.linked.opt.aa, line 211
    // ->(iNsTr_38)
    &/ [ptr_deref_417_base_resize] (iNsTr_38_414) (ptr_deref_417_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_417_root_address_inst] (ptr_deref_417_resized_base_address) (ptr_deref_417_root_address) 
    $flowthrough 
    &/ [ptr_deref_417_addr_0] (ptr_deref_417_root_address) (ptr_deref_417_word_address_0) 
    $flowthrough 
    $load [ptr_deref_417_load_0] $from memory_space_8 (ptr_deref_417_word_address_0) (ptr_deref_417_data_0) 
    $delay ptr_deref_417_load_0 4
    &/ [ptr_deref_417_gather_scatter] (ptr_deref_417_data_0) (iNsTr_39_418) 
    $flowthrough 
    // 		tmp15 := (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 212
    // (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_423_inst] (iNsTr_39_418 type_cast_422_wire_constant) (tmp15_424)   
    $buffering  $out ADD_u16_u16_423_inst tmp15_424 1
    $delay ADD_u16_u16_423_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 214
    // 			$phi iNsTr_42 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph8_bbx_xnph			  ($cast ($uint<16>) iNsTr_66 ) $on xx_x_crit_edge_bbx_xnph // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 215
    // ($cast ($uint<16>) iNsTr_66 )
    # := [type_cast_433_inst] (iNsTr_66_674) (type_cast_433_wire)   
    $buffering  $out type_cast_433_inst type_cast_433_wire 1
    $delay type_cast_433_inst 1
    $phi [phi_stmt_427] (type_cast_431_wire_constant type_cast_433_wire) ( iNsTr_42_427 ) 
    // 		tmp16 := (tmp15 + iNsTr_42)
    //  file prog.linked.opt.aa, line 217
    // (tmp15 + iNsTr_42)
    +[ADD_u16_u16_438_inst] (tmp15_424 iNsTr_42_427) (tmp16_439)   
    $buffering  $out ADD_u16_u16_438_inst tmp16_439 1
    $delay ADD_u16_u16_438_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 219
    // 			$phi exorx_x25 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<8>) exorx_x1 )
    # := [type_cast_449_inst] (exorx_x1_599) (type_cast_449_wire)   
    $buffering  $out type_cast_449_inst type_cast_449_wire 1
    $delay type_cast_449_inst 1
    $phi [phi_stmt_442] (type_cast_447_wire_constant type_cast_449_wire) ( exorx_x25_442 ) 
    // 			$phi iNsTr_44 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<16>) iNsTr_55 ) $on bb_14_bb_8 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 221
    // ($cast ($uint<16>) iNsTr_55 )
    # := [type_cast_456_inst] (iNsTr_55_615) (type_cast_456_wire)   
    $buffering  $out type_cast_456_inst type_cast_456_wire 1
    $delay type_cast_456_inst 1
    $phi [phi_stmt_450] (type_cast_454_wire_constant type_cast_456_wire) ( iNsTr_44_450 ) 
    // 			$phi valx_x23 := 			  ($cast ($float<8,23>) ($bitcast ($float<8,23>) _h0  ) ) $on bbx_xnph_bb_8			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_bb_8 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 222
    // ($cast ($float<8,23>) valx_x1 )
    # := [type_cast_463_inst] (valx_x1_589) (type_cast_463_wire)   
    $buffering  $out type_cast_463_inst type_cast_463_wire 1
    $delay type_cast_463_inst 10
    $phi [phi_stmt_457] (type_cast_461_wire_constant type_cast_463_wire) ( valx_x23_457 ) 
    // 			$phi flagx_x12 := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnph_bb_8			  ($cast ($uint<8>) flagx_x0 ) $on bb_14_bb_8 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 223
    // ($cast ($uint<8>) flagx_x0 )
    # := [type_cast_470_inst] (flagx_x0_576) (type_cast_470_wire)   
    $buffering  $out type_cast_470_inst type_cast_470_wire 1
    $delay type_cast_470_inst 1
    $phi [phi_stmt_464] (type_cast_468_wire_constant type_cast_470_wire) ( flagx_x12_464 ) 
    // 		tmp13 := (tmp15 + iNsTr_44)
    //  file prog.linked.opt.aa, line 225
    // (tmp15 + iNsTr_44)
    +[ADD_u16_u16_475_inst] (tmp15_424 iNsTr_44_450) (tmp13_476)   
    $buffering  $out ADD_u16_u16_475_inst tmp13_476 1
    $delay ADD_u16_u16_475_inst 1
    // 		iNsTr_45 := ($cast ($uint<64>) tmp13 )
    //  file prog.linked.opt.aa, line 226
    // ($cast ($uint<64>) tmp13 )
    # := [type_cast_479_inst] (tmp13_476) (iNsTr_45_480)   
    $buffering  $out type_cast_479_inst iNsTr_45_480 1
    $delay type_cast_479_inst 1
    // 		iNsTr_46 := @(message[iNsTr_45])
    //  file prog.linked.opt.aa, line 227
    &/ [array_obj_ref_483_index_0_resize] (iNsTr_45_480) (R_iNsTr_45_482_resized) 
    $flowthrough 
    &/ [array_obj_ref_483_index_0_rename] (R_iNsTr_45_482_resized) (R_iNsTr_45_482_scaled) 
    $flowthrough 
    &/ [array_obj_ref_483_index_offset] (R_iNsTr_45_482_scaled) (array_obj_ref_483_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_483_root_address_inst] (array_obj_ref_483_final_offset) (array_obj_ref_483_root_address) 
    $flowthrough 
    # := [addr_of_484_final_reg] (array_obj_ref_483_root_address) (iNsTr_46_485)   
    $buffering  $out addr_of_484_final_reg iNsTr_46_485 1
    // 		iNsTr_47 := ->(iNsTr_46)
    //  file prog.linked.opt.aa, line 228
    // ->(iNsTr_46)
    &/ [ptr_deref_488_base_resize] (iNsTr_46_485) (ptr_deref_488_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_488_root_address_inst] (ptr_deref_488_resized_base_address) (ptr_deref_488_root_address) 
    $flowthrough 
    &/ [ptr_deref_488_addr_0] (ptr_deref_488_root_address) (ptr_deref_488_word_address_0) 
    $flowthrough 
    $load [ptr_deref_488_load_0] $from memory_space_9 (ptr_deref_488_word_address_0) (ptr_deref_488_data_0) 
    $delay ptr_deref_488_load_0 4
    &/ [ptr_deref_488_gather_scatter] (ptr_deref_488_data_0) (iNsTr_47_489) 
    $flowthrough 
    // 		iNsTr_48 := ($cast ($float<11,52>) iNsTr_47 )
    //  file prog.linked.opt.aa, line 229
    // ($cast ($float<11,52>) iNsTr_47 )
    $F:=$F [type_cast_492_inst] (iNsTr_47_489) (iNsTr_48_493)  
    $buffering  $out type_cast_492_inst iNsTr_48_493 1
    $delay type_cast_492_inst 10
    // 		iNsTr_49 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 230
    // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_498_inst] (iNsTr_48_493 type_cast_497_wire_constant) (iNsTr_49_499)   
    $buffering  $out SLT_f64_u1_498_inst iNsTr_49_499 1
    $delay SLT_f64_u1_498_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 231
    ==0? [if_stmt_500_branch] (iNsTr_49_499)
    // 		iNsTr_51 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
    //  file prog.linked.opt.aa, line 238
    // (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
    -[SUB_f32_f32_511_inst] (type_cast_509_wire_constant iNsTr_47_489) (iNsTr_51_512)   
    $buffering  $out SUB_f32_f32_511_inst iNsTr_51_512 1
    $delay SUB_f32_f32_511_inst 14
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 240
    // 			$phi temp1x_x0 := 			  ($cast ($float<8,23>) iNsTr_51 ) $on bb_9_bb_10			  ($cast ($float<8,23>) iNsTr_47 ) $on bb_8_bb_10 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 241
    // ($cast ($float<8,23>) iNsTr_51 )
    # := [type_cast_518_inst] (iNsTr_51_512) (type_cast_518_wire)   
    $buffering  $out type_cast_518_inst type_cast_518_wire 1
    $delay type_cast_518_inst 10
    // ($cast ($float<8,23>) iNsTr_47 )
    # := [type_cast_520_inst] (iNsTr_47_489) (type_cast_520_wire)   
    $buffering  $out type_cast_520_inst type_cast_520_wire 1
    $delay type_cast_520_inst 10
    $phi [phi_stmt_515] (type_cast_518_wire type_cast_520_wire) ( temp1x_x0_515 ) 
    // 		iNsTr_53 := (iNsTr_44 == iNsTr_42)
    //  file prog.linked.opt.aa, line 243
    // (iNsTr_44 == iNsTr_42)
    ==[EQ_u16_u1_525_inst] (iNsTr_44_450 iNsTr_42_427) (iNsTr_53_526)   
    $buffering  $out EQ_u16_u1_525_inst iNsTr_53_526 1
    $delay EQ_u16_u1_525_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 244
    ==0? [if_stmt_527_branch] (iNsTr_53_526)
    // 		iNsTr_57 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 251
    // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_538_inst] (iNsTr_48_493 type_cast_537_wire_constant) (iNsTr_57_539)   
    $buffering  $out SLT_f64_u1_538_inst iNsTr_57_539 1
    $delay SLT_f64_u1_538_inst 1
    // 		iNsTr_58 := ($cast ($uint<8>) iNsTr_57 )
    //  file prog.linked.opt.aa, line 252
    // ($cast ($uint<8>) iNsTr_57 )
    # := [type_cast_542_inst] (iNsTr_57_539) (iNsTr_58_543)   
    $buffering  $out type_cast_542_inst iNsTr_58_543 1
    $delay type_cast_542_inst 1
    // 		exorx_x0 := (iNsTr_58 ^ exorx_x25)
    //  file prog.linked.opt.aa, line 253
    // (iNsTr_58 ^ exorx_x25)
    ^[XOR_u8_u8_547_inst] (iNsTr_58_543 exorx_x25_442) (exorx_x0_548)   
    $buffering  $out XOR_u8_u8_547_inst exorx_x0_548 1
    $delay XOR_u8_u8_547_inst 1
    // 		iNsTr_59 := (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 254
    // (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_553_inst] (flagx_x12_464 type_cast_552_wire_constant) (iNsTr_59_554)   
    $buffering  $out EQ_u8_u1_553_inst iNsTr_59_554 1
    $delay EQ_u8_u1_553_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 255
    ==0? [if_stmt_555_branch] (iNsTr_59_554)
    // 		iNsTr_68 := (temp1x_x0 < valx_x23)
    //  file prog.linked.opt.aa, line 262
    // (temp1x_x0 < valx_x23)
    $S<$S[SLT_f32_u1_565_inst] (temp1x_x0_515 valx_x23_457) (iNsTr_68_566)   
    $buffering  $out SLT_f32_u1_565_inst iNsTr_68_566 1
    $delay SLT_f32_u1_565_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 263
    ==0? [if_stmt_567_branch] (iNsTr_68_566)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 271
    // 			$phi flagx_x0 := 			  ($cast ($uint<8>) flagx_x12 ) $on bb_10_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_11_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_13_bb_14			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000001  ) ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 272
    // ($cast ($uint<8>) flagx_x12 )
    # := [type_cast_579_inst] (flagx_x12_464) (type_cast_579_wire)   
    $buffering  $out type_cast_579_inst type_cast_579_wire 1
    $delay type_cast_579_inst 1
    $phi [phi_stmt_576] (type_cast_579_wire type_cast_582_wire_constant type_cast_585_wire_constant type_cast_588_wire_constant) ( flagx_x0_576 ) 
    // 			$phi valx_x1 := 			  ($cast ($float<8,23>) valx_x23 ) $on bb_10_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_11_bb_14			  ($cast ($float<8,23>) temp1x_x0 ) $on bb_13_bb_14			  ($cast ($float<8,23>) valx_x23 ) $on bb_12_bb_14 // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 273
    // ($cast ($float<8,23>) valx_x23 )
    # := [type_cast_592_inst] (valx_x23_457) (type_cast_592_wire)   
    $buffering  $out type_cast_592_inst type_cast_592_wire 1
    $delay type_cast_592_inst 10
    // ($cast ($float<8,23>) temp1x_x0 )
    # := [type_cast_594_inst] (temp1x_x0_515) (type_cast_594_wire)   
    $buffering  $out type_cast_594_inst type_cast_594_wire 1
    $delay type_cast_594_inst 10
    // ($cast ($float<8,23>) temp1x_x0 )
    # := [type_cast_596_inst] (temp1x_x0_515) (type_cast_596_wire)   
    $buffering  $out type_cast_596_inst type_cast_596_wire 1
    $delay type_cast_596_inst 10
    // ($cast ($float<8,23>) valx_x23 )
    # := [type_cast_598_inst] (valx_x23_457) (type_cast_598_wire)   
    $buffering  $out type_cast_598_inst type_cast_598_wire 1
    $delay type_cast_598_inst 10
    $phi [phi_stmt_589] (type_cast_592_wire type_cast_594_wire type_cast_596_wire type_cast_598_wire) ( valx_x1_589 ) 
    // 			$phi exorx_x1 := 			  ($cast ($uint<8>) exorx_x25 ) $on bb_10_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_11_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_13_bb_14			  ($cast ($uint<8>) exorx_x0 ) $on bb_12_bb_14 // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 274
    // ($cast ($uint<8>) exorx_x25 )
    # := [type_cast_602_inst] (exorx_x25_442) (type_cast_602_wire)   
    $buffering  $out type_cast_602_inst type_cast_602_wire 1
    $delay type_cast_602_inst 1
    // ($cast ($uint<8>) exorx_x0 )
    # := [type_cast_604_inst] (exorx_x0_548) (type_cast_604_wire)   
    $buffering  $out type_cast_604_inst type_cast_604_wire 1
    $delay type_cast_604_inst 1
    // ($cast ($uint<8>) exorx_x0 )
    # := [type_cast_606_inst] (exorx_x0_548) (type_cast_606_wire)   
    $buffering  $out type_cast_606_inst type_cast_606_wire 1
    $delay type_cast_606_inst 1
    // ($cast ($uint<8>) exorx_x0 )
    # := [type_cast_608_inst] (exorx_x0_548) (type_cast_608_wire)   
    $buffering  $out type_cast_608_inst type_cast_608_wire 1
    $delay type_cast_608_inst 1
    $phi [phi_stmt_599] (type_cast_602_wire type_cast_604_wire type_cast_606_wire type_cast_608_wire) ( exorx_x1_599 ) 
    // 		iNsTr_55 := (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 276
    // (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_614_inst] (iNsTr_44_450 type_cast_613_wire_constant) (iNsTr_55_615)   
    $buffering  $out ADD_u16_u16_614_inst iNsTr_55_615 1
    $delay ADD_u16_u16_614_inst 1
    // 		exitcond1 := (iNsTr_55 == rangex_x0)
    //  file prog.linked.opt.aa, line 277
    // (iNsTr_55 == rangex_x0)
    ==[EQ_u16_u1_619_inst] (iNsTr_55_615 rangex_x0_375) (exitcond1_620)   
    $buffering  $out EQ_u16_u1_619_inst exitcond1_620 1
    $delay EQ_u16_u1_619_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 278
    ==0? [if_stmt_621_branch] (exitcond1_620)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 283
    // 			$phi exorx_x1x_xlcssa := 			  ($cast ($uint<8>) exorx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 284
    // ($cast ($uint<8>) exorx_x1 )
    # := [type_cast_631_inst] (exorx_x1_599) (type_cast_631_wire)   
    $buffering  $out type_cast_631_inst type_cast_631_wire 1
    $delay type_cast_631_inst 1
    $phi [phi_stmt_628] (type_cast_631_wire) ( exorx_x1x_xlcssa_628 ) 
    // 			$phi valx_x1x_xlcssa := 			  ($cast ($float<8,23>) valx_x1 ) $on bb_14_xx_x_crit_edge // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 285
    // ($cast ($float<8,23>) valx_x1 )
    # := [type_cast_635_inst] (valx_x1_589) (type_cast_635_wire)   
    $buffering  $out type_cast_635_inst type_cast_635_wire 1
    $delay type_cast_635_inst 10
    $phi [phi_stmt_632] (type_cast_635_wire) ( valx_x1x_xlcssa_632 ) 
    // 		iNsTr_61 := (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
    //  file prog.linked.opt.aa, line 287
    // (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
    ==[EQ_u8_u1_641_inst] (exorx_x1x_xlcssa_628 type_cast_640_wire_constant) (iNsTr_61_642)   
    $buffering  $out EQ_u8_u1_641_inst iNsTr_61_642 1
    $delay EQ_u8_u1_641_inst 1
    // 		signx_x0 := ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
    //  file prog.linked.opt.aa, line 288
    // ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
    ? [MUX_649_inst] (iNsTr_61_642 type_cast_646_wire_constant type_cast_648_wire_constant) (signx_x0_650) 
    $buffering  $out MUX_649_inst signx_x0_650 1
    // 		iNsTr_62 := (valx_x1x_xlcssa * signx_x0)
    //  file prog.linked.opt.aa, line 289
    // (valx_x1x_xlcssa * signx_x0)
    *[MUL_f32_f32_654_inst] (valx_x1x_xlcssa_632 signx_x0_650) (iNsTr_62_655)   
    $buffering  $out MUL_f32_f32_654_inst iNsTr_62_655 1
    $delay MUL_f32_f32_654_inst 14
    // 		iNsTr_63 := ($cast ($uint<64>) tmp16 )
    //  file prog.linked.opt.aa, line 290
    // ($cast ($uint<64>) tmp16 )
    # := [type_cast_658_inst] (tmp16_439) (iNsTr_63_659)   
    $buffering  $out type_cast_658_inst iNsTr_63_659 1
    $delay type_cast_658_inst 1
    // 		iNsTr_64 := @(ext_info[iNsTr_63])
    //  file prog.linked.opt.aa, line 291
    &/ [array_obj_ref_662_index_0_resize] (iNsTr_63_659) (R_iNsTr_63_661_resized) 
    $flowthrough 
    &/ [array_obj_ref_662_index_0_rename] (R_iNsTr_63_661_resized) (R_iNsTr_63_661_scaled) 
    $flowthrough 
    &/ [array_obj_ref_662_index_offset] (R_iNsTr_63_661_scaled) (array_obj_ref_662_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_662_root_address_inst] (array_obj_ref_662_final_offset) (array_obj_ref_662_root_address) 
    $flowthrough 
    # := [addr_of_663_final_reg] (array_obj_ref_662_root_address) (iNsTr_64_664)   
    $buffering  $out addr_of_663_final_reg iNsTr_64_664 1
    // 		->(iNsTr_64) := iNsTr_62
    //  file prog.linked.opt.aa, line 292
    // ->(iNsTr_64)
    &/ [ptr_deref_666_base_resize] (iNsTr_64_664) (ptr_deref_666_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_666_root_address_inst] (ptr_deref_666_resized_base_address) (ptr_deref_666_root_address) 
    $flowthrough 
    &/ [ptr_deref_666_addr_0] (ptr_deref_666_root_address) (ptr_deref_666_word_address_0) 
    $flowthrough 
    $store [ptr_deref_666_store_0] $to memory_space_5 (ptr_deref_666_word_address_0 ptr_deref_666_data_0) 
    $delay ptr_deref_666_store_0 4
    &/ [ptr_deref_666_gather_scatter] (iNsTr_62_655) (ptr_deref_666_data_0) 
    $flowthrough 
    // 		iNsTr_66 := (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 293
    // (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_673_inst] (iNsTr_42_427 type_cast_672_wire_constant) (iNsTr_66_674)   
    $buffering  $out ADD_u16_u16_673_inst iNsTr_66_674 1
    $delay ADD_u16_u16_673_inst 1
    // 		exitcond := (iNsTr_66 == rangex_x0)
    //  file prog.linked.opt.aa, line 294
    // (iNsTr_66 == rangex_x0)
    ==[EQ_u16_u1_678_inst] (iNsTr_66_674 rangex_x0_375) (exitcond_679)   
    $buffering  $out EQ_u16_u1_678_inst exitcond_679 1
    $delay EQ_u16_u1_678_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 295
    ==0? [if_stmt_680_branch] (exitcond_679)
    // 		iNsTr_33 := (tmp17 < iNsTr_10)
    //  file prog.linked.opt.aa, line 305
    // (tmp17 < iNsTr_10)
    <[ULT_u16_u1_692_inst] (tmp17_258 iNsTr_10_275) (iNsTr_33_693)   
    $buffering  $out ULT_u16_u1_692_inst iNsTr_33_693 1
    $delay ULT_u16_u1_692_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 306
    ==0? [if_stmt_694_branch] (iNsTr_33_693)
  }
  // end data-path
  // 		iNsTr_0 := nrows
  //  file prog.linked.opt.aa, line 149
  // nrows
  LOAD_nrows_228_gather_scatter <=> (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Update/LOAD_nrows_228_Merge/merge_req) (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Update/LOAD_nrows_228_Merge/merge_ack)
  LOAD_nrows_228_load_0 <=> (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/LOAD_nrows_228_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 150
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_234_inst <=> (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/EQ_u16_u1_234_Sample/rr branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/EQ_u16_u1_234_Update/cr) (branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/EQ_u16_u1_234_Sample/ra branch_block_stmt_226/assign_stmt_229_to_assign_stmt_235/EQ_u16_u1_234_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 151
  if_stmt_236_branch <=> (branch_block_stmt_226/if_stmt_236_eval_test/branch_req) (branch_block_stmt_226/if_stmt_236_else_link/else_choice_transition branch_block_stmt_226/if_stmt_236_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 156
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 159
  // ($cast ($uint<16>) iNsTr_6 )
  type_cast_248_inst <=> (branch_block_stmt_226/xx_x_crit_edge9_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_sources/type_cast_248/SplitProtocol/Sample/rr branch_block_stmt_226/xx_x_crit_edge9_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_sources/type_cast_248/SplitProtocol/Update/cr) (branch_block_stmt_226/xx_x_crit_edge9_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_sources/type_cast_248/SplitProtocol/Sample/ra branch_block_stmt_226/xx_x_crit_edge9_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_sources/type_cast_248/SplitProtocol/Update/ca)
  phi_stmt_245 <=> (branch_block_stmt_226/xx_x_crit_edge9_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_req branch_block_stmt_226/bbx_xnph11x_xpreheader_bbx_xnph11_PhiReq/phi_stmt_245/phi_stmt_245_req) (branch_block_stmt_226/merge_stmt_244_PhiAck/phi_stmt_245_ack)
  // 		tmp17 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 162
  // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_5
  ADD_u16_u16_257_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_257_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_257_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_257_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_257_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 163
  // (iNsTr_5 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_5
  ADD_u16_u16_263_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_263_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_263_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_263_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u16_u16_263_Update/ca)
  // 		iNsTr_8 := ncol_ind
  //  file prog.linked.opt.aa, line 164
  // ncol_ind
  LOAD_ncol_ind_266_gather_scatter <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Update/LOAD_ncol_ind_266_Merge/merge_req) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Update/LOAD_ncol_ind_266_Merge/merge_ack)
  LOAD_ncol_ind_266_load_0 <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_ncol_ind_266_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := ($cast ($uint<32>) iNsTr_5 )
  //  file prog.linked.opt.aa, line 165
  // iNsTr_5
  // ($cast ($uint<32>) iNsTr_5 )
  type_cast_271_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_271_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_271_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_271_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_271_Update/ca)
  // 		iNsTr_10 := nrows
  //  file prog.linked.opt.aa, line 166
  // nrows
  LOAD_nrows_274_gather_scatter <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Update/LOAD_nrows_274_Merge/merge_req) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Update/LOAD_nrows_274_Merge/merge_ack)
  LOAD_nrows_274_load_0 <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/LOAD_nrows_274_Update/word_access_complete/word_0/ca)
  // 		iNsTr_11 := ($cast ($uint<32>) iNsTr_10 )
  //  file prog.linked.opt.aa, line 167
  // iNsTr_10
  // ($cast ($uint<32>) iNsTr_10 )
  type_cast_278_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_278_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_278_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_278_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_278_Update/ca)
  // 		iNsTr_12 := (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 168
  // (iNsTr_11 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // iNsTr_11
  ADD_u32_u32_284_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u32_u32_284_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u32_u32_284_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u32_u32_284_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u32_u32_284_Update/ca)
  // 		iNsTr_13 := (iNsTr_9 == iNsTr_12)
  //  file prog.linked.opt.aa, line 169
  // (iNsTr_9 == iNsTr_12)
  // iNsTr_9
  // iNsTr_12
  EQ_u32_u1_289_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/EQ_u32_u1_289_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/EQ_u32_u1_289_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/EQ_u32_u1_289_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/EQ_u32_u1_289_Update/ca)
  // 		iNsTr_14 := ($cast ($uint<64>) iNsTr_8 )
  //  file prog.linked.opt.aa, line 170
  // iNsTr_8
  // ($cast ($uint<64>) iNsTr_8 )
  type_cast_293_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_293_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_293_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_293_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_293_Update/ca)
  // 		iNsTr_15 := ($cast ($uint<64>) iNsTr_5 )
  //  file prog.linked.opt.aa, line 171
  // iNsTr_5
  // ($cast ($uint<64>) iNsTr_5 )
  type_cast_297_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_297_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_297_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_297_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/type_cast_297_Update/ca)
  // 		iNsTr_16 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 172
  // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // iNsTr_15
  ADD_u64_u64_303_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_303_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_303_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_303_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_303_Update/ca)
  // 		iNsTr_17 := (iNsTr_16 + iNsTr_14)
  //  file prog.linked.opt.aa, line 173
  // (iNsTr_16 + iNsTr_14)
  // iNsTr_16
  // iNsTr_14
  ADD_u64_u64_308_inst <=> (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_308_Sample/rr branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_308_Update/cr) (branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_308_Sample/ra branch_block_stmt_226/assign_stmt_258_to_assign_stmt_309/ADD_u64_u64_308_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 174
  if_stmt_310_branch <=> (branch_block_stmt_226/if_stmt_310_eval_test/branch_req) (branch_block_stmt_226/if_stmt_310_else_link/else_choice_transition branch_block_stmt_226/if_stmt_310_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 179
  // 		iNsTr_23 := (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  //  file prog.linked.opt.aa, line 181
  // (iNsTr_15 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  // iNsTr_15
  ADD_u64_u64_321_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_321_Sample/rr branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_321_Update/cr) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_321_Sample/ra branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_321_Update/ca)
  // 		iNsTr_24 := (iNsTr_23 + iNsTr_14)
  //  file prog.linked.opt.aa, line 182
  // (iNsTr_23 + iNsTr_14)
  // iNsTr_23
  // iNsTr_14
  ADD_u64_u64_326_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_326_Sample/rr branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_326_Update/cr) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_326_Sample/ra branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ADD_u64_u64_326_Update/ca)
  // 		iNsTr_25 := @(mem[iNsTr_17])
  //  file prog.linked.opt.aa, line 183
  // iNsTr_17
  array_obj_ref_330_index_0_resize <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_index_resize_0/index_resize_ack)
  array_obj_ref_330_index_0_rename <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_index_scale_0/scale_rename_ack)
  array_obj_ref_330_index_offset <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_final_index_sum_regn/ack)
  array_obj_ref_330_root_address_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_330_base_plus_offset/sum_rename_ack)
  addr_of_331_final_reg <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_331_request/req branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_331_complete/req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_331_request/ack branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_331_complete/ack)
  // 		iNsTr_26 := @(mem[iNsTr_24])
  //  file prog.linked.opt.aa, line 184
  // iNsTr_24
  array_obj_ref_335_index_0_resize <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_index_resize_0/index_resize_ack)
  array_obj_ref_335_index_0_rename <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_index_scale_0/scale_rename_ack)
  array_obj_ref_335_index_offset <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_final_index_sum_regn/ack)
  array_obj_ref_335_root_address_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/array_obj_ref_335_base_plus_offset/sum_rename_ack)
  addr_of_336_final_reg <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_336_request/req branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_336_complete/req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_336_request/ack branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/addr_of_336_complete/ack)
  // 		iNsTr_27 := ->(iNsTr_25)
  //  file prog.linked.opt.aa, line 185
  // iNsTr_25
  ptr_deref_340_base_resize <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_base_addr_resize/base_resize_ack)
  ptr_deref_340_root_address_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_base_plus_offset/sum_rename_ack)
  ptr_deref_340_addr_0 <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_word_addrgen/root_register_ack)
  ptr_deref_340_gather_scatter <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Update/ptr_deref_340_Merge/merge_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Update/ptr_deref_340_Merge/merge_ack)
  ptr_deref_340_load_0 <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_340_Update/word_access_complete/word_0/ca)
  // 		iNsTr_28 := ->(iNsTr_26)
  //  file prog.linked.opt.aa, line 186
  // iNsTr_26
  ptr_deref_344_base_resize <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_base_addr_resize/base_resize_ack)
  ptr_deref_344_root_address_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_base_plus_offset/sum_rename_ack)
  ptr_deref_344_addr_0 <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_word_addrgen/root_register_ack)
  ptr_deref_344_gather_scatter <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Update/ptr_deref_344_Merge/merge_req) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Update/ptr_deref_344_Merge/merge_ack)
  ptr_deref_344_load_0 <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/ptr_deref_344_Update/word_access_complete/word_0/ca)
  // 		iNsTr_29 := (iNsTr_28 - iNsTr_27)
  //  file prog.linked.opt.aa, line 187
  // (iNsTr_28 - iNsTr_27)
  // iNsTr_28
  // iNsTr_27
  SUB_u16_u16_349_inst <=> (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/SUB_u16_u16_349_Sample/rr branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/SUB_u16_u16_349_Update/cr) (branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/SUB_u16_u16_349_Sample/ra branch_block_stmt_226/assign_stmt_322_to_assign_stmt_350/SUB_u16_u16_349_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 189
  // 		iNsTr_19 := @(mem[iNsTr_17])
  //  file prog.linked.opt.aa, line 191
  // iNsTr_17
  array_obj_ref_355_index_0_resize <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_index_resize_0/index_resize_ack)
  array_obj_ref_355_index_0_rename <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_index_scale_0/scale_rename_ack)
  array_obj_ref_355_index_offset <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_final_index_sum_regn/ack)
  array_obj_ref_355_root_address_inst <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/array_obj_ref_355_base_plus_offset/sum_rename_ack)
  addr_of_356_final_reg <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/addr_of_356_request/req branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/addr_of_356_complete/req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/addr_of_356_request/ack branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/addr_of_356_complete/ack)
  // 		iNsTr_20 := ->(iNsTr_19)
  //  file prog.linked.opt.aa, line 192
  // iNsTr_19
  ptr_deref_360_base_resize <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_base_addr_resize/base_resize_ack)
  ptr_deref_360_root_address_inst <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_base_plus_offset/sum_rename_ack)
  ptr_deref_360_addr_0 <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_word_addrgen/root_register_ack)
  ptr_deref_360_gather_scatter <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Update/ptr_deref_360_Merge/merge_req) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Update/ptr_deref_360_Merge/merge_ack)
  ptr_deref_360_load_0 <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ptr_deref_360_Update/word_access_complete/word_0/ca)
  // 		xx_xneg1 := (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 193
  // (iNsTr_8 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_8
  ADD_u16_u16_366_inst <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ADD_u16_u16_366_Sample/rr branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ADD_u16_u16_366_Update/cr) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ADD_u16_u16_366_Sample/ra branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/ADD_u16_u16_366_Update/ca)
  // 		iNsTr_21 := (xx_xneg1 - iNsTr_20)
  //  file prog.linked.opt.aa, line 194
  // (xx_xneg1 - iNsTr_20)
  // xx_xneg1
  // iNsTr_20
  SUB_u16_u16_371_inst <=> (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/SUB_u16_u16_371_Sample/rr branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/SUB_u16_u16_371_Update/cr) (branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/SUB_u16_u16_371_Sample/ra branch_block_stmt_226/assign_stmt_357_to_assign_stmt_372/SUB_u16_u16_371_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 196
  // ($cast ($uint<16>) iNsTr_21 )
  type_cast_378_inst <=> (branch_block_stmt_226/bb_3_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_378/SplitProtocol/Sample/rr branch_block_stmt_226/bb_3_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_378/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_3_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_378/SplitProtocol/Sample/ra branch_block_stmt_226/bb_3_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_378/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_29 )
  type_cast_380_inst <=> (branch_block_stmt_226/bb_4_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_380/SplitProtocol/Sample/rr branch_block_stmt_226/bb_4_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_380/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_4_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_380/SplitProtocol/Sample/ra branch_block_stmt_226/bb_4_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_sources/type_cast_380/SplitProtocol/Update/ca)
  phi_stmt_375 <=> (branch_block_stmt_226/bb_3_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_req branch_block_stmt_226/bb_4_bb_5_PhiReq/phi_stmt_375/phi_stmt_375_req) (branch_block_stmt_226/merge_stmt_374_PhiAck/phi_stmt_375_ack)
  // 		iNsTr_31 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 199
  // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // rangex_x0
  EQ_u16_u1_386_inst <=> (branch_block_stmt_226/assign_stmt_387/EQ_u16_u1_386_Sample/rr branch_block_stmt_226/assign_stmt_387/EQ_u16_u1_386_Update/cr) (branch_block_stmt_226/assign_stmt_387/EQ_u16_u1_386_Sample/ra branch_block_stmt_226/assign_stmt_387/EQ_u16_u1_386_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 200
  if_stmt_388_branch <=> (branch_block_stmt_226/if_stmt_388_eval_test/branch_req) (branch_block_stmt_226/if_stmt_388_else_link/else_choice_transition branch_block_stmt_226/if_stmt_388_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 205
  // 		iNsTr_35 := ($cast ($uint<64>) iNsTr_5 )
  //  file prog.linked.opt.aa, line 207
  // iNsTr_5
  // ($cast ($uint<64>) iNsTr_5 )
  type_cast_397_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/type_cast_397_Sample/rr branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/type_cast_397_Update/cr) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/type_cast_397_Sample/ra branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/type_cast_397_Update/ca)
  // 		iNsTr_36 := (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 208
  // (iNsTr_35 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // iNsTr_35
  ADD_u64_u64_403_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_403_Sample/rr branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_403_Update/cr) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_403_Sample/ra branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_403_Update/ca)
  // 		iNsTr_37 := (iNsTr_36 + iNsTr_14)
  //  file prog.linked.opt.aa, line 209
  // (iNsTr_36 + iNsTr_14)
  // iNsTr_36
  // iNsTr_14
  ADD_u64_u64_408_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_408_Sample/rr branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_408_Update/cr) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_408_Sample/ra branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u64_u64_408_Update/ca)
  // 		iNsTr_38 := @(mem[iNsTr_37])
  //  file prog.linked.opt.aa, line 210
  // iNsTr_37
  array_obj_ref_412_index_0_resize <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_index_resize_0/index_resize_ack)
  array_obj_ref_412_index_0_rename <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_index_scale_0/scale_rename_ack)
  array_obj_ref_412_index_offset <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_final_index_sum_regn/ack)
  array_obj_ref_412_root_address_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/array_obj_ref_412_base_plus_offset/sum_rename_ack)
  addr_of_413_final_reg <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/addr_of_413_request/req branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/addr_of_413_complete/req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/addr_of_413_request/ack branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/addr_of_413_complete/ack)
  // 		iNsTr_39 := ->(iNsTr_38)
  //  file prog.linked.opt.aa, line 211
  // iNsTr_38
  ptr_deref_417_base_resize <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_base_addr_resize/base_resize_ack)
  ptr_deref_417_root_address_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_base_plus_offset/sum_rename_ack)
  ptr_deref_417_addr_0 <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_word_addrgen/root_register_ack)
  ptr_deref_417_gather_scatter <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Update/ptr_deref_417_Merge/merge_req) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Update/ptr_deref_417_Merge/merge_ack)
  ptr_deref_417_load_0 <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ptr_deref_417_Update/word_access_complete/word_0/ca)
  // 		tmp15 := (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 212
  // (iNsTr_39 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_39
  ADD_u16_u16_423_inst <=> (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u16_u16_423_Sample/rr branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u16_u16_423_Update/cr) (branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u16_u16_423_Sample/ra branch_block_stmt_226/assign_stmt_398_to_assign_stmt_424/ADD_u16_u16_423_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 214
  // ($cast ($uint<16>) iNsTr_66 )
  type_cast_433_inst <=> (branch_block_stmt_226/xx_x_crit_edge_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_sources/type_cast_433/SplitProtocol/Sample/rr branch_block_stmt_226/xx_x_crit_edge_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_sources/type_cast_433/SplitProtocol/Update/cr) (branch_block_stmt_226/xx_x_crit_edge_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_sources/type_cast_433/SplitProtocol/Sample/ra branch_block_stmt_226/xx_x_crit_edge_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_sources/type_cast_433/SplitProtocol/Update/ca)
  phi_stmt_427 <=> (branch_block_stmt_226/bbx_xnph8_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_req branch_block_stmt_226/xx_x_crit_edge_bbx_xnph_PhiReq/phi_stmt_427/phi_stmt_427_req) (branch_block_stmt_226/merge_stmt_426_PhiAck/phi_stmt_427_ack)
  // 		tmp16 := (tmp15 + iNsTr_42)
  //  file prog.linked.opt.aa, line 217
  // (tmp15 + iNsTr_42)
  // tmp15
  // iNsTr_42
  ADD_u16_u16_438_inst <=> (branch_block_stmt_226/assign_stmt_439/ADD_u16_u16_438_Sample/rr branch_block_stmt_226/assign_stmt_439/ADD_u16_u16_438_Update/cr) (branch_block_stmt_226/assign_stmt_439/ADD_u16_u16_438_Sample/ra branch_block_stmt_226/assign_stmt_439/ADD_u16_u16_438_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 219
  // ($cast ($uint<8>) exorx_x1 )
  type_cast_449_inst <=> (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_sources/type_cast_449/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_sources/type_cast_449/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_sources/type_cast_449/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_sources/type_cast_449/SplitProtocol/Update/ca)
  phi_stmt_442 <=> (branch_block_stmt_226/bbx_xnph_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_req branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_442/phi_stmt_442_req) (branch_block_stmt_226/merge_stmt_441_PhiAck/phi_stmt_442_ack)
  // ($cast ($uint<16>) iNsTr_55 )
  type_cast_456_inst <=> (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_sources/type_cast_456/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_sources/type_cast_456/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_sources/type_cast_456/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_sources/type_cast_456/SplitProtocol/Update/ca)
  phi_stmt_450 <=> (branch_block_stmt_226/bbx_xnph_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_req branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_450/phi_stmt_450_req) (branch_block_stmt_226/merge_stmt_441_PhiAck/phi_stmt_450_ack)
  // ($cast ($float<8,23>) valx_x1 )
  type_cast_463_inst <=> (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_sources/type_cast_463/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_sources/type_cast_463/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_sources/type_cast_463/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_sources/type_cast_463/SplitProtocol/Update/ca)
  phi_stmt_457 <=> (branch_block_stmt_226/bbx_xnph_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_req branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_457/phi_stmt_457_req) (branch_block_stmt_226/merge_stmt_441_PhiAck/phi_stmt_457_ack)
  // ($cast ($uint<8>) flagx_x0 )
  type_cast_470_inst <=> (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_sources/type_cast_470/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_sources/type_cast_470/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_sources/type_cast_470/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_sources/type_cast_470/SplitProtocol/Update/ca)
  phi_stmt_464 <=> (branch_block_stmt_226/bbx_xnph_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_req branch_block_stmt_226/bb_14_bb_8_PhiReq/phi_stmt_464/phi_stmt_464_req) (branch_block_stmt_226/merge_stmt_441_PhiAck/phi_stmt_464_ack)
  // 		tmp13 := (tmp15 + iNsTr_44)
  //  file prog.linked.opt.aa, line 225
  // (tmp15 + iNsTr_44)
  // tmp15
  // iNsTr_44
  ADD_u16_u16_475_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ADD_u16_u16_475_Sample/rr branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ADD_u16_u16_475_Update/cr) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ADD_u16_u16_475_Sample/ra branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ADD_u16_u16_475_Update/ca)
  // 		iNsTr_45 := ($cast ($uint<64>) tmp13 )
  //  file prog.linked.opt.aa, line 226
  // tmp13
  // ($cast ($uint<64>) tmp13 )
  type_cast_479_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_479_Sample/rr branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_479_Update/cr) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_479_Sample/ra branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_479_Update/ca)
  // 		iNsTr_46 := @(message[iNsTr_45])
  //  file prog.linked.opt.aa, line 227
  // iNsTr_45
  array_obj_ref_483_index_0_resize <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_index_resize_0/index_resize_ack)
  array_obj_ref_483_index_0_rename <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_index_scale_0/scale_rename_ack)
  array_obj_ref_483_index_offset <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_final_index_sum_regn/ack)
  array_obj_ref_483_root_address_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/array_obj_ref_483_base_plus_offset/sum_rename_ack)
  addr_of_484_final_reg <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/addr_of_484_request/req branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/addr_of_484_complete/req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/addr_of_484_request/ack branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/addr_of_484_complete/ack)
  // 		iNsTr_47 := ->(iNsTr_46)
  //  file prog.linked.opt.aa, line 228
  // iNsTr_46
  ptr_deref_488_base_resize <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_base_addr_resize/base_resize_ack)
  ptr_deref_488_root_address_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_base_plus_offset/sum_rename_ack)
  ptr_deref_488_addr_0 <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_word_addrgen/root_register_ack)
  ptr_deref_488_gather_scatter <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Update/ptr_deref_488_Merge/merge_req) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Update/ptr_deref_488_Merge/merge_ack)
  ptr_deref_488_load_0 <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/ptr_deref_488_Update/word_access_complete/word_0/ca)
  // 		iNsTr_48 := ($cast ($float<11,52>) iNsTr_47 )
  //  file prog.linked.opt.aa, line 229
  // iNsTr_47
  // ($cast ($float<11,52>) iNsTr_47 )
  type_cast_492_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_492_Sample/rr branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_492_Update/cr) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_492_Sample/ra branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/type_cast_492_Update/ca)
  // 		iNsTr_49 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 230
  // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_48
  SLT_f64_u1_498_inst <=> (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/SLT_f64_u1_498_Sample/rr branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/SLT_f64_u1_498_Update/cr) (branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/SLT_f64_u1_498_Sample/ra branch_block_stmt_226/assign_stmt_476_to_assign_stmt_499/SLT_f64_u1_498_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 231
  if_stmt_500_branch <=> (branch_block_stmt_226/if_stmt_500_eval_test/branch_req) (branch_block_stmt_226/if_stmt_500_else_link/else_choice_transition branch_block_stmt_226/if_stmt_500_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 236
  // 		iNsTr_51 := (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
  //  file prog.linked.opt.aa, line 238
  // (($bitcast ($float<8,23>) _h80000000  ) - iNsTr_47)
  // iNsTr_47
  SUB_f32_f32_511_inst <=> (branch_block_stmt_226/assign_stmt_512/SUB_f32_f32_511_Sample/rr branch_block_stmt_226/assign_stmt_512/SUB_f32_f32_511_Update/cr) (branch_block_stmt_226/assign_stmt_512/SUB_f32_f32_511_Sample/ra branch_block_stmt_226/assign_stmt_512/SUB_f32_f32_511_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 240
  // ($cast ($float<8,23>) iNsTr_51 )
  type_cast_518_inst <=> (branch_block_stmt_226/bb_9_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_518/SplitProtocol/Sample/rr branch_block_stmt_226/bb_9_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_518/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_9_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_518/SplitProtocol/Sample/ra branch_block_stmt_226/bb_9_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_518/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) iNsTr_47 )
  type_cast_520_inst <=> (branch_block_stmt_226/bb_8_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_520/SplitProtocol/Sample/rr branch_block_stmt_226/bb_8_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_520/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_8_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_520/SplitProtocol/Sample/ra branch_block_stmt_226/bb_8_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_sources/type_cast_520/SplitProtocol/Update/ca)
  phi_stmt_515 <=> (branch_block_stmt_226/bb_9_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_req branch_block_stmt_226/bb_8_bb_10_PhiReq/phi_stmt_515/phi_stmt_515_req) (branch_block_stmt_226/merge_stmt_514_PhiAck/phi_stmt_515_ack)
  // 		iNsTr_53 := (iNsTr_44 == iNsTr_42)
  //  file prog.linked.opt.aa, line 243
  // (iNsTr_44 == iNsTr_42)
  // iNsTr_44
  // iNsTr_42
  EQ_u16_u1_525_inst <=> (branch_block_stmt_226/assign_stmt_526/EQ_u16_u1_525_Sample/rr branch_block_stmt_226/assign_stmt_526/EQ_u16_u1_525_Update/cr) (branch_block_stmt_226/assign_stmt_526/EQ_u16_u1_525_Sample/ra branch_block_stmt_226/assign_stmt_526/EQ_u16_u1_525_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 244
  if_stmt_527_branch <=> (branch_block_stmt_226/if_stmt_527_eval_test/branch_req) (branch_block_stmt_226/if_stmt_527_else_link/else_choice_transition branch_block_stmt_226/if_stmt_527_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 249
  // 		iNsTr_57 := (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 251
  // (iNsTr_48 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_48
  SLT_f64_u1_538_inst <=> (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/SLT_f64_u1_538_Sample/rr branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/SLT_f64_u1_538_Update/cr) (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/SLT_f64_u1_538_Sample/ra branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/SLT_f64_u1_538_Update/ca)
  // 		iNsTr_58 := ($cast ($uint<8>) iNsTr_57 )
  //  file prog.linked.opt.aa, line 252
  // iNsTr_57
  // ($cast ($uint<8>) iNsTr_57 )
  type_cast_542_inst <=> (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/type_cast_542_Sample/rr branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/type_cast_542_Update/cr) (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/type_cast_542_Sample/ra branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/type_cast_542_Update/ca)
  // 		exorx_x0 := (iNsTr_58 ^ exorx_x25)
  //  file prog.linked.opt.aa, line 253
  // (iNsTr_58 ^ exorx_x25)
  // iNsTr_58
  // exorx_x25
  XOR_u8_u8_547_inst <=> (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/XOR_u8_u8_547_Sample/rr branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/XOR_u8_u8_547_Update/cr) (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/XOR_u8_u8_547_Sample/ra branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/XOR_u8_u8_547_Update/ca)
  // 		iNsTr_59 := (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
  //  file prog.linked.opt.aa, line 254
  // (flagx_x12 == ($bitcast ($uint<8>) _b00000000  ))
  // flagx_x12
  EQ_u8_u1_553_inst <=> (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/EQ_u8_u1_553_Sample/rr branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/EQ_u8_u1_553_Update/cr) (branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/EQ_u8_u1_553_Sample/ra branch_block_stmt_226/assign_stmt_539_to_assign_stmt_554/EQ_u8_u1_553_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 255
  if_stmt_555_branch <=> (branch_block_stmt_226/if_stmt_555_eval_test/branch_req) (branch_block_stmt_226/if_stmt_555_else_link/else_choice_transition branch_block_stmt_226/if_stmt_555_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 260
  // 		iNsTr_68 := (temp1x_x0 < valx_x23)
  //  file prog.linked.opt.aa, line 262
  // (temp1x_x0 < valx_x23)
  // temp1x_x0
  // valx_x23
  SLT_f32_u1_565_inst <=> (branch_block_stmt_226/assign_stmt_566/SLT_f32_u1_565_Sample/rr branch_block_stmt_226/assign_stmt_566/SLT_f32_u1_565_Update/cr) (branch_block_stmt_226/assign_stmt_566/SLT_f32_u1_565_Sample/ra branch_block_stmt_226/assign_stmt_566/SLT_f32_u1_565_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 263
  if_stmt_567_branch <=> (branch_block_stmt_226/if_stmt_567_eval_test/branch_req) (branch_block_stmt_226/if_stmt_567_else_link/else_choice_transition branch_block_stmt_226/if_stmt_567_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 268
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 271
  // ($cast ($uint<8>) flagx_x12 )
  type_cast_579_inst <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_sources/type_cast_579/SplitProtocol/Sample/rr branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_sources/type_cast_579/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_sources/type_cast_579/SplitProtocol/Sample/ra branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_sources/type_cast_579/SplitProtocol/Update/ca)
  phi_stmt_576 <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_req branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_req branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_req branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_576/phi_stmt_576_req) (branch_block_stmt_226/merge_stmt_575_PhiAck/phi_stmt_576_ack)
  // ($cast ($float<8,23>) valx_x23 )
  type_cast_592_inst <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_592/SplitProtocol/Sample/rr branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_592/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_592/SplitProtocol/Sample/ra branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_592/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) temp1x_x0 )
  type_cast_594_inst <=> (branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_594/SplitProtocol/Sample/rr branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_594/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_594/SplitProtocol/Sample/ra branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_594/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) temp1x_x0 )
  type_cast_596_inst <=> (branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_596/SplitProtocol/Sample/rr branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_596/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_596/SplitProtocol/Sample/ra branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_596/SplitProtocol/Update/ca)
  // ($cast ($float<8,23>) valx_x23 )
  type_cast_598_inst <=> (branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_598/SplitProtocol/Sample/rr branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_598/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_598/SplitProtocol/Sample/ra branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_sources/type_cast_598/SplitProtocol/Update/ca)
  phi_stmt_589 <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_req branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_req branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_req branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_589/phi_stmt_589_req) (branch_block_stmt_226/merge_stmt_575_PhiAck/phi_stmt_589_ack)
  // ($cast ($uint<8>) exorx_x25 )
  type_cast_602_inst <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_602/SplitProtocol/Sample/rr branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_602/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_602/SplitProtocol/Sample/ra branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_602/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) exorx_x0 )
  type_cast_604_inst <=> (branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_604/SplitProtocol/Sample/rr branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_604/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_604/SplitProtocol/Sample/ra branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_604/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) exorx_x0 )
  type_cast_606_inst <=> (branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_606/SplitProtocol/Sample/rr branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_606/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_606/SplitProtocol/Sample/ra branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_606/SplitProtocol/Update/ca)
  // ($cast ($uint<8>) exorx_x0 )
  type_cast_608_inst <=> (branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_608/SplitProtocol/Sample/rr branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_608/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_608/SplitProtocol/Sample/ra branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_sources/type_cast_608/SplitProtocol/Update/ca)
  phi_stmt_599 <=> (branch_block_stmt_226/bb_10_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_req branch_block_stmt_226/bb_11_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_req branch_block_stmt_226/bb_13_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_req branch_block_stmt_226/bb_12_bb_14_PhiReq/phi_stmt_599/phi_stmt_599_req) (branch_block_stmt_226/merge_stmt_575_PhiAck/phi_stmt_599_ack)
  // 		iNsTr_55 := (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 276
  // (iNsTr_44 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_44
  ADD_u16_u16_614_inst <=> (branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/ADD_u16_u16_614_Sample/rr branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/ADD_u16_u16_614_Update/cr) (branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/ADD_u16_u16_614_Sample/ra branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/ADD_u16_u16_614_Update/ca)
  // 		exitcond1 := (iNsTr_55 == rangex_x0)
  //  file prog.linked.opt.aa, line 277
  // (iNsTr_55 == rangex_x0)
  // iNsTr_55
  // rangex_x0
  EQ_u16_u1_619_inst <=> (branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/EQ_u16_u1_619_Sample/rr branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/EQ_u16_u1_619_Update/cr) (branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/EQ_u16_u1_619_Sample/ra branch_block_stmt_226/assign_stmt_615_to_assign_stmt_620/EQ_u16_u1_619_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 278
  if_stmt_621_branch <=> (branch_block_stmt_226/if_stmt_621_eval_test/branch_req) (branch_block_stmt_226/if_stmt_621_else_link/else_choice_transition branch_block_stmt_226/if_stmt_621_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 283
  // ($cast ($uint<8>) exorx_x1 )
  type_cast_631_inst <=> (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_sources/type_cast_631/SplitProtocol/Update/ca)
  phi_stmt_628 <=> (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_628/phi_stmt_628_req) (branch_block_stmt_226/merge_stmt_627_PhiAck/phi_stmt_628_ack)
  // ($cast ($float<8,23>) valx_x1 )
  type_cast_635_inst <=> (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_632/phi_stmt_632_sources/type_cast_635/SplitProtocol/Sample/rr branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_632/phi_stmt_632_sources/type_cast_635/SplitProtocol/Update/cr) (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_632/phi_stmt_632_sources/type_cast_635/SplitProtocol/Sample/ra branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_632/phi_stmt_632_sources/type_cast_635/SplitProtocol/Update/ca)
  phi_stmt_632 <=> (branch_block_stmt_226/bb_14_xx_x_crit_edge_PhiReq/phi_stmt_632/phi_stmt_632_req) (branch_block_stmt_226/merge_stmt_627_PhiAck/phi_stmt_632_ack)
  // 		iNsTr_61 := (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
  //  file prog.linked.opt.aa, line 287
  // (exorx_x1x_xlcssa == ($bitcast ($uint<8>) _b00000000  ))
  // exorx_x1x_xlcssa
  EQ_u8_u1_641_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u8_u1_641_Sample/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u8_u1_641_Update/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u8_u1_641_Sample/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u8_u1_641_Update/ca)
  // 		signx_x0 := ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
  //  file prog.linked.opt.aa, line 288
  // iNsTr_61
  // ( $mux iNsTr_61 ($bitcast ($float<8,23>) _f1.000000e+00 )  ($bitcast ($float<8,23>) _f-1.000000e+00 ) ) 
  MUX_649_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUX_649_start/req branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUX_649_complete/req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUX_649_start/ack branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUX_649_complete/ack)
  // 		iNsTr_62 := (valx_x1x_xlcssa * signx_x0)
  //  file prog.linked.opt.aa, line 289
  // (valx_x1x_xlcssa * signx_x0)
  // valx_x1x_xlcssa
  // signx_x0
  MUL_f32_f32_654_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUL_f32_f32_654_Sample/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUL_f32_f32_654_Update/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUL_f32_f32_654_Sample/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/MUL_f32_f32_654_Update/ca)
  // 		iNsTr_63 := ($cast ($uint<64>) tmp16 )
  //  file prog.linked.opt.aa, line 290
  // tmp16
  // ($cast ($uint<64>) tmp16 )
  type_cast_658_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/type_cast_658_Sample/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/type_cast_658_Update/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/type_cast_658_Sample/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/type_cast_658_Update/ca)
  // 		iNsTr_64 := @(ext_info[iNsTr_63])
  //  file prog.linked.opt.aa, line 291
  // iNsTr_63
  array_obj_ref_662_index_0_resize <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_index_resize_0/index_resize_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_index_resize_0/index_resize_ack)
  array_obj_ref_662_index_0_rename <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_index_scale_0/scale_rename_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_index_scale_0/scale_rename_ack)
  array_obj_ref_662_index_offset <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_final_index_sum_regn/req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_final_index_sum_regn/ack)
  array_obj_ref_662_root_address_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/array_obj_ref_662_base_plus_offset/sum_rename_ack)
  addr_of_663_final_reg <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/addr_of_663_request/req branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/addr_of_663_complete/req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/addr_of_663_request/ack branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/addr_of_663_complete/ack)
  // 		->(iNsTr_64) := iNsTr_62
  //  file prog.linked.opt.aa, line 292
  // iNsTr_62
  // iNsTr_64
  ptr_deref_666_base_resize <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_base_addr_resize/base_resize_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_base_addr_resize/base_resize_ack)
  ptr_deref_666_root_address_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_base_plus_offset/sum_rename_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_base_plus_offset/sum_rename_ack)
  ptr_deref_666_addr_0 <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_word_addrgen/root_register_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_word_addrgen/root_register_ack)
  ptr_deref_666_gather_scatter <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Sample/ptr_deref_666_Split/split_req) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Sample/ptr_deref_666_Split/split_ack)
  ptr_deref_666_store_0 <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Sample/word_access_start/word_0/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Update/word_access_complete/word_0/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Sample/word_access_start/word_0/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ptr_deref_666_Update/word_access_complete/word_0/ca)
  // 		iNsTr_66 := (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 293
  // (iNsTr_42 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_42
  ADD_u16_u16_673_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ADD_u16_u16_673_Sample/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ADD_u16_u16_673_Update/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ADD_u16_u16_673_Sample/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/ADD_u16_u16_673_Update/ca)
  // 		exitcond := (iNsTr_66 == rangex_x0)
  //  file prog.linked.opt.aa, line 294
  // (iNsTr_66 == rangex_x0)
  // iNsTr_66
  // rangex_x0
  EQ_u16_u1_678_inst <=> (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u16_u1_678_Sample/rr branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u16_u1_678_Update/cr) (branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u16_u1_678_Sample/ra branch_block_stmt_226/assign_stmt_642_to_assign_stmt_679/EQ_u16_u1_678_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 295
  if_stmt_680_branch <=> (branch_block_stmt_226/if_stmt_680_eval_test/branch_req) (branch_block_stmt_226/if_stmt_680_else_link/else_choice_transition branch_block_stmt_226/if_stmt_680_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 300
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 303
  // 		iNsTr_33 := (tmp17 < iNsTr_10)
  //  file prog.linked.opt.aa, line 305
  // (tmp17 < iNsTr_10)
  // tmp17
  // iNsTr_10
  ULT_u16_u1_692_inst <=> (branch_block_stmt_226/assign_stmt_693/ULT_u16_u1_692_Sample/rr branch_block_stmt_226/assign_stmt_693/ULT_u16_u1_692_Update/cr) (branch_block_stmt_226/assign_stmt_693/ULT_u16_u1_692_Sample/ra branch_block_stmt_226/assign_stmt_693/ULT_u16_u1_692_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 306
  if_stmt_694_branch <=> (branch_block_stmt_226/if_stmt_694_eval_test/branch_req) (branch_block_stmt_226/if_stmt_694_else_link/else_choice_transition branch_block_stmt_226/if_stmt_694_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 311
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 314
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 317
}
$module [ebbyNo_initializer_in_progx_xoptx_xo] 
{
  // pipe-declarations for block %ebbyNo_initializer_in_progx_xoptx_xo
  //  file prog.linked.opt.aa, line 321
  $CP 
  {
    // begin control-path 
    // 	ebbyNo := _h0 
    //  file prog.linked.opt.aa, line 326
    ;;[assign_stmt_710] //  file prog.linked.opt.aa, line 326
    {
      ;;[STORE_ebbyNo_708] 
      {
        // store 
        ;;[STORE_ebbyNo_708_write] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0_sample] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_access_0_update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
      }
    }
    // end assignment statement assign_stmt_710
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %ebbyNo_initializer_in_progx_xoptx_xo
    //  file prog.linked.opt.aa, line 321
    // _h0 
    $constant $W[konst_709_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ebbyNo
    $constant $W[STORE_ebbyNo_708_word_address_0] : $pointer<memory_space_4> := _b0
    // 	ebbyNo := _h0 
    //  file prog.linked.opt.aa, line 326
    // ebbyNo
    $constant $W[STORE_ebbyNo_708_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_ebbyNo_708_data_0] : $int<32>
    // 	ebbyNo := _h0 
    //  file prog.linked.opt.aa, line 326
    // ebbyNo
    $store [STORE_ebbyNo_708_store_0] $to memory_space_4 (STORE_ebbyNo_708_word_address_0 STORE_ebbyNo_708_data_0) 
    $delay STORE_ebbyNo_708_store_0 4
    &/ [STORE_ebbyNo_708_gather_scatter] (konst_709_wire_constant) (STORE_ebbyNo_708_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	ebbyNo := _h0 
  //  file prog.linked.opt.aa, line 326
  // ebbyNo
  STORE_ebbyNo_708_gather_scatter <=> (assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/split_req) (assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/split_ack)
  STORE_ebbyNo_708_store_0 <=> (assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/word_access/word_access_0_sample/rr assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/word_access/word_access_0_update/cr) (assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/word_access/word_access_0_sample/ra assign_stmt_710/STORE_ebbyNo_708/STORE_ebbyNo_708_write/word_access/word_access_0_update/ca)
  $attribute nooptimize => ""
}
$module [rate_initializer_in_progx_xoptx_xo] 
{
  // pipe-declarations for block %rate_initializer_in_progx_xoptx_xo
  //  file prog.linked.opt.aa, line 329
  $CP 
  {
    // begin control-path 
    // 	rate := _h0 
    //  file prog.linked.opt.aa, line 334
    ;;[assign_stmt_715] //  file prog.linked.opt.aa, line 334
    {
      ;;[STORE_rate_713] 
      {
        // store 
        ;;[STORE_rate_713_write] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0_sample] 
            {
              $T [rr] $T [ra] 
            }
            ;;[word_access_0_update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
      }
    }
    // end assignment statement assign_stmt_715
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %rate_initializer_in_progx_xoptx_xo
    //  file prog.linked.opt.aa, line 329
    // _h0 
    $constant $W[konst_714_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // rate
    $constant $W[STORE_rate_713_word_address_0] : $pointer<memory_space_13> := _b0
    // 	rate := _h0 
    //  file prog.linked.opt.aa, line 334
    // rate
    $constant $W[STORE_rate_713_word_address_0] : $pointer<memory_space_13> := _b0
    $W[STORE_rate_713_data_0] : $int<32>
    // 	rate := _h0 
    //  file prog.linked.opt.aa, line 334
    // rate
    $store [STORE_rate_713_store_0] $to memory_space_13 (STORE_rate_713_word_address_0 STORE_rate_713_data_0) 
    $delay STORE_rate_713_store_0 4
    &/ [STORE_rate_713_gather_scatter] (konst_714_wire_constant) (STORE_rate_713_data_0) 
    $flowthrough 
  }
  // end data-path
  // 	rate := _h0 
  //  file prog.linked.opt.aa, line 334
  // rate
  STORE_rate_713_gather_scatter <=> (assign_stmt_715/STORE_rate_713/STORE_rate_713_write/split_req) (assign_stmt_715/STORE_rate_713/STORE_rate_713_write/split_ack)
  STORE_rate_713_store_0 <=> (assign_stmt_715/STORE_rate_713/STORE_rate_713_write/word_access/word_access_0_sample/rr assign_stmt_715/STORE_rate_713/STORE_rate_713_write/word_access/word_access_0_update/cr) (assign_stmt_715/STORE_rate_713/STORE_rate_713_write/word_access/word_access_0_sample/ra assign_stmt_715/STORE_rate_713/STORE_rate_713_write/word_access/word_access_0_update/ca)
  $attribute nooptimize => ""
}
$module [progx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 337
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 342
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_718] 
    {
      ::[call_stmt_719] 
      {
        // start: 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
        //  file prog.linked.opt.aa, line 344
        $T[call_stmt_719_sample_start_] 
        $T[call_stmt_719_sample_completed_] 
        $T[call_stmt_719_update_start_] 
        $T[call_stmt_719_update_completed_] 
        ;;[call_stmt_719_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_719_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_719_sample_start_ &-> (call_stmt_719_Sample)
        call_stmt_719_sample_completed_ <-& (call_stmt_719_Sample)
        call_stmt_719_sample_completed_ &-> ($null)
        call_stmt_719_update_start_ &-> (call_stmt_719_Update)
        call_stmt_719_update_completed_ <-& (call_stmt_719_Update)
        // end: 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
        // barrier: 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
        // load-store dependencies..
      }
      ::[call_stmt_720] 
      {
        // start: 		$call rate_initializer_in_progx_xoptx_xo () () 
        //  file prog.linked.opt.aa, line 345
        $T[call_stmt_720_sample_start_] 
        $T[call_stmt_720_sample_completed_] 
        $T[call_stmt_720_update_start_] 
        $T[call_stmt_720_update_completed_] 
        ;;[call_stmt_720_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_720_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_720_sample_start_ &-> (call_stmt_720_Sample)
        call_stmt_720_sample_completed_ <-& (call_stmt_720_Sample)
        call_stmt_720_sample_completed_ &-> ($null)
        call_stmt_720_update_start_ &-> (call_stmt_720_Update)
        call_stmt_720_update_completed_ <-& (call_stmt_720_Update)
        // end: 		$call rate_initializer_in_progx_xoptx_xo () () 
        // barrier: 		$call rate_initializer_in_progx_xoptx_xo () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 342
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 337
    // constant-declarations for block %progx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 342
    // 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 344
    // 		$call rate_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 345
    // block %progx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 342
    // 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 344
    // 		$call rate_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 345
    // datapath-instances for block %progx_xoptx_xo_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 342
    // 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 344
    $call [call_stmt_719_call] $module ebbyNo_initializer_in_progx_xoptx_xo() ()  
    $delay call_stmt_719_call 4
    // 		$call rate_initializer_in_progx_xoptx_xo () () 
    //  file prog.linked.opt.aa, line 345
    $call [call_stmt_720_call] $module rate_initializer_in_progx_xoptx_xo() ()  
    $delay call_stmt_720_call 4
  }
  // end data-path
  // 		$call ebbyNo_initializer_in_progx_xoptx_xo () () 
  //  file prog.linked.opt.aa, line 344
  call_stmt_719_call <=> (parallel_block_stmt_718/call_stmt_719/call_stmt_719_Sample/crr parallel_block_stmt_718/call_stmt_719/call_stmt_719_Update/ccr) (parallel_block_stmt_718/call_stmt_719/call_stmt_719_Sample/cra parallel_block_stmt_718/call_stmt_719/call_stmt_719_Update/cca)
  // 		$call rate_initializer_in_progx_xoptx_xo () () 
  //  file prog.linked.opt.aa, line 345
  call_stmt_720_call <=> (parallel_block_stmt_718/call_stmt_720/call_stmt_720_Sample/crr parallel_block_stmt_718/call_stmt_720/call_stmt_720_Update/ccr) (parallel_block_stmt_718/call_stmt_720/call_stmt_720_Sample/cra parallel_block_stmt_718/call_stmt_720/call_stmt_720_Update/cca)
  $attribute initializer => ""
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 349
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 354
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_724] 
    {
      ::[call_stmt_725] 
      {
        // start: 		$call progx_xoptx_xo_storage_initializer_ () () 
        //  file prog.linked.opt.aa, line 356
        $T[call_stmt_725_sample_start_] 
        $T[call_stmt_725_sample_completed_] 
        $T[call_stmt_725_update_start_] 
        $T[call_stmt_725_update_completed_] 
        ;;[call_stmt_725_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_725_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_725_sample_start_ &-> (call_stmt_725_Sample)
        call_stmt_725_sample_completed_ <-& (call_stmt_725_Sample)
        call_stmt_725_sample_completed_ &-> ($null)
        call_stmt_725_update_start_ &-> (call_stmt_725_Update)
        call_stmt_725_update_completed_ <-& (call_stmt_725_Update)
        // end: 		$call progx_xoptx_xo_storage_initializer_ () () 
        // load-store dependencies..
      }
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 354
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 349
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 354
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 356
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 354
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 356
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 354
    // 		$call progx_xoptx_xo_storage_initializer_ () () 
    //  file prog.linked.opt.aa, line 356
    $call [call_stmt_725_call] $module progx_xoptx_xo_storage_initializer_() ()  
    $delay call_stmt_725_call 4
  }
  // end data-path
  // 		$call progx_xoptx_xo_storage_initializer_ () () 
  //  file prog.linked.opt.aa, line 356
  call_stmt_725_call <=> (parallel_block_stmt_724/call_stmt_725/call_stmt_725_Sample/crr parallel_block_stmt_724/call_stmt_725/call_stmt_725_Update/ccr) (parallel_block_stmt_724/call_stmt_725/call_stmt_725_Sample/cra parallel_block_stmt_724/call_stmt_725/call_stmt_725_Update/cca)
}
$module [initInputs] 
{
  // pipe-declarations for block %initInputs
  //  file prog.linked.opt.aa, line 359
  // pipe-declarations for block %initInputs%body
  //  file prog.linked.opt.aa, line 364
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 371
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 384
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 402
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 407
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 426
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 429
  // pipe-declarations for block %initInputs%body%
  //  file prog.linked.opt.aa, line 434
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_729] // Branch Block  file prog.linked.opt.aa, line 364
    {
      $P [branch_block_stmt_729__entry__]
      branch_block_stmt_729__entry__ <-| ($entry)
      $P [branch_block_stmt_729__exit__]
      branch_block_stmt_729__exit__ |-> ($exit)
      $P [assign_stmt_732__entry__] 
      $P [assign_stmt_732__exit__] 
      $P [assign_stmt_735__entry__] 
      $P [assign_stmt_735__exit__] 
      $P [assign_stmt_738__entry__] 
      $P [assign_stmt_738__exit__] 
      $P [assign_stmt_741__entry__] 
      $P [assign_stmt_741__exit__] 
      $P [bbx_xnph3_bb_1]
      $P [merge_stmt_743__exit__] 
      $P [assign_stmt_756__entry__] 
      $P [assign_stmt_756__exit__] 
      $P [assign_stmt_759__entry__] 
      $P [assign_stmt_759__exit__] 
      $P [assign_stmt_763_to_assign_stmt_775__entry__] 
      $P [assign_stmt_763_to_assign_stmt_775__exit__] 
      $P [if_stmt_776__entry__] 
      $P [if_stmt_776__exit__] 
      $P [merge_stmt_782__entry__] 
      $P [merge_stmt_782__exit__] 
      $P [assign_stmt_788_to_assign_stmt_832__entry__] 
      $P [assign_stmt_788_to_assign_stmt_832__exit__] 
      $P [if_stmt_833__entry__] 
      $P [if_stmt_833__exit__] 
      $P [merge_stmt_839__entry__] 
      $P [merge_stmt_839__exit__] 
      $P [assign_stmt_844_to_assign_stmt_848__entry__] 
      $P [assign_stmt_844_to_assign_stmt_848__exit__] 
      $P [bbx_xnph_bb_4]
      $P [merge_stmt_850__exit__] 
      $P [do_while_stmt_857__entry__] 
      $P [do_while_stmt_857__exit__] 
      $P [if_stmt_900__entry__] 
      $P [if_stmt_900__exit__] 
      $P [merge_stmt_904__entry__] 
      $P [merge_stmt_904__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_906__exit__] 
      $P [assign_stmt_909__entry__] 
      $P [assign_stmt_909__exit__] 
      $P [assign_stmt_912__entry__] 
      $P [assign_stmt_912__exit__] 
      $P [return__]
      $P [merge_stmt_914__exit__] 
      ::[assign_stmt_732] 
      {
        // start:  		iNsTr_1 := maxNitr_in
        //  file prog.linked.opt.aa, line 366
        // Source expression
        // maxNitr_in
        $T[RPIPE_maxNitr_in_731_sample_start_] 
        $T[RPIPE_maxNitr_in_731_sample_completed_] 
        $T[RPIPE_maxNitr_in_731_update_start_] 
        $T[RPIPE_maxNitr_in_731_update_completed_] 
        ;;[RPIPE_maxNitr_in_731_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_maxNitr_in_731_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_maxNitr_in_731_sample_start_ &-> (RPIPE_maxNitr_in_731_Sample)
        RPIPE_maxNitr_in_731_sample_completed_ <-& (RPIPE_maxNitr_in_731_Sample)
        RPIPE_maxNitr_in_731_update_start_ <-& (RPIPE_maxNitr_in_731_sample_completed_)
        RPIPE_maxNitr_in_731_update_start_ &-> (RPIPE_maxNitr_in_731_Update)
        RPIPE_maxNitr_in_731_update_completed_ <-& (RPIPE_maxNitr_in_731_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := maxNitr_in
        // barrier: 		iNsTr_1 := maxNitr_in
        // load-store dependencies..
        // pipe read/write dependencies for pipe maxNitr_in
        // read-dependencies for pipe maxNitr_in
        // write-dependencies for pipe maxNitr_in
        // signal dependencies for maxNitr_in
      }
      assign_stmt_732__entry__ |-> (assign_stmt_732)
      assign_stmt_732__exit__ <-| (assign_stmt_732)
      ::[assign_stmt_735] 
      {
        // start:  		maxNitr := iNsTr_1
        //  file prog.linked.opt.aa, line 367
        // Source expression
        // iNsTr_1
        // Target expression
        // (as target) maxNitr
        $T[STORE_maxNitr_733_sample_start_] 
        $T[STORE_maxNitr_733_sample_completed_] 
        $T[STORE_maxNitr_733_update_start_] 
        $T[STORE_maxNitr_733_update_completed_] 
        // maxNitr
        $T[STORE_maxNitr_733_word_address_calculated] 
        $T[STORE_maxNitr_733_root_address_calculated] 
        STORE_maxNitr_733_word_address_calculated <-& (STORE_maxNitr_733_root_address_calculated)
        ;;[STORE_maxNitr_733_Sample] 
        {
          ;;[STORE_maxNitr_733_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_maxNitr_733_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_maxNitr_733_sample_start_ <-& (STORE_maxNitr_733_word_address_calculated)
        STORE_maxNitr_733_sample_start_ &-> (STORE_maxNitr_733_Sample)
        STORE_maxNitr_733_sample_completed_ <-& (STORE_maxNitr_733_Sample)
        STORE_maxNitr_733_sample_completed_ &-> ($null)
        STORE_maxNitr_733_update_start_ &-> (STORE_maxNitr_733_Update)
        STORE_maxNitr_733_update_completed_ <-& (STORE_maxNitr_733_Update)
        // start: Forward dependencies from iNsTr_1 to transition STORE_maxNitr_733_sample_start_
        // done: Forward dependencies from iNsTr_1 to transition STORE_maxNitr_733_sample_start_
        // end:  		maxNitr := iNsTr_1
        // load-store dependencies..
      }
      assign_stmt_735__entry__ |-> (assign_stmt_735)
      assign_stmt_735__exit__ <-| (assign_stmt_735)
      ::[assign_stmt_738] 
      {
        // start:  		iNsTr_4 := ebbyNo_in
        //  file prog.linked.opt.aa, line 368
        // Source expression
        // ebbyNo_in
        $T[RPIPE_ebbyNo_in_737_sample_start_] 
        $T[RPIPE_ebbyNo_in_737_sample_completed_] 
        $T[RPIPE_ebbyNo_in_737_update_start_] 
        $T[RPIPE_ebbyNo_in_737_update_completed_] 
        ;;[RPIPE_ebbyNo_in_737_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_ebbyNo_in_737_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_ebbyNo_in_737_sample_start_ &-> (RPIPE_ebbyNo_in_737_Sample)
        RPIPE_ebbyNo_in_737_sample_completed_ <-& (RPIPE_ebbyNo_in_737_Sample)
        RPIPE_ebbyNo_in_737_update_start_ <-& (RPIPE_ebbyNo_in_737_sample_completed_)
        RPIPE_ebbyNo_in_737_update_start_ &-> (RPIPE_ebbyNo_in_737_Update)
        RPIPE_ebbyNo_in_737_update_completed_ <-& (RPIPE_ebbyNo_in_737_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ebbyNo_in
        // barrier: 		iNsTr_4 := ebbyNo_in
        // load-store dependencies..
        // pipe read/write dependencies for pipe ebbyNo_in
        // read-dependencies for pipe ebbyNo_in
        // write-dependencies for pipe ebbyNo_in
        // signal dependencies for ebbyNo_in
      }
      assign_stmt_738__entry__ |-> (assign_stmt_738)
      assign_stmt_738__exit__ <-| (assign_stmt_738)
      ::[assign_stmt_741] 
      {
        // start:  		ebbyNo := iNsTr_4
        //  file prog.linked.opt.aa, line 369
        // Source expression
        // iNsTr_4
        // Target expression
        // (as target) ebbyNo
        $T[STORE_ebbyNo_739_sample_start_] 
        $T[STORE_ebbyNo_739_sample_completed_] 
        $T[STORE_ebbyNo_739_update_start_] 
        $T[STORE_ebbyNo_739_update_completed_] 
        // ebbyNo
        $T[STORE_ebbyNo_739_word_address_calculated] 
        $T[STORE_ebbyNo_739_root_address_calculated] 
        STORE_ebbyNo_739_word_address_calculated <-& (STORE_ebbyNo_739_root_address_calculated)
        ;;[STORE_ebbyNo_739_Sample] 
        {
          ;;[STORE_ebbyNo_739_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_ebbyNo_739_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_ebbyNo_739_sample_start_ <-& (STORE_ebbyNo_739_word_address_calculated)
        STORE_ebbyNo_739_sample_start_ &-> (STORE_ebbyNo_739_Sample)
        STORE_ebbyNo_739_sample_completed_ <-& (STORE_ebbyNo_739_Sample)
        STORE_ebbyNo_739_sample_completed_ &-> ($null)
        STORE_ebbyNo_739_update_start_ &-> (STORE_ebbyNo_739_Update)
        STORE_ebbyNo_739_update_completed_ <-& (STORE_ebbyNo_739_Update)
        // start: Forward dependencies from iNsTr_4 to transition STORE_ebbyNo_739_sample_start_
        // done: Forward dependencies from iNsTr_4 to transition STORE_ebbyNo_739_sample_start_
        // end:  		ebbyNo := iNsTr_4
        // load-store dependencies..
      }
      assign_stmt_741__entry__ |-> (assign_stmt_741)
      assign_stmt_741__exit__ <-| (assign_stmt_741)
      ::[assign_stmt_756] 
      {
        // start:  		scevgep10 := @(mem[indvar7])
        //  file prog.linked.opt.aa, line 374
        // Source expression
        // @(mem[indvar7])
        $T[addr_of_755_sample_start_] 
        $T[addr_of_755_sample_completed_] 
        $T[addr_of_755_update_start_] 
        $T[addr_of_755_update_completed_] 
        $T[array_obj_ref_754_root_address_calculated] 
        $T[array_obj_ref_754_offset_calculated] 
        $T[array_obj_ref_754_index_resized_0] 
        $T[array_obj_ref_754_index_scaled_0] 
        $T[array_obj_ref_754_index_computed_0] 
        // indvar7
        // start: Forward dependencies from indvar7 to transition array_obj_ref_754_index_computed_0
        // done: Forward dependencies from indvar7 to transition array_obj_ref_754_index_computed_0
        ;;[array_obj_ref_754_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_754_index_computed_0 &-> (array_obj_ref_754_index_resize_0)
        array_obj_ref_754_index_resized_0 <-& (array_obj_ref_754_index_resize_0)
        ;;[array_obj_ref_754_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_754_index_resized_0 &-> (array_obj_ref_754_index_scale_0)
        array_obj_ref_754_index_scaled_0 <-& (array_obj_ref_754_index_scale_0)
        ;;[array_obj_ref_754_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_754_index_scaled_0 &-> (array_obj_ref_754_final_index_sum_regn)
        array_obj_ref_754_offset_calculated <-& (array_obj_ref_754_final_index_sum_regn)
        ;;[array_obj_ref_754_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_754_offset_calculated &-> (array_obj_ref_754_base_plus_offset)
        array_obj_ref_754_root_address_calculated <-& (array_obj_ref_754_base_plus_offset)
        ;;[addr_of_755_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_755_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_755_sample_start_ <-& (array_obj_ref_754_root_address_calculated)
        addr_of_755_sample_start_ &-> (addr_of_755_request)
        addr_of_755_sample_completed_ <-& (addr_of_755_request)
        addr_of_755_update_start_ &-> (addr_of_755_complete)
        addr_of_755_update_completed_ <-& (addr_of_755_complete)
        // Target expression
        // (as target) scevgep10
        // start: WAR dependencies for scevgep10
        // done: WAR dependencies for scevgep10
        // end:  		scevgep10 := @(mem[indvar7])
        // load-store dependencies..
      }
      assign_stmt_756__entry__ |-> (assign_stmt_756)
      assign_stmt_756__exit__ <-| (assign_stmt_756)
      ::[assign_stmt_759] 
      {
        // start:  		iNsTr_8 := matrix_in
        //  file prog.linked.opt.aa, line 375
        // Source expression
        // matrix_in
        $T[RPIPE_matrix_in_758_sample_start_] 
        $T[RPIPE_matrix_in_758_sample_completed_] 
        $T[RPIPE_matrix_in_758_update_start_] 
        $T[RPIPE_matrix_in_758_update_completed_] 
        ;;[RPIPE_matrix_in_758_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_matrix_in_758_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_matrix_in_758_sample_start_ &-> (RPIPE_matrix_in_758_Sample)
        RPIPE_matrix_in_758_sample_completed_ <-& (RPIPE_matrix_in_758_Sample)
        RPIPE_matrix_in_758_update_start_ <-& (RPIPE_matrix_in_758_sample_completed_)
        RPIPE_matrix_in_758_update_start_ &-> (RPIPE_matrix_in_758_Update)
        RPIPE_matrix_in_758_update_completed_ <-& (RPIPE_matrix_in_758_Update)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := matrix_in
        // barrier: 		iNsTr_8 := matrix_in
        // load-store dependencies..
        // pipe read/write dependencies for pipe matrix_in
        // read-dependencies for pipe matrix_in
        // write-dependencies for pipe matrix_in
        // signal dependencies for matrix_in
      }
      assign_stmt_759__entry__ |-> (assign_stmt_759)
      assign_stmt_759__exit__ <-| (assign_stmt_759)
      ::[assign_stmt_763_to_assign_stmt_775] 
      {
        // start:  		->(scevgep10) := iNsTr_8
        //  file prog.linked.opt.aa, line 376
        // Source expression
        // iNsTr_8
        // Target expression
        // ->(scevgep10)
        $T[ptr_deref_761_sample_start_] 
        $T[ptr_deref_761_sample_completed_] 
        $T[ptr_deref_761_update_start_] 
        $T[ptr_deref_761_update_completed_] 
        $T[ptr_deref_761_base_address_calculated] 
        // scevgep10
        $T[ptr_deref_761_word_address_calculated] 
        $T[ptr_deref_761_root_address_calculated] 
        $T[ptr_deref_761_base_address_resized] 
        ;;[ptr_deref_761_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_761_base_address_calculated &-> (ptr_deref_761_base_addr_resize)
        ptr_deref_761_base_address_resized <-& (ptr_deref_761_base_addr_resize)
        ;;[ptr_deref_761_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_761_base_address_resized &-> (ptr_deref_761_base_plus_offset)
        ptr_deref_761_root_address_calculated <-& (ptr_deref_761_base_plus_offset)
        ;;[ptr_deref_761_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_761_root_address_calculated &-> (ptr_deref_761_word_addrgen)
        ptr_deref_761_word_address_calculated <-& (ptr_deref_761_word_addrgen)
        ;;[ptr_deref_761_Sample] 
        {
          ;;[ptr_deref_761_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_761_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_761_sample_start_ <-& (ptr_deref_761_word_address_calculated)
        ptr_deref_761_sample_start_ &-> (ptr_deref_761_Sample)
        ptr_deref_761_sample_completed_ <-& (ptr_deref_761_Sample)
        ptr_deref_761_sample_completed_ &-> ($null)
        ptr_deref_761_update_start_ &-> (ptr_deref_761_Update)
        ptr_deref_761_update_completed_ <-& (ptr_deref_761_Update)
        // start: Forward dependencies from scevgep10 to transition ptr_deref_761_base_address_calculated
        // done: Forward dependencies from scevgep10 to transition ptr_deref_761_base_address_calculated
        ptr_deref_761_sample_start_ <-& (ptr_deref_761_base_address_calculated)
        // start: Forward dependencies from iNsTr_8 to transition ptr_deref_761_sample_start_
        // done: Forward dependencies from iNsTr_8 to transition ptr_deref_761_sample_start_
        // end:  		->(scevgep10) := iNsTr_8
        // start:  		indvarx_xnext8 := (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 377
        // Source expression
        // (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_768_sample_start_] 
        $T[ADD_u64_u64_768_sample_completed_] 
        $T[ADD_u64_u64_768_update_start_] 
        $T[ADD_u64_u64_768_update_completed_] 
        // indvar7
        // start: Forward dependencies from indvar7 to transition ADD_u64_u64_768_sample_start_
        // done: Forward dependencies from indvar7 to transition ADD_u64_u64_768_sample_start_
        ;;[ADD_u64_u64_768_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_768_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_768_sample_start_ &-> (ADD_u64_u64_768_Sample)
        ADD_u64_u64_768_sample_completed_ <-& (ADD_u64_u64_768_Sample)
        ADD_u64_u64_768_sample_completed_ &-> ($null)
        ADD_u64_u64_768_update_start_ &-> (ADD_u64_u64_768_Update)
        ADD_u64_u64_768_update_completed_ <-& (ADD_u64_u64_768_Update)
        // Target expression
        // (as target) indvarx_xnext8
        // start: WAR dependencies for indvarx_xnext8
        // done: WAR dependencies for indvarx_xnext8
        // end:  		indvarx_xnext8 := (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond := (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 378
        // Source expression
        // (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[EQ_u64_u1_774_sample_start_] 
        $T[EQ_u64_u1_774_sample_completed_] 
        $T[EQ_u64_u1_774_update_start_] 
        $T[EQ_u64_u1_774_update_completed_] 
        // indvarx_xnext8
        // start: Forward dependencies from indvarx_xnext8 to transition EQ_u64_u1_774_sample_start_
        EQ_u64_u1_774_sample_start_ <-& (ADD_u64_u64_768_update_completed_)
        // done: Forward dependencies from indvarx_xnext8 to transition EQ_u64_u1_774_sample_start_
        ;;[EQ_u64_u1_774_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_774_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_774_sample_start_ &-> (EQ_u64_u1_774_Sample)
        EQ_u64_u1_774_sample_completed_ <-& (EQ_u64_u1_774_Sample)
        EQ_u64_u1_774_sample_completed_ &-> ($null)
        EQ_u64_u1_774_update_start_ &-> (EQ_u64_u1_774_Update)
        EQ_u64_u1_774_update_completed_ <-& (EQ_u64_u1_774_Update)
        // Target expression
        // (as target) exitcond
        // start: WAR dependencies for exitcond
        // done: WAR dependencies for exitcond
        // end:  		exitcond := (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // load-store dependencies..
      }
      assign_stmt_763_to_assign_stmt_775__entry__ |-> (assign_stmt_763_to_assign_stmt_775)
      assign_stmt_763_to_assign_stmt_775__exit__ <-| (assign_stmt_763_to_assign_stmt_775)
      // if-statement  
      //  file prog.linked.opt.aa, line 379
      ;;[if_stmt_776_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_776__entry__ |-> (if_stmt_776_dead_link)
      if_stmt_776__exit__ <-| (if_stmt_776_dead_link)
      ;;[if_stmt_776_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_776__entry__ |-> (if_stmt_776_eval_test)
      $P [R_exitcond_777_place]
      R_exitcond_777_place <-| (if_stmt_776_eval_test)
      ;;[if_stmt_776_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_776_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond_777_place |-> (if_stmt_776_if_link if_stmt_776_else_link)
      $P [bb_1_xx_x_crit_edge4]
      bb_1_xx_x_crit_edge4 <-| (if_stmt_776_if_link)
      $P [bb_1_bb_1]
      bb_1_bb_1 <-| (if_stmt_776_else_link)
      ::[assign_stmt_788_to_assign_stmt_832] 
      {
        // start:  		iNsTr_11 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
        //  file prog.linked.opt.aa, line 386
        // constant! 
        // end:  		iNsTr_11 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
        // start:  		iNsTr_12 := ->(iNsTr_11)
        //  file prog.linked.opt.aa, line 387
        // Source expression
        // ->(iNsTr_11)
        $T[ptr_deref_791_sample_start_] 
        $T[ptr_deref_791_sample_completed_] 
        $T[ptr_deref_791_update_start_] 
        $T[ptr_deref_791_update_completed_] 
        $T[ptr_deref_791_base_address_calculated] 
        // iNsTr_11
        $T[ptr_deref_791_word_address_calculated] 
        $T[ptr_deref_791_root_address_calculated] 
        $T[ptr_deref_791_base_address_resized] 
        ;;[ptr_deref_791_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_791_base_address_calculated &-> (ptr_deref_791_base_addr_resize)
        ptr_deref_791_base_address_resized <-& (ptr_deref_791_base_addr_resize)
        ;;[ptr_deref_791_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_791_base_address_resized &-> (ptr_deref_791_base_plus_offset)
        ptr_deref_791_root_address_calculated <-& (ptr_deref_791_base_plus_offset)
        ;;[ptr_deref_791_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_791_root_address_calculated &-> (ptr_deref_791_word_addrgen)
        ptr_deref_791_word_address_calculated <-& (ptr_deref_791_word_addrgen)
        ;;[ptr_deref_791_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_791_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_791_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_791_sample_start_ <-& (ptr_deref_791_word_address_calculated)
        ptr_deref_791_sample_start_ &-> (ptr_deref_791_Sample)
        ptr_deref_791_sample_completed_ <-& (ptr_deref_791_Sample)
        ptr_deref_791_sample_completed_ &-> ($null)
        ptr_deref_791_update_start_ &-> (ptr_deref_791_Update)
        ptr_deref_791_update_completed_ <-& (ptr_deref_791_Update)
        // start: Forward dependencies from iNsTr_11 to transition ptr_deref_791_base_address_calculated
        // done: Forward dependencies from iNsTr_11 to transition ptr_deref_791_base_address_calculated
        ptr_deref_791_sample_start_ <-& (ptr_deref_791_base_address_calculated)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := ->(iNsTr_11)
        // start:  		nrows := iNsTr_12
        //  file prog.linked.opt.aa, line 388
        // Source expression
        // iNsTr_12
        // Target expression
        // (as target) nrows
        $T[STORE_nrows_793_sample_start_] 
        $T[STORE_nrows_793_sample_completed_] 
        $T[STORE_nrows_793_update_start_] 
        $T[STORE_nrows_793_update_completed_] 
        // nrows
        $T[STORE_nrows_793_word_address_calculated] 
        $T[STORE_nrows_793_root_address_calculated] 
        STORE_nrows_793_word_address_calculated <-& (STORE_nrows_793_root_address_calculated)
        ;;[STORE_nrows_793_Sample] 
        {
          ;;[STORE_nrows_793_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_nrows_793_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_nrows_793_sample_start_ <-& (STORE_nrows_793_word_address_calculated)
        STORE_nrows_793_sample_start_ &-> (STORE_nrows_793_Sample)
        STORE_nrows_793_sample_completed_ <-& (STORE_nrows_793_Sample)
        STORE_nrows_793_sample_completed_ &-> ($null)
        STORE_nrows_793_update_start_ &-> (STORE_nrows_793_Update)
        STORE_nrows_793_update_completed_ <-& (STORE_nrows_793_Update)
        // start: Forward dependencies from iNsTr_12 to transition STORE_nrows_793_sample_start_
        STORE_nrows_793_sample_start_ <-& (ptr_deref_791_update_completed_)
        // done: Forward dependencies from iNsTr_12 to transition STORE_nrows_793_sample_start_
        // end:  		nrows := iNsTr_12
        // start:  		iNsTr_14 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
        //  file prog.linked.opt.aa, line 389
        // constant! 
        // end:  		iNsTr_14 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
        // start:  		iNsTr_15 := ->(iNsTr_14)
        //  file prog.linked.opt.aa, line 390
        // Source expression
        // ->(iNsTr_14)
        $T[ptr_deref_804_sample_start_] 
        $T[ptr_deref_804_sample_completed_] 
        $T[ptr_deref_804_update_start_] 
        $T[ptr_deref_804_update_completed_] 
        $T[ptr_deref_804_base_address_calculated] 
        // iNsTr_14
        $T[ptr_deref_804_word_address_calculated] 
        $T[ptr_deref_804_root_address_calculated] 
        $T[ptr_deref_804_base_address_resized] 
        ;;[ptr_deref_804_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_804_base_address_calculated &-> (ptr_deref_804_base_addr_resize)
        ptr_deref_804_base_address_resized <-& (ptr_deref_804_base_addr_resize)
        ;;[ptr_deref_804_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_804_base_address_resized &-> (ptr_deref_804_base_plus_offset)
        ptr_deref_804_root_address_calculated <-& (ptr_deref_804_base_plus_offset)
        ;;[ptr_deref_804_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_804_root_address_calculated &-> (ptr_deref_804_word_addrgen)
        ptr_deref_804_word_address_calculated <-& (ptr_deref_804_word_addrgen)
        ;;[ptr_deref_804_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_804_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_804_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_804_sample_start_ <-& (ptr_deref_804_word_address_calculated)
        ptr_deref_804_sample_start_ &-> (ptr_deref_804_Sample)
        ptr_deref_804_sample_completed_ <-& (ptr_deref_804_Sample)
        ptr_deref_804_sample_completed_ &-> ($null)
        ptr_deref_804_update_start_ &-> (ptr_deref_804_Update)
        ptr_deref_804_update_completed_ <-& (ptr_deref_804_Update)
        // start: Forward dependencies from iNsTr_14 to transition ptr_deref_804_base_address_calculated
        // done: Forward dependencies from iNsTr_14 to transition ptr_deref_804_base_address_calculated
        ptr_deref_804_sample_start_ <-& (ptr_deref_804_base_address_calculated)
        // Target expression
        // (as target) iNsTr_15
        // start: WAR dependencies for iNsTr_15
        // done: WAR dependencies for iNsTr_15
        // end:  		iNsTr_15 := ->(iNsTr_14)
        // start:  		ncols := iNsTr_15
        //  file prog.linked.opt.aa, line 391
        // Source expression
        // iNsTr_15
        // Target expression
        // (as target) ncols
        $T[STORE_ncols_806_sample_start_] 
        $T[STORE_ncols_806_sample_completed_] 
        $T[STORE_ncols_806_update_start_] 
        $T[STORE_ncols_806_update_completed_] 
        // ncols
        $T[STORE_ncols_806_word_address_calculated] 
        $T[STORE_ncols_806_root_address_calculated] 
        STORE_ncols_806_word_address_calculated <-& (STORE_ncols_806_root_address_calculated)
        ;;[STORE_ncols_806_Sample] 
        {
          ;;[STORE_ncols_806_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_ncols_806_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_ncols_806_sample_start_ <-& (STORE_ncols_806_word_address_calculated)
        STORE_ncols_806_sample_start_ &-> (STORE_ncols_806_Sample)
        STORE_ncols_806_sample_completed_ <-& (STORE_ncols_806_Sample)
        STORE_ncols_806_sample_completed_ &-> ($null)
        STORE_ncols_806_update_start_ &-> (STORE_ncols_806_Update)
        STORE_ncols_806_update_completed_ <-& (STORE_ncols_806_Update)
        // start: Forward dependencies from iNsTr_15 to transition STORE_ncols_806_sample_start_
        STORE_ncols_806_sample_start_ <-& (ptr_deref_804_update_completed_)
        // done: Forward dependencies from iNsTr_15 to transition STORE_ncols_806_sample_start_
        // end:  		ncols := iNsTr_15
        // start:  		iNsTr_17 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
        //  file prog.linked.opt.aa, line 392
        // constant! 
        // end:  		iNsTr_17 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
        // start:  		iNsTr_18 := ->(iNsTr_17)
        //  file prog.linked.opt.aa, line 393
        // Source expression
        // ->(iNsTr_17)
        $T[ptr_deref_817_sample_start_] 
        $T[ptr_deref_817_sample_completed_] 
        $T[ptr_deref_817_update_start_] 
        $T[ptr_deref_817_update_completed_] 
        $T[ptr_deref_817_base_address_calculated] 
        // iNsTr_17
        $T[ptr_deref_817_word_address_calculated] 
        $T[ptr_deref_817_root_address_calculated] 
        $T[ptr_deref_817_base_address_resized] 
        ;;[ptr_deref_817_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_817_base_address_calculated &-> (ptr_deref_817_base_addr_resize)
        ptr_deref_817_base_address_resized <-& (ptr_deref_817_base_addr_resize)
        ;;[ptr_deref_817_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_817_base_address_resized &-> (ptr_deref_817_base_plus_offset)
        ptr_deref_817_root_address_calculated <-& (ptr_deref_817_base_plus_offset)
        ;;[ptr_deref_817_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_817_root_address_calculated &-> (ptr_deref_817_word_addrgen)
        ptr_deref_817_word_address_calculated <-& (ptr_deref_817_word_addrgen)
        ;;[ptr_deref_817_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_817_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_817_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_817_sample_start_ <-& (ptr_deref_817_word_address_calculated)
        ptr_deref_817_sample_start_ &-> (ptr_deref_817_Sample)
        ptr_deref_817_sample_completed_ <-& (ptr_deref_817_Sample)
        ptr_deref_817_sample_completed_ &-> ($null)
        ptr_deref_817_update_start_ &-> (ptr_deref_817_Update)
        ptr_deref_817_update_completed_ <-& (ptr_deref_817_Update)
        // start: Forward dependencies from iNsTr_17 to transition ptr_deref_817_base_address_calculated
        // done: Forward dependencies from iNsTr_17 to transition ptr_deref_817_base_address_calculated
        ptr_deref_817_sample_start_ <-& (ptr_deref_817_base_address_calculated)
        // Target expression
        // (as target) iNsTr_18
        // start: WAR dependencies for iNsTr_18
        // done: WAR dependencies for iNsTr_18
        // end:  		iNsTr_18 := ->(iNsTr_17)
        // start:  		ncol_ind := iNsTr_18
        //  file prog.linked.opt.aa, line 394
        // Source expression
        // iNsTr_18
        // Target expression
        // (as target) ncol_ind
        $T[STORE_ncol_ind_819_sample_start_] 
        $T[STORE_ncol_ind_819_sample_completed_] 
        $T[STORE_ncol_ind_819_update_start_] 
        $T[STORE_ncol_ind_819_update_completed_] 
        // ncol_ind
        $T[STORE_ncol_ind_819_word_address_calculated] 
        $T[STORE_ncol_ind_819_root_address_calculated] 
        STORE_ncol_ind_819_word_address_calculated <-& (STORE_ncol_ind_819_root_address_calculated)
        ;;[STORE_ncol_ind_819_Sample] 
        {
          ;;[STORE_ncol_ind_819_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_ncol_ind_819_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_ncol_ind_819_sample_start_ <-& (STORE_ncol_ind_819_word_address_calculated)
        STORE_ncol_ind_819_sample_start_ &-> (STORE_ncol_ind_819_Sample)
        STORE_ncol_ind_819_sample_completed_ <-& (STORE_ncol_ind_819_Sample)
        STORE_ncol_ind_819_sample_completed_ &-> ($null)
        STORE_ncol_ind_819_update_start_ &-> (STORE_ncol_ind_819_Update)
        STORE_ncol_ind_819_update_completed_ <-& (STORE_ncol_ind_819_Update)
        // start: Forward dependencies from iNsTr_18 to transition STORE_ncol_ind_819_sample_start_
        STORE_ncol_ind_819_sample_start_ <-& (ptr_deref_817_update_completed_)
        // done: Forward dependencies from iNsTr_18 to transition STORE_ncol_ind_819_sample_start_
        // end:  		ncol_ind := iNsTr_18
        // start:  		iNsTr_20 := (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
        //  file prog.linked.opt.aa, line 395
        // Source expression
        // (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
        $T[SUB_u16_u16_826_sample_start_] 
        $T[SUB_u16_u16_826_sample_completed_] 
        $T[SUB_u16_u16_826_update_start_] 
        $T[SUB_u16_u16_826_update_completed_] 
        // iNsTr_18
        // start: Forward dependencies from iNsTr_18 to transition SUB_u16_u16_826_sample_start_
        SUB_u16_u16_826_sample_start_ <-& (ptr_deref_817_update_completed_)
        // done: Forward dependencies from iNsTr_18 to transition SUB_u16_u16_826_sample_start_
        ;;[SUB_u16_u16_826_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_826_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_826_sample_start_ &-> (SUB_u16_u16_826_Sample)
        SUB_u16_u16_826_sample_completed_ <-& (SUB_u16_u16_826_Sample)
        SUB_u16_u16_826_sample_completed_ &-> ($null)
        SUB_u16_u16_826_update_start_ &-> (SUB_u16_u16_826_Update)
        SUB_u16_u16_826_update_completed_ <-& (SUB_u16_u16_826_Update)
        // Target expression
        // (as target) iNsTr_20
        // start: WAR dependencies for iNsTr_20
        // done: WAR dependencies for iNsTr_20
        // end:  		iNsTr_20 := (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
        // start:  		iNsTr_21 := (iNsTr_12 == iNsTr_20)
        //  file prog.linked.opt.aa, line 396
        // Source expression
        // (iNsTr_12 == iNsTr_20)
        $T[EQ_u16_u1_831_sample_start_] 
        $T[EQ_u16_u1_831_sample_completed_] 
        $T[EQ_u16_u1_831_update_start_] 
        $T[EQ_u16_u1_831_update_completed_] 
        // iNsTr_12
        // iNsTr_20
        // start: Forward dependencies from iNsTr_12 to transition EQ_u16_u1_831_sample_start_
        EQ_u16_u1_831_sample_start_ <-& (ptr_deref_791_update_completed_)
        // done: Forward dependencies from iNsTr_12 to transition EQ_u16_u1_831_sample_start_
        // start: Forward dependencies from iNsTr_20 to transition EQ_u16_u1_831_sample_start_
        EQ_u16_u1_831_sample_start_ <-& (SUB_u16_u16_826_update_completed_)
        // done: Forward dependencies from iNsTr_20 to transition EQ_u16_u1_831_sample_start_
        ;;[EQ_u16_u1_831_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_831_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_831_sample_start_ &-> (EQ_u16_u1_831_Sample)
        EQ_u16_u1_831_sample_completed_ <-& (EQ_u16_u1_831_Sample)
        EQ_u16_u1_831_sample_completed_ &-> ($null)
        EQ_u16_u1_831_update_start_ &-> (EQ_u16_u1_831_Update)
        EQ_u16_u1_831_update_completed_ <-& (EQ_u16_u1_831_Update)
        // Target expression
        // (as target) iNsTr_21
        // start: WAR dependencies for iNsTr_21
        // done: WAR dependencies for iNsTr_21
        // end:  		iNsTr_21 := (iNsTr_12 == iNsTr_20)
        // load-store dependencies..
      }
      assign_stmt_788_to_assign_stmt_832__entry__ |-> (assign_stmt_788_to_assign_stmt_832)
      assign_stmt_788_to_assign_stmt_832__exit__ <-| (assign_stmt_788_to_assign_stmt_832)
      // if-statement  
      //  file prog.linked.opt.aa, line 397
      ;;[if_stmt_833_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_833__entry__ |-> (if_stmt_833_dead_link)
      if_stmt_833__exit__ <-| (if_stmt_833_dead_link)
      ;;[if_stmt_833_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_833__entry__ |-> (if_stmt_833_eval_test)
      $P [R_iNsTr_21_834_place]
      R_iNsTr_21_834_place <-| (if_stmt_833_eval_test)
      ;;[if_stmt_833_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_833_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_21_834_place |-> (if_stmt_833_if_link if_stmt_833_else_link)
      $P [xx_x_crit_edge4_xx_x_crit_edge]
      xx_x_crit_edge4_xx_x_crit_edge <-| (if_stmt_833_if_link)
      $P [xx_x_crit_edge4_bbx_xnph]
      xx_x_crit_edge4_bbx_xnph <-| (if_stmt_833_else_link)
      ::[assign_stmt_844_to_assign_stmt_848] 
      {
        // start:  		tmp := (iNsTr_12 + iNsTr_18)
        //  file prog.linked.opt.aa, line 404
        // Source expression
        // (iNsTr_12 + iNsTr_18)
        $T[ADD_u16_u16_843_sample_start_] 
        $T[ADD_u16_u16_843_sample_completed_] 
        $T[ADD_u16_u16_843_update_start_] 
        $T[ADD_u16_u16_843_update_completed_] 
        // iNsTr_12
        // iNsTr_18
        // start: Forward dependencies from iNsTr_12 to transition ADD_u16_u16_843_sample_start_
        // done: Forward dependencies from iNsTr_12 to transition ADD_u16_u16_843_sample_start_
        // start: Forward dependencies from iNsTr_18 to transition ADD_u16_u16_843_sample_start_
        // done: Forward dependencies from iNsTr_18 to transition ADD_u16_u16_843_sample_start_
        ;;[ADD_u16_u16_843_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_843_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_843_sample_start_ &-> (ADD_u16_u16_843_Sample)
        ADD_u16_u16_843_sample_completed_ <-& (ADD_u16_u16_843_Sample)
        ADD_u16_u16_843_sample_completed_ &-> ($null)
        ADD_u16_u16_843_update_start_ &-> (ADD_u16_u16_843_Update)
        ADD_u16_u16_843_update_completed_ <-& (ADD_u16_u16_843_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_12 + iNsTr_18)
        // start:  		tmp1 := ($cast ($uint<64>) tmp )
        //  file prog.linked.opt.aa, line 405
        // Source expression
        // ($cast ($uint<64>) tmp )
        $T[type_cast_847_sample_start_] 
        $T[type_cast_847_sample_completed_] 
        $T[type_cast_847_update_start_] 
        $T[type_cast_847_update_completed_] 
        // tmp
        // start: Forward dependencies from tmp to transition type_cast_847_sample_start_
        type_cast_847_sample_start_ <-& (ADD_u16_u16_843_update_completed_)
        // done: Forward dependencies from tmp to transition type_cast_847_sample_start_
        ;;[type_cast_847_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_847_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_847_sample_start_ &-> (type_cast_847_Sample)
        type_cast_847_sample_completed_ <-& (type_cast_847_Sample)
        type_cast_847_sample_completed_ &-> ($null)
        type_cast_847_update_start_ &-> (type_cast_847_Update)
        type_cast_847_update_completed_ <-& (type_cast_847_Update)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := ($cast ($uint<64>) tmp )
        // load-store dependencies..
      }
      assign_stmt_844_to_assign_stmt_848__entry__ |-> (assign_stmt_844_to_assign_stmt_848)
      assign_stmt_844_to_assign_stmt_848__exit__ <-| (assign_stmt_844_to_assign_stmt_848)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 410
      <o> [do_while_stmt_857]  $depth 16 $buffering 2 
      {
        $P[do_while_stmt_857__entry__] 
        $P[do_while_stmt_857__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_857_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          aggregated_phi_update_req &-> (condition_evaluated)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_859
          // 			$phi indvar := 			  ($cast ($uint<64>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<64>
          $T[phi_stmt_859_sample_start_] 
          $T[phi_stmt_859_sample_completed_] 
          $T[phi_stmt_859_update_start_] 
          $T[phi_stmt_859_update_completed_] 
          $T[phi_stmt_859_sample_start__ps] 
          aggregated_phi_sample_req <-& (phi_stmt_859_sample_start_)
          phi_stmt_859_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_859_sample_completed__ps] 
          phi_stmt_859_sample_completed__ps &-> (aggregated_phi_sample_ack)
          aggregated_phi_sample_ack &-> (phi_stmt_859_sample_completed_)
          $T[phi_stmt_859_update_start__ps] 
          aggregated_phi_update_req <-& (phi_stmt_859_update_start_)
          phi_stmt_859_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_859_update_completed__ps] 
          phi_stmt_859_update_completed__ps &-> (aggregated_phi_update_ack)
          aggregated_phi_update_ack &-> (phi_stmt_859_update_completed_)
          $T[phi_stmt_859_loopback_trigger] 
          phi_stmt_859_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_859_loopback_sample_req] 
          $T[phi_stmt_859_entry_trigger] 
          phi_stmt_859_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_859_entry_sample_req] 
          phi_stmt_859_update_start_ o<-& (phi_stmt_859_update_completed_ 0)
          phi_stmt_859_sample_start_ o<-& (phi_stmt_859_sample_completed_ 1)
          $T[phi_stmt_859_merged_reqs] 
          $T[phi_stmt_859_entry_sample_req__merge_in] 
          phi_stmt_859_entry_sample_req__merge_in <-& (phi_stmt_859_entry_sample_req)
          $T[phi_stmt_859_loopback_sample_req__merge_in] 
          phi_stmt_859_loopback_sample_req__merge_in <-& (phi_stmt_859_loopback_sample_req)
          $transitionmerge [phi_stmt_859_req_merge] (phi_stmt_859_entry_sample_req__merge_in phi_stmt_859_loopback_sample_req__merge_in) (phi_stmt_859_merged_reqs)
          phi_stmt_859_merged_reqs &-> ($null)
          $T[phi_stmt_859_phi_mux_ack] 
          $T[phi_stmt_859_phi_mux_ack_ps] 
          phi_stmt_859_phi_mux_ack_ps <-& (phi_stmt_859_phi_mux_ack)
          $T[type_cast_862_sample_start__ps] 
          $T[type_cast_862_sample_completed__ps] 
          $T[type_cast_862_update_start__ps] 
          $T[type_cast_862_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<64>) indvarx_xnext )
          $T[type_cast_862_sample_start_] 
          $T[type_cast_862_sample_completed_] 
          $T[type_cast_862_update_start_] 
          $T[type_cast_862_update_completed_] 
          // indvarx_xnext
          // start: Forward dependencies from indvarx_xnext to transition type_cast_862_sample_start_
          // done: Forward dependencies from indvarx_xnext to transition type_cast_862_sample_start_
          ;;[type_cast_862_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_862_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_862_sample_start_ &-> (type_cast_862_Sample)
          type_cast_862_sample_completed_ <-& (type_cast_862_Sample)
          type_cast_862_sample_completed_ &-> ($null)
          type_cast_862_update_start_ &-> (type_cast_862_Update)
          type_cast_862_update_completed_ <-& (type_cast_862_Update)
          // RAW reenables for indvarx_xnext
          // self-release: 
          type_cast_862_sample_start_ o<-& (type_cast_862_sample_completed_ 1)
          type_cast_862_update_start_ o<-& (type_cast_862_update_completed_ 0)
          // Phi start dependency
          type_cast_862_sample_start_ <-& (type_cast_862_sample_start__ps)
          type_cast_862_update_start_ <-& (type_cast_862_update_start__ps)
          // RAW reenables for ($cast ($uint<64>) indvarx_xnext )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_862_sample_completed__ps <-& (type_cast_862_sample_completed_)
          type_cast_862_update_completed__ps <-& (type_cast_862_update_completed_)
          $T[R_indvar_at_entry_863_sample_start__ps] 
          $T[R_indvar_at_entry_863_sample_completed__ps] 
          $T[R_indvar_at_entry_863_update_start__ps] 
          $T[R_indvar_at_entry_863_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_indvar_at_entry_863_sample_start_] 
          $T[R_indvar_at_entry_863_sample_completed_] 
          $T[R_indvar_at_entry_863_update_start_] 
          $T[R_indvar_at_entry_863_update_completed_] 
          ;;[R_indvar_at_entry_863_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_indvar_at_entry_863_sample_start_ &-> (R_indvar_at_entry_863_Sample)
          R_indvar_at_entry_863_sample_completed_ <-& (R_indvar_at_entry_863_Sample)
          ;;[R_indvar_at_entry_863_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_indvar_at_entry_863_update_start_ &-> (R_indvar_at_entry_863_Update)
          R_indvar_at_entry_863_update_completed_ <-& (R_indvar_at_entry_863_Update)
          // RAW reenables for indvar_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_indvar_at_entry_863_sample_start_ <-& (R_indvar_at_entry_863_sample_start__ps)
          R_indvar_at_entry_863_update_start_ <-& (R_indvar_at_entry_863_update_start__ps)
          // Phi complete dependency.
          R_indvar_at_entry_863_sample_completed__ps <-& (R_indvar_at_entry_863_sample_completed_)
          R_indvar_at_entry_863_update_completed__ps <-& (R_indvar_at_entry_863_update_completed_)
          $phisequencer [ phi_stmt_859_phi_seq] : 
          phi_stmt_859_loopback_trigger type_cast_862_sample_start__ps type_cast_862_sample_completed__ps type_cast_862_update_start__ps type_cast_862_update_completed__ps phi_stmt_859_entry_trigger R_indvar_at_entry_863_sample_start__ps R_indvar_at_entry_863_sample_completed__ps R_indvar_at_entry_863_update_start__ps R_indvar_at_entry_863_update_completed__ps :
          phi_stmt_859_sample_start__ps phi_stmt_859_sample_completed__ps phi_stmt_859_update_start__ps phi_stmt_859_update_completed__ps :
          phi_stmt_859_loopback_sample_req phi_stmt_859_entry_sample_req : 
          phi_stmt_859_phi_mux_ack
          // done: PHI Statement phi_stmt_859
          // start:  			tmp3 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
          //  file prog.linked.opt.aa, line 415
          // Source expression
          // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
          $T[ADD_u64_u64_869_sample_start_] 
          $T[ADD_u64_u64_869_sample_completed_] 
          $T[ADD_u64_u64_869_update_start_] 
          $T[ADD_u64_u64_869_update_completed_] 
          // indvar
          // start: Forward dependencies from indvar to transition ADD_u64_u64_869_sample_start_
          ADD_u64_u64_869_sample_start_ <-& (phi_stmt_859_update_completed_)
          // done: Forward dependencies from indvar to transition ADD_u64_u64_869_sample_start_
          ;;[ADD_u64_u64_869_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u64_u64_869_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u64_u64_869_sample_start_ &-> (ADD_u64_u64_869_Sample)
          ADD_u64_u64_869_sample_completed_ <-& (ADD_u64_u64_869_Sample)
          ADD_u64_u64_869_sample_completed_ &-> ($null)
          ADD_u64_u64_869_update_start_ &-> (ADD_u64_u64_869_Update)
          ADD_u64_u64_869_update_completed_ <-& (ADD_u64_u64_869_Update)
          // RAW reenables for indvar
          phi_stmt_859_update_start_ o<-& (ADD_u64_u64_869_sample_completed_ 0)
          // self-release: 
          ADD_u64_u64_869_sample_start_ o<-& (ADD_u64_u64_869_sample_completed_ 1)
          ADD_u64_u64_869_update_start_ o<-& (ADD_u64_u64_869_update_completed_ 0)
          // Target expression
          // (as target) tmp3
          // start: WAR dependencies for tmp3
          // done: WAR dependencies for tmp3
          // end:  			tmp3 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
          // start:  			scevgep := @(mem[tmp3])
          //  file prog.linked.opt.aa, line 416
          // Source expression
          // @(mem[tmp3])
          $T[addr_of_874_sample_start_] 
          $T[addr_of_874_sample_completed_] 
          $T[addr_of_874_update_start_] 
          $T[addr_of_874_update_completed_] 
          $T[array_obj_ref_873_root_address_calculated] 
          $T[array_obj_ref_873_offset_calculated] 
          $T[array_obj_ref_873_index_resized_0] 
          $T[array_obj_ref_873_index_scaled_0] 
          $T[array_obj_ref_873_index_computed_0] 
          // tmp3
          // start: Forward dependencies from tmp3 to transition array_obj_ref_873_index_computed_0
          array_obj_ref_873_index_computed_0 <-& (ADD_u64_u64_869_update_completed_)
          // done: Forward dependencies from tmp3 to transition array_obj_ref_873_index_computed_0
          ;;[array_obj_ref_873_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_873_index_computed_0 &-> (array_obj_ref_873_index_resize_0)
          array_obj_ref_873_index_resized_0 <-& (array_obj_ref_873_index_resize_0)
          ;;[array_obj_ref_873_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_873_index_resized_0 &-> (array_obj_ref_873_index_scale_0)
          array_obj_ref_873_index_scaled_0 <-& (array_obj_ref_873_index_scale_0)
          ;;[array_obj_ref_873_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_873_index_scaled_0 &-> (array_obj_ref_873_final_index_sum_regn)
          array_obj_ref_873_offset_calculated <-& (array_obj_ref_873_final_index_sum_regn)
          ;;[array_obj_ref_873_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_873_offset_calculated &-> (array_obj_ref_873_base_plus_offset)
          array_obj_ref_873_root_address_calculated <-& (array_obj_ref_873_base_plus_offset)
          ;;[addr_of_874_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_874_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_874_sample_start_ <-& (array_obj_ref_873_root_address_calculated)
          addr_of_874_sample_start_ &-> (addr_of_874_request)
          addr_of_874_sample_completed_ <-& (addr_of_874_request)
          addr_of_874_update_start_ &-> (addr_of_874_complete)
          addr_of_874_update_completed_ <-& (addr_of_874_complete)
          // reenables .
          // self-release 
          addr_of_874_sample_start_ o<-& (addr_of_874_sample_completed_ 1)
          addr_of_874_update_start_ o<-& (addr_of_874_update_completed_ 0)
          // Target expression
          // (as target) scevgep
          // start: WAR dependencies for scevgep
          // done: WAR dependencies for scevgep
          // end:  			scevgep := @(mem[tmp3])
          // start:  			iNsTr_30 := matrix_in
          //  file prog.linked.opt.aa, line 417
          // Source expression
          // matrix_in
          $T[RPIPE_matrix_in_877_sample_start_] 
          $T[RPIPE_matrix_in_877_sample_completed_] 
          $T[RPIPE_matrix_in_877_update_start_] 
          $T[RPIPE_matrix_in_877_update_completed_] 
          ;;[RPIPE_matrix_in_877_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_matrix_in_877_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_matrix_in_877_sample_start_ &-> (RPIPE_matrix_in_877_Sample)
          RPIPE_matrix_in_877_sample_completed_ <-& (RPIPE_matrix_in_877_Sample)
          RPIPE_matrix_in_877_update_start_ <-& (RPIPE_matrix_in_877_sample_completed_)
          RPIPE_matrix_in_877_update_start_ &-> (RPIPE_matrix_in_877_Update)
          RPIPE_matrix_in_877_update_completed_ <-& (RPIPE_matrix_in_877_Update)
          // self-release: 
          RPIPE_matrix_in_877_sample_start_ o<-& (RPIPE_matrix_in_877_sample_completed_ 1)
          RPIPE_matrix_in_877_update_start_ o<-& (RPIPE_matrix_in_877_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_30
          // start: WAR dependencies for iNsTr_30
          // done: WAR dependencies for iNsTr_30
          // end:  			iNsTr_30 := matrix_in
          // start:  			->(scevgep) := iNsTr_30
          //  file prog.linked.opt.aa, line 418
          // Source expression
          // iNsTr_30
          // Target expression
          // ->(scevgep)
          $T[ptr_deref_880_sample_start_] 
          $T[ptr_deref_880_sample_completed_] 
          $T[ptr_deref_880_update_start_] 
          $T[ptr_deref_880_update_completed_] 
          $T[ptr_deref_880_base_address_calculated] 
          // scevgep
          $T[ptr_deref_880_word_address_calculated] 
          $T[ptr_deref_880_root_address_calculated] 
          $T[ptr_deref_880_base_address_resized] 
          ;;[ptr_deref_880_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_880_base_address_calculated &-> (ptr_deref_880_base_addr_resize)
          ptr_deref_880_base_address_resized <-& (ptr_deref_880_base_addr_resize)
          ;;[ptr_deref_880_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_880_base_address_resized &-> (ptr_deref_880_base_plus_offset)
          ptr_deref_880_root_address_calculated <-& (ptr_deref_880_base_plus_offset)
          ;;[ptr_deref_880_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_880_root_address_calculated &-> (ptr_deref_880_word_addrgen)
          ptr_deref_880_word_address_calculated <-& (ptr_deref_880_word_addrgen)
          ;;[ptr_deref_880_Sample] 
          {
            ;;[ptr_deref_880_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_880_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_880_sample_start_ <-& (ptr_deref_880_word_address_calculated)
          // reenable-joins
          addr_of_874_update_start_ o<-& (ptr_deref_880_sample_completed_ 0)
          ptr_deref_880_sample_start_ &-> (ptr_deref_880_Sample)
          ptr_deref_880_sample_completed_ <-& (ptr_deref_880_Sample)
          ptr_deref_880_sample_completed_ &-> ($null)
          ptr_deref_880_update_start_ &-> (ptr_deref_880_Update)
          ptr_deref_880_update_completed_ <-& (ptr_deref_880_Update)
          // start: Forward dependencies from scevgep to transition ptr_deref_880_base_address_calculated
          ptr_deref_880_base_address_calculated <-& (addr_of_874_update_completed_)
          // done: Forward dependencies from scevgep to transition ptr_deref_880_base_address_calculated
          ptr_deref_880_sample_start_ <-& (ptr_deref_880_base_address_calculated)
          // RAW reenables for scevgep
          addr_of_874_update_start_ o<-& (ptr_deref_880_sample_completed_ 0)
          // self-release: 
          ptr_deref_880_sample_start_ o<-& (ptr_deref_880_sample_completed_ 1)
          ptr_deref_880_update_start_ o<-& (ptr_deref_880_update_completed_ 0)
          // start: Forward dependencies from iNsTr_30 to transition ptr_deref_880_sample_start_
          ptr_deref_880_sample_start_ <-& (RPIPE_matrix_in_877_update_completed_)
          // done: Forward dependencies from iNsTr_30 to transition ptr_deref_880_sample_start_
          // RAW reenables for iNsTr_30
          RPIPE_matrix_in_877_update_start_ o<-& (ptr_deref_880_sample_completed_ 0)
          // end:  			->(scevgep) := iNsTr_30
          // start:  			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 419
          // Source expression
          // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
          $T[ADD_u64_u64_887_sample_start_] 
          $T[ADD_u64_u64_887_sample_completed_] 
          $T[ADD_u64_u64_887_update_start_] 
          $T[ADD_u64_u64_887_update_completed_] 
          // indvar
          // start: Forward dependencies from indvar to transition ADD_u64_u64_887_sample_start_
          ADD_u64_u64_887_sample_start_ <-& (phi_stmt_859_update_completed_)
          // done: Forward dependencies from indvar to transition ADD_u64_u64_887_sample_start_
          ;;[ADD_u64_u64_887_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u64_u64_887_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u64_u64_887_sample_start_ &-> (ADD_u64_u64_887_Sample)
          ADD_u64_u64_887_sample_completed_ <-& (ADD_u64_u64_887_Sample)
          ADD_u64_u64_887_sample_completed_ &-> ($null)
          ADD_u64_u64_887_update_start_ &-> (ADD_u64_u64_887_Update)
          ADD_u64_u64_887_update_completed_ <-& (ADD_u64_u64_887_Update)
          // RAW reenables for indvar
          phi_stmt_859_update_start_ o<-& (ADD_u64_u64_887_sample_completed_ 0)
          // self-release: 
          ADD_u64_u64_887_sample_start_ o<-& (ADD_u64_u64_887_sample_completed_ 1)
          ADD_u64_u64_887_update_start_ o<-& (ADD_u64_u64_887_update_completed_ 0)
          // Target expression
          // (as target) indvarx_xnext
          // start: WAR dependencies for indvarx_xnext
          // WAR dependency: Read: indvarx_xnext before Write: 			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
          ADD_u64_u64_887_update_start_ <-& (phi_stmt_859_sample_completed_)
          // WAR dependency: release  Read: indvarx_xnext with Write: 			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
          phi_stmt_859_sample_start_ o<-& (ADD_u64_u64_887_update_completed_ 0)
          // done: WAR dependencies for indvarx_xnext
          // end:  			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 2
          // start:  			exitcond2 := (indvarx_xnext == tmp1)
          //  file prog.linked.opt.aa, line 420
          // Source expression
          // (indvarx_xnext == tmp1)
          $T[EQ_u64_u1_892_sample_start_] 
          $T[EQ_u64_u1_892_sample_completed_] 
          $T[EQ_u64_u1_892_update_start_] 
          $T[EQ_u64_u1_892_update_completed_] 
          // indvarx_xnext
          // tmp1
          // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_892_sample_start_
          EQ_u64_u1_892_sample_start_ <-& (ADD_u64_u64_887_update_completed_)
          // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_892_sample_start_
          // start: Forward dependencies from tmp1 to transition EQ_u64_u1_892_sample_start_
          // done: Forward dependencies from tmp1 to transition EQ_u64_u1_892_sample_start_
          ;;[EQ_u64_u1_892_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[EQ_u64_u1_892_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          EQ_u64_u1_892_sample_start_ &-> (EQ_u64_u1_892_Sample)
          EQ_u64_u1_892_sample_completed_ <-& (EQ_u64_u1_892_Sample)
          EQ_u64_u1_892_sample_completed_ &-> ($null)
          EQ_u64_u1_892_update_start_ &-> (EQ_u64_u1_892_Update)
          EQ_u64_u1_892_update_completed_ <-& (EQ_u64_u1_892_Update)
          // RAW reenables for indvarx_xnext
          ADD_u64_u64_887_update_start_ o<-& (EQ_u64_u1_892_sample_completed_ 0)
          // RAW reenables for tmp1
          // self-release: 
          EQ_u64_u1_892_sample_start_ o<-& (EQ_u64_u1_892_sample_completed_ 1)
          EQ_u64_u1_892_update_start_ o<-& (EQ_u64_u1_892_update_completed_ 0)
          // Target expression
          // (as target) exitcond2
          // start: WAR dependencies for exitcond2
          // done: WAR dependencies for exitcond2
          // end:  			exitcond2 := (indvarx_xnext == tmp1)
          // start:  			bb_4_xx_x_crit_edgex_xloopexit_taken := exitcond2
          //  file prog.linked.opt.aa, line 421
          $T[assign_stmt_896_sample_start_] 
          $T[assign_stmt_896_sample_completed_] 
          $T[assign_stmt_896_update_start_] 
          $T[assign_stmt_896_update_completed_] 
          // Source expression
          // exitcond2
          // Target expression
          // (as target) bb_4_xx_x_crit_edgex_xloopexit_taken
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_896_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_896_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_896_sample_start_ &-> (assign_stmt_896_Sample)
          assign_stmt_896_sample_completed_ <-& (assign_stmt_896_Sample)
          assign_stmt_896_sample_completed_ &-> ($null)
          assign_stmt_896_update_start_ &-> (assign_stmt_896_Update)
          assign_stmt_896_update_completed_ <-& (assign_stmt_896_Update)
          // start: Forward dependencies from exitcond2 to transition assign_stmt_896_sample_start_
          assign_stmt_896_sample_start_ <-& (EQ_u64_u1_892_update_completed_)
          // done: Forward dependencies from exitcond2 to transition assign_stmt_896_sample_start_
          // RAW reenables for exitcond2
          EQ_u64_u1_892_update_start_ o<-& (assign_stmt_896_sample_completed_ 0)
          // self-release: 
          assign_stmt_896_sample_start_ o<-& (assign_stmt_896_sample_completed_ 1)
          assign_stmt_896_update_start_ o<-& (assign_stmt_896_update_completed_ 0)
          // start: WAR dependencies for bb_4_xx_x_crit_edgex_xloopexit_taken
          // done: WAR dependencies for bb_4_xx_x_crit_edgex_xloopexit_taken
          // end:  			bb_4_xx_x_crit_edgex_xloopexit_taken := exitcond2
          // ( ~ exitcond2 )
          // exitcond2
          // start: Forward dependencies from ( ~ exitcond2 ) to transition condition_evaluated
          condition_evaluated <-& (EQ_u64_u1_892_update_completed_)
          // done: Forward dependencies from ( ~ exitcond2 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_8
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe matrix_in
          // read-dependencies for pipe matrix_in
          // write-dependencies for pipe matrix_in
          // signal dependencies for matrix_in
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_857__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_857_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_857__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_857_loop_body : condition_evaluated
        $bind do_while_stmt_857__entry__  => do_while_stmt_857_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_857_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_857__exit__)
      }
      do_while_stmt_857__entry__ |-> (do_while_stmt_857)
      do_while_stmt_857__exit__ <-| (do_while_stmt_857)
      // if-statement  
      //  file prog.linked.opt.aa, line 0
      ;;[if_stmt_900_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_900__entry__ |-> (if_stmt_900_dead_link)
      if_stmt_900__exit__ <-| (if_stmt_900_dead_link)
      ;;[if_stmt_900_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_900__entry__ |-> (if_stmt_900_eval_test)
      $P [R_bb_4_xx_x_crit_edgex_xloopexit_taken_901_place]
      R_bb_4_xx_x_crit_edgex_xloopexit_taken_901_place <-| (if_stmt_900_eval_test)
      ;;[if_stmt_900_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_900_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_bb_4_xx_x_crit_edgex_xloopexit_taken_901_place |-> (if_stmt_900_if_link if_stmt_900_else_link)
      $P [bb_4_xx_x_crit_edgex_xloopexit]
      bb_4_xx_x_crit_edgex_xloopexit <-| (if_stmt_900_if_link)
      if_stmt_900__exit__ <-| (if_stmt_900_else_link)
      ::[assign_stmt_909] 
      {
        // start:  		iNsTr_24 := rate_in
        //  file prog.linked.opt.aa, line 431
        // Source expression
        // rate_in
        $T[RPIPE_rate_in_908_sample_start_] 
        $T[RPIPE_rate_in_908_sample_completed_] 
        $T[RPIPE_rate_in_908_update_start_] 
        $T[RPIPE_rate_in_908_update_completed_] 
        ;;[RPIPE_rate_in_908_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_rate_in_908_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_rate_in_908_sample_start_ &-> (RPIPE_rate_in_908_Sample)
        RPIPE_rate_in_908_sample_completed_ <-& (RPIPE_rate_in_908_Sample)
        RPIPE_rate_in_908_update_start_ <-& (RPIPE_rate_in_908_sample_completed_)
        RPIPE_rate_in_908_update_start_ &-> (RPIPE_rate_in_908_Update)
        RPIPE_rate_in_908_update_completed_ <-& (RPIPE_rate_in_908_Update)
        // Target expression
        // (as target) iNsTr_24
        // start: WAR dependencies for iNsTr_24
        // done: WAR dependencies for iNsTr_24
        // end:  		iNsTr_24 := rate_in
        // barrier: 		iNsTr_24 := rate_in
        // load-store dependencies..
        // pipe read/write dependencies for pipe rate_in
        // read-dependencies for pipe rate_in
        // write-dependencies for pipe rate_in
        // signal dependencies for rate_in
      }
      assign_stmt_909__entry__ |-> (assign_stmt_909)
      assign_stmt_909__exit__ <-| (assign_stmt_909)
      ::[assign_stmt_912] 
      {
        // start:  		rate := iNsTr_24
        //  file prog.linked.opt.aa, line 432
        // Source expression
        // iNsTr_24
        // Target expression
        // (as target) rate
        $T[STORE_rate_910_sample_start_] 
        $T[STORE_rate_910_sample_completed_] 
        $T[STORE_rate_910_update_start_] 
        $T[STORE_rate_910_update_completed_] 
        // rate
        $T[STORE_rate_910_word_address_calculated] 
        $T[STORE_rate_910_root_address_calculated] 
        STORE_rate_910_word_address_calculated <-& (STORE_rate_910_root_address_calculated)
        ;;[STORE_rate_910_Sample] 
        {
          ;;[STORE_rate_910_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_rate_910_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_rate_910_sample_start_ <-& (STORE_rate_910_word_address_calculated)
        STORE_rate_910_sample_start_ &-> (STORE_rate_910_Sample)
        STORE_rate_910_sample_completed_ <-& (STORE_rate_910_Sample)
        STORE_rate_910_sample_completed_ &-> ($null)
        STORE_rate_910_update_start_ &-> (STORE_rate_910_Update)
        STORE_rate_910_update_completed_ <-& (STORE_rate_910_Update)
        // start: Forward dependencies from iNsTr_24 to transition STORE_rate_910_sample_start_
        // done: Forward dependencies from iNsTr_24 to transition STORE_rate_910_sample_start_
        // end:  		rate := iNsTr_24
        // load-store dependencies..
      }
      assign_stmt_912__entry__ |-> (assign_stmt_912)
      assign_stmt_912__exit__ <-| (assign_stmt_912)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 371
      //---------------------   merge statement  file prog.linked.opt.aa, line 371  --------------------------
      ||[bb_1_bb_1_PhiReq] 
      {
        ;;[phi_stmt_744] 
        {
          ||[phi_stmt_744_sources] 
          {
            // sources for 			$phi indvar7 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1			  ($cast ($uint<64>) indvarx_xnext8 ) $on bb_1_bb_1 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext8 )
            ;;[type_cast_750] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_744_req] 
        }
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      ||[bbx_xnph3_bb_1_PhiReq] 
      {
        ;;[phi_stmt_744] 
        {
          ||[phi_stmt_744_sources] 
          {
            // sources for 			$phi indvar7 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1			  ($cast ($uint<64>) indvarx_xnext8 ) $on bb_1_bb_1 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_748_konst_delay_trans] $delay
          }
          $T [phi_stmt_744_req] 
        }
      }
      bbx_xnph3_bb_1 |-> (bbx_xnph3_bb_1_PhiReq)
      $P [merge_stmt_743_PhiReqMerge] 
      merge_stmt_743_PhiReqMerge <-| ( bb_1_bb_1_PhiReq  bbx_xnph3_bb_1_PhiReq )
      ||[merge_stmt_743_PhiAck] 
      {
        $T [phi_stmt_744_ack] 
      }
      merge_stmt_743_PhiReqMerge |-> (merge_stmt_743_PhiAck)
      merge_stmt_743__exit__  <-| (merge_stmt_743_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 371  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 384
      ;;[merge_stmt_782_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_782__entry__ |-> (merge_stmt_782_dead_link)
      merge_stmt_782__exit__ <-| (merge_stmt_782_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 384  --------------------------
      ||[bb_1_xx_x_crit_edge4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_xx_x_crit_edge4 |-> (bb_1_xx_x_crit_edge4_PhiReq)
      $P [merge_stmt_782_PhiReqMerge] 
      merge_stmt_782_PhiReqMerge <-| ( bb_1_xx_x_crit_edge4_PhiReq )
      ||[merge_stmt_782_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_782_PhiReqMerge |-> (merge_stmt_782_PhiAck)
      merge_stmt_782__exit__  <-| (merge_stmt_782_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 384  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 402
      ;;[merge_stmt_839_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_839__entry__ |-> (merge_stmt_839_dead_link)
      merge_stmt_839__exit__ <-| (merge_stmt_839_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 402  --------------------------
      ||[xx_x_crit_edge4_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge4_bbx_xnph |-> (xx_x_crit_edge4_bbx_xnph_PhiReq)
      $P [merge_stmt_839_PhiReqMerge] 
      merge_stmt_839_PhiReqMerge <-| ( xx_x_crit_edge4_bbx_xnph_PhiReq )
      ||[merge_stmt_839_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_839_PhiReqMerge |-> (merge_stmt_839_PhiAck)
      merge_stmt_839__exit__  <-| (merge_stmt_839_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 402  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 407
      //---------------------   merge statement  file prog.linked.opt.aa, line 407  --------------------------
      ||[bbx_xnph_bb_4_PhiReq] 
      {
        ;;[phi_stmt_851] 
        {
          ||[phi_stmt_851_sources] 
          {
            // sources for 			$phi indvar_at_entry := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_4 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_855_konst_delay_trans] $delay
          }
          $T [phi_stmt_851_req] 
        }
      }
      bbx_xnph_bb_4 |-> (bbx_xnph_bb_4_PhiReq)
      $P [merge_stmt_850_PhiReqMerge] 
      merge_stmt_850_PhiReqMerge <-| ( bbx_xnph_bb_4_PhiReq )
      ||[merge_stmt_850_PhiAck] 
      {
        $T [phi_stmt_851_ack] 
      }
      merge_stmt_850_PhiReqMerge |-> (merge_stmt_850_PhiAck)
      merge_stmt_850__exit__  <-| (merge_stmt_850_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 407  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 426
      ;;[merge_stmt_904_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_904__entry__ |-> (merge_stmt_904_dead_link)
      merge_stmt_904__exit__ <-| (merge_stmt_904_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 426  --------------------------
      ||[bb_4_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_4_xx_x_crit_edgex_xloopexit |-> (bb_4_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_904_PhiReqMerge] 
      merge_stmt_904_PhiReqMerge <-| ( bb_4_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_904_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_904_PhiReqMerge |-> (merge_stmt_904_PhiAck)
      merge_stmt_904__exit__  <-| (merge_stmt_904_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 426  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 429
      //---------------------   merge statement  file prog.linked.opt.aa, line 429  --------------------------
      ||[xx_x_crit_edge4_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge4_xx_x_crit_edge |-> (xx_x_crit_edge4_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_906_PhiReqMerge] 
      merge_stmt_906_PhiReqMerge <-| ( xx_x_crit_edge4_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_906_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_906_PhiReqMerge |-> (merge_stmt_906_PhiAck)
      merge_stmt_906__exit__  <-| (merge_stmt_906_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 429  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 434
      //---------------------   merge statement  file prog.linked.opt.aa, line 434  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_914_PhiReqMerge] 
      merge_stmt_914_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_914_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_914_PhiReqMerge |-> (merge_stmt_914_PhiAck)
      merge_stmt_914__exit__  <-| (merge_stmt_914_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 434  --------------------------
      assign_stmt_732__entry__ <-| (branch_block_stmt_729__entry__)
      assign_stmt_735__entry__ <-| (assign_stmt_732__exit__)
      assign_stmt_738__entry__ <-| (assign_stmt_735__exit__)
      assign_stmt_741__entry__ <-| (assign_stmt_738__exit__)
      bbx_xnph3_bb_1 <-| (assign_stmt_741__exit__)
      assign_stmt_756__entry__ <-| (merge_stmt_743__exit__)
      assign_stmt_759__entry__ <-| (assign_stmt_756__exit__)
      assign_stmt_763_to_assign_stmt_775__entry__ <-| (assign_stmt_759__exit__)
      if_stmt_776__entry__ <-| (assign_stmt_763_to_assign_stmt_775__exit__)
      merge_stmt_782__entry__ <-| (if_stmt_776__exit__)
      assign_stmt_788_to_assign_stmt_832__entry__ <-| (merge_stmt_782__exit__)
      if_stmt_833__entry__ <-| (assign_stmt_788_to_assign_stmt_832__exit__)
      merge_stmt_839__entry__ <-| (if_stmt_833__exit__)
      assign_stmt_844_to_assign_stmt_848__entry__ <-| (merge_stmt_839__exit__)
      bbx_xnph_bb_4 <-| (assign_stmt_844_to_assign_stmt_848__exit__)
      do_while_stmt_857__entry__ <-| (merge_stmt_850__exit__)
      if_stmt_900__entry__ <-| (do_while_stmt_857__exit__)
      merge_stmt_904__entry__ <-| (if_stmt_900__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_904__exit__)
      assign_stmt_909__entry__ <-| (merge_stmt_906__exit__)
      assign_stmt_912__entry__ <-| (assign_stmt_909__exit__)
      return__ <-| (assign_stmt_912__exit__)
      merge_stmt_914__exit__ |-> (branch_block_stmt_729__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 371
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 384
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 402
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 407
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 412
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 426
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 429
    // constant-object-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 434
    // constant-object-declarations for block %initInputs%body
    //  file prog.linked.opt.aa, line 364
    // constant-object-declarations for block %initInputs
    //  file prog.linked.opt.aa, line 359
    // constant-declarations for block %initInputs%body
    //  file prog.linked.opt.aa, line 364
    // maxNitr
    $constant $W[STORE_maxNitr_733_word_address_0] : $pointer<memory_space_7> := _b0
    // ebbyNo
    $constant $W[STORE_ebbyNo_739_word_address_0] : $pointer<memory_space_4> := _b0
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 371
    // constant-declarations for phi:  			$phi indvar7 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1			  ($cast ($uint<64>) indvarx_xnext8 ) $on bb_1_bb_1 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 372
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_748_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(mem[indvar7])
    $constant $W[array_obj_ref_754_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_754_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep10)
    $constant $W[ptr_deref_761_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_767_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_773_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // if-statement  
    //  file prog.linked.opt.aa, line 379
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 384
    // 		iNsTr_11 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  )])
    //  file prog.linked.opt.aa, line 386
    $constant $W[iNsTr_11_788] : $int<32> := _b00000000000000000000000000000000 // 0
    // ->(iNsTr_11)
    $constant $W[ptr_deref_791_word_offset_0] : $int<10> := _b0000000000// 0
    // nrows
    $constant $W[STORE_nrows_793_word_address_0] : $pointer<memory_space_12> := _b0
    // 		iNsTr_14 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )])
    //  file prog.linked.opt.aa, line 389
    $constant $W[iNsTr_14_801] : $int<32> := _b00000000000000000000000000000001 // 1
    // ->(iNsTr_14)
    $constant $W[ptr_deref_804_word_offset_0] : $int<10> := _b0000000000// 0
    // ncols
    $constant $W[STORE_ncols_806_word_address_0] : $pointer<memory_space_11> := _b0
    // 		iNsTr_17 := @(mem[($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000010  )])
    //  file prog.linked.opt.aa, line 392
    $constant $W[iNsTr_17_814] : $int<32> := _b00000000000000000000000000000010 // 2
    // ->(iNsTr_17)
    $constant $W[ptr_deref_817_word_offset_0] : $int<10> := _b0000000000// 0
    // ncol_ind
    $constant $W[STORE_ncol_ind_819_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_824_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 397
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 402
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 407
    // constant-declarations for phi:  			$phi indvar_at_entry := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_4 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_855_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 410
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 412
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 413
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_868_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[tmp3])
    $constant $W[array_obj_ref_873_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_873_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_880_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_886_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 0
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 426
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 429
    // rate
    $constant $W[STORE_rate_910_word_address_0] : $pointer<memory_space_13> := _b0
    // constant-declarations for block %initInputs%body%
    //  file prog.linked.opt.aa, line 434
    // block %initInputs%body
    //  file prog.linked.opt.aa, line 364
    // 		iNsTr_1 := maxNitr_in
    //  file prog.linked.opt.aa, line 366
    // iNsTr_1
    $W[iNsTr_1_732] : $int<16>
    // 		maxNitr := iNsTr_1
    //  file prog.linked.opt.aa, line 367
    // maxNitr
    $constant $W[STORE_maxNitr_733_word_address_0] : $pointer<memory_space_7> := _b0
    $W[STORE_maxNitr_733_data_0] : $int<16>
    // 		iNsTr_4 := ebbyNo_in
    //  file prog.linked.opt.aa, line 368
    // iNsTr_4
    $W[iNsTr_4_738] : $float<8,23>
    // 		ebbyNo := iNsTr_4
    //  file prog.linked.opt.aa, line 369
    // ebbyNo
    $constant $W[STORE_ebbyNo_739_word_address_0] : $pointer<memory_space_4> := _b0
    $W[STORE_ebbyNo_739_data_0] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 371
    // 			$phi indvar7 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1			  ($cast ($uint<64>) indvarx_xnext8 ) $on bb_1_bb_1 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 372
    // ($cast ($uint<64>) indvarx_xnext8 )
    $intermediate $W[type_cast_750_wire] : $int<64>
    // indvar7
    $W[indvar7_744] : $int<64>
    // 		scevgep10 := @(mem[indvar7])
    //  file prog.linked.opt.aa, line 374
    // @(mem[indvar7])
    $intermediate $W[R_indvar7_753_resized] : $int<10>
    $intermediate $W[R_indvar7_753_scaled] : $int<10>
    $intermediate $W[array_obj_ref_754_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_754_root_address] : $int<10>
    // scevgep10
    $W[scevgep10_756] : $int<32>
    // 		iNsTr_8 := matrix_in
    //  file prog.linked.opt.aa, line 375
    // iNsTr_8
    $W[iNsTr_8_759] : $int<16>
    // 		->(scevgep10) := iNsTr_8
    //  file prog.linked.opt.aa, line 376
    // ->(scevgep10)
    $intermediate $W[ptr_deref_761_wire] : $int<16>
    $intermediate $W[ptr_deref_761_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_761_root_address] : $int<10>
    $W[ptr_deref_761_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_761_data_0] : $int<16>
    // 		indvarx_xnext8 := (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 377
    // indvarx_xnext8
    $W[indvarx_xnext8_769] : $int<64>
    // 		exitcond := (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 378
    // exitcond
    $W[exitcond_775] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 379
    // 		iNsTr_12 := ->(iNsTr_11)
    //  file prog.linked.opt.aa, line 387
    // ->(iNsTr_11)
    $intermediate $W[ptr_deref_791_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_791_root_address] : $int<10>
    $W[ptr_deref_791_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_791_data_0] : $int<16>
    // iNsTr_12
    $W[iNsTr_12_792] : $int<16>
    // 		nrows := iNsTr_12
    //  file prog.linked.opt.aa, line 388
    // nrows
    $constant $W[STORE_nrows_793_word_address_0] : $pointer<memory_space_12> := _b0
    $W[STORE_nrows_793_data_0] : $int<16>
    // 		iNsTr_15 := ->(iNsTr_14)
    //  file prog.linked.opt.aa, line 390
    // ->(iNsTr_14)
    $intermediate $W[ptr_deref_804_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_804_root_address] : $int<10>
    $W[ptr_deref_804_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_804_data_0] : $int<16>
    // iNsTr_15
    $W[iNsTr_15_805] : $int<16>
    // 		ncols := iNsTr_15
    //  file prog.linked.opt.aa, line 391
    // ncols
    $constant $W[STORE_ncols_806_word_address_0] : $pointer<memory_space_11> := _b0
    $W[STORE_ncols_806_data_0] : $int<16>
    // 		iNsTr_18 := ->(iNsTr_17)
    //  file prog.linked.opt.aa, line 393
    // ->(iNsTr_17)
    $intermediate $W[ptr_deref_817_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_817_root_address] : $int<10>
    $W[ptr_deref_817_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_817_data_0] : $int<16>
    // iNsTr_18
    $W[iNsTr_18_818] : $int<16>
    // 		ncol_ind := iNsTr_18
    //  file prog.linked.opt.aa, line 394
    // ncol_ind
    $constant $W[STORE_ncol_ind_819_word_address_0] : $pointer<memory_space_10> := _b0
    $W[STORE_ncol_ind_819_data_0] : $int<16>
    // 		iNsTr_20 := (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
    //  file prog.linked.opt.aa, line 395
    // iNsTr_20
    $W[iNsTr_20_827] : $int<16>
    // 		iNsTr_21 := (iNsTr_12 == iNsTr_20)
    //  file prog.linked.opt.aa, line 396
    // iNsTr_21
    $W[iNsTr_21_832] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 397
    // 		tmp := (iNsTr_12 + iNsTr_18)
    //  file prog.linked.opt.aa, line 404
    // tmp
    $W[tmp_844] : $int<16>
    // 		tmp1 := ($cast ($uint<64>) tmp )
    //  file prog.linked.opt.aa, line 405
    // tmp1
    $W[tmp1_848] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 407
    // 			$phi indvar_at_entry := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_4 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    // indvar_at_entry
    $W[indvar_at_entry_851] : $int<64>
    // do-while statement  
    //  file prog.linked.opt.aa, line 410
    // ( ~ exitcond2 )
    $intermediate $W[NOT_u1_u1_899_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 412
    // 			$phi indvar := 			  ($cast ($uint<64>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 413
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_862_wire] : $int<64>
    $W[indvar_at_entry_851_863_buffered] : $int<64>
    // indvar
    $W[indvar_859] : $int<64>
    // 			tmp3 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 415
    // tmp3
    $W[tmp3_870] : $int<64>
    // 			scevgep := @(mem[tmp3])
    //  file prog.linked.opt.aa, line 416
    // @(mem[tmp3])
    $intermediate $W[R_tmp3_872_resized] : $int<10>
    $intermediate $W[R_tmp3_872_scaled] : $int<10>
    $intermediate $W[array_obj_ref_873_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_873_root_address] : $int<10>
    // scevgep
    $W[scevgep_875] : $int<32>
    // 			iNsTr_30 := matrix_in
    //  file prog.linked.opt.aa, line 417
    // iNsTr_30
    $W[iNsTr_30_878] : $int<16>
    // 			->(scevgep) := iNsTr_30
    //  file prog.linked.opt.aa, line 418
    // ->(scevgep)
    $intermediate $W[ptr_deref_880_wire] : $int<16>
    $intermediate $W[ptr_deref_880_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_880_root_address] : $int<10>
    $W[ptr_deref_880_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_880_data_0] : $int<16>
    // 			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 419
    // indvarx_xnext
    $W[indvarx_xnext_888] : $int<64>
    // 			exitcond2 := (indvarx_xnext == tmp1)
    //  file prog.linked.opt.aa, line 420
    // exitcond2
    $W[exitcond2_893] : $int<1>
    // 			bb_4_xx_x_crit_edgex_xloopexit_taken := exitcond2
    //  file prog.linked.opt.aa, line 421
    // bb_4_xx_x_crit_edgex_xloopexit_taken
    $W[bb_4_xx_x_crit_edgex_xloopexit_taken_896] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 0
    // 		iNsTr_24 := rate_in
    //  file prog.linked.opt.aa, line 431
    // iNsTr_24
    $W[iNsTr_24_909] : $float<8,23>
    // 		rate := iNsTr_24
    //  file prog.linked.opt.aa, line 432
    // rate
    $constant $W[STORE_rate_910_word_address_0] : $pointer<memory_space_13> := _b0
    $W[STORE_rate_910_data_0] : $int<32>
    // datapath-instances for block %initInputs%body
    //  file prog.linked.opt.aa, line 364
    // 		iNsTr_1 := maxNitr_in
    //  file prog.linked.opt.aa, line 366
    // maxNitr_in
    $ioport $in [RPIPE_maxNitr_in_731_inst] (maxNitr_in) (iNsTr_1_732) 
    // 		maxNitr := iNsTr_1
    //  file prog.linked.opt.aa, line 367
    // maxNitr
    $store [STORE_maxNitr_733_store_0] $to memory_space_7 (STORE_maxNitr_733_word_address_0 STORE_maxNitr_733_data_0) 
    $delay STORE_maxNitr_733_store_0 4
    &/ [STORE_maxNitr_733_gather_scatter] (iNsTr_1_732) (STORE_maxNitr_733_data_0) 
    $flowthrough 
    // 		iNsTr_4 := ebbyNo_in
    //  file prog.linked.opt.aa, line 368
    // ebbyNo_in
    $ioport $in [RPIPE_ebbyNo_in_737_inst] (ebbyNo_in) (iNsTr_4_738) 
    // 		ebbyNo := iNsTr_4
    //  file prog.linked.opt.aa, line 369
    // ebbyNo
    $store [STORE_ebbyNo_739_store_0] $to memory_space_4 (STORE_ebbyNo_739_word_address_0 STORE_ebbyNo_739_data_0) 
    $delay STORE_ebbyNo_739_store_0 4
    &/ [STORE_ebbyNo_739_gather_scatter] (iNsTr_4_738) (STORE_ebbyNo_739_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 371
    // 			$phi indvar7 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph3_bb_1			  ($cast ($uint<64>) indvarx_xnext8 ) $on bb_1_bb_1 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 372
    // ($cast ($uint<64>) indvarx_xnext8 )
    # := [type_cast_750_inst] (indvarx_xnext8_769) (type_cast_750_wire)   
    $buffering  $out type_cast_750_inst type_cast_750_wire 1
    $delay type_cast_750_inst 1
    $phi [phi_stmt_744] (type_cast_748_wire_constant type_cast_750_wire) ( indvar7_744 ) 
    // 		scevgep10 := @(mem[indvar7])
    //  file prog.linked.opt.aa, line 374
    &/ [array_obj_ref_754_index_0_resize] (indvar7_744) (R_indvar7_753_resized) 
    $flowthrough 
    &/ [array_obj_ref_754_index_0_rename] (R_indvar7_753_resized) (R_indvar7_753_scaled) 
    $flowthrough 
    &/ [array_obj_ref_754_index_offset] (R_indvar7_753_scaled) (array_obj_ref_754_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_754_root_address_inst] (array_obj_ref_754_final_offset) (array_obj_ref_754_root_address) 
    $flowthrough 
    # := [addr_of_755_final_reg] (array_obj_ref_754_root_address) (scevgep10_756)   
    $buffering  $out addr_of_755_final_reg scevgep10_756 1
    // 		iNsTr_8 := matrix_in
    //  file prog.linked.opt.aa, line 375
    // matrix_in
    $ioport $in [RPIPE_matrix_in_758_inst] (matrix_in) (iNsTr_8_759) 
    // 		->(scevgep10) := iNsTr_8
    //  file prog.linked.opt.aa, line 376
    // ->(scevgep10)
    &/ [ptr_deref_761_base_resize] (scevgep10_756) (ptr_deref_761_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_761_root_address_inst] (ptr_deref_761_resized_base_address) (ptr_deref_761_root_address) 
    $flowthrough 
    &/ [ptr_deref_761_addr_0] (ptr_deref_761_root_address) (ptr_deref_761_word_address_0) 
    $flowthrough 
    $store [ptr_deref_761_store_0] $to memory_space_8 (ptr_deref_761_word_address_0 ptr_deref_761_data_0) 
    $delay ptr_deref_761_store_0 4
    &/ [ptr_deref_761_gather_scatter] (iNsTr_8_759) (ptr_deref_761_data_0) 
    $flowthrough 
    // 		indvarx_xnext8 := (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 377
    // (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_768_inst] (indvar7_744 type_cast_767_wire_constant) (indvarx_xnext8_769)   
    $buffering  $out ADD_u64_u64_768_inst indvarx_xnext8_769 1
    $delay ADD_u64_u64_768_inst 1
    // 		exitcond := (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 378
    // (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    ==[EQ_u64_u1_774_inst] (indvarx_xnext8_769 type_cast_773_wire_constant) (exitcond_775)   
    $buffering  $out EQ_u64_u1_774_inst exitcond_775 1
    $delay EQ_u64_u1_774_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 379
    ==0? [if_stmt_776_branch] (exitcond_775)
    // 		iNsTr_12 := ->(iNsTr_11)
    //  file prog.linked.opt.aa, line 387
    // ->(iNsTr_11)
    &/ [ptr_deref_791_base_resize] (iNsTr_11_788) (ptr_deref_791_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_791_root_address_inst] (ptr_deref_791_resized_base_address) (ptr_deref_791_root_address) 
    $flowthrough 
    &/ [ptr_deref_791_addr_0] (ptr_deref_791_root_address) (ptr_deref_791_word_address_0) 
    $flowthrough 
    $load [ptr_deref_791_load_0] $from memory_space_8 (ptr_deref_791_word_address_0) (ptr_deref_791_data_0) 
    $delay ptr_deref_791_load_0 4
    &/ [ptr_deref_791_gather_scatter] (ptr_deref_791_data_0) (iNsTr_12_792) 
    $flowthrough 
    // 		nrows := iNsTr_12
    //  file prog.linked.opt.aa, line 388
    // nrows
    $store [STORE_nrows_793_store_0] $to memory_space_12 (STORE_nrows_793_word_address_0 STORE_nrows_793_data_0) 
    $delay STORE_nrows_793_store_0 4
    &/ [STORE_nrows_793_gather_scatter] (iNsTr_12_792) (STORE_nrows_793_data_0) 
    $flowthrough 
    // 		iNsTr_15 := ->(iNsTr_14)
    //  file prog.linked.opt.aa, line 390
    // ->(iNsTr_14)
    &/ [ptr_deref_804_base_resize] (iNsTr_14_801) (ptr_deref_804_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_804_root_address_inst] (ptr_deref_804_resized_base_address) (ptr_deref_804_root_address) 
    $flowthrough 
    &/ [ptr_deref_804_addr_0] (ptr_deref_804_root_address) (ptr_deref_804_word_address_0) 
    $flowthrough 
    $load [ptr_deref_804_load_0] $from memory_space_8 (ptr_deref_804_word_address_0) (ptr_deref_804_data_0) 
    $delay ptr_deref_804_load_0 4
    &/ [ptr_deref_804_gather_scatter] (ptr_deref_804_data_0) (iNsTr_15_805) 
    $flowthrough 
    // 		ncols := iNsTr_15
    //  file prog.linked.opt.aa, line 391
    // ncols
    $store [STORE_ncols_806_store_0] $to memory_space_11 (STORE_ncols_806_word_address_0 STORE_ncols_806_data_0) 
    $delay STORE_ncols_806_store_0 4
    &/ [STORE_ncols_806_gather_scatter] (iNsTr_15_805) (STORE_ncols_806_data_0) 
    $flowthrough 
    // 		iNsTr_18 := ->(iNsTr_17)
    //  file prog.linked.opt.aa, line 393
    // ->(iNsTr_17)
    &/ [ptr_deref_817_base_resize] (iNsTr_17_814) (ptr_deref_817_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_817_root_address_inst] (ptr_deref_817_resized_base_address) (ptr_deref_817_root_address) 
    $flowthrough 
    &/ [ptr_deref_817_addr_0] (ptr_deref_817_root_address) (ptr_deref_817_word_address_0) 
    $flowthrough 
    $load [ptr_deref_817_load_0] $from memory_space_8 (ptr_deref_817_word_address_0) (ptr_deref_817_data_0) 
    $delay ptr_deref_817_load_0 4
    &/ [ptr_deref_817_gather_scatter] (ptr_deref_817_data_0) (iNsTr_18_818) 
    $flowthrough 
    // 		ncol_ind := iNsTr_18
    //  file prog.linked.opt.aa, line 394
    // ncol_ind
    $store [STORE_ncol_ind_819_store_0] $to memory_space_10 (STORE_ncol_ind_819_word_address_0 STORE_ncol_ind_819_data_0) 
    $delay STORE_ncol_ind_819_store_0 4
    &/ [STORE_ncol_ind_819_gather_scatter] (iNsTr_18_818) (STORE_ncol_ind_819_data_0) 
    $flowthrough 
    // 		iNsTr_20 := (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
    //  file prog.linked.opt.aa, line 395
    // (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
    -[SUB_u16_u16_826_inst] (type_cast_824_wire_constant iNsTr_18_818) (iNsTr_20_827)   
    $buffering  $out SUB_u16_u16_826_inst iNsTr_20_827 1
    $delay SUB_u16_u16_826_inst 1
    // 		iNsTr_21 := (iNsTr_12 == iNsTr_20)
    //  file prog.linked.opt.aa, line 396
    // (iNsTr_12 == iNsTr_20)
    ==[EQ_u16_u1_831_inst] (iNsTr_12_792 iNsTr_20_827) (iNsTr_21_832)   
    $buffering  $out EQ_u16_u1_831_inst iNsTr_21_832 1
    $delay EQ_u16_u1_831_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 397
    ==0? [if_stmt_833_branch] (iNsTr_21_832)
    // 		tmp := (iNsTr_12 + iNsTr_18)
    //  file prog.linked.opt.aa, line 404
    // (iNsTr_12 + iNsTr_18)
    +[ADD_u16_u16_843_inst] (iNsTr_12_792 iNsTr_18_818) (tmp_844)   
    $buffering  $out ADD_u16_u16_843_inst tmp_844 1
    $delay ADD_u16_u16_843_inst 1
    // 		tmp1 := ($cast ($uint<64>) tmp )
    //  file prog.linked.opt.aa, line 405
    // ($cast ($uint<64>) tmp )
    # := [type_cast_847_inst] (tmp_844) (tmp1_848)   
    $buffering  $out type_cast_847_inst tmp1_848 1
    $delay type_cast_847_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 407
    // 			$phi indvar_at_entry := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_4 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 408
    $phi [phi_stmt_851] (type_cast_855_wire_constant) ( indvar_at_entry_851 ) 
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 410
    // ( ~ exitcond2 )
    ~ [NOT_u1_u1_899_inst] (exitcond2_893) (NOT_u1_u1_899_wire)   $flowthrough
    $delay NOT_u1_u1_899_inst 0
    ==0? [do_while_stmt_857_branch] (NOT_u1_u1_899_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 412
    // 			$phi indvar := 			  ($cast ($uint<64>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 413
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_862_inst] (indvarx_xnext_888) (type_cast_862_wire)    $fullrate
    $buffering  $out type_cast_862_inst type_cast_862_wire 1
    $delay type_cast_862_inst 1
    # := [indvar_at_entry_851_863_buf] (indvar_at_entry_851) (indvar_at_entry_851_863_buffered)    $fullrate
    $buffering $out indvar_at_entry_851_863_buf indvar_at_entry_851_863_buffered  1
    # $phi [phi_stmt_859] (type_cast_862_wire indvar_at_entry_851_863_buffered) ( indvar_859 ) $fullrate
    // $buffering  $out phi_stmt_859 indvar_859 2
    // 			tmp3 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 415
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_869_inst] (indvar_859 type_cast_868_wire_constant) (tmp3_870)    $fullrate
    $buffering  $out ADD_u64_u64_869_inst tmp3_870 1
    $delay ADD_u64_u64_869_inst 1
    // 			scevgep := @(mem[tmp3])
    //  file prog.linked.opt.aa, line 416
    &/ [array_obj_ref_873_index_0_resize] (tmp3_870) (R_tmp3_872_resized) 
    $flowthrough 
    &/ [array_obj_ref_873_index_0_rename] (R_tmp3_872_resized) (R_tmp3_872_scaled) 
    $flowthrough 
    &/ [array_obj_ref_873_index_offset] (R_tmp3_872_scaled) (array_obj_ref_873_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_873_root_address_inst] (array_obj_ref_873_final_offset) (array_obj_ref_873_root_address) 
    $flowthrough 
    # := [addr_of_874_final_reg] (array_obj_ref_873_root_address) (scevgep_875)    $fullrate
    $buffering  $out addr_of_874_final_reg scevgep_875 1
    // 			iNsTr_30 := matrix_in
    //  file prog.linked.opt.aa, line 417
    // matrix_in
    $ioport $in [RPIPE_matrix_in_877_inst] (matrix_in) (iNsTr_30_878)  $fullrate 
    $buffering $out RPIPE_matrix_in_877_inst iNsTr_30_878 2
    // 			->(scevgep) := iNsTr_30
    //  file prog.linked.opt.aa, line 418
    // ->(scevgep)
    &/ [ptr_deref_880_base_resize] (scevgep_875) (ptr_deref_880_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_880_root_address_inst] (ptr_deref_880_resized_base_address) (ptr_deref_880_root_address) 
    $flowthrough 
    &/ [ptr_deref_880_addr_0] (ptr_deref_880_root_address) (ptr_deref_880_word_address_0) 
    $flowthrough 
    $store [ptr_deref_880_store_0] $to memory_space_8 (ptr_deref_880_word_address_0 ptr_deref_880_data_0) 
    $buffering  $in ptr_deref_880_store_0 ptr_deref_880_word_address_0 2
    $buffering  $in ptr_deref_880_store_0 ptr_deref_880_data_0 2
    $delay ptr_deref_880_store_0 4
    &/ [ptr_deref_880_gather_scatter] (iNsTr_30_878) (ptr_deref_880_data_0) 
    $flowthrough 
    // 			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 419
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_887_inst] (indvar_859 type_cast_886_wire_constant) (indvarx_xnext_888)    $fullrate
    $buffering  $out ADD_u64_u64_887_inst indvarx_xnext_888 2
    $delay ADD_u64_u64_887_inst 1
    // 			exitcond2 := (indvarx_xnext == tmp1)
    //  file prog.linked.opt.aa, line 420
    // (indvarx_xnext == tmp1)
    ==[EQ_u64_u1_892_inst] (indvarx_xnext_888 tmp1_848) (exitcond2_893)    $fullrate
    $buffering  $out EQ_u64_u1_892_inst exitcond2_893 1
    $delay EQ_u64_u1_892_inst 1
    // 			bb_4_xx_x_crit_edgex_xloopexit_taken := exitcond2
    //  file prog.linked.opt.aa, line 421
    # := [W_bb_4_xx_x_crit_edgex_xloopexit_taken_894_inst] (exitcond2_893) (bb_4_xx_x_crit_edgex_xloopexit_taken_896)    $fullrate
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 0
    ==0? [if_stmt_900_branch] (bb_4_xx_x_crit_edgex_xloopexit_taken_896)
    // 		iNsTr_24 := rate_in
    //  file prog.linked.opt.aa, line 431
    // rate_in
    $ioport $in [RPIPE_rate_in_908_inst] (rate_in) (iNsTr_24_909) 
    // 		rate := iNsTr_24
    //  file prog.linked.opt.aa, line 432
    // rate
    $store [STORE_rate_910_store_0] $to memory_space_13 (STORE_rate_910_word_address_0 STORE_rate_910_data_0) 
    $delay STORE_rate_910_store_0 4
    &/ [STORE_rate_910_gather_scatter] (iNsTr_24_909) (STORE_rate_910_data_0) 
    $flowthrough 
  }
  // end data-path
  // 		iNsTr_1 := maxNitr_in
  //  file prog.linked.opt.aa, line 366
  // maxNitr_in
  RPIPE_maxNitr_in_731_inst <=> (branch_block_stmt_729/assign_stmt_732/RPIPE_maxNitr_in_731_Sample/rr branch_block_stmt_729/assign_stmt_732/RPIPE_maxNitr_in_731_Update/cr) (branch_block_stmt_729/assign_stmt_732/RPIPE_maxNitr_in_731_Sample/ra branch_block_stmt_729/assign_stmt_732/RPIPE_maxNitr_in_731_Update/ca)
  // 		maxNitr := iNsTr_1
  //  file prog.linked.opt.aa, line 367
  // iNsTr_1
  // maxNitr
  STORE_maxNitr_733_gather_scatter <=> (branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Sample/STORE_maxNitr_733_Split/split_req) (branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Sample/STORE_maxNitr_733_Split/split_ack)
  STORE_maxNitr_733_store_0 <=> (branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_735/STORE_maxNitr_733_Update/word_access_complete/word_0/ca)
  // 		iNsTr_4 := ebbyNo_in
  //  file prog.linked.opt.aa, line 368
  // ebbyNo_in
  RPIPE_ebbyNo_in_737_inst <=> (branch_block_stmt_729/assign_stmt_738/RPIPE_ebbyNo_in_737_Sample/rr branch_block_stmt_729/assign_stmt_738/RPIPE_ebbyNo_in_737_Update/cr) (branch_block_stmt_729/assign_stmt_738/RPIPE_ebbyNo_in_737_Sample/ra branch_block_stmt_729/assign_stmt_738/RPIPE_ebbyNo_in_737_Update/ca)
  // 		ebbyNo := iNsTr_4
  //  file prog.linked.opt.aa, line 369
  // iNsTr_4
  // ebbyNo
  STORE_ebbyNo_739_gather_scatter <=> (branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Sample/STORE_ebbyNo_739_Split/split_req) (branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Sample/STORE_ebbyNo_739_Split/split_ack)
  STORE_ebbyNo_739_store_0 <=> (branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_741/STORE_ebbyNo_739_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 371
  // ($cast ($uint<64>) indvarx_xnext8 )
  type_cast_750_inst <=> (branch_block_stmt_729/bb_1_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_sources/type_cast_750/SplitProtocol/Sample/rr branch_block_stmt_729/bb_1_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_sources/type_cast_750/SplitProtocol/Update/cr) (branch_block_stmt_729/bb_1_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_sources/type_cast_750/SplitProtocol/Sample/ra branch_block_stmt_729/bb_1_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_sources/type_cast_750/SplitProtocol/Update/ca)
  phi_stmt_744 <=> (branch_block_stmt_729/bbx_xnph3_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_req branch_block_stmt_729/bb_1_bb_1_PhiReq/phi_stmt_744/phi_stmt_744_req) (branch_block_stmt_729/merge_stmt_743_PhiAck/phi_stmt_744_ack)
  // 		scevgep10 := @(mem[indvar7])
  //  file prog.linked.opt.aa, line 374
  // indvar7
  array_obj_ref_754_index_0_resize <=> (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_index_resize_0/index_resize_req) (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_index_resize_0/index_resize_ack)
  array_obj_ref_754_index_0_rename <=> (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_index_scale_0/scale_rename_req) (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_index_scale_0/scale_rename_ack)
  array_obj_ref_754_index_offset <=> (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_final_index_sum_regn/req) (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_final_index_sum_regn/ack)
  array_obj_ref_754_root_address_inst <=> (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_base_plus_offset/sum_rename_req) (branch_block_stmt_729/assign_stmt_756/array_obj_ref_754_base_plus_offset/sum_rename_ack)
  addr_of_755_final_reg <=> (branch_block_stmt_729/assign_stmt_756/addr_of_755_request/req branch_block_stmt_729/assign_stmt_756/addr_of_755_complete/req) (branch_block_stmt_729/assign_stmt_756/addr_of_755_request/ack branch_block_stmt_729/assign_stmt_756/addr_of_755_complete/ack)
  // 		iNsTr_8 := matrix_in
  //  file prog.linked.opt.aa, line 375
  // matrix_in
  RPIPE_matrix_in_758_inst <=> (branch_block_stmt_729/assign_stmt_759/RPIPE_matrix_in_758_Sample/rr branch_block_stmt_729/assign_stmt_759/RPIPE_matrix_in_758_Update/cr) (branch_block_stmt_729/assign_stmt_759/RPIPE_matrix_in_758_Sample/ra branch_block_stmt_729/assign_stmt_759/RPIPE_matrix_in_758_Update/ca)
  // 		->(scevgep10) := iNsTr_8
  //  file prog.linked.opt.aa, line 376
  // iNsTr_8
  // scevgep10
  ptr_deref_761_base_resize <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_base_addr_resize/base_resize_req) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_base_addr_resize/base_resize_ack)
  ptr_deref_761_root_address_inst <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_base_plus_offset/sum_rename_req) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_base_plus_offset/sum_rename_ack)
  ptr_deref_761_addr_0 <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_word_addrgen/root_register_req) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_word_addrgen/root_register_ack)
  ptr_deref_761_gather_scatter <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Sample/ptr_deref_761_Split/split_req) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Sample/ptr_deref_761_Split/split_ack)
  ptr_deref_761_store_0 <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ptr_deref_761_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext8 := (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 377
  // (indvar7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar7
  ADD_u64_u64_768_inst <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ADD_u64_u64_768_Sample/rr branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ADD_u64_u64_768_Update/cr) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ADD_u64_u64_768_Sample/ra branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/ADD_u64_u64_768_Update/ca)
  // 		exitcond := (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 378
  // (indvarx_xnext8 == ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvarx_xnext8
  EQ_u64_u1_774_inst <=> (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/EQ_u64_u1_774_Sample/rr branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/EQ_u64_u1_774_Update/cr) (branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/EQ_u64_u1_774_Sample/ra branch_block_stmt_729/assign_stmt_763_to_assign_stmt_775/EQ_u64_u1_774_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 379
  if_stmt_776_branch <=> (branch_block_stmt_729/if_stmt_776_eval_test/branch_req) (branch_block_stmt_729/if_stmt_776_else_link/else_choice_transition branch_block_stmt_729/if_stmt_776_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 384
  // 		iNsTr_12 := ->(iNsTr_11)
  //  file prog.linked.opt.aa, line 387
  // iNsTr_11
  ptr_deref_791_base_resize <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_base_addr_resize/base_resize_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_base_addr_resize/base_resize_ack)
  ptr_deref_791_root_address_inst <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_base_plus_offset/sum_rename_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_base_plus_offset/sum_rename_ack)
  ptr_deref_791_addr_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_word_addrgen/root_register_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_word_addrgen/root_register_ack)
  ptr_deref_791_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Update/ptr_deref_791_Merge/merge_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Update/ptr_deref_791_Merge/merge_ack)
  ptr_deref_791_load_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_791_Update/word_access_complete/word_0/ca)
  // 		nrows := iNsTr_12
  //  file prog.linked.opt.aa, line 388
  // iNsTr_12
  // nrows
  STORE_nrows_793_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Sample/STORE_nrows_793_Split/split_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Sample/STORE_nrows_793_Split/split_ack)
  STORE_nrows_793_store_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_nrows_793_Update/word_access_complete/word_0/ca)
  // 		iNsTr_15 := ->(iNsTr_14)
  //  file prog.linked.opt.aa, line 390
  // iNsTr_14
  ptr_deref_804_base_resize <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_base_addr_resize/base_resize_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_base_addr_resize/base_resize_ack)
  ptr_deref_804_root_address_inst <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_base_plus_offset/sum_rename_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_base_plus_offset/sum_rename_ack)
  ptr_deref_804_addr_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_word_addrgen/root_register_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_word_addrgen/root_register_ack)
  ptr_deref_804_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Update/ptr_deref_804_Merge/merge_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Update/ptr_deref_804_Merge/merge_ack)
  ptr_deref_804_load_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_804_Update/word_access_complete/word_0/ca)
  // 		ncols := iNsTr_15
  //  file prog.linked.opt.aa, line 391
  // iNsTr_15
  // ncols
  STORE_ncols_806_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Sample/STORE_ncols_806_Split/split_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Sample/STORE_ncols_806_Split/split_ack)
  STORE_ncols_806_store_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncols_806_Update/word_access_complete/word_0/ca)
  // 		iNsTr_18 := ->(iNsTr_17)
  //  file prog.linked.opt.aa, line 393
  // iNsTr_17
  ptr_deref_817_base_resize <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_base_addr_resize/base_resize_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_base_addr_resize/base_resize_ack)
  ptr_deref_817_root_address_inst <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_base_plus_offset/sum_rename_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_base_plus_offset/sum_rename_ack)
  ptr_deref_817_addr_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_word_addrgen/root_register_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_word_addrgen/root_register_ack)
  ptr_deref_817_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Update/ptr_deref_817_Merge/merge_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Update/ptr_deref_817_Merge/merge_ack)
  ptr_deref_817_load_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/ptr_deref_817_Update/word_access_complete/word_0/ca)
  // 		ncol_ind := iNsTr_18
  //  file prog.linked.opt.aa, line 394
  // iNsTr_18
  // ncol_ind
  STORE_ncol_ind_819_gather_scatter <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Sample/STORE_ncol_ind_819_Split/split_req) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Sample/STORE_ncol_ind_819_Split/split_ack)
  STORE_ncol_ind_819_store_0 <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/STORE_ncol_ind_819_Update/word_access_complete/word_0/ca)
  // 		iNsTr_20 := (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
  //  file prog.linked.opt.aa, line 395
  // (($bitcast ($uint<16>) _b0000000000000000  ) - iNsTr_18)
  // iNsTr_18
  SUB_u16_u16_826_inst <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/SUB_u16_u16_826_Sample/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/SUB_u16_u16_826_Update/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/SUB_u16_u16_826_Sample/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/SUB_u16_u16_826_Update/ca)
  // 		iNsTr_21 := (iNsTr_12 == iNsTr_20)
  //  file prog.linked.opt.aa, line 396
  // (iNsTr_12 == iNsTr_20)
  // iNsTr_12
  // iNsTr_20
  EQ_u16_u1_831_inst <=> (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/EQ_u16_u1_831_Sample/rr branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/EQ_u16_u1_831_Update/cr) (branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/EQ_u16_u1_831_Sample/ra branch_block_stmt_729/assign_stmt_788_to_assign_stmt_832/EQ_u16_u1_831_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 397
  if_stmt_833_branch <=> (branch_block_stmt_729/if_stmt_833_eval_test/branch_req) (branch_block_stmt_729/if_stmt_833_else_link/else_choice_transition branch_block_stmt_729/if_stmt_833_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 402
  // 		tmp := (iNsTr_12 + iNsTr_18)
  //  file prog.linked.opt.aa, line 404
  // (iNsTr_12 + iNsTr_18)
  // iNsTr_12
  // iNsTr_18
  ADD_u16_u16_843_inst <=> (branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/ADD_u16_u16_843_Sample/rr branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/ADD_u16_u16_843_Update/cr) (branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/ADD_u16_u16_843_Sample/ra branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/ADD_u16_u16_843_Update/ca)
  // 		tmp1 := ($cast ($uint<64>) tmp )
  //  file prog.linked.opt.aa, line 405
  // tmp
  // ($cast ($uint<64>) tmp )
  type_cast_847_inst <=> (branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/type_cast_847_Sample/rr branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/type_cast_847_Update/cr) (branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/type_cast_847_Sample/ra branch_block_stmt_729/assign_stmt_844_to_assign_stmt_848/type_cast_847_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 407
  phi_stmt_851 <=> (branch_block_stmt_729/bbx_xnph_bb_4_PhiReq/phi_stmt_851/phi_stmt_851_req) (branch_block_stmt_729/merge_stmt_850_PhiAck/phi_stmt_851_ack)
  // CP-DP links for do-while  do_while_stmt_857
  //  file prog.linked.opt.aa, line 410
  phi_stmt_859 <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/phi_stmt_859_loopback_sample_req branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/phi_stmt_859_entry_sample_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/phi_stmt_859_phi_mux_ack)
  // indvarx_xnext
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_862_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/type_cast_862_Sample/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/type_cast_862_Update/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/type_cast_862_Sample/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/type_cast_862_Update/ca)
  indvar_at_entry_851_863_buf <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/R_indvar_at_entry_863_Sample/req branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/R_indvar_at_entry_863_Update/req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/R_indvar_at_entry_863_Sample/ack branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/R_indvar_at_entry_863_Update/ack)
  // 			tmp3 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 415
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvar
  ADD_u64_u64_869_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_869_Sample/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_869_Update/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_869_Sample/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_869_Update/ca)
  // 			scevgep := @(mem[tmp3])
  //  file prog.linked.opt.aa, line 416
  // tmp3
  array_obj_ref_873_index_0_resize <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_index_resize_0/index_resize_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_index_resize_0/index_resize_ack)
  array_obj_ref_873_index_0_rename <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_index_scale_0/scale_rename_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_index_scale_0/scale_rename_ack)
  array_obj_ref_873_index_offset <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_final_index_sum_regn/req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_final_index_sum_regn/ack)
  array_obj_ref_873_root_address_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_base_plus_offset/sum_rename_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/array_obj_ref_873_base_plus_offset/sum_rename_ack)
  addr_of_874_final_reg <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/addr_of_874_request/req branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/addr_of_874_complete/req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/addr_of_874_request/ack branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/addr_of_874_complete/ack)
  // 			iNsTr_30 := matrix_in
  //  file prog.linked.opt.aa, line 417
  // matrix_in
  RPIPE_matrix_in_877_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/RPIPE_matrix_in_877_Sample/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/RPIPE_matrix_in_877_Update/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/RPIPE_matrix_in_877_Sample/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/RPIPE_matrix_in_877_Update/ca)
  // 			->(scevgep) := iNsTr_30
  //  file prog.linked.opt.aa, line 418
  // iNsTr_30
  // scevgep
  ptr_deref_880_base_resize <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_base_addr_resize/base_resize_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_base_addr_resize/base_resize_ack)
  ptr_deref_880_root_address_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_base_plus_offset/sum_rename_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_base_plus_offset/sum_rename_ack)
  ptr_deref_880_addr_0 <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_word_addrgen/root_register_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_word_addrgen/root_register_ack)
  ptr_deref_880_gather_scatter <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Sample/ptr_deref_880_Split/split_req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Sample/ptr_deref_880_Split/split_ack)
  ptr_deref_880_store_0 <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Sample/word_access_start/word_0/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Sample/word_access_start/word_0/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ptr_deref_880_Update/word_access_complete/word_0/ca)
  // 			indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )) $buffering 2
  //  file prog.linked.opt.aa, line 419
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_887_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_887_Sample/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_887_Update/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_887_Sample/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/ADD_u64_u64_887_Update/ca)
  // 			exitcond2 := (indvarx_xnext == tmp1)
  //  file prog.linked.opt.aa, line 420
  // (indvarx_xnext == tmp1)
  // indvarx_xnext
  // tmp1
  EQ_u64_u1_892_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/EQ_u64_u1_892_Sample/rr branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/EQ_u64_u1_892_Update/cr) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/EQ_u64_u1_892_Sample/ra branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/EQ_u64_u1_892_Update/ca)
  // 			bb_4_xx_x_crit_edgex_xloopexit_taken := exitcond2
  //  file prog.linked.opt.aa, line 421
  // exitcond2
  W_bb_4_xx_x_crit_edgex_xloopexit_taken_894_inst <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/assign_stmt_896_Sample/req branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/assign_stmt_896_Update/req) (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/assign_stmt_896_Sample/ack branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/assign_stmt_896_Update/ack)
  // exitcond2
  do_while_stmt_857_branch <=> (branch_block_stmt_729/do_while_stmt_857/do_while_stmt_857_loop_body/condition_evaluated) (branch_block_stmt_729/do_while_stmt_857/loop_exit/ack branch_block_stmt_729/do_while_stmt_857/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 0
  if_stmt_900_branch <=> (branch_block_stmt_729/if_stmt_900_eval_test/branch_req) (branch_block_stmt_729/if_stmt_900_else_link/else_choice_transition branch_block_stmt_729/if_stmt_900_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 426
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 429
  // 		iNsTr_24 := rate_in
  //  file prog.linked.opt.aa, line 431
  // rate_in
  RPIPE_rate_in_908_inst <=> (branch_block_stmt_729/assign_stmt_909/RPIPE_rate_in_908_Sample/rr branch_block_stmt_729/assign_stmt_909/RPIPE_rate_in_908_Update/cr) (branch_block_stmt_729/assign_stmt_909/RPIPE_rate_in_908_Sample/ra branch_block_stmt_729/assign_stmt_909/RPIPE_rate_in_908_Update/ca)
  // 		rate := iNsTr_24
  //  file prog.linked.opt.aa, line 432
  // iNsTr_24
  // rate
  STORE_rate_910_gather_scatter <=> (branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Sample/STORE_rate_910_Split/split_req) (branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Sample/STORE_rate_910_Split/split_ack)
  STORE_rate_910_store_0 <=> (branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Sample/word_access_start/word_0/rr branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Update/word_access_complete/word_0/cr) (branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Sample/word_access_start/word_0/ra branch_block_stmt_729/assign_stmt_912/STORE_rate_910_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 434
}
$module [initializeExtrinsicInfo] 
{
  // pipe-declarations for block %initializeExtrinsicInfo
  //  file prog.linked.opt.aa, line 438
  // pipe-declarations for block %initializeExtrinsicInfo%body
  //  file prog.linked.opt.aa, line 443
  // pipe-declarations for block %initializeExtrinsicInfo%body%
  //  file prog.linked.opt.aa, line 452
  // pipe-declarations for block %initializeExtrinsicInfo%body%
  //  file prog.linked.opt.aa, line 460
  // pipe-declarations for block %initializeExtrinsicInfo%body%
  //  file prog.linked.opt.aa, line 472
  // pipe-declarations for block %initializeExtrinsicInfo%body%
  //  file prog.linked.opt.aa, line 475
  // pipe-declarations for block %initializeExtrinsicInfo%body%
  //  file prog.linked.opt.aa, line 478
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_918] // Branch Block  file prog.linked.opt.aa, line 443
    {
      $P [branch_block_stmt_918__entry__]
      branch_block_stmt_918__entry__ <-| ($entry)
      $P [branch_block_stmt_918__exit__]
      branch_block_stmt_918__exit__ |-> ($exit)
      $P [assign_stmt_921_to_assign_stmt_927__entry__] 
      $P [assign_stmt_921_to_assign_stmt_927__exit__] 
      $P [if_stmt_928__entry__] 
      $P [if_stmt_928__exit__] 
      $P [merge_stmt_934__entry__] 
      $P [merge_stmt_934__exit__] 
      $P [assign_stmt_940_to_assign_stmt_963__entry__] 
      $P [assign_stmt_940_to_assign_stmt_963__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_965__exit__] 
      $P [assign_stmt_978_to_assign_stmt_994__entry__] 
      $P [assign_stmt_978_to_assign_stmt_994__exit__] 
      $P [if_stmt_995__entry__] 
      $P [if_stmt_995__exit__] 
      $P [merge_stmt_1001__entry__] 
      $P [merge_stmt_1001__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_1003__exit__] 
      $P [return__]
      $P [merge_stmt_1005__exit__] 
      ::[assign_stmt_921_to_assign_stmt_927] 
      {
        // start:  		iNsTr_0 := ncol_ind
        //  file prog.linked.opt.aa, line 445
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_920_sample_start_] 
        $T[LOAD_ncol_ind_920_sample_completed_] 
        $T[LOAD_ncol_ind_920_update_start_] 
        $T[LOAD_ncol_ind_920_update_completed_] 
        $T[LOAD_ncol_ind_920_word_address_calculated] 
        $T[LOAD_ncol_ind_920_root_address_calculated] 
        LOAD_ncol_ind_920_word_address_calculated <-& (LOAD_ncol_ind_920_root_address_calculated)
        ;;[LOAD_ncol_ind_920_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_920_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_920_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_920_sample_start_ <-& (LOAD_ncol_ind_920_word_address_calculated)
        LOAD_ncol_ind_920_sample_start_ &-> (LOAD_ncol_ind_920_Sample)
        LOAD_ncol_ind_920_sample_completed_ <-& (LOAD_ncol_ind_920_Sample)
        LOAD_ncol_ind_920_sample_completed_ &-> ($null)
        LOAD_ncol_ind_920_update_start_ &-> (LOAD_ncol_ind_920_Update)
        LOAD_ncol_ind_920_update_completed_ <-& (LOAD_ncol_ind_920_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncol_ind
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 446
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_926_sample_start_] 
        $T[EQ_u16_u1_926_sample_completed_] 
        $T[EQ_u16_u1_926_update_start_] 
        $T[EQ_u16_u1_926_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_926_sample_start_
        EQ_u16_u1_926_sample_start_ <-& (LOAD_ncol_ind_920_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_926_sample_start_
        ;;[EQ_u16_u1_926_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_926_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_926_sample_start_ &-> (EQ_u16_u1_926_Sample)
        EQ_u16_u1_926_sample_completed_ <-& (EQ_u16_u1_926_Sample)
        EQ_u16_u1_926_sample_completed_ &-> ($null)
        EQ_u16_u1_926_update_start_ &-> (EQ_u16_u1_926_Update)
        EQ_u16_u1_926_update_completed_ <-& (EQ_u16_u1_926_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_921_to_assign_stmt_927__entry__ |-> (assign_stmt_921_to_assign_stmt_927)
      assign_stmt_921_to_assign_stmt_927__exit__ <-| (assign_stmt_921_to_assign_stmt_927)
      // if-statement  
      //  file prog.linked.opt.aa, line 447
      ;;[if_stmt_928_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_928__entry__ |-> (if_stmt_928_dead_link)
      if_stmt_928__exit__ <-| (if_stmt_928_dead_link)
      ;;[if_stmt_928_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_928__entry__ |-> (if_stmt_928_eval_test)
      $P [R_iNsTr_1_929_place]
      R_iNsTr_1_929_place <-| (if_stmt_928_eval_test)
      ;;[if_stmt_928_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_928_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_929_place |-> (if_stmt_928_if_link if_stmt_928_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_928_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_928_else_link)
      ::[assign_stmt_940_to_assign_stmt_963] 
      {
        // start:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 454
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_939_sample_start_] 
        $T[UGT_u16_u1_939_sample_completed_] 
        $T[UGT_u16_u1_939_update_start_] 
        $T[UGT_u16_u1_939_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_939_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_939_sample_start_
        ;;[UGT_u16_u1_939_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_939_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_939_sample_start_ &-> (UGT_u16_u1_939_Sample)
        UGT_u16_u1_939_sample_completed_ <-& (UGT_u16_u1_939_Sample)
        UGT_u16_u1_939_sample_completed_ &-> ($null)
        UGT_u16_u1_939_update_start_ &-> (UGT_u16_u1_939_Update)
        UGT_u16_u1_939_update_completed_ <-& (UGT_u16_u1_939_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 455
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_945_sample_start_] 
        $T[ADD_u16_u16_945_sample_completed_] 
        $T[ADD_u16_u16_945_update_start_] 
        $T[ADD_u16_u16_945_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_945_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_945_sample_start_
        ;;[ADD_u16_u16_945_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_945_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_945_sample_start_ &-> (ADD_u16_u16_945_Sample)
        ADD_u16_u16_945_sample_completed_ <-& (ADD_u16_u16_945_Sample)
        ADD_u16_u16_945_sample_completed_ &-> ($null)
        ADD_u16_u16_945_update_start_ &-> (ADD_u16_u16_945_Update)
        ADD_u16_u16_945_update_completed_ <-& (ADD_u16_u16_945_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 456
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_949_sample_start_] 
        $T[type_cast_949_sample_completed_] 
        $T[type_cast_949_update_start_] 
        $T[type_cast_949_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_949_sample_start_
        type_cast_949_sample_start_ <-& (ADD_u16_u16_945_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_949_sample_start_
        ;;[type_cast_949_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_949_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_949_sample_start_ &-> (type_cast_949_Sample)
        type_cast_949_sample_completed_ <-& (type_cast_949_Sample)
        type_cast_949_sample_completed_ &-> ($null)
        type_cast_949_update_start_ &-> (type_cast_949_Update)
        type_cast_949_update_completed_ <-& (type_cast_949_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop5 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 457
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_955_sample_start_] 
        $T[ADD_u64_u64_955_sample_completed_] 
        $T[ADD_u64_u64_955_update_start_] 
        $T[ADD_u64_u64_955_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_955_sample_start_
        ADD_u64_u64_955_sample_start_ <-& (type_cast_949_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_955_sample_start_
        ;;[ADD_u64_u64_955_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_955_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_955_sample_start_ &-> (ADD_u64_u64_955_Sample)
        ADD_u64_u64_955_sample_completed_ <-& (ADD_u64_u64_955_Sample)
        ADD_u64_u64_955_sample_completed_ &-> ($null)
        ADD_u64_u64_955_update_start_ &-> (ADD_u64_u64_955_Update)
        ADD_u64_u64_955_update_completed_ <-& (ADD_u64_u64_955_Update)
        // Target expression
        // (as target) xx_xop5
        // start: WAR dependencies for xx_xop5
        // done: WAR dependencies for xx_xop5
        // end:  		xx_xop5 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 458
        // Source expression
        // ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_962_sample_start_] 
        $T[MUX_962_sample_completed_] 
        $T[MUX_962_update_start_] 
        $T[MUX_962_update_completed_] 
        // tmp
        // xx_xop5
        // start: Forward dependencies from tmp to transition MUX_962_sample_start_
        MUX_962_sample_start_ <-& (UGT_u16_u1_939_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_962_sample_start_
        // start: Forward dependencies from xx_xop5 to transition MUX_962_sample_start_
        MUX_962_sample_start_ <-& (ADD_u64_u64_955_update_completed_)
        // done: Forward dependencies from xx_xop5 to transition MUX_962_sample_start_
        ;;[MUX_962_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_962_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_962_sample_start_ &-> (MUX_962_start)
        MUX_962_sample_completed_ <-& (MUX_962_start)
        MUX_962_update_start_ &-> (MUX_962_complete)
        MUX_962_update_completed_ <-& (MUX_962_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_940_to_assign_stmt_963__entry__ |-> (assign_stmt_940_to_assign_stmt_963)
      assign_stmt_940_to_assign_stmt_963__exit__ <-| (assign_stmt_940_to_assign_stmt_963)
      ::[assign_stmt_978_to_assign_stmt_994] 
      {
        // start:  		scevgep := @(ext_info[indvar])
        //  file prog.linked.opt.aa, line 463
        // Source expression
        // @(ext_info[indvar])
        $T[addr_of_977_sample_start_] 
        $T[addr_of_977_sample_completed_] 
        $T[addr_of_977_update_start_] 
        $T[addr_of_977_update_completed_] 
        $T[array_obj_ref_976_root_address_calculated] 
        $T[array_obj_ref_976_offset_calculated] 
        $T[array_obj_ref_976_index_resized_0] 
        $T[array_obj_ref_976_index_scaled_0] 
        $T[array_obj_ref_976_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_976_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_976_index_computed_0
        ;;[array_obj_ref_976_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_976_index_computed_0 &-> (array_obj_ref_976_index_resize_0)
        array_obj_ref_976_index_resized_0 <-& (array_obj_ref_976_index_resize_0)
        ;;[array_obj_ref_976_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_976_index_resized_0 &-> (array_obj_ref_976_index_scale_0)
        array_obj_ref_976_index_scaled_0 <-& (array_obj_ref_976_index_scale_0)
        ;;[array_obj_ref_976_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_976_index_scaled_0 &-> (array_obj_ref_976_final_index_sum_regn)
        array_obj_ref_976_offset_calculated <-& (array_obj_ref_976_final_index_sum_regn)
        ;;[array_obj_ref_976_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_976_offset_calculated &-> (array_obj_ref_976_base_plus_offset)
        array_obj_ref_976_root_address_calculated <-& (array_obj_ref_976_base_plus_offset)
        ;;[addr_of_977_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_977_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_977_sample_start_ <-& (array_obj_ref_976_root_address_calculated)
        addr_of_977_sample_start_ &-> (addr_of_977_request)
        addr_of_977_sample_completed_ <-& (addr_of_977_request)
        addr_of_977_update_start_ &-> (addr_of_977_complete)
        addr_of_977_update_completed_ <-& (addr_of_977_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(ext_info[indvar])
        // start:  		->(scevgep) := ($bitcast ($float<8,23>) _h0  )
        //  file prog.linked.opt.aa, line 464
        // Target expression
        // ->(scevgep)
        $T[ptr_deref_980_sample_start_] 
        $T[ptr_deref_980_sample_completed_] 
        $T[ptr_deref_980_update_start_] 
        $T[ptr_deref_980_update_completed_] 
        $T[ptr_deref_980_base_address_calculated] 
        // scevgep
        $T[ptr_deref_980_word_address_calculated] 
        $T[ptr_deref_980_root_address_calculated] 
        $T[ptr_deref_980_base_address_resized] 
        ;;[ptr_deref_980_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_980_base_address_calculated &-> (ptr_deref_980_base_addr_resize)
        ptr_deref_980_base_address_resized <-& (ptr_deref_980_base_addr_resize)
        ;;[ptr_deref_980_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_980_base_address_resized &-> (ptr_deref_980_base_plus_offset)
        ptr_deref_980_root_address_calculated <-& (ptr_deref_980_base_plus_offset)
        ;;[ptr_deref_980_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_980_root_address_calculated &-> (ptr_deref_980_word_addrgen)
        ptr_deref_980_word_address_calculated <-& (ptr_deref_980_word_addrgen)
        ;;[ptr_deref_980_Sample] 
        {
          ;;[ptr_deref_980_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_980_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_980_sample_start_ <-& (ptr_deref_980_word_address_calculated)
        ptr_deref_980_sample_start_ &-> (ptr_deref_980_Sample)
        ptr_deref_980_sample_completed_ <-& (ptr_deref_980_Sample)
        ptr_deref_980_sample_completed_ &-> ($null)
        ptr_deref_980_update_start_ &-> (ptr_deref_980_Update)
        ptr_deref_980_update_completed_ <-& (ptr_deref_980_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_980_base_address_calculated
        ptr_deref_980_base_address_calculated <-& (addr_of_977_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_980_base_address_calculated
        ptr_deref_980_sample_start_ <-& (ptr_deref_980_base_address_calculated)
        // end:  		->(scevgep) := ($bitcast ($float<8,23>) _h0  )
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 465
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_988_sample_start_] 
        $T[ADD_u64_u64_988_sample_completed_] 
        $T[ADD_u64_u64_988_update_start_] 
        $T[ADD_u64_u64_988_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_988_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_988_sample_start_
        ;;[ADD_u64_u64_988_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_988_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_988_sample_start_ &-> (ADD_u64_u64_988_Sample)
        ADD_u64_u64_988_sample_completed_ <-& (ADD_u64_u64_988_Sample)
        ADD_u64_u64_988_sample_completed_ &-> ($null)
        ADD_u64_u64_988_update_start_ &-> (ADD_u64_u64_988_Update)
        ADD_u64_u64_988_update_completed_ <-& (ADD_u64_u64_988_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 466
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_993_sample_start_] 
        $T[EQ_u64_u1_993_sample_completed_] 
        $T[EQ_u64_u1_993_update_start_] 
        $T[EQ_u64_u1_993_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_993_sample_start_
        EQ_u64_u1_993_sample_start_ <-& (ADD_u64_u64_988_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_993_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_993_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_993_sample_start_
        ;;[EQ_u64_u1_993_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_993_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_993_sample_start_ &-> (EQ_u64_u1_993_Sample)
        EQ_u64_u1_993_sample_completed_ <-& (EQ_u64_u1_993_Sample)
        EQ_u64_u1_993_sample_completed_ &-> ($null)
        EQ_u64_u1_993_update_start_ &-> (EQ_u64_u1_993_Update)
        EQ_u64_u1_993_update_completed_ <-& (EQ_u64_u1_993_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
      }
      assign_stmt_978_to_assign_stmt_994__entry__ |-> (assign_stmt_978_to_assign_stmt_994)
      assign_stmt_978_to_assign_stmt_994__exit__ <-| (assign_stmt_978_to_assign_stmt_994)
      // if-statement  
      //  file prog.linked.opt.aa, line 467
      ;;[if_stmt_995_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_995__entry__ |-> (if_stmt_995_dead_link)
      if_stmt_995__exit__ <-| (if_stmt_995_dead_link)
      ;;[if_stmt_995_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_995__entry__ |-> (if_stmt_995_eval_test)
      $P [R_exitcond1_996_place]
      R_exitcond1_996_place <-| (if_stmt_995_eval_test)
      ;;[if_stmt_995_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_995_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_996_place |-> (if_stmt_995_if_link if_stmt_995_else_link)
      $P [bb_2_xx_x_crit_edgex_xloopexit]
      bb_2_xx_x_crit_edgex_xloopexit <-| (if_stmt_995_if_link)
      $P [bb_2_bb_2]
      bb_2_bb_2 <-| (if_stmt_995_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 452
      ;;[merge_stmt_934_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_934__entry__ |-> (merge_stmt_934_dead_link)
      merge_stmt_934__exit__ <-| (merge_stmt_934_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 452  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_934_PhiReqMerge] 
      merge_stmt_934_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_934_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_934_PhiReqMerge |-> (merge_stmt_934_PhiAck)
      merge_stmt_934__exit__  <-| (merge_stmt_934_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 452  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 460
      //---------------------   merge statement  file prog.linked.opt.aa, line 460  --------------------------
      ||[bb_2_bb_2_PhiReq] 
      {
        ;;[phi_stmt_966] 
        {
          ||[phi_stmt_966_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_972] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_966_req] 
        }
      }
      bb_2_bb_2 |-> (bb_2_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_966] 
        {
          ||[phi_stmt_966_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_970_konst_delay_trans] $delay
          }
          $T [phi_stmt_966_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_965_PhiReqMerge] 
      merge_stmt_965_PhiReqMerge <-| ( bb_2_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_965_PhiAck] 
      {
        $T [phi_stmt_966_ack] 
      }
      merge_stmt_965_PhiReqMerge |-> (merge_stmt_965_PhiAck)
      merge_stmt_965__exit__  <-| (merge_stmt_965_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 460  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 472
      ;;[merge_stmt_1001_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1001__entry__ |-> (merge_stmt_1001_dead_link)
      merge_stmt_1001__exit__ <-| (merge_stmt_1001_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 472  --------------------------
      ||[bb_2_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_xx_x_crit_edgex_xloopexit |-> (bb_2_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_1001_PhiReqMerge] 
      merge_stmt_1001_PhiReqMerge <-| ( bb_2_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_1001_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1001_PhiReqMerge |-> (merge_stmt_1001_PhiAck)
      merge_stmt_1001__exit__  <-| (merge_stmt_1001_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 472  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 475
      //---------------------   merge statement  file prog.linked.opt.aa, line 475  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_1003_PhiReqMerge] 
      merge_stmt_1003_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_1003_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1003_PhiReqMerge |-> (merge_stmt_1003_PhiAck)
      merge_stmt_1003__exit__  <-| (merge_stmt_1003_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 475  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 478
      //---------------------   merge statement  file prog.linked.opt.aa, line 478  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1005_PhiReqMerge] 
      merge_stmt_1005_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1005_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1005_PhiReqMerge |-> (merge_stmt_1005_PhiAck)
      merge_stmt_1005__exit__  <-| (merge_stmt_1005_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 478  --------------------------
      assign_stmt_921_to_assign_stmt_927__entry__ <-| (branch_block_stmt_918__entry__)
      if_stmt_928__entry__ <-| (assign_stmt_921_to_assign_stmt_927__exit__)
      merge_stmt_934__entry__ <-| (if_stmt_928__exit__)
      assign_stmt_940_to_assign_stmt_963__entry__ <-| (merge_stmt_934__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_940_to_assign_stmt_963__exit__)
      assign_stmt_978_to_assign_stmt_994__entry__ <-| (merge_stmt_965__exit__)
      if_stmt_995__entry__ <-| (assign_stmt_978_to_assign_stmt_994__exit__)
      merge_stmt_1001__entry__ <-| (if_stmt_995__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_1001__exit__)
      return__ <-| (merge_stmt_1003__exit__)
      merge_stmt_1005__exit__ |-> (branch_block_stmt_918__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 452
    // constant-object-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 460
    // constant-object-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 472
    // constant-object-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 475
    // constant-object-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 478
    // constant-object-declarations for block %initializeExtrinsicInfo%body
    //  file prog.linked.opt.aa, line 443
    // constant-object-declarations for block %initializeExtrinsicInfo
    //  file prog.linked.opt.aa, line 438
    // constant-declarations for block %initializeExtrinsicInfo%body
    //  file prog.linked.opt.aa, line 443
    // ncol_ind
    $constant $W[LOAD_ncol_ind_920_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_925_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 447
    // constant-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 452
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_938_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_944_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_954_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_961_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 460
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 461
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_970_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(ext_info[indvar])
    $constant $W[array_obj_ref_976_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_976_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ($bitcast ($float<8,23>) _h0  )
    $constant $W[type_cast_982_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ->(scevgep)
    $constant $W[ptr_deref_980_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_987_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 467
    // constant-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 472
    // constant-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 475
    // constant-declarations for block %initializeExtrinsicInfo%body%
    //  file prog.linked.opt.aa, line 478
    // block %initializeExtrinsicInfo%body
    //  file prog.linked.opt.aa, line 443
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 445
    // ncol_ind
    $W[LOAD_ncol_ind_920_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_921] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 446
    // iNsTr_1
    $W[iNsTr_1_927] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 447
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 454
    // tmp
    $W[tmp_940] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 455
    // xx_xop
    $W[xx_xop_946] : $int<16>
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 456
    // iNsTr_4
    $W[iNsTr_4_950] : $int<64>
    // 		xx_xop5 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 457
    // xx_xop5
    $W[xx_xop5_956] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 458
    // tmp4
    $W[tmp4_963] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 460
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 461
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_972_wire] : $int<64>
    // indvar
    $W[indvar_966] : $int<64>
    // 		scevgep := @(ext_info[indvar])
    //  file prog.linked.opt.aa, line 463
    // @(ext_info[indvar])
    $intermediate $W[R_indvar_975_resized] : $int<10>
    $intermediate $W[R_indvar_975_scaled] : $int<10>
    $intermediate $W[array_obj_ref_976_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_976_root_address] : $int<10>
    // scevgep
    $W[scevgep_978] : $int<32>
    // 		->(scevgep) := ($bitcast ($float<8,23>) _h0  )
    //  file prog.linked.opt.aa, line 464
    // ->(scevgep)
    $intermediate $W[ptr_deref_980_wire] : $float<8,23>
    $intermediate $W[ptr_deref_980_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_980_root_address] : $int<10>
    $W[ptr_deref_980_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_980_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 465
    // indvarx_xnext
    $W[indvarx_xnext_989] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 466
    // exitcond1
    $W[exitcond1_994] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 467
    // datapath-instances for block %initializeExtrinsicInfo%body
    //  file prog.linked.opt.aa, line 443
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 445
    // ncol_ind
    $load [LOAD_ncol_ind_920_load_0] $from memory_space_10 (LOAD_ncol_ind_920_word_address_0) (LOAD_ncol_ind_920_data_0) 
    $delay LOAD_ncol_ind_920_load_0 4
    &/ [LOAD_ncol_ind_920_gather_scatter] (LOAD_ncol_ind_920_data_0) (iNsTr_0_921) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 446
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_926_inst] (iNsTr_0_921 type_cast_925_wire_constant) (iNsTr_1_927)   
    $buffering  $out EQ_u16_u1_926_inst iNsTr_1_927 1
    $delay EQ_u16_u1_926_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 447
    ==0? [if_stmt_928_branch] (iNsTr_1_927)
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 454
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_939_inst] (iNsTr_0_921 type_cast_938_wire_constant) (tmp_940)   
    $buffering  $out UGT_u16_u1_939_inst tmp_940 1
    $delay UGT_u16_u1_939_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 455
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_945_inst] (iNsTr_0_921 type_cast_944_wire_constant) (xx_xop_946)   
    $buffering  $out ADD_u16_u16_945_inst xx_xop_946 1
    $delay ADD_u16_u16_945_inst 1
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 456
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_949_inst] (xx_xop_946) (iNsTr_4_950)   
    $buffering  $out type_cast_949_inst iNsTr_4_950 1
    $delay type_cast_949_inst 1
    // 		xx_xop5 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 457
    // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_955_inst] (iNsTr_4_950 type_cast_954_wire_constant) (xx_xop5_956)   
    $buffering  $out ADD_u64_u64_955_inst xx_xop5_956 1
    $delay ADD_u64_u64_955_inst 1
    // 		tmp4 := ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 458
    // ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_962_inst] (tmp_940 xx_xop5_956 type_cast_961_wire_constant) (tmp4_963) 
    $buffering  $out MUX_962_inst tmp4_963 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 460
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 461
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_972_inst] (indvarx_xnext_989) (type_cast_972_wire)   
    $buffering  $out type_cast_972_inst type_cast_972_wire 1
    $delay type_cast_972_inst 1
    $phi [phi_stmt_966] (type_cast_970_wire_constant type_cast_972_wire) ( indvar_966 ) 
    // 		scevgep := @(ext_info[indvar])
    //  file prog.linked.opt.aa, line 463
    &/ [array_obj_ref_976_index_0_resize] (indvar_966) (R_indvar_975_resized) 
    $flowthrough 
    &/ [array_obj_ref_976_index_0_rename] (R_indvar_975_resized) (R_indvar_975_scaled) 
    $flowthrough 
    &/ [array_obj_ref_976_index_offset] (R_indvar_975_scaled) (array_obj_ref_976_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_976_root_address_inst] (array_obj_ref_976_final_offset) (array_obj_ref_976_root_address) 
    $flowthrough 
    # := [addr_of_977_final_reg] (array_obj_ref_976_root_address) (scevgep_978)   
    $buffering  $out addr_of_977_final_reg scevgep_978 1
    // 		->(scevgep) := ($bitcast ($float<8,23>) _h0  )
    //  file prog.linked.opt.aa, line 464
    // ->(scevgep)
    &/ [ptr_deref_980_base_resize] (scevgep_978) (ptr_deref_980_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_980_root_address_inst] (ptr_deref_980_resized_base_address) (ptr_deref_980_root_address) 
    $flowthrough 
    &/ [ptr_deref_980_addr_0] (ptr_deref_980_root_address) (ptr_deref_980_word_address_0) 
    $flowthrough 
    $store [ptr_deref_980_store_0] $to memory_space_5 (ptr_deref_980_word_address_0 ptr_deref_980_data_0) 
    $delay ptr_deref_980_store_0 4
    &/ [ptr_deref_980_gather_scatter] (type_cast_982_wire_constant) (ptr_deref_980_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 465
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_988_inst] (indvar_966 type_cast_987_wire_constant) (indvarx_xnext_989)   
    $buffering  $out ADD_u64_u64_988_inst indvarx_xnext_989 1
    $delay ADD_u64_u64_988_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 466
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_993_inst] (indvarx_xnext_989 tmp4_963) (exitcond1_994)   
    $buffering  $out EQ_u64_u1_993_inst exitcond1_994 1
    $delay EQ_u64_u1_993_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 467
    ==0? [if_stmt_995_branch] (exitcond1_994)
  }
  // end data-path
  // 		iNsTr_0 := ncol_ind
  //  file prog.linked.opt.aa, line 445
  // ncol_ind
  LOAD_ncol_ind_920_gather_scatter <=> (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Update/LOAD_ncol_ind_920_Merge/merge_req) (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Update/LOAD_ncol_ind_920_Merge/merge_ack)
  LOAD_ncol_ind_920_load_0 <=> (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Sample/word_access_start/word_0/rr branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Update/word_access_complete/word_0/cr) (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Sample/word_access_start/word_0/ra branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/LOAD_ncol_ind_920_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 446
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_926_inst <=> (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/EQ_u16_u1_926_Sample/rr branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/EQ_u16_u1_926_Update/cr) (branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/EQ_u16_u1_926_Sample/ra branch_block_stmt_918/assign_stmt_921_to_assign_stmt_927/EQ_u16_u1_926_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 447
  if_stmt_928_branch <=> (branch_block_stmt_918/if_stmt_928_eval_test/branch_req) (branch_block_stmt_918/if_stmt_928_else_link/else_choice_transition branch_block_stmt_918/if_stmt_928_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 452
  // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 454
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_939_inst <=> (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/UGT_u16_u1_939_Sample/rr branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/UGT_u16_u1_939_Update/cr) (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/UGT_u16_u1_939_Sample/ra branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/UGT_u16_u1_939_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 455
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_945_inst <=> (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u16_u16_945_Sample/rr branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u16_u16_945_Update/cr) (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u16_u16_945_Sample/ra branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u16_u16_945_Update/ca)
  // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 456
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_949_inst <=> (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/type_cast_949_Sample/rr branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/type_cast_949_Update/cr) (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/type_cast_949_Sample/ra branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/type_cast_949_Update/ca)
  // 		xx_xop5 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 457
  // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_4
  ADD_u64_u64_955_inst <=> (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u64_u64_955_Sample/rr branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u64_u64_955_Update/cr) (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u64_u64_955_Sample/ra branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/ADD_u64_u64_955_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 458
  // tmp
  // xx_xop5
  // ( $mux tmp xx_xop5  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_962_inst <=> (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/MUX_962_start/req branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/MUX_962_complete/req) (branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/MUX_962_start/ack branch_block_stmt_918/assign_stmt_940_to_assign_stmt_963/MUX_962_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 460
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_972_inst <=> (branch_block_stmt_918/bb_2_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_sources/type_cast_972/SplitProtocol/Sample/rr branch_block_stmt_918/bb_2_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_sources/type_cast_972/SplitProtocol/Update/cr) (branch_block_stmt_918/bb_2_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_sources/type_cast_972/SplitProtocol/Sample/ra branch_block_stmt_918/bb_2_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_sources/type_cast_972/SplitProtocol/Update/ca)
  phi_stmt_966 <=> (branch_block_stmt_918/bbx_xnph_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_req branch_block_stmt_918/bb_2_bb_2_PhiReq/phi_stmt_966/phi_stmt_966_req) (branch_block_stmt_918/merge_stmt_965_PhiAck/phi_stmt_966_ack)
  // 		scevgep := @(ext_info[indvar])
  //  file prog.linked.opt.aa, line 463
  // indvar
  array_obj_ref_976_index_0_resize <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_index_resize_0/index_resize_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_index_resize_0/index_resize_ack)
  array_obj_ref_976_index_0_rename <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_index_scale_0/scale_rename_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_index_scale_0/scale_rename_ack)
  array_obj_ref_976_index_offset <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_final_index_sum_regn/req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_final_index_sum_regn/ack)
  array_obj_ref_976_root_address_inst <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_base_plus_offset/sum_rename_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/array_obj_ref_976_base_plus_offset/sum_rename_ack)
  addr_of_977_final_reg <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/addr_of_977_request/req branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/addr_of_977_complete/req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/addr_of_977_request/ack branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/addr_of_977_complete/ack)
  // 		->(scevgep) := ($bitcast ($float<8,23>) _h0  )
  //  file prog.linked.opt.aa, line 464
  // scevgep
  ptr_deref_980_base_resize <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_base_addr_resize/base_resize_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_base_addr_resize/base_resize_ack)
  ptr_deref_980_root_address_inst <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_base_plus_offset/sum_rename_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_base_plus_offset/sum_rename_ack)
  ptr_deref_980_addr_0 <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_word_addrgen/root_register_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_word_addrgen/root_register_ack)
  ptr_deref_980_gather_scatter <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Sample/ptr_deref_980_Split/split_req) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Sample/ptr_deref_980_Split/split_ack)
  ptr_deref_980_store_0 <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Sample/word_access_start/word_0/rr branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Update/word_access_complete/word_0/cr) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Sample/word_access_start/word_0/ra branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ptr_deref_980_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 465
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_988_inst <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ADD_u64_u64_988_Sample/rr branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ADD_u64_u64_988_Update/cr) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ADD_u64_u64_988_Sample/ra branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/ADD_u64_u64_988_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 466
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_993_inst <=> (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/EQ_u64_u1_993_Sample/rr branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/EQ_u64_u1_993_Update/cr) (branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/EQ_u64_u1_993_Sample/ra branch_block_stmt_918/assign_stmt_978_to_assign_stmt_994/EQ_u64_u1_993_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 467
  if_stmt_995_branch <=> (branch_block_stmt_918/if_stmt_995_eval_test/branch_req) (branch_block_stmt_918/if_stmt_995_else_link/else_choice_transition branch_block_stmt_918/if_stmt_995_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 472
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 475
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 478
}
$module [initializeMessage] 
{
  // pipe-declarations for block %initializeMessage
  //  file prog.linked.opt.aa, line 482
  // pipe-declarations for block %initializeMessage%body
  //  file prog.linked.opt.aa, line 487
  // pipe-declarations for block %initializeMessage%body%
  //  file prog.linked.opt.aa, line 496
  // pipe-declarations for block %initializeMessage%body%
  //  file prog.linked.opt.aa, line 504
  // pipe-declarations for block %initializeMessage%body%
  //  file prog.linked.opt.aa, line 523
  // pipe-declarations for block %initializeMessage%body%
  //  file prog.linked.opt.aa, line 526
  // pipe-declarations for block %initializeMessage%body%
  //  file prog.linked.opt.aa, line 529
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1009] // Branch Block  file prog.linked.opt.aa, line 487
    {
      $P [branch_block_stmt_1009__entry__]
      branch_block_stmt_1009__entry__ <-| ($entry)
      $P [branch_block_stmt_1009__exit__]
      branch_block_stmt_1009__exit__ |-> ($exit)
      $P [assign_stmt_1012_to_assign_stmt_1018__entry__] 
      $P [assign_stmt_1012_to_assign_stmt_1018__exit__] 
      $P [if_stmt_1019__entry__] 
      $P [if_stmt_1019__exit__] 
      $P [merge_stmt_1025__entry__] 
      $P [merge_stmt_1025__exit__] 
      $P [assign_stmt_1031_to_assign_stmt_1054__entry__] 
      $P [assign_stmt_1031_to_assign_stmt_1054__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_1056__exit__] 
      $P [assign_stmt_1070_to_assign_stmt_1118__entry__] 
      $P [assign_stmt_1070_to_assign_stmt_1118__exit__] 
      $P [if_stmt_1119__entry__] 
      $P [if_stmt_1119__exit__] 
      $P [merge_stmt_1125__entry__] 
      $P [merge_stmt_1125__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_1127__exit__] 
      $P [return__]
      $P [merge_stmt_1129__exit__] 
      ::[assign_stmt_1012_to_assign_stmt_1018] 
      {
        // start:  		iNsTr_0 := ncol_ind
        //  file prog.linked.opt.aa, line 489
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_1011_sample_start_] 
        $T[LOAD_ncol_ind_1011_sample_completed_] 
        $T[LOAD_ncol_ind_1011_update_start_] 
        $T[LOAD_ncol_ind_1011_update_completed_] 
        $T[LOAD_ncol_ind_1011_word_address_calculated] 
        $T[LOAD_ncol_ind_1011_root_address_calculated] 
        LOAD_ncol_ind_1011_word_address_calculated <-& (LOAD_ncol_ind_1011_root_address_calculated)
        ;;[LOAD_ncol_ind_1011_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_1011_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_1011_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_1011_sample_start_ <-& (LOAD_ncol_ind_1011_word_address_calculated)
        LOAD_ncol_ind_1011_sample_start_ &-> (LOAD_ncol_ind_1011_Sample)
        LOAD_ncol_ind_1011_sample_completed_ <-& (LOAD_ncol_ind_1011_Sample)
        LOAD_ncol_ind_1011_sample_completed_ &-> ($null)
        LOAD_ncol_ind_1011_update_start_ &-> (LOAD_ncol_ind_1011_Update)
        LOAD_ncol_ind_1011_update_completed_ <-& (LOAD_ncol_ind_1011_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncol_ind
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 490
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1017_sample_start_] 
        $T[EQ_u16_u1_1017_sample_completed_] 
        $T[EQ_u16_u1_1017_update_start_] 
        $T[EQ_u16_u1_1017_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1017_sample_start_
        EQ_u16_u1_1017_sample_start_ <-& (LOAD_ncol_ind_1011_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1017_sample_start_
        ;;[EQ_u16_u1_1017_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1017_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1017_sample_start_ &-> (EQ_u16_u1_1017_Sample)
        EQ_u16_u1_1017_sample_completed_ <-& (EQ_u16_u1_1017_Sample)
        EQ_u16_u1_1017_sample_completed_ &-> ($null)
        EQ_u16_u1_1017_update_start_ &-> (EQ_u16_u1_1017_Update)
        EQ_u16_u1_1017_update_completed_ <-& (EQ_u16_u1_1017_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1012_to_assign_stmt_1018__entry__ |-> (assign_stmt_1012_to_assign_stmt_1018)
      assign_stmt_1012_to_assign_stmt_1018__exit__ <-| (assign_stmt_1012_to_assign_stmt_1018)
      // if-statement  
      //  file prog.linked.opt.aa, line 491
      ;;[if_stmt_1019_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1019__entry__ |-> (if_stmt_1019_dead_link)
      if_stmt_1019__exit__ <-| (if_stmt_1019_dead_link)
      ;;[if_stmt_1019_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1019__entry__ |-> (if_stmt_1019_eval_test)
      $P [R_iNsTr_1_1020_place]
      R_iNsTr_1_1020_place <-| (if_stmt_1019_eval_test)
      ;;[if_stmt_1019_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1019_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_1020_place |-> (if_stmt_1019_if_link if_stmt_1019_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_1019_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_1019_else_link)
      ::[assign_stmt_1031_to_assign_stmt_1054] 
      {
        // start:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 498
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1030_sample_start_] 
        $T[UGT_u16_u1_1030_sample_completed_] 
        $T[UGT_u16_u1_1030_update_start_] 
        $T[UGT_u16_u1_1030_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1030_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1030_sample_start_
        ;;[UGT_u16_u1_1030_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1030_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1030_sample_start_ &-> (UGT_u16_u1_1030_Sample)
        UGT_u16_u1_1030_sample_completed_ <-& (UGT_u16_u1_1030_Sample)
        UGT_u16_u1_1030_sample_completed_ &-> ($null)
        UGT_u16_u1_1030_update_start_ &-> (UGT_u16_u1_1030_Update)
        UGT_u16_u1_1030_update_completed_ <-& (UGT_u16_u1_1030_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 499
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1036_sample_start_] 
        $T[ADD_u16_u16_1036_sample_completed_] 
        $T[ADD_u16_u16_1036_update_start_] 
        $T[ADD_u16_u16_1036_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1036_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1036_sample_start_
        ;;[ADD_u16_u16_1036_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1036_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1036_sample_start_ &-> (ADD_u16_u16_1036_Sample)
        ADD_u16_u16_1036_sample_completed_ <-& (ADD_u16_u16_1036_Sample)
        ADD_u16_u16_1036_sample_completed_ &-> ($null)
        ADD_u16_u16_1036_update_start_ &-> (ADD_u16_u16_1036_Update)
        ADD_u16_u16_1036_update_completed_ <-& (ADD_u16_u16_1036_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 500
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_1040_sample_start_] 
        $T[type_cast_1040_sample_completed_] 
        $T[type_cast_1040_update_start_] 
        $T[type_cast_1040_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_1040_sample_start_
        type_cast_1040_sample_start_ <-& (ADD_u16_u16_1036_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_1040_sample_start_
        ;;[type_cast_1040_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1040_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1040_sample_start_ &-> (type_cast_1040_Sample)
        type_cast_1040_sample_completed_ <-& (type_cast_1040_Sample)
        type_cast_1040_sample_completed_ &-> ($null)
        type_cast_1040_update_start_ &-> (type_cast_1040_Update)
        type_cast_1040_update_completed_ <-& (type_cast_1040_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 501
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1046_sample_start_] 
        $T[ADD_u64_u64_1046_sample_completed_] 
        $T[ADD_u64_u64_1046_update_start_] 
        $T[ADD_u64_u64_1046_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_1046_sample_start_
        ADD_u64_u64_1046_sample_start_ <-& (type_cast_1040_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_1046_sample_start_
        ;;[ADD_u64_u64_1046_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1046_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1046_sample_start_ &-> (ADD_u64_u64_1046_Sample)
        ADD_u64_u64_1046_sample_completed_ <-& (ADD_u64_u64_1046_Sample)
        ADD_u64_u64_1046_sample_completed_ &-> ($null)
        ADD_u64_u64_1046_update_start_ &-> (ADD_u64_u64_1046_Update)
        ADD_u64_u64_1046_update_completed_ <-& (ADD_u64_u64_1046_Update)
        // Target expression
        // (as target) xx_xop7
        // start: WAR dependencies for xx_xop7
        // done: WAR dependencies for xx_xop7
        // end:  		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 502
        // Source expression
        // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1053_sample_start_] 
        $T[MUX_1053_sample_completed_] 
        $T[MUX_1053_update_start_] 
        $T[MUX_1053_update_completed_] 
        // tmp
        // xx_xop7
        // start: Forward dependencies from tmp to transition MUX_1053_sample_start_
        MUX_1053_sample_start_ <-& (UGT_u16_u1_1030_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_1053_sample_start_
        // start: Forward dependencies from xx_xop7 to transition MUX_1053_sample_start_
        MUX_1053_sample_start_ <-& (ADD_u64_u64_1046_update_completed_)
        // done: Forward dependencies from xx_xop7 to transition MUX_1053_sample_start_
        ;;[MUX_1053_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1053_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1053_sample_start_ &-> (MUX_1053_start)
        MUX_1053_sample_completed_ <-& (MUX_1053_start)
        MUX_1053_update_start_ &-> (MUX_1053_complete)
        MUX_1053_update_completed_ <-& (MUX_1053_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1031_to_assign_stmt_1054__entry__ |-> (assign_stmt_1031_to_assign_stmt_1054)
      assign_stmt_1031_to_assign_stmt_1054__exit__ <-| (assign_stmt_1031_to_assign_stmt_1054)
      ::[assign_stmt_1070_to_assign_stmt_1118] 
      {
        // start:  		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 507
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_1069_sample_start_] 
        $T[ADD_u64_u64_1069_sample_completed_] 
        $T[ADD_u64_u64_1069_update_start_] 
        $T[ADD_u64_u64_1069_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_1069_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_1069_sample_start_
        ;;[ADD_u64_u64_1069_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1069_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1069_sample_start_ &-> (ADD_u64_u64_1069_Sample)
        ADD_u64_u64_1069_sample_completed_ <-& (ADD_u64_u64_1069_Sample)
        ADD_u64_u64_1069_sample_completed_ &-> ($null)
        ADD_u64_u64_1069_update_start_ &-> (ADD_u64_u64_1069_Update)
        ADD_u64_u64_1069_update_completed_ <-& (ADD_u64_u64_1069_Update)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		scevgep6 := @(mem[tmp2])
        //  file prog.linked.opt.aa, line 508
        // Source expression
        // @(mem[tmp2])
        $T[addr_of_1074_sample_start_] 
        $T[addr_of_1074_sample_completed_] 
        $T[addr_of_1074_update_start_] 
        $T[addr_of_1074_update_completed_] 
        $T[array_obj_ref_1073_root_address_calculated] 
        $T[array_obj_ref_1073_offset_calculated] 
        $T[array_obj_ref_1073_index_resized_0] 
        $T[array_obj_ref_1073_index_scaled_0] 
        $T[array_obj_ref_1073_index_computed_0] 
        // tmp2
        // start: Forward dependencies from tmp2 to transition array_obj_ref_1073_index_computed_0
        array_obj_ref_1073_index_computed_0 <-& (ADD_u64_u64_1069_update_completed_)
        // done: Forward dependencies from tmp2 to transition array_obj_ref_1073_index_computed_0
        ;;[array_obj_ref_1073_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1073_index_computed_0 &-> (array_obj_ref_1073_index_resize_0)
        array_obj_ref_1073_index_resized_0 <-& (array_obj_ref_1073_index_resize_0)
        ;;[array_obj_ref_1073_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1073_index_resized_0 &-> (array_obj_ref_1073_index_scale_0)
        array_obj_ref_1073_index_scaled_0 <-& (array_obj_ref_1073_index_scale_0)
        ;;[array_obj_ref_1073_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1073_index_scaled_0 &-> (array_obj_ref_1073_final_index_sum_regn)
        array_obj_ref_1073_offset_calculated <-& (array_obj_ref_1073_final_index_sum_regn)
        ;;[array_obj_ref_1073_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1073_offset_calculated &-> (array_obj_ref_1073_base_plus_offset)
        array_obj_ref_1073_root_address_calculated <-& (array_obj_ref_1073_base_plus_offset)
        ;;[addr_of_1074_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1074_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1074_sample_start_ <-& (array_obj_ref_1073_root_address_calculated)
        addr_of_1074_sample_start_ &-> (addr_of_1074_request)
        addr_of_1074_sample_completed_ <-& (addr_of_1074_request)
        addr_of_1074_update_start_ &-> (addr_of_1074_complete)
        addr_of_1074_update_completed_ <-& (addr_of_1074_complete)
        // Target expression
        // (as target) scevgep6
        // start: WAR dependencies for scevgep6
        // done: WAR dependencies for scevgep6
        // end:  		scevgep6 := @(mem[tmp2])
        // start:  		scevgep := @(message[indvar])
        //  file prog.linked.opt.aa, line 509
        // Source expression
        // @(message[indvar])
        $T[addr_of_1079_sample_start_] 
        $T[addr_of_1079_sample_completed_] 
        $T[addr_of_1079_update_start_] 
        $T[addr_of_1079_update_completed_] 
        $T[array_obj_ref_1078_root_address_calculated] 
        $T[array_obj_ref_1078_offset_calculated] 
        $T[array_obj_ref_1078_index_resized_0] 
        $T[array_obj_ref_1078_index_scaled_0] 
        $T[array_obj_ref_1078_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1078_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_1078_index_computed_0
        ;;[array_obj_ref_1078_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1078_index_computed_0 &-> (array_obj_ref_1078_index_resize_0)
        array_obj_ref_1078_index_resized_0 <-& (array_obj_ref_1078_index_resize_0)
        ;;[array_obj_ref_1078_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1078_index_resized_0 &-> (array_obj_ref_1078_index_scale_0)
        array_obj_ref_1078_index_scaled_0 <-& (array_obj_ref_1078_index_scale_0)
        ;;[array_obj_ref_1078_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1078_index_scaled_0 &-> (array_obj_ref_1078_final_index_sum_regn)
        array_obj_ref_1078_offset_calculated <-& (array_obj_ref_1078_final_index_sum_regn)
        ;;[array_obj_ref_1078_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1078_offset_calculated &-> (array_obj_ref_1078_base_plus_offset)
        array_obj_ref_1078_root_address_calculated <-& (array_obj_ref_1078_base_plus_offset)
        ;;[addr_of_1079_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1079_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1079_sample_start_ <-& (array_obj_ref_1078_root_address_calculated)
        addr_of_1079_sample_start_ &-> (addr_of_1079_request)
        addr_of_1079_sample_completed_ <-& (addr_of_1079_request)
        addr_of_1079_update_start_ &-> (addr_of_1079_complete)
        addr_of_1079_update_completed_ <-& (addr_of_1079_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(message[indvar])
        // start:  		iNsTr_6 := ->(scevgep6)
        //  file prog.linked.opt.aa, line 510
        // Source expression
        // ->(scevgep6)
        $T[ptr_deref_1083_sample_start_] 
        $T[ptr_deref_1083_sample_completed_] 
        $T[ptr_deref_1083_update_start_] 
        $T[ptr_deref_1083_update_completed_] 
        $T[ptr_deref_1083_base_address_calculated] 
        // scevgep6
        $T[ptr_deref_1083_word_address_calculated] 
        $T[ptr_deref_1083_root_address_calculated] 
        $T[ptr_deref_1083_base_address_resized] 
        ;;[ptr_deref_1083_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1083_base_address_calculated &-> (ptr_deref_1083_base_addr_resize)
        ptr_deref_1083_base_address_resized <-& (ptr_deref_1083_base_addr_resize)
        ;;[ptr_deref_1083_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1083_base_address_resized &-> (ptr_deref_1083_base_plus_offset)
        ptr_deref_1083_root_address_calculated <-& (ptr_deref_1083_base_plus_offset)
        ;;[ptr_deref_1083_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1083_root_address_calculated &-> (ptr_deref_1083_word_addrgen)
        ptr_deref_1083_word_address_calculated <-& (ptr_deref_1083_word_addrgen)
        ;;[ptr_deref_1083_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1083_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1083_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1083_sample_start_ <-& (ptr_deref_1083_word_address_calculated)
        ptr_deref_1083_sample_start_ &-> (ptr_deref_1083_Sample)
        ptr_deref_1083_sample_completed_ <-& (ptr_deref_1083_Sample)
        ptr_deref_1083_sample_completed_ &-> ($null)
        ptr_deref_1083_update_start_ &-> (ptr_deref_1083_Update)
        ptr_deref_1083_update_completed_ <-& (ptr_deref_1083_Update)
        // start: Forward dependencies from scevgep6 to transition ptr_deref_1083_base_address_calculated
        ptr_deref_1083_base_address_calculated <-& (addr_of_1074_update_completed_)
        // done: Forward dependencies from scevgep6 to transition ptr_deref_1083_base_address_calculated
        ptr_deref_1083_sample_start_ <-& (ptr_deref_1083_base_address_calculated)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := ->(scevgep6)
        // start:  		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 511
        // Source expression
        // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1089_sample_start_] 
        $T[ADD_u16_u16_1089_sample_completed_] 
        $T[ADD_u16_u16_1089_update_start_] 
        $T[ADD_u16_u16_1089_update_completed_] 
        // iNsTr_6
        // start: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_1089_sample_start_
        ADD_u16_u16_1089_sample_start_ <-& (ptr_deref_1083_update_completed_)
        // done: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_1089_sample_start_
        ;;[ADD_u16_u16_1089_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1089_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1089_sample_start_ &-> (ADD_u16_u16_1089_Sample)
        ADD_u16_u16_1089_sample_completed_ <-& (ADD_u16_u16_1089_Sample)
        ADD_u16_u16_1089_sample_completed_ &-> ($null)
        ADD_u16_u16_1089_update_start_ &-> (ADD_u16_u16_1089_Update)
        ADD_u16_u16_1089_update_completed_ <-& (ADD_u16_u16_1089_Update)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_8 := ($cast ($uint<64>) iNsTr_7 )
        //  file prog.linked.opt.aa, line 512
        // Source expression
        // ($cast ($uint<64>) iNsTr_7 )
        $T[type_cast_1093_sample_start_] 
        $T[type_cast_1093_sample_completed_] 
        $T[type_cast_1093_update_start_] 
        $T[type_cast_1093_update_completed_] 
        // iNsTr_7
        // start: Forward dependencies from iNsTr_7 to transition type_cast_1093_sample_start_
        type_cast_1093_sample_start_ <-& (ADD_u16_u16_1089_update_completed_)
        // done: Forward dependencies from iNsTr_7 to transition type_cast_1093_sample_start_
        ;;[type_cast_1093_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1093_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1093_sample_start_ &-> (type_cast_1093_Sample)
        type_cast_1093_sample_completed_ <-& (type_cast_1093_Sample)
        type_cast_1093_sample_completed_ &-> ($null)
        type_cast_1093_update_start_ &-> (type_cast_1093_Update)
        type_cast_1093_update_completed_ <-& (type_cast_1093_Update)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := ($cast ($uint<64>) iNsTr_7 )
        // start:  		iNsTr_9 := @(aPriori[iNsTr_8])
        //  file prog.linked.opt.aa, line 513
        // Source expression
        // @(aPriori[iNsTr_8])
        $T[addr_of_1098_sample_start_] 
        $T[addr_of_1098_sample_completed_] 
        $T[addr_of_1098_update_start_] 
        $T[addr_of_1098_update_completed_] 
        $T[array_obj_ref_1097_root_address_calculated] 
        $T[array_obj_ref_1097_offset_calculated] 
        $T[array_obj_ref_1097_index_resized_0] 
        $T[array_obj_ref_1097_index_scaled_0] 
        $T[array_obj_ref_1097_index_computed_0] 
        // iNsTr_8
        // start: Forward dependencies from iNsTr_8 to transition array_obj_ref_1097_index_computed_0
        array_obj_ref_1097_index_computed_0 <-& (type_cast_1093_update_completed_)
        // done: Forward dependencies from iNsTr_8 to transition array_obj_ref_1097_index_computed_0
        ;;[array_obj_ref_1097_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1097_index_computed_0 &-> (array_obj_ref_1097_index_resize_0)
        array_obj_ref_1097_index_resized_0 <-& (array_obj_ref_1097_index_resize_0)
        ;;[array_obj_ref_1097_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1097_index_resized_0 &-> (array_obj_ref_1097_index_scale_0)
        array_obj_ref_1097_index_scaled_0 <-& (array_obj_ref_1097_index_scale_0)
        ;;[array_obj_ref_1097_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1097_index_scaled_0 &-> (array_obj_ref_1097_final_index_sum_regn)
        array_obj_ref_1097_offset_calculated <-& (array_obj_ref_1097_final_index_sum_regn)
        ;;[array_obj_ref_1097_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1097_offset_calculated &-> (array_obj_ref_1097_base_plus_offset)
        array_obj_ref_1097_root_address_calculated <-& (array_obj_ref_1097_base_plus_offset)
        ;;[addr_of_1098_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1098_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1098_sample_start_ <-& (array_obj_ref_1097_root_address_calculated)
        addr_of_1098_sample_start_ &-> (addr_of_1098_request)
        addr_of_1098_sample_completed_ <-& (addr_of_1098_request)
        addr_of_1098_update_start_ &-> (addr_of_1098_complete)
        addr_of_1098_update_completed_ <-& (addr_of_1098_complete)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := @(aPriori[iNsTr_8])
        // start:  		iNsTr_10 := ->(iNsTr_9)
        //  file prog.linked.opt.aa, line 514
        // Source expression
        // ->(iNsTr_9)
        $T[ptr_deref_1102_sample_start_] 
        $T[ptr_deref_1102_sample_completed_] 
        $T[ptr_deref_1102_update_start_] 
        $T[ptr_deref_1102_update_completed_] 
        $T[ptr_deref_1102_base_address_calculated] 
        // iNsTr_9
        $T[ptr_deref_1102_word_address_calculated] 
        $T[ptr_deref_1102_root_address_calculated] 
        $T[ptr_deref_1102_base_address_resized] 
        ;;[ptr_deref_1102_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1102_base_address_calculated &-> (ptr_deref_1102_base_addr_resize)
        ptr_deref_1102_base_address_resized <-& (ptr_deref_1102_base_addr_resize)
        ;;[ptr_deref_1102_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1102_base_address_resized &-> (ptr_deref_1102_base_plus_offset)
        ptr_deref_1102_root_address_calculated <-& (ptr_deref_1102_base_plus_offset)
        ;;[ptr_deref_1102_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1102_root_address_calculated &-> (ptr_deref_1102_word_addrgen)
        ptr_deref_1102_word_address_calculated <-& (ptr_deref_1102_word_addrgen)
        ;;[ptr_deref_1102_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1102_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1102_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1102_sample_start_ <-& (ptr_deref_1102_word_address_calculated)
        ptr_deref_1102_sample_start_ &-> (ptr_deref_1102_Sample)
        ptr_deref_1102_sample_completed_ <-& (ptr_deref_1102_Sample)
        ptr_deref_1102_sample_completed_ &-> ($null)
        ptr_deref_1102_update_start_ &-> (ptr_deref_1102_Update)
        ptr_deref_1102_update_completed_ <-& (ptr_deref_1102_Update)
        // start: Forward dependencies from iNsTr_9 to transition ptr_deref_1102_base_address_calculated
        ptr_deref_1102_base_address_calculated <-& (addr_of_1098_update_completed_)
        // done: Forward dependencies from iNsTr_9 to transition ptr_deref_1102_base_address_calculated
        ptr_deref_1102_sample_start_ <-& (ptr_deref_1102_base_address_calculated)
        // Target expression
        // (as target) iNsTr_10
        // start: WAR dependencies for iNsTr_10
        // done: WAR dependencies for iNsTr_10
        // end:  		iNsTr_10 := ->(iNsTr_9)
        // start:  		->(scevgep) := iNsTr_10
        //  file prog.linked.opt.aa, line 515
        // Source expression
        // iNsTr_10
        // Target expression
        // ->(scevgep)
        $T[ptr_deref_1105_sample_start_] 
        $T[ptr_deref_1105_sample_completed_] 
        $T[ptr_deref_1105_update_start_] 
        $T[ptr_deref_1105_update_completed_] 
        $T[ptr_deref_1105_base_address_calculated] 
        // scevgep
        $T[ptr_deref_1105_word_address_calculated] 
        $T[ptr_deref_1105_root_address_calculated] 
        $T[ptr_deref_1105_base_address_resized] 
        ;;[ptr_deref_1105_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1105_base_address_calculated &-> (ptr_deref_1105_base_addr_resize)
        ptr_deref_1105_base_address_resized <-& (ptr_deref_1105_base_addr_resize)
        ;;[ptr_deref_1105_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1105_base_address_resized &-> (ptr_deref_1105_base_plus_offset)
        ptr_deref_1105_root_address_calculated <-& (ptr_deref_1105_base_plus_offset)
        ;;[ptr_deref_1105_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1105_root_address_calculated &-> (ptr_deref_1105_word_addrgen)
        ptr_deref_1105_word_address_calculated <-& (ptr_deref_1105_word_addrgen)
        ;;[ptr_deref_1105_Sample] 
        {
          ;;[ptr_deref_1105_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1105_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1105_sample_start_ <-& (ptr_deref_1105_word_address_calculated)
        ptr_deref_1105_sample_start_ &-> (ptr_deref_1105_Sample)
        ptr_deref_1105_sample_completed_ <-& (ptr_deref_1105_Sample)
        ptr_deref_1105_sample_completed_ &-> ($null)
        ptr_deref_1105_update_start_ &-> (ptr_deref_1105_Update)
        ptr_deref_1105_update_completed_ <-& (ptr_deref_1105_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_1105_base_address_calculated
        ptr_deref_1105_base_address_calculated <-& (addr_of_1079_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_1105_base_address_calculated
        ptr_deref_1105_sample_start_ <-& (ptr_deref_1105_base_address_calculated)
        // start: Forward dependencies from iNsTr_10 to transition ptr_deref_1105_sample_start_
        ptr_deref_1105_sample_start_ <-& (ptr_deref_1102_update_completed_)
        // done: Forward dependencies from iNsTr_10 to transition ptr_deref_1105_sample_start_
        // end:  		->(scevgep) := iNsTr_10
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 516
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1112_sample_start_] 
        $T[ADD_u64_u64_1112_sample_completed_] 
        $T[ADD_u64_u64_1112_update_start_] 
        $T[ADD_u64_u64_1112_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_1112_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_1112_sample_start_
        ;;[ADD_u64_u64_1112_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1112_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1112_sample_start_ &-> (ADD_u64_u64_1112_Sample)
        ADD_u64_u64_1112_sample_completed_ <-& (ADD_u64_u64_1112_Sample)
        ADD_u64_u64_1112_sample_completed_ &-> ($null)
        ADD_u64_u64_1112_update_start_ &-> (ADD_u64_u64_1112_Update)
        ADD_u64_u64_1112_update_completed_ <-& (ADD_u64_u64_1112_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 517
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_1117_sample_start_] 
        $T[EQ_u64_u1_1117_sample_completed_] 
        $T[EQ_u64_u1_1117_update_start_] 
        $T[EQ_u64_u1_1117_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1117_sample_start_
        EQ_u64_u1_1117_sample_start_ <-& (ADD_u64_u64_1112_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1117_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_1117_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_1117_sample_start_
        ;;[EQ_u64_u1_1117_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1117_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1117_sample_start_ &-> (EQ_u64_u1_1117_Sample)
        EQ_u64_u1_1117_sample_completed_ <-& (EQ_u64_u1_1117_Sample)
        EQ_u64_u1_1117_sample_completed_ &-> ($null)
        EQ_u64_u1_1117_update_start_ &-> (EQ_u64_u1_1117_Update)
        EQ_u64_u1_1117_update_completed_ <-& (EQ_u64_u1_1117_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
      }
      assign_stmt_1070_to_assign_stmt_1118__entry__ |-> (assign_stmt_1070_to_assign_stmt_1118)
      assign_stmt_1070_to_assign_stmt_1118__exit__ <-| (assign_stmt_1070_to_assign_stmt_1118)
      // if-statement  
      //  file prog.linked.opt.aa, line 518
      ;;[if_stmt_1119_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1119__entry__ |-> (if_stmt_1119_dead_link)
      if_stmt_1119__exit__ <-| (if_stmt_1119_dead_link)
      ;;[if_stmt_1119_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1119__entry__ |-> (if_stmt_1119_eval_test)
      $P [R_exitcond1_1120_place]
      R_exitcond1_1120_place <-| (if_stmt_1119_eval_test)
      ;;[if_stmt_1119_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1119_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_1120_place |-> (if_stmt_1119_if_link if_stmt_1119_else_link)
      $P [bb_2_xx_x_crit_edgex_xloopexit]
      bb_2_xx_x_crit_edgex_xloopexit <-| (if_stmt_1119_if_link)
      $P [bb_2_bb_2]
      bb_2_bb_2 <-| (if_stmt_1119_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 496
      ;;[merge_stmt_1025_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1025__entry__ |-> (merge_stmt_1025_dead_link)
      merge_stmt_1025__exit__ <-| (merge_stmt_1025_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 496  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_1025_PhiReqMerge] 
      merge_stmt_1025_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_1025_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1025_PhiReqMerge |-> (merge_stmt_1025_PhiAck)
      merge_stmt_1025__exit__  <-| (merge_stmt_1025_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 496  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 504
      //---------------------   merge statement  file prog.linked.opt.aa, line 504  --------------------------
      ||[bb_2_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1057] 
        {
          ||[phi_stmt_1057_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_1063] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1057_req] 
        }
      }
      bb_2_bb_2 |-> (bb_2_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1057] 
        {
          ||[phi_stmt_1057_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1061_konst_delay_trans] $delay
          }
          $T [phi_stmt_1057_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_1056_PhiReqMerge] 
      merge_stmt_1056_PhiReqMerge <-| ( bb_2_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_1056_PhiAck] 
      {
        $T [phi_stmt_1057_ack] 
      }
      merge_stmt_1056_PhiReqMerge |-> (merge_stmt_1056_PhiAck)
      merge_stmt_1056__exit__  <-| (merge_stmt_1056_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 504  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 523
      ;;[merge_stmt_1125_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1125__entry__ |-> (merge_stmt_1125_dead_link)
      merge_stmt_1125__exit__ <-| (merge_stmt_1125_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 523  --------------------------
      ||[bb_2_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_xx_x_crit_edgex_xloopexit |-> (bb_2_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_1125_PhiReqMerge] 
      merge_stmt_1125_PhiReqMerge <-| ( bb_2_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_1125_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1125_PhiReqMerge |-> (merge_stmt_1125_PhiAck)
      merge_stmt_1125__exit__  <-| (merge_stmt_1125_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 523  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 526
      //---------------------   merge statement  file prog.linked.opt.aa, line 526  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_1127_PhiReqMerge] 
      merge_stmt_1127_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_1127_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1127_PhiReqMerge |-> (merge_stmt_1127_PhiAck)
      merge_stmt_1127__exit__  <-| (merge_stmt_1127_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 526  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 529
      //---------------------   merge statement  file prog.linked.opt.aa, line 529  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1129_PhiReqMerge] 
      merge_stmt_1129_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1129_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1129_PhiReqMerge |-> (merge_stmt_1129_PhiAck)
      merge_stmt_1129__exit__  <-| (merge_stmt_1129_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 529  --------------------------
      assign_stmt_1012_to_assign_stmt_1018__entry__ <-| (branch_block_stmt_1009__entry__)
      if_stmt_1019__entry__ <-| (assign_stmt_1012_to_assign_stmt_1018__exit__)
      merge_stmt_1025__entry__ <-| (if_stmt_1019__exit__)
      assign_stmt_1031_to_assign_stmt_1054__entry__ <-| (merge_stmt_1025__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_1031_to_assign_stmt_1054__exit__)
      assign_stmt_1070_to_assign_stmt_1118__entry__ <-| (merge_stmt_1056__exit__)
      if_stmt_1119__entry__ <-| (assign_stmt_1070_to_assign_stmt_1118__exit__)
      merge_stmt_1125__entry__ <-| (if_stmt_1119__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_1125__exit__)
      return__ <-| (merge_stmt_1127__exit__)
      merge_stmt_1129__exit__ |-> (branch_block_stmt_1009__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 496
    // constant-object-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 504
    // constant-object-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 523
    // constant-object-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 526
    // constant-object-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 529
    // constant-object-declarations for block %initializeMessage%body
    //  file prog.linked.opt.aa, line 487
    // constant-object-declarations for block %initializeMessage
    //  file prog.linked.opt.aa, line 482
    // constant-declarations for block %initializeMessage%body
    //  file prog.linked.opt.aa, line 487
    // ncol_ind
    $constant $W[LOAD_ncol_ind_1011_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1016_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 491
    // constant-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 496
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1029_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1035_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1045_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1052_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 504
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 505
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1061_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_1068_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[tmp2])
    $constant $W[array_obj_ref_1073_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1073_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(message[indvar])
    $constant $W[array_obj_ref_1078_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1078_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep6)
    $constant $W[ptr_deref_1083_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1088_wire_constant] : $int<16> := _b1111111111111111// 65535
    // @(aPriori[iNsTr_8])
    $constant $W[array_obj_ref_1097_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1097_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_9)
    $constant $W[ptr_deref_1102_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgep)
    $constant $W[ptr_deref_1105_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1111_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 518
    // constant-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 523
    // constant-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 526
    // constant-declarations for block %initializeMessage%body%
    //  file prog.linked.opt.aa, line 529
    // block %initializeMessage%body
    //  file prog.linked.opt.aa, line 487
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 489
    // ncol_ind
    $W[LOAD_ncol_ind_1011_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_1012] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 490
    // iNsTr_1
    $W[iNsTr_1_1018] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 491
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 498
    // tmp
    $W[tmp_1031] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 499
    // xx_xop
    $W[xx_xop_1037] : $int<16>
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 500
    // iNsTr_4
    $W[iNsTr_4_1041] : $int<64>
    // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 501
    // xx_xop7
    $W[xx_xop7_1047] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 502
    // tmp4
    $W[tmp4_1054] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 504
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 505
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_1063_wire] : $int<64>
    // indvar
    $W[indvar_1057] : $int<64>
    // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 507
    // tmp2
    $W[tmp2_1070] : $int<64>
    // 		scevgep6 := @(mem[tmp2])
    //  file prog.linked.opt.aa, line 508
    // @(mem[tmp2])
    $intermediate $W[R_tmp2_1072_resized] : $int<10>
    $intermediate $W[R_tmp2_1072_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1073_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1073_root_address] : $int<10>
    // scevgep6
    $W[scevgep6_1075] : $int<32>
    // 		scevgep := @(message[indvar])
    //  file prog.linked.opt.aa, line 509
    // @(message[indvar])
    $intermediate $W[R_indvar_1077_resized] : $int<10>
    $intermediate $W[R_indvar_1077_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1078_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1078_root_address] : $int<10>
    // scevgep
    $W[scevgep_1080] : $int<32>
    // 		iNsTr_6 := ->(scevgep6)
    //  file prog.linked.opt.aa, line 510
    // ->(scevgep6)
    $intermediate $W[ptr_deref_1083_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1083_root_address] : $int<10>
    $W[ptr_deref_1083_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_1083_data_0] : $int<16>
    // iNsTr_6
    $W[iNsTr_6_1084] : $int<16>
    // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 511
    // iNsTr_7
    $W[iNsTr_7_1090] : $int<16>
    // 		iNsTr_8 := ($cast ($uint<64>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 512
    // iNsTr_8
    $W[iNsTr_8_1094] : $int<64>
    // 		iNsTr_9 := @(aPriori[iNsTr_8])
    //  file prog.linked.opt.aa, line 513
    // @(aPriori[iNsTr_8])
    $intermediate $W[R_iNsTr_8_1096_resized] : $int<10>
    $intermediate $W[R_iNsTr_8_1096_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1097_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1097_root_address] : $int<10>
    // iNsTr_9
    $W[iNsTr_9_1099] : $int<32>
    // 		iNsTr_10 := ->(iNsTr_9)
    //  file prog.linked.opt.aa, line 514
    // ->(iNsTr_9)
    $intermediate $W[ptr_deref_1102_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1102_root_address] : $int<10>
    $W[ptr_deref_1102_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1102_data_0] : $int<32>
    // iNsTr_10
    $W[iNsTr_10_1103] : $float<8,23>
    // 		->(scevgep) := iNsTr_10
    //  file prog.linked.opt.aa, line 515
    // ->(scevgep)
    $intermediate $W[ptr_deref_1105_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1105_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1105_root_address] : $int<10>
    $W[ptr_deref_1105_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_1105_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 516
    // indvarx_xnext
    $W[indvarx_xnext_1113] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 517
    // exitcond1
    $W[exitcond1_1118] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 518
    // datapath-instances for block %initializeMessage%body
    //  file prog.linked.opt.aa, line 487
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 489
    // ncol_ind
    $load [LOAD_ncol_ind_1011_load_0] $from memory_space_10 (LOAD_ncol_ind_1011_word_address_0) (LOAD_ncol_ind_1011_data_0) 
    $delay LOAD_ncol_ind_1011_load_0 4
    &/ [LOAD_ncol_ind_1011_gather_scatter] (LOAD_ncol_ind_1011_data_0) (iNsTr_0_1012) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 490
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1017_inst] (iNsTr_0_1012 type_cast_1016_wire_constant) (iNsTr_1_1018)   
    $buffering  $out EQ_u16_u1_1017_inst iNsTr_1_1018 1
    $delay EQ_u16_u1_1017_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 491
    ==0? [if_stmt_1019_branch] (iNsTr_1_1018)
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 498
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1030_inst] (iNsTr_0_1012 type_cast_1029_wire_constant) (tmp_1031)   
    $buffering  $out UGT_u16_u1_1030_inst tmp_1031 1
    $delay UGT_u16_u1_1030_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 499
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1036_inst] (iNsTr_0_1012 type_cast_1035_wire_constant) (xx_xop_1037)   
    $buffering  $out ADD_u16_u16_1036_inst xx_xop_1037 1
    $delay ADD_u16_u16_1036_inst 1
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 500
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_1040_inst] (xx_xop_1037) (iNsTr_4_1041)   
    $buffering  $out type_cast_1040_inst iNsTr_4_1041 1
    $delay type_cast_1040_inst 1
    // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 501
    // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1046_inst] (iNsTr_4_1041 type_cast_1045_wire_constant) (xx_xop7_1047)   
    $buffering  $out ADD_u64_u64_1046_inst xx_xop7_1047 1
    $delay ADD_u64_u64_1046_inst 1
    // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 502
    // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1053_inst] (tmp_1031 xx_xop7_1047 type_cast_1052_wire_constant) (tmp4_1054) 
    $buffering  $out MUX_1053_inst tmp4_1054 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 504
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 505
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_1063_inst] (indvarx_xnext_1113) (type_cast_1063_wire)   
    $buffering  $out type_cast_1063_inst type_cast_1063_wire 1
    $delay type_cast_1063_inst 1
    $phi [phi_stmt_1057] (type_cast_1061_wire_constant type_cast_1063_wire) ( indvar_1057 ) 
    // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 507
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_1069_inst] (indvar_1057 type_cast_1068_wire_constant) (tmp2_1070)   
    $buffering  $out ADD_u64_u64_1069_inst tmp2_1070 1
    $delay ADD_u64_u64_1069_inst 1
    // 		scevgep6 := @(mem[tmp2])
    //  file prog.linked.opt.aa, line 508
    &/ [array_obj_ref_1073_index_0_resize] (tmp2_1070) (R_tmp2_1072_resized) 
    $flowthrough 
    &/ [array_obj_ref_1073_index_0_rename] (R_tmp2_1072_resized) (R_tmp2_1072_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1073_index_offset] (R_tmp2_1072_scaled) (array_obj_ref_1073_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1073_root_address_inst] (array_obj_ref_1073_final_offset) (array_obj_ref_1073_root_address) 
    $flowthrough 
    # := [addr_of_1074_final_reg] (array_obj_ref_1073_root_address) (scevgep6_1075)   
    $buffering  $out addr_of_1074_final_reg scevgep6_1075 1
    // 		scevgep := @(message[indvar])
    //  file prog.linked.opt.aa, line 509
    &/ [array_obj_ref_1078_index_0_resize] (indvar_1057) (R_indvar_1077_resized) 
    $flowthrough 
    &/ [array_obj_ref_1078_index_0_rename] (R_indvar_1077_resized) (R_indvar_1077_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1078_index_offset] (R_indvar_1077_scaled) (array_obj_ref_1078_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1078_root_address_inst] (array_obj_ref_1078_final_offset) (array_obj_ref_1078_root_address) 
    $flowthrough 
    # := [addr_of_1079_final_reg] (array_obj_ref_1078_root_address) (scevgep_1080)   
    $buffering  $out addr_of_1079_final_reg scevgep_1080 1
    // 		iNsTr_6 := ->(scevgep6)
    //  file prog.linked.opt.aa, line 510
    // ->(scevgep6)
    &/ [ptr_deref_1083_base_resize] (scevgep6_1075) (ptr_deref_1083_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1083_root_address_inst] (ptr_deref_1083_resized_base_address) (ptr_deref_1083_root_address) 
    $flowthrough 
    &/ [ptr_deref_1083_addr_0] (ptr_deref_1083_root_address) (ptr_deref_1083_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1083_load_0] $from memory_space_8 (ptr_deref_1083_word_address_0) (ptr_deref_1083_data_0) 
    $delay ptr_deref_1083_load_0 4
    &/ [ptr_deref_1083_gather_scatter] (ptr_deref_1083_data_0) (iNsTr_6_1084) 
    $flowthrough 
    // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 511
    // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1089_inst] (iNsTr_6_1084 type_cast_1088_wire_constant) (iNsTr_7_1090)   
    $buffering  $out ADD_u16_u16_1089_inst iNsTr_7_1090 1
    $delay ADD_u16_u16_1089_inst 1
    // 		iNsTr_8 := ($cast ($uint<64>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 512
    // ($cast ($uint<64>) iNsTr_7 )
    # := [type_cast_1093_inst] (iNsTr_7_1090) (iNsTr_8_1094)   
    $buffering  $out type_cast_1093_inst iNsTr_8_1094 1
    $delay type_cast_1093_inst 1
    // 		iNsTr_9 := @(aPriori[iNsTr_8])
    //  file prog.linked.opt.aa, line 513
    &/ [array_obj_ref_1097_index_0_resize] (iNsTr_8_1094) (R_iNsTr_8_1096_resized) 
    $flowthrough 
    &/ [array_obj_ref_1097_index_0_rename] (R_iNsTr_8_1096_resized) (R_iNsTr_8_1096_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1097_index_offset] (R_iNsTr_8_1096_scaled) (array_obj_ref_1097_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1097_root_address_inst] (array_obj_ref_1097_final_offset) (array_obj_ref_1097_root_address) 
    $flowthrough 
    # := [addr_of_1098_final_reg] (array_obj_ref_1097_root_address) (iNsTr_9_1099)   
    $buffering  $out addr_of_1098_final_reg iNsTr_9_1099 1
    // 		iNsTr_10 := ->(iNsTr_9)
    //  file prog.linked.opt.aa, line 514
    // ->(iNsTr_9)
    &/ [ptr_deref_1102_base_resize] (iNsTr_9_1099) (ptr_deref_1102_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1102_root_address_inst] (ptr_deref_1102_resized_base_address) (ptr_deref_1102_root_address) 
    $flowthrough 
    &/ [ptr_deref_1102_addr_0] (ptr_deref_1102_root_address) (ptr_deref_1102_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1102_load_0] $from memory_space_2 (ptr_deref_1102_word_address_0) (ptr_deref_1102_data_0) 
    $delay ptr_deref_1102_load_0 4
    &/ [ptr_deref_1102_gather_scatter] (ptr_deref_1102_data_0) (iNsTr_10_1103) 
    $flowthrough 
    // 		->(scevgep) := iNsTr_10
    //  file prog.linked.opt.aa, line 515
    // ->(scevgep)
    &/ [ptr_deref_1105_base_resize] (scevgep_1080) (ptr_deref_1105_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1105_root_address_inst] (ptr_deref_1105_resized_base_address) (ptr_deref_1105_root_address) 
    $flowthrough 
    &/ [ptr_deref_1105_addr_0] (ptr_deref_1105_root_address) (ptr_deref_1105_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1105_store_0] $to memory_space_9 (ptr_deref_1105_word_address_0 ptr_deref_1105_data_0) 
    $delay ptr_deref_1105_store_0 4
    &/ [ptr_deref_1105_gather_scatter] (iNsTr_10_1103) (ptr_deref_1105_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 516
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1112_inst] (indvar_1057 type_cast_1111_wire_constant) (indvarx_xnext_1113)   
    $buffering  $out ADD_u64_u64_1112_inst indvarx_xnext_1113 1
    $delay ADD_u64_u64_1112_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 517
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_1117_inst] (indvarx_xnext_1113 tmp4_1054) (exitcond1_1118)   
    $buffering  $out EQ_u64_u1_1117_inst exitcond1_1118 1
    $delay EQ_u64_u1_1117_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 518
    ==0? [if_stmt_1119_branch] (exitcond1_1118)
  }
  // end data-path
  // 		iNsTr_0 := ncol_ind
  //  file prog.linked.opt.aa, line 489
  // ncol_ind
  LOAD_ncol_ind_1011_gather_scatter <=> (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Update/LOAD_ncol_ind_1011_Merge/merge_req) (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Update/LOAD_ncol_ind_1011_Merge/merge_ack)
  LOAD_ncol_ind_1011_load_0 <=> (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Sample/word_access_start/word_0/rr branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Update/word_access_complete/word_0/cr) (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Sample/word_access_start/word_0/ra branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/LOAD_ncol_ind_1011_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 490
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_1017_inst <=> (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/EQ_u16_u1_1017_Sample/rr branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/EQ_u16_u1_1017_Update/cr) (branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/EQ_u16_u1_1017_Sample/ra branch_block_stmt_1009/assign_stmt_1012_to_assign_stmt_1018/EQ_u16_u1_1017_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 491
  if_stmt_1019_branch <=> (branch_block_stmt_1009/if_stmt_1019_eval_test/branch_req) (branch_block_stmt_1009/if_stmt_1019_else_link/else_choice_transition branch_block_stmt_1009/if_stmt_1019_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 496
  // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 498
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_1030_inst <=> (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/UGT_u16_u1_1030_Sample/rr branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/UGT_u16_u1_1030_Update/cr) (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/UGT_u16_u1_1030_Sample/ra branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/UGT_u16_u1_1030_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 499
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_1036_inst <=> (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u16_u16_1036_Sample/rr branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u16_u16_1036_Update/cr) (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u16_u16_1036_Sample/ra branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u16_u16_1036_Update/ca)
  // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 500
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_1040_inst <=> (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/type_cast_1040_Sample/rr branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/type_cast_1040_Update/cr) (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/type_cast_1040_Sample/ra branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/type_cast_1040_Update/ca)
  // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 501
  // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_4
  ADD_u64_u64_1046_inst <=> (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u64_u64_1046_Sample/rr branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u64_u64_1046_Update/cr) (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u64_u64_1046_Sample/ra branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/ADD_u64_u64_1046_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 502
  // tmp
  // xx_xop7
  // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1053_inst <=> (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/MUX_1053_start/req branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/MUX_1053_complete/req) (branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/MUX_1053_start/ack branch_block_stmt_1009/assign_stmt_1031_to_assign_stmt_1054/MUX_1053_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 504
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_1063_inst <=> (branch_block_stmt_1009/bb_2_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_sources/type_cast_1063/SplitProtocol/Sample/rr branch_block_stmt_1009/bb_2_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_sources/type_cast_1063/SplitProtocol/Update/cr) (branch_block_stmt_1009/bb_2_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_sources/type_cast_1063/SplitProtocol/Sample/ra branch_block_stmt_1009/bb_2_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_sources/type_cast_1063/SplitProtocol/Update/ca)
  phi_stmt_1057 <=> (branch_block_stmt_1009/bbx_xnph_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_req branch_block_stmt_1009/bb_2_bb_2_PhiReq/phi_stmt_1057/phi_stmt_1057_req) (branch_block_stmt_1009/merge_stmt_1056_PhiAck/phi_stmt_1057_ack)
  // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 507
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvar
  ADD_u64_u64_1069_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1069_Sample/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1069_Update/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1069_Sample/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1069_Update/ca)
  // 		scevgep6 := @(mem[tmp2])
  //  file prog.linked.opt.aa, line 508
  // tmp2
  array_obj_ref_1073_index_0_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_index_resize_0/index_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_index_resize_0/index_resize_ack)
  array_obj_ref_1073_index_0_rename <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_index_scale_0/scale_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_index_scale_0/scale_rename_ack)
  array_obj_ref_1073_index_offset <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_final_index_sum_regn/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_final_index_sum_regn/ack)
  array_obj_ref_1073_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1073_base_plus_offset/sum_rename_ack)
  addr_of_1074_final_reg <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1074_request/req branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1074_complete/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1074_request/ack branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1074_complete/ack)
  // 		scevgep := @(message[indvar])
  //  file prog.linked.opt.aa, line 509
  // indvar
  array_obj_ref_1078_index_0_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_index_resize_0/index_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_index_resize_0/index_resize_ack)
  array_obj_ref_1078_index_0_rename <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_index_scale_0/scale_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_index_scale_0/scale_rename_ack)
  array_obj_ref_1078_index_offset <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_final_index_sum_regn/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_final_index_sum_regn/ack)
  array_obj_ref_1078_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1078_base_plus_offset/sum_rename_ack)
  addr_of_1079_final_reg <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1079_request/req branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1079_complete/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1079_request/ack branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1079_complete/ack)
  // 		iNsTr_6 := ->(scevgep6)
  //  file prog.linked.opt.aa, line 510
  // scevgep6
  ptr_deref_1083_base_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_base_addr_resize/base_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_base_addr_resize/base_resize_ack)
  ptr_deref_1083_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_base_plus_offset/sum_rename_ack)
  ptr_deref_1083_addr_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_word_addrgen/root_register_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_word_addrgen/root_register_ack)
  ptr_deref_1083_gather_scatter <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Update/ptr_deref_1083_Merge/merge_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Update/ptr_deref_1083_Merge/merge_ack)
  ptr_deref_1083_load_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Sample/word_access_start/word_0/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Update/word_access_complete/word_0/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Sample/word_access_start/word_0/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1083_Update/word_access_complete/word_0/ca)
  // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 511
  // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_6
  ADD_u16_u16_1089_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u16_u16_1089_Sample/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u16_u16_1089_Update/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u16_u16_1089_Sample/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u16_u16_1089_Update/ca)
  // 		iNsTr_8 := ($cast ($uint<64>) iNsTr_7 )
  //  file prog.linked.opt.aa, line 512
  // iNsTr_7
  // ($cast ($uint<64>) iNsTr_7 )
  type_cast_1093_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/type_cast_1093_Sample/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/type_cast_1093_Update/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/type_cast_1093_Sample/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/type_cast_1093_Update/ca)
  // 		iNsTr_9 := @(aPriori[iNsTr_8])
  //  file prog.linked.opt.aa, line 513
  // iNsTr_8
  array_obj_ref_1097_index_0_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_index_resize_0/index_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_index_resize_0/index_resize_ack)
  array_obj_ref_1097_index_0_rename <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_index_scale_0/scale_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_index_scale_0/scale_rename_ack)
  array_obj_ref_1097_index_offset <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_final_index_sum_regn/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_final_index_sum_regn/ack)
  array_obj_ref_1097_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/array_obj_ref_1097_base_plus_offset/sum_rename_ack)
  addr_of_1098_final_reg <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1098_request/req branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1098_complete/req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1098_request/ack branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/addr_of_1098_complete/ack)
  // 		iNsTr_10 := ->(iNsTr_9)
  //  file prog.linked.opt.aa, line 514
  // iNsTr_9
  ptr_deref_1102_base_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_base_addr_resize/base_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_base_addr_resize/base_resize_ack)
  ptr_deref_1102_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_base_plus_offset/sum_rename_ack)
  ptr_deref_1102_addr_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_word_addrgen/root_register_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_word_addrgen/root_register_ack)
  ptr_deref_1102_gather_scatter <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Update/ptr_deref_1102_Merge/merge_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Update/ptr_deref_1102_Merge/merge_ack)
  ptr_deref_1102_load_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Sample/word_access_start/word_0/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Update/word_access_complete/word_0/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Sample/word_access_start/word_0/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1102_Update/word_access_complete/word_0/ca)
  // 		->(scevgep) := iNsTr_10
  //  file prog.linked.opt.aa, line 515
  // iNsTr_10
  // scevgep
  ptr_deref_1105_base_resize <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_base_addr_resize/base_resize_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_base_addr_resize/base_resize_ack)
  ptr_deref_1105_root_address_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_base_plus_offset/sum_rename_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_base_plus_offset/sum_rename_ack)
  ptr_deref_1105_addr_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_word_addrgen/root_register_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_word_addrgen/root_register_ack)
  ptr_deref_1105_gather_scatter <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Sample/ptr_deref_1105_Split/split_req) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Sample/ptr_deref_1105_Split/split_ack)
  ptr_deref_1105_store_0 <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Sample/word_access_start/word_0/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Update/word_access_complete/word_0/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Sample/word_access_start/word_0/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ptr_deref_1105_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 516
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_1112_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1112_Sample/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1112_Update/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1112_Sample/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/ADD_u64_u64_1112_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 517
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_1117_inst <=> (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/EQ_u64_u1_1117_Sample/rr branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/EQ_u64_u1_1117_Update/cr) (branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/EQ_u64_u1_1117_Sample/ra branch_block_stmt_1009/assign_stmt_1070_to_assign_stmt_1118/EQ_u64_u1_1117_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 518
  if_stmt_1119_branch <=> (branch_block_stmt_1009/if_stmt_1119_eval_test/branch_req) (branch_block_stmt_1009/if_stmt_1119_else_link/else_choice_transition branch_block_stmt_1009/if_stmt_1119_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 523
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 526
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 529
}
$module [initialize_aPosteriori] 
{
  // pipe-declarations for block %initialize_aPosteriori
  //  file prog.linked.opt.aa, line 533
  // pipe-declarations for block %initialize_aPosteriori%body
  //  file prog.linked.opt.aa, line 538
  // pipe-declarations for block %initialize_aPosteriori%body%
  //  file prog.linked.opt.aa, line 547
  // pipe-declarations for block %initialize_aPosteriori%body%
  //  file prog.linked.opt.aa, line 555
  // pipe-declarations for block %initialize_aPosteriori%body%
  //  file prog.linked.opt.aa, line 569
  // pipe-declarations for block %initialize_aPosteriori%body%
  //  file prog.linked.opt.aa, line 572
  // pipe-declarations for block %initialize_aPosteriori%body%
  //  file prog.linked.opt.aa, line 575
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1133] // Branch Block  file prog.linked.opt.aa, line 538
    {
      $P [branch_block_stmt_1133__entry__]
      branch_block_stmt_1133__entry__ <-| ($entry)
      $P [branch_block_stmt_1133__exit__]
      branch_block_stmt_1133__exit__ |-> ($exit)
      $P [assign_stmt_1136_to_assign_stmt_1142__entry__] 
      $P [assign_stmt_1136_to_assign_stmt_1142__exit__] 
      $P [if_stmt_1143__entry__] 
      $P [if_stmt_1143__exit__] 
      $P [merge_stmt_1149__entry__] 
      $P [merge_stmt_1149__exit__] 
      $P [assign_stmt_1155_to_assign_stmt_1178__entry__] 
      $P [assign_stmt_1155_to_assign_stmt_1178__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_1180__exit__] 
      $P [assign_stmt_1193_to_assign_stmt_1217__entry__] 
      $P [assign_stmt_1193_to_assign_stmt_1217__exit__] 
      $P [if_stmt_1218__entry__] 
      $P [if_stmt_1218__exit__] 
      $P [merge_stmt_1224__entry__] 
      $P [merge_stmt_1224__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_1226__exit__] 
      $P [return__]
      $P [merge_stmt_1228__exit__] 
      ::[assign_stmt_1136_to_assign_stmt_1142] 
      {
        // start:  		iNsTr_0 := ncols
        //  file prog.linked.opt.aa, line 540
        // Source expression
        // ncols
        $T[LOAD_ncols_1135_sample_start_] 
        $T[LOAD_ncols_1135_sample_completed_] 
        $T[LOAD_ncols_1135_update_start_] 
        $T[LOAD_ncols_1135_update_completed_] 
        $T[LOAD_ncols_1135_word_address_calculated] 
        $T[LOAD_ncols_1135_root_address_calculated] 
        LOAD_ncols_1135_word_address_calculated <-& (LOAD_ncols_1135_root_address_calculated)
        ;;[LOAD_ncols_1135_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_1135_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_1135_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_1135_sample_start_ <-& (LOAD_ncols_1135_word_address_calculated)
        LOAD_ncols_1135_sample_start_ &-> (LOAD_ncols_1135_Sample)
        LOAD_ncols_1135_sample_completed_ <-& (LOAD_ncols_1135_Sample)
        LOAD_ncols_1135_sample_completed_ &-> ($null)
        LOAD_ncols_1135_update_start_ &-> (LOAD_ncols_1135_Update)
        LOAD_ncols_1135_update_completed_ <-& (LOAD_ncols_1135_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncols
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 541
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1141_sample_start_] 
        $T[EQ_u16_u1_1141_sample_completed_] 
        $T[EQ_u16_u1_1141_update_start_] 
        $T[EQ_u16_u1_1141_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1141_sample_start_
        EQ_u16_u1_1141_sample_start_ <-& (LOAD_ncols_1135_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1141_sample_start_
        ;;[EQ_u16_u1_1141_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1141_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1141_sample_start_ &-> (EQ_u16_u1_1141_Sample)
        EQ_u16_u1_1141_sample_completed_ <-& (EQ_u16_u1_1141_Sample)
        EQ_u16_u1_1141_sample_completed_ &-> ($null)
        EQ_u16_u1_1141_update_start_ &-> (EQ_u16_u1_1141_Update)
        EQ_u16_u1_1141_update_completed_ <-& (EQ_u16_u1_1141_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1136_to_assign_stmt_1142__entry__ |-> (assign_stmt_1136_to_assign_stmt_1142)
      assign_stmt_1136_to_assign_stmt_1142__exit__ <-| (assign_stmt_1136_to_assign_stmt_1142)
      // if-statement  
      //  file prog.linked.opt.aa, line 542
      ;;[if_stmt_1143_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1143__entry__ |-> (if_stmt_1143_dead_link)
      if_stmt_1143__exit__ <-| (if_stmt_1143_dead_link)
      ;;[if_stmt_1143_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1143__entry__ |-> (if_stmt_1143_eval_test)
      $P [R_iNsTr_1_1144_place]
      R_iNsTr_1_1144_place <-| (if_stmt_1143_eval_test)
      ;;[if_stmt_1143_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1143_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_1144_place |-> (if_stmt_1143_if_link if_stmt_1143_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_1143_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_1143_else_link)
      ::[assign_stmt_1155_to_assign_stmt_1178] 
      {
        // start:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 549
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1154_sample_start_] 
        $T[UGT_u16_u1_1154_sample_completed_] 
        $T[UGT_u16_u1_1154_update_start_] 
        $T[UGT_u16_u1_1154_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1154_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1154_sample_start_
        ;;[UGT_u16_u1_1154_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1154_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1154_sample_start_ &-> (UGT_u16_u1_1154_Sample)
        UGT_u16_u1_1154_sample_completed_ <-& (UGT_u16_u1_1154_Sample)
        UGT_u16_u1_1154_sample_completed_ &-> ($null)
        UGT_u16_u1_1154_update_start_ &-> (UGT_u16_u1_1154_Update)
        UGT_u16_u1_1154_update_completed_ <-& (UGT_u16_u1_1154_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 550
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1160_sample_start_] 
        $T[ADD_u16_u16_1160_sample_completed_] 
        $T[ADD_u16_u16_1160_update_start_] 
        $T[ADD_u16_u16_1160_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1160_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1160_sample_start_
        ;;[ADD_u16_u16_1160_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1160_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1160_sample_start_ &-> (ADD_u16_u16_1160_Sample)
        ADD_u16_u16_1160_sample_completed_ <-& (ADD_u16_u16_1160_Sample)
        ADD_u16_u16_1160_sample_completed_ &-> ($null)
        ADD_u16_u16_1160_update_start_ &-> (ADD_u16_u16_1160_Update)
        ADD_u16_u16_1160_update_completed_ <-& (ADD_u16_u16_1160_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 551
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_1164_sample_start_] 
        $T[type_cast_1164_sample_completed_] 
        $T[type_cast_1164_update_start_] 
        $T[type_cast_1164_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_1164_sample_start_
        type_cast_1164_sample_start_ <-& (ADD_u16_u16_1160_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_1164_sample_start_
        ;;[type_cast_1164_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1164_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1164_sample_start_ &-> (type_cast_1164_Sample)
        type_cast_1164_sample_completed_ <-& (type_cast_1164_Sample)
        type_cast_1164_sample_completed_ &-> ($null)
        type_cast_1164_update_start_ &-> (type_cast_1164_Update)
        type_cast_1164_update_completed_ <-& (type_cast_1164_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop6 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 552
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1170_sample_start_] 
        $T[ADD_u64_u64_1170_sample_completed_] 
        $T[ADD_u64_u64_1170_update_start_] 
        $T[ADD_u64_u64_1170_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_1170_sample_start_
        ADD_u64_u64_1170_sample_start_ <-& (type_cast_1164_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_1170_sample_start_
        ;;[ADD_u64_u64_1170_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1170_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1170_sample_start_ &-> (ADD_u64_u64_1170_Sample)
        ADD_u64_u64_1170_sample_completed_ <-& (ADD_u64_u64_1170_Sample)
        ADD_u64_u64_1170_sample_completed_ &-> ($null)
        ADD_u64_u64_1170_update_start_ &-> (ADD_u64_u64_1170_Update)
        ADD_u64_u64_1170_update_completed_ <-& (ADD_u64_u64_1170_Update)
        // Target expression
        // (as target) xx_xop6
        // start: WAR dependencies for xx_xop6
        // done: WAR dependencies for xx_xop6
        // end:  		xx_xop6 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 553
        // Source expression
        // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1177_sample_start_] 
        $T[MUX_1177_sample_completed_] 
        $T[MUX_1177_update_start_] 
        $T[MUX_1177_update_completed_] 
        // tmp
        // xx_xop6
        // start: Forward dependencies from tmp to transition MUX_1177_sample_start_
        MUX_1177_sample_start_ <-& (UGT_u16_u1_1154_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_1177_sample_start_
        // start: Forward dependencies from xx_xop6 to transition MUX_1177_sample_start_
        MUX_1177_sample_start_ <-& (ADD_u64_u64_1170_update_completed_)
        // done: Forward dependencies from xx_xop6 to transition MUX_1177_sample_start_
        ;;[MUX_1177_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1177_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1177_sample_start_ &-> (MUX_1177_start)
        MUX_1177_sample_completed_ <-& (MUX_1177_start)
        MUX_1177_update_start_ &-> (MUX_1177_complete)
        MUX_1177_update_completed_ <-& (MUX_1177_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1155_to_assign_stmt_1178__entry__ |-> (assign_stmt_1155_to_assign_stmt_1178)
      assign_stmt_1155_to_assign_stmt_1178__exit__ <-| (assign_stmt_1155_to_assign_stmt_1178)
      ::[assign_stmt_1193_to_assign_stmt_1217] 
      {
        // start:  		scevgep5 := @(aPosteriori[indvar])
        //  file prog.linked.opt.aa, line 558
        // Source expression
        // @(aPosteriori[indvar])
        $T[addr_of_1192_sample_start_] 
        $T[addr_of_1192_sample_completed_] 
        $T[addr_of_1192_update_start_] 
        $T[addr_of_1192_update_completed_] 
        $T[array_obj_ref_1191_root_address_calculated] 
        $T[array_obj_ref_1191_offset_calculated] 
        $T[array_obj_ref_1191_index_resized_0] 
        $T[array_obj_ref_1191_index_scaled_0] 
        $T[array_obj_ref_1191_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1191_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_1191_index_computed_0
        ;;[array_obj_ref_1191_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1191_index_computed_0 &-> (array_obj_ref_1191_index_resize_0)
        array_obj_ref_1191_index_resized_0 <-& (array_obj_ref_1191_index_resize_0)
        ;;[array_obj_ref_1191_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1191_index_resized_0 &-> (array_obj_ref_1191_index_scale_0)
        array_obj_ref_1191_index_scaled_0 <-& (array_obj_ref_1191_index_scale_0)
        ;;[array_obj_ref_1191_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1191_index_scaled_0 &-> (array_obj_ref_1191_final_index_sum_regn)
        array_obj_ref_1191_offset_calculated <-& (array_obj_ref_1191_final_index_sum_regn)
        ;;[array_obj_ref_1191_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1191_offset_calculated &-> (array_obj_ref_1191_base_plus_offset)
        array_obj_ref_1191_root_address_calculated <-& (array_obj_ref_1191_base_plus_offset)
        ;;[addr_of_1192_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1192_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1192_sample_start_ <-& (array_obj_ref_1191_root_address_calculated)
        addr_of_1192_sample_start_ &-> (addr_of_1192_request)
        addr_of_1192_sample_completed_ <-& (addr_of_1192_request)
        addr_of_1192_update_start_ &-> (addr_of_1192_complete)
        addr_of_1192_update_completed_ <-& (addr_of_1192_complete)
        // Target expression
        // (as target) scevgep5
        // start: WAR dependencies for scevgep5
        // done: WAR dependencies for scevgep5
        // end:  		scevgep5 := @(aPosteriori[indvar])
        // start:  		scevgep := @(aPriori[indvar])
        //  file prog.linked.opt.aa, line 559
        // Source expression
        // @(aPriori[indvar])
        $T[addr_of_1197_sample_start_] 
        $T[addr_of_1197_sample_completed_] 
        $T[addr_of_1197_update_start_] 
        $T[addr_of_1197_update_completed_] 
        $T[array_obj_ref_1196_root_address_calculated] 
        $T[array_obj_ref_1196_offset_calculated] 
        $T[array_obj_ref_1196_index_resized_0] 
        $T[array_obj_ref_1196_index_scaled_0] 
        $T[array_obj_ref_1196_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1196_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_1196_index_computed_0
        ;;[array_obj_ref_1196_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1196_index_computed_0 &-> (array_obj_ref_1196_index_resize_0)
        array_obj_ref_1196_index_resized_0 <-& (array_obj_ref_1196_index_resize_0)
        ;;[array_obj_ref_1196_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1196_index_resized_0 &-> (array_obj_ref_1196_index_scale_0)
        array_obj_ref_1196_index_scaled_0 <-& (array_obj_ref_1196_index_scale_0)
        ;;[array_obj_ref_1196_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1196_index_scaled_0 &-> (array_obj_ref_1196_final_index_sum_regn)
        array_obj_ref_1196_offset_calculated <-& (array_obj_ref_1196_final_index_sum_regn)
        ;;[array_obj_ref_1196_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1196_offset_calculated &-> (array_obj_ref_1196_base_plus_offset)
        array_obj_ref_1196_root_address_calculated <-& (array_obj_ref_1196_base_plus_offset)
        ;;[addr_of_1197_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1197_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1197_sample_start_ <-& (array_obj_ref_1196_root_address_calculated)
        addr_of_1197_sample_start_ &-> (addr_of_1197_request)
        addr_of_1197_sample_completed_ <-& (addr_of_1197_request)
        addr_of_1197_update_start_ &-> (addr_of_1197_complete)
        addr_of_1197_update_completed_ <-& (addr_of_1197_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(aPriori[indvar])
        // start:  		iNsTr_6 := ->(scevgep)
        //  file prog.linked.opt.aa, line 560
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_1201_sample_start_] 
        $T[ptr_deref_1201_sample_completed_] 
        $T[ptr_deref_1201_update_start_] 
        $T[ptr_deref_1201_update_completed_] 
        $T[ptr_deref_1201_base_address_calculated] 
        // scevgep
        $T[ptr_deref_1201_word_address_calculated] 
        $T[ptr_deref_1201_root_address_calculated] 
        $T[ptr_deref_1201_base_address_resized] 
        ;;[ptr_deref_1201_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1201_base_address_calculated &-> (ptr_deref_1201_base_addr_resize)
        ptr_deref_1201_base_address_resized <-& (ptr_deref_1201_base_addr_resize)
        ;;[ptr_deref_1201_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1201_base_address_resized &-> (ptr_deref_1201_base_plus_offset)
        ptr_deref_1201_root_address_calculated <-& (ptr_deref_1201_base_plus_offset)
        ;;[ptr_deref_1201_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1201_root_address_calculated &-> (ptr_deref_1201_word_addrgen)
        ptr_deref_1201_word_address_calculated <-& (ptr_deref_1201_word_addrgen)
        ;;[ptr_deref_1201_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1201_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1201_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1201_sample_start_ <-& (ptr_deref_1201_word_address_calculated)
        ptr_deref_1201_sample_start_ &-> (ptr_deref_1201_Sample)
        ptr_deref_1201_sample_completed_ <-& (ptr_deref_1201_Sample)
        ptr_deref_1201_sample_completed_ &-> ($null)
        ptr_deref_1201_update_start_ &-> (ptr_deref_1201_Update)
        ptr_deref_1201_update_completed_ <-& (ptr_deref_1201_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_1201_base_address_calculated
        ptr_deref_1201_base_address_calculated <-& (addr_of_1197_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_1201_base_address_calculated
        ptr_deref_1201_sample_start_ <-& (ptr_deref_1201_base_address_calculated)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := ->(scevgep)
        // start:  		->(scevgep5) := iNsTr_6
        //  file prog.linked.opt.aa, line 561
        // Source expression
        // iNsTr_6
        // Target expression
        // ->(scevgep5)
        $T[ptr_deref_1204_sample_start_] 
        $T[ptr_deref_1204_sample_completed_] 
        $T[ptr_deref_1204_update_start_] 
        $T[ptr_deref_1204_update_completed_] 
        $T[ptr_deref_1204_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_1204_word_address_calculated] 
        $T[ptr_deref_1204_root_address_calculated] 
        $T[ptr_deref_1204_base_address_resized] 
        ;;[ptr_deref_1204_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1204_base_address_calculated &-> (ptr_deref_1204_base_addr_resize)
        ptr_deref_1204_base_address_resized <-& (ptr_deref_1204_base_addr_resize)
        ;;[ptr_deref_1204_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1204_base_address_resized &-> (ptr_deref_1204_base_plus_offset)
        ptr_deref_1204_root_address_calculated <-& (ptr_deref_1204_base_plus_offset)
        ;;[ptr_deref_1204_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1204_root_address_calculated &-> (ptr_deref_1204_word_addrgen)
        ptr_deref_1204_word_address_calculated <-& (ptr_deref_1204_word_addrgen)
        ;;[ptr_deref_1204_Sample] 
        {
          ;;[ptr_deref_1204_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1204_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1204_sample_start_ <-& (ptr_deref_1204_word_address_calculated)
        ptr_deref_1204_sample_start_ &-> (ptr_deref_1204_Sample)
        ptr_deref_1204_sample_completed_ <-& (ptr_deref_1204_Sample)
        ptr_deref_1204_sample_completed_ &-> ($null)
        ptr_deref_1204_update_start_ &-> (ptr_deref_1204_Update)
        ptr_deref_1204_update_completed_ <-& (ptr_deref_1204_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_1204_base_address_calculated
        ptr_deref_1204_base_address_calculated <-& (addr_of_1192_update_completed_)
        // done: Forward dependencies from scevgep5 to transition ptr_deref_1204_base_address_calculated
        ptr_deref_1204_sample_start_ <-& (ptr_deref_1204_base_address_calculated)
        // start: Forward dependencies from iNsTr_6 to transition ptr_deref_1204_sample_start_
        ptr_deref_1204_sample_start_ <-& (ptr_deref_1201_update_completed_)
        // done: Forward dependencies from iNsTr_6 to transition ptr_deref_1204_sample_start_
        // end:  		->(scevgep5) := iNsTr_6
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 562
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1211_sample_start_] 
        $T[ADD_u64_u64_1211_sample_completed_] 
        $T[ADD_u64_u64_1211_update_start_] 
        $T[ADD_u64_u64_1211_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_1211_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_1211_sample_start_
        ;;[ADD_u64_u64_1211_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1211_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1211_sample_start_ &-> (ADD_u64_u64_1211_Sample)
        ADD_u64_u64_1211_sample_completed_ <-& (ADD_u64_u64_1211_Sample)
        ADD_u64_u64_1211_sample_completed_ &-> ($null)
        ADD_u64_u64_1211_update_start_ &-> (ADD_u64_u64_1211_Update)
        ADD_u64_u64_1211_update_completed_ <-& (ADD_u64_u64_1211_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 563
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_1216_sample_start_] 
        $T[EQ_u64_u1_1216_sample_completed_] 
        $T[EQ_u64_u1_1216_update_start_] 
        $T[EQ_u64_u1_1216_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1216_sample_start_
        EQ_u64_u1_1216_sample_start_ <-& (ADD_u64_u64_1211_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1216_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_1216_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_1216_sample_start_
        ;;[EQ_u64_u1_1216_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1216_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1216_sample_start_ &-> (EQ_u64_u1_1216_Sample)
        EQ_u64_u1_1216_sample_completed_ <-& (EQ_u64_u1_1216_Sample)
        EQ_u64_u1_1216_sample_completed_ &-> ($null)
        EQ_u64_u1_1216_update_start_ &-> (EQ_u64_u1_1216_Update)
        EQ_u64_u1_1216_update_completed_ <-& (EQ_u64_u1_1216_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
      }
      assign_stmt_1193_to_assign_stmt_1217__entry__ |-> (assign_stmt_1193_to_assign_stmt_1217)
      assign_stmt_1193_to_assign_stmt_1217__exit__ <-| (assign_stmt_1193_to_assign_stmt_1217)
      // if-statement  
      //  file prog.linked.opt.aa, line 564
      ;;[if_stmt_1218_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1218__entry__ |-> (if_stmt_1218_dead_link)
      if_stmt_1218__exit__ <-| (if_stmt_1218_dead_link)
      ;;[if_stmt_1218_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1218__entry__ |-> (if_stmt_1218_eval_test)
      $P [R_exitcond1_1219_place]
      R_exitcond1_1219_place <-| (if_stmt_1218_eval_test)
      ;;[if_stmt_1218_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1218_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_1219_place |-> (if_stmt_1218_if_link if_stmt_1218_else_link)
      $P [bb_2_xx_x_crit_edgex_xloopexit]
      bb_2_xx_x_crit_edgex_xloopexit <-| (if_stmt_1218_if_link)
      $P [bb_2_bb_2]
      bb_2_bb_2 <-| (if_stmt_1218_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 547
      ;;[merge_stmt_1149_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1149__entry__ |-> (merge_stmt_1149_dead_link)
      merge_stmt_1149__exit__ <-| (merge_stmt_1149_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 547  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_1149_PhiReqMerge] 
      merge_stmt_1149_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_1149_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1149_PhiReqMerge |-> (merge_stmt_1149_PhiAck)
      merge_stmt_1149__exit__  <-| (merge_stmt_1149_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 547  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 555
      //---------------------   merge statement  file prog.linked.opt.aa, line 555  --------------------------
      ||[bb_2_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1181] 
        {
          ||[phi_stmt_1181_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_1187] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1181_req] 
        }
      }
      bb_2_bb_2 |-> (bb_2_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1181] 
        {
          ||[phi_stmt_1181_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1185_konst_delay_trans] $delay
          }
          $T [phi_stmt_1181_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_1180_PhiReqMerge] 
      merge_stmt_1180_PhiReqMerge <-| ( bb_2_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_1180_PhiAck] 
      {
        $T [phi_stmt_1181_ack] 
      }
      merge_stmt_1180_PhiReqMerge |-> (merge_stmt_1180_PhiAck)
      merge_stmt_1180__exit__  <-| (merge_stmt_1180_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 555  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 569
      ;;[merge_stmt_1224_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1224__entry__ |-> (merge_stmt_1224_dead_link)
      merge_stmt_1224__exit__ <-| (merge_stmt_1224_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 569  --------------------------
      ||[bb_2_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_xx_x_crit_edgex_xloopexit |-> (bb_2_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_1224_PhiReqMerge] 
      merge_stmt_1224_PhiReqMerge <-| ( bb_2_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_1224_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1224_PhiReqMerge |-> (merge_stmt_1224_PhiAck)
      merge_stmt_1224__exit__  <-| (merge_stmt_1224_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 569  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 572
      //---------------------   merge statement  file prog.linked.opt.aa, line 572  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_1226_PhiReqMerge] 
      merge_stmt_1226_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_1226_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1226_PhiReqMerge |-> (merge_stmt_1226_PhiAck)
      merge_stmt_1226__exit__  <-| (merge_stmt_1226_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 572  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 575
      //---------------------   merge statement  file prog.linked.opt.aa, line 575  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1228_PhiReqMerge] 
      merge_stmt_1228_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1228_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1228_PhiReqMerge |-> (merge_stmt_1228_PhiAck)
      merge_stmt_1228__exit__  <-| (merge_stmt_1228_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 575  --------------------------
      assign_stmt_1136_to_assign_stmt_1142__entry__ <-| (branch_block_stmt_1133__entry__)
      if_stmt_1143__entry__ <-| (assign_stmt_1136_to_assign_stmt_1142__exit__)
      merge_stmt_1149__entry__ <-| (if_stmt_1143__exit__)
      assign_stmt_1155_to_assign_stmt_1178__entry__ <-| (merge_stmt_1149__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_1155_to_assign_stmt_1178__exit__)
      assign_stmt_1193_to_assign_stmt_1217__entry__ <-| (merge_stmt_1180__exit__)
      if_stmt_1218__entry__ <-| (assign_stmt_1193_to_assign_stmt_1217__exit__)
      merge_stmt_1224__entry__ <-| (if_stmt_1218__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_1224__exit__)
      return__ <-| (merge_stmt_1226__exit__)
      merge_stmt_1228__exit__ |-> (branch_block_stmt_1133__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 547
    // constant-object-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 555
    // constant-object-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 569
    // constant-object-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 572
    // constant-object-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 575
    // constant-object-declarations for block %initialize_aPosteriori%body
    //  file prog.linked.opt.aa, line 538
    // constant-object-declarations for block %initialize_aPosteriori
    //  file prog.linked.opt.aa, line 533
    // constant-declarations for block %initialize_aPosteriori%body
    //  file prog.linked.opt.aa, line 538
    // ncols
    $constant $W[LOAD_ncols_1135_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1140_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 542
    // constant-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 547
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1153_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1159_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1169_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1176_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 555
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 556
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1185_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(aPosteriori[indvar])
    $constant $W[array_obj_ref_1191_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1191_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(aPriori[indvar])
    $constant $W[array_obj_ref_1196_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1196_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_1201_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgep5)
    $constant $W[ptr_deref_1204_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1210_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 564
    // constant-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 569
    // constant-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 572
    // constant-declarations for block %initialize_aPosteriori%body%
    //  file prog.linked.opt.aa, line 575
    // block %initialize_aPosteriori%body
    //  file prog.linked.opt.aa, line 538
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 540
    // ncols
    $W[LOAD_ncols_1135_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_1136] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 541
    // iNsTr_1
    $W[iNsTr_1_1142] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 542
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 549
    // tmp
    $W[tmp_1155] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 550
    // xx_xop
    $W[xx_xop_1161] : $int<16>
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 551
    // iNsTr_4
    $W[iNsTr_4_1165] : $int<64>
    // 		xx_xop6 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 552
    // xx_xop6
    $W[xx_xop6_1171] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 553
    // tmp4
    $W[tmp4_1178] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 555
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 556
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_1187_wire] : $int<64>
    // indvar
    $W[indvar_1181] : $int<64>
    // 		scevgep5 := @(aPosteriori[indvar])
    //  file prog.linked.opt.aa, line 558
    // @(aPosteriori[indvar])
    $intermediate $W[R_indvar_1190_resized] : $int<10>
    $intermediate $W[R_indvar_1190_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1191_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1191_root_address] : $int<10>
    // scevgep5
    $W[scevgep5_1193] : $int<32>
    // 		scevgep := @(aPriori[indvar])
    //  file prog.linked.opt.aa, line 559
    // @(aPriori[indvar])
    $intermediate $W[R_indvar_1195_resized] : $int<10>
    $intermediate $W[R_indvar_1195_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1196_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1196_root_address] : $int<10>
    // scevgep
    $W[scevgep_1198] : $int<32>
    // 		iNsTr_6 := ->(scevgep)
    //  file prog.linked.opt.aa, line 560
    // ->(scevgep)
    $intermediate $W[ptr_deref_1201_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1201_root_address] : $int<10>
    $W[ptr_deref_1201_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1201_data_0] : $int<32>
    // iNsTr_6
    $W[iNsTr_6_1202] : $float<8,23>
    // 		->(scevgep5) := iNsTr_6
    //  file prog.linked.opt.aa, line 561
    // ->(scevgep5)
    $intermediate $W[ptr_deref_1204_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1204_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1204_root_address] : $int<10>
    $W[ptr_deref_1204_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_1204_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 562
    // indvarx_xnext
    $W[indvarx_xnext_1212] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 563
    // exitcond1
    $W[exitcond1_1217] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 564
    // datapath-instances for block %initialize_aPosteriori%body
    //  file prog.linked.opt.aa, line 538
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 540
    // ncols
    $load [LOAD_ncols_1135_load_0] $from memory_space_11 (LOAD_ncols_1135_word_address_0) (LOAD_ncols_1135_data_0) 
    $delay LOAD_ncols_1135_load_0 4
    &/ [LOAD_ncols_1135_gather_scatter] (LOAD_ncols_1135_data_0) (iNsTr_0_1136) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 541
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1141_inst] (iNsTr_0_1136 type_cast_1140_wire_constant) (iNsTr_1_1142)   
    $buffering  $out EQ_u16_u1_1141_inst iNsTr_1_1142 1
    $delay EQ_u16_u1_1141_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 542
    ==0? [if_stmt_1143_branch] (iNsTr_1_1142)
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 549
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1154_inst] (iNsTr_0_1136 type_cast_1153_wire_constant) (tmp_1155)   
    $buffering  $out UGT_u16_u1_1154_inst tmp_1155 1
    $delay UGT_u16_u1_1154_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 550
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1160_inst] (iNsTr_0_1136 type_cast_1159_wire_constant) (xx_xop_1161)   
    $buffering  $out ADD_u16_u16_1160_inst xx_xop_1161 1
    $delay ADD_u16_u16_1160_inst 1
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 551
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_1164_inst] (xx_xop_1161) (iNsTr_4_1165)   
    $buffering  $out type_cast_1164_inst iNsTr_4_1165 1
    $delay type_cast_1164_inst 1
    // 		xx_xop6 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 552
    // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1170_inst] (iNsTr_4_1165 type_cast_1169_wire_constant) (xx_xop6_1171)   
    $buffering  $out ADD_u64_u64_1170_inst xx_xop6_1171 1
    $delay ADD_u64_u64_1170_inst 1
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 553
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1177_inst] (tmp_1155 xx_xop6_1171 type_cast_1176_wire_constant) (tmp4_1178) 
    $buffering  $out MUX_1177_inst tmp4_1178 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 555
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 556
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_1187_inst] (indvarx_xnext_1212) (type_cast_1187_wire)   
    $buffering  $out type_cast_1187_inst type_cast_1187_wire 1
    $delay type_cast_1187_inst 1
    $phi [phi_stmt_1181] (type_cast_1185_wire_constant type_cast_1187_wire) ( indvar_1181 ) 
    // 		scevgep5 := @(aPosteriori[indvar])
    //  file prog.linked.opt.aa, line 558
    &/ [array_obj_ref_1191_index_0_resize] (indvar_1181) (R_indvar_1190_resized) 
    $flowthrough 
    &/ [array_obj_ref_1191_index_0_rename] (R_indvar_1190_resized) (R_indvar_1190_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1191_index_offset] (R_indvar_1190_scaled) (array_obj_ref_1191_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1191_root_address_inst] (array_obj_ref_1191_final_offset) (array_obj_ref_1191_root_address) 
    $flowthrough 
    # := [addr_of_1192_final_reg] (array_obj_ref_1191_root_address) (scevgep5_1193)   
    $buffering  $out addr_of_1192_final_reg scevgep5_1193 1
    // 		scevgep := @(aPriori[indvar])
    //  file prog.linked.opt.aa, line 559
    &/ [array_obj_ref_1196_index_0_resize] (indvar_1181) (R_indvar_1195_resized) 
    $flowthrough 
    &/ [array_obj_ref_1196_index_0_rename] (R_indvar_1195_resized) (R_indvar_1195_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1196_index_offset] (R_indvar_1195_scaled) (array_obj_ref_1196_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1196_root_address_inst] (array_obj_ref_1196_final_offset) (array_obj_ref_1196_root_address) 
    $flowthrough 
    # := [addr_of_1197_final_reg] (array_obj_ref_1196_root_address) (scevgep_1198)   
    $buffering  $out addr_of_1197_final_reg scevgep_1198 1
    // 		iNsTr_6 := ->(scevgep)
    //  file prog.linked.opt.aa, line 560
    // ->(scevgep)
    &/ [ptr_deref_1201_base_resize] (scevgep_1198) (ptr_deref_1201_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1201_root_address_inst] (ptr_deref_1201_resized_base_address) (ptr_deref_1201_root_address) 
    $flowthrough 
    &/ [ptr_deref_1201_addr_0] (ptr_deref_1201_root_address) (ptr_deref_1201_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1201_load_0] $from memory_space_2 (ptr_deref_1201_word_address_0) (ptr_deref_1201_data_0) 
    $delay ptr_deref_1201_load_0 4
    &/ [ptr_deref_1201_gather_scatter] (ptr_deref_1201_data_0) (iNsTr_6_1202) 
    $flowthrough 
    // 		->(scevgep5) := iNsTr_6
    //  file prog.linked.opt.aa, line 561
    // ->(scevgep5)
    &/ [ptr_deref_1204_base_resize] (scevgep5_1193) (ptr_deref_1204_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1204_root_address_inst] (ptr_deref_1204_resized_base_address) (ptr_deref_1204_root_address) 
    $flowthrough 
    &/ [ptr_deref_1204_addr_0] (ptr_deref_1204_root_address) (ptr_deref_1204_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1204_store_0] $to memory_space_1 (ptr_deref_1204_word_address_0 ptr_deref_1204_data_0) 
    $delay ptr_deref_1204_store_0 4
    &/ [ptr_deref_1204_gather_scatter] (iNsTr_6_1202) (ptr_deref_1204_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 562
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1211_inst] (indvar_1181 type_cast_1210_wire_constant) (indvarx_xnext_1212)   
    $buffering  $out ADD_u64_u64_1211_inst indvarx_xnext_1212 1
    $delay ADD_u64_u64_1211_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 563
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_1216_inst] (indvarx_xnext_1212 tmp4_1178) (exitcond1_1217)   
    $buffering  $out EQ_u64_u1_1216_inst exitcond1_1217 1
    $delay EQ_u64_u1_1216_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 564
    ==0? [if_stmt_1218_branch] (exitcond1_1217)
  }
  // end data-path
  // 		iNsTr_0 := ncols
  //  file prog.linked.opt.aa, line 540
  // ncols
  LOAD_ncols_1135_gather_scatter <=> (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Update/LOAD_ncols_1135_Merge/merge_req) (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Update/LOAD_ncols_1135_Merge/merge_ack)
  LOAD_ncols_1135_load_0 <=> (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Sample/word_access_start/word_0/rr branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Update/word_access_complete/word_0/cr) (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Sample/word_access_start/word_0/ra branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/LOAD_ncols_1135_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 541
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_1141_inst <=> (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/EQ_u16_u1_1141_Sample/rr branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/EQ_u16_u1_1141_Update/cr) (branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/EQ_u16_u1_1141_Sample/ra branch_block_stmt_1133/assign_stmt_1136_to_assign_stmt_1142/EQ_u16_u1_1141_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 542
  if_stmt_1143_branch <=> (branch_block_stmt_1133/if_stmt_1143_eval_test/branch_req) (branch_block_stmt_1133/if_stmt_1143_else_link/else_choice_transition branch_block_stmt_1133/if_stmt_1143_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 547
  // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 549
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_1154_inst <=> (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/UGT_u16_u1_1154_Sample/rr branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/UGT_u16_u1_1154_Update/cr) (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/UGT_u16_u1_1154_Sample/ra branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/UGT_u16_u1_1154_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 550
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_1160_inst <=> (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u16_u16_1160_Sample/rr branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u16_u16_1160_Update/cr) (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u16_u16_1160_Sample/ra branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u16_u16_1160_Update/ca)
  // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 551
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_1164_inst <=> (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/type_cast_1164_Sample/rr branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/type_cast_1164_Update/cr) (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/type_cast_1164_Sample/ra branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/type_cast_1164_Update/ca)
  // 		xx_xop6 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 552
  // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_4
  ADD_u64_u64_1170_inst <=> (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u64_u64_1170_Sample/rr branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u64_u64_1170_Update/cr) (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u64_u64_1170_Sample/ra branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/ADD_u64_u64_1170_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 553
  // tmp
  // xx_xop6
  // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1177_inst <=> (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/MUX_1177_start/req branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/MUX_1177_complete/req) (branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/MUX_1177_start/ack branch_block_stmt_1133/assign_stmt_1155_to_assign_stmt_1178/MUX_1177_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 555
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_1187_inst <=> (branch_block_stmt_1133/bb_2_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_sources/type_cast_1187/SplitProtocol/Sample/rr branch_block_stmt_1133/bb_2_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_sources/type_cast_1187/SplitProtocol/Update/cr) (branch_block_stmt_1133/bb_2_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_sources/type_cast_1187/SplitProtocol/Sample/ra branch_block_stmt_1133/bb_2_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_sources/type_cast_1187/SplitProtocol/Update/ca)
  phi_stmt_1181 <=> (branch_block_stmt_1133/bbx_xnph_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_req branch_block_stmt_1133/bb_2_bb_2_PhiReq/phi_stmt_1181/phi_stmt_1181_req) (branch_block_stmt_1133/merge_stmt_1180_PhiAck/phi_stmt_1181_ack)
  // 		scevgep5 := @(aPosteriori[indvar])
  //  file prog.linked.opt.aa, line 558
  // indvar
  array_obj_ref_1191_index_0_resize <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_index_resize_0/index_resize_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_index_resize_0/index_resize_ack)
  array_obj_ref_1191_index_0_rename <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_index_scale_0/scale_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_index_scale_0/scale_rename_ack)
  array_obj_ref_1191_index_offset <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_final_index_sum_regn/req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_final_index_sum_regn/ack)
  array_obj_ref_1191_root_address_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_base_plus_offset/sum_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1191_base_plus_offset/sum_rename_ack)
  addr_of_1192_final_reg <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1192_request/req branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1192_complete/req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1192_request/ack branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1192_complete/ack)
  // 		scevgep := @(aPriori[indvar])
  //  file prog.linked.opt.aa, line 559
  // indvar
  array_obj_ref_1196_index_0_resize <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_index_resize_0/index_resize_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_index_resize_0/index_resize_ack)
  array_obj_ref_1196_index_0_rename <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_index_scale_0/scale_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_index_scale_0/scale_rename_ack)
  array_obj_ref_1196_index_offset <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_final_index_sum_regn/req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_final_index_sum_regn/ack)
  array_obj_ref_1196_root_address_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_base_plus_offset/sum_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/array_obj_ref_1196_base_plus_offset/sum_rename_ack)
  addr_of_1197_final_reg <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1197_request/req branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1197_complete/req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1197_request/ack branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/addr_of_1197_complete/ack)
  // 		iNsTr_6 := ->(scevgep)
  //  file prog.linked.opt.aa, line 560
  // scevgep
  ptr_deref_1201_base_resize <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_base_addr_resize/base_resize_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_base_addr_resize/base_resize_ack)
  ptr_deref_1201_root_address_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_base_plus_offset/sum_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_base_plus_offset/sum_rename_ack)
  ptr_deref_1201_addr_0 <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_word_addrgen/root_register_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_word_addrgen/root_register_ack)
  ptr_deref_1201_gather_scatter <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Update/ptr_deref_1201_Merge/merge_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Update/ptr_deref_1201_Merge/merge_ack)
  ptr_deref_1201_load_0 <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Sample/word_access_start/word_0/rr branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Update/word_access_complete/word_0/cr) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Sample/word_access_start/word_0/ra branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1201_Update/word_access_complete/word_0/ca)
  // 		->(scevgep5) := iNsTr_6
  //  file prog.linked.opt.aa, line 561
  // iNsTr_6
  // scevgep5
  ptr_deref_1204_base_resize <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_base_addr_resize/base_resize_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_base_addr_resize/base_resize_ack)
  ptr_deref_1204_root_address_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_base_plus_offset/sum_rename_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_base_plus_offset/sum_rename_ack)
  ptr_deref_1204_addr_0 <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_word_addrgen/root_register_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_word_addrgen/root_register_ack)
  ptr_deref_1204_gather_scatter <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Sample/ptr_deref_1204_Split/split_req) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Sample/ptr_deref_1204_Split/split_ack)
  ptr_deref_1204_store_0 <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Sample/word_access_start/word_0/rr branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Update/word_access_complete/word_0/cr) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Sample/word_access_start/word_0/ra branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ptr_deref_1204_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 562
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_1211_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ADD_u64_u64_1211_Sample/rr branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ADD_u64_u64_1211_Update/cr) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ADD_u64_u64_1211_Sample/ra branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/ADD_u64_u64_1211_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 563
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_1216_inst <=> (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/EQ_u64_u1_1216_Sample/rr branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/EQ_u64_u1_1216_Update/cr) (branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/EQ_u64_u1_1216_Sample/ra branch_block_stmt_1133/assign_stmt_1193_to_assign_stmt_1217/EQ_u64_u1_1216_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 564
  if_stmt_1218_branch <=> (branch_block_stmt_1133/if_stmt_1218_eval_test/branch_req) (branch_block_stmt_1133/if_stmt_1218_else_link/else_choice_transition branch_block_stmt_1133/if_stmt_1218_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 569
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 572
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 575
}
$module [initialize_aPriori] 
{
  // pipe-declarations for block %initialize_aPriori
  //  file prog.linked.opt.aa, line 579
  // pipe-declarations for block %initialize_aPriori%body
  //  file prog.linked.opt.aa, line 584
  // pipe-declarations for block %initialize_aPriori%body%
  //  file prog.linked.opt.aa, line 593
  // pipe-declarations for block %initialize_aPriori%body%
  //  file prog.linked.opt.aa, line 604
  // pipe-declarations for block %initialize_aPriori%body%
  //  file prog.linked.opt.aa, line 620
  // pipe-declarations for block %initialize_aPriori%body%
  //  file prog.linked.opt.aa, line 623
  // pipe-declarations for block %initialize_aPriori%body%
  //  file prog.linked.opt.aa, line 626
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1232] // Branch Block  file prog.linked.opt.aa, line 584
    {
      $P [branch_block_stmt_1232__entry__]
      branch_block_stmt_1232__entry__ <-| ($entry)
      $P [branch_block_stmt_1232__exit__]
      branch_block_stmt_1232__exit__ |-> ($exit)
      $P [assign_stmt_1235_to_assign_stmt_1241__entry__] 
      $P [assign_stmt_1235_to_assign_stmt_1241__exit__] 
      $P [if_stmt_1242__entry__] 
      $P [if_stmt_1242__exit__] 
      $P [merge_stmt_1248__entry__] 
      $P [merge_stmt_1248__exit__] 
      $P [assign_stmt_1251_to_assign_stmt_1288__entry__] 
      $P [assign_stmt_1251_to_assign_stmt_1288__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_1290__exit__] 
      $P [assign_stmt_1303_to_assign_stmt_1338__entry__] 
      $P [assign_stmt_1303_to_assign_stmt_1338__exit__] 
      $P [if_stmt_1339__entry__] 
      $P [if_stmt_1339__exit__] 
      $P [merge_stmt_1345__entry__] 
      $P [merge_stmt_1345__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_1347__exit__] 
      $P [return__]
      $P [merge_stmt_1349__exit__] 
      ::[assign_stmt_1235_to_assign_stmt_1241] 
      {
        // start:  		iNsTr_0 := ncols
        //  file prog.linked.opt.aa, line 586
        // Source expression
        // ncols
        $T[LOAD_ncols_1234_sample_start_] 
        $T[LOAD_ncols_1234_sample_completed_] 
        $T[LOAD_ncols_1234_update_start_] 
        $T[LOAD_ncols_1234_update_completed_] 
        $T[LOAD_ncols_1234_word_address_calculated] 
        $T[LOAD_ncols_1234_root_address_calculated] 
        LOAD_ncols_1234_word_address_calculated <-& (LOAD_ncols_1234_root_address_calculated)
        ;;[LOAD_ncols_1234_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_1234_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_1234_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_1234_sample_start_ <-& (LOAD_ncols_1234_word_address_calculated)
        LOAD_ncols_1234_sample_start_ &-> (LOAD_ncols_1234_Sample)
        LOAD_ncols_1234_sample_completed_ <-& (LOAD_ncols_1234_Sample)
        LOAD_ncols_1234_sample_completed_ &-> ($null)
        LOAD_ncols_1234_update_start_ &-> (LOAD_ncols_1234_Update)
        LOAD_ncols_1234_update_completed_ <-& (LOAD_ncols_1234_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncols
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 587
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1240_sample_start_] 
        $T[EQ_u16_u1_1240_sample_completed_] 
        $T[EQ_u16_u1_1240_update_start_] 
        $T[EQ_u16_u1_1240_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1240_sample_start_
        EQ_u16_u1_1240_sample_start_ <-& (LOAD_ncols_1234_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_1240_sample_start_
        ;;[EQ_u16_u1_1240_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1240_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1240_sample_start_ &-> (EQ_u16_u1_1240_Sample)
        EQ_u16_u1_1240_sample_completed_ <-& (EQ_u16_u1_1240_Sample)
        EQ_u16_u1_1240_sample_completed_ &-> ($null)
        EQ_u16_u1_1240_update_start_ &-> (EQ_u16_u1_1240_Update)
        EQ_u16_u1_1240_update_completed_ <-& (EQ_u16_u1_1240_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1235_to_assign_stmt_1241__entry__ |-> (assign_stmt_1235_to_assign_stmt_1241)
      assign_stmt_1235_to_assign_stmt_1241__exit__ <-| (assign_stmt_1235_to_assign_stmt_1241)
      // if-statement  
      //  file prog.linked.opt.aa, line 588
      ;;[if_stmt_1242_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1242__entry__ |-> (if_stmt_1242_dead_link)
      if_stmt_1242__exit__ <-| (if_stmt_1242_dead_link)
      ;;[if_stmt_1242_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1242__entry__ |-> (if_stmt_1242_eval_test)
      $P [R_iNsTr_1_1243_place]
      R_iNsTr_1_1243_place <-| (if_stmt_1242_eval_test)
      ;;[if_stmt_1242_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1242_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_1243_place |-> (if_stmt_1242_if_link if_stmt_1242_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_1242_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_1242_else_link)
      ::[assign_stmt_1251_to_assign_stmt_1288] 
      {
        // start:  		iNsTr_4 := ebbyNo
        //  file prog.linked.opt.aa, line 595
        // Source expression
        // ebbyNo
        $T[LOAD_ebbyNo_1250_sample_start_] 
        $T[LOAD_ebbyNo_1250_sample_completed_] 
        $T[LOAD_ebbyNo_1250_update_start_] 
        $T[LOAD_ebbyNo_1250_update_completed_] 
        $T[LOAD_ebbyNo_1250_word_address_calculated] 
        $T[LOAD_ebbyNo_1250_root_address_calculated] 
        LOAD_ebbyNo_1250_word_address_calculated <-& (LOAD_ebbyNo_1250_root_address_calculated)
        ;;[LOAD_ebbyNo_1250_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ebbyNo_1250_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ebbyNo_1250_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ebbyNo_1250_sample_start_ <-& (LOAD_ebbyNo_1250_word_address_calculated)
        LOAD_ebbyNo_1250_sample_start_ &-> (LOAD_ebbyNo_1250_Sample)
        LOAD_ebbyNo_1250_sample_completed_ <-& (LOAD_ebbyNo_1250_Sample)
        LOAD_ebbyNo_1250_sample_completed_ &-> ($null)
        LOAD_ebbyNo_1250_update_start_ &-> (LOAD_ebbyNo_1250_Update)
        LOAD_ebbyNo_1250_update_completed_ <-& (LOAD_ebbyNo_1250_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ebbyNo
        // start:  		iNsTr_5 := rate
        //  file prog.linked.opt.aa, line 596
        // Source expression
        // rate
        $T[LOAD_rate_1253_sample_start_] 
        $T[LOAD_rate_1253_sample_completed_] 
        $T[LOAD_rate_1253_update_start_] 
        $T[LOAD_rate_1253_update_completed_] 
        $T[LOAD_rate_1253_word_address_calculated] 
        $T[LOAD_rate_1253_root_address_calculated] 
        LOAD_rate_1253_word_address_calculated <-& (LOAD_rate_1253_root_address_calculated)
        ;;[LOAD_rate_1253_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_rate_1253_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_rate_1253_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_rate_1253_sample_start_ <-& (LOAD_rate_1253_word_address_calculated)
        LOAD_rate_1253_sample_start_ &-> (LOAD_rate_1253_Sample)
        LOAD_rate_1253_sample_completed_ <-& (LOAD_rate_1253_Sample)
        LOAD_rate_1253_sample_completed_ &-> ($null)
        LOAD_rate_1253_update_start_ &-> (LOAD_rate_1253_Update)
        LOAD_rate_1253_update_completed_ <-& (LOAD_rate_1253_Update)
        // Target expression
        // (as target) iNsTr_5
        // start: WAR dependencies for iNsTr_5
        // done: WAR dependencies for iNsTr_5
        // end:  		iNsTr_5 := rate
        // start:  		iNsTr_6 := (iNsTr_5 * iNsTr_4)
        //  file prog.linked.opt.aa, line 597
        // Source expression
        // (iNsTr_5 * iNsTr_4)
        $T[MUL_f32_f32_1258_sample_start_] 
        $T[MUL_f32_f32_1258_sample_completed_] 
        $T[MUL_f32_f32_1258_update_start_] 
        $T[MUL_f32_f32_1258_update_completed_] 
        // iNsTr_5
        // iNsTr_4
        // start: Forward dependencies from iNsTr_5 to transition MUL_f32_f32_1258_sample_start_
        MUL_f32_f32_1258_sample_start_ <-& (LOAD_rate_1253_update_completed_)
        // done: Forward dependencies from iNsTr_5 to transition MUL_f32_f32_1258_sample_start_
        // start: Forward dependencies from iNsTr_4 to transition MUL_f32_f32_1258_sample_start_
        MUL_f32_f32_1258_sample_start_ <-& (LOAD_ebbyNo_1250_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition MUL_f32_f32_1258_sample_start_
        ;;[MUL_f32_f32_1258_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1258_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1258_sample_start_ &-> (MUL_f32_f32_1258_Sample)
        MUL_f32_f32_1258_sample_completed_ <-& (MUL_f32_f32_1258_Sample)
        MUL_f32_f32_1258_sample_completed_ &-> ($null)
        MUL_f32_f32_1258_update_start_ &-> (MUL_f32_f32_1258_Update)
        MUL_f32_f32_1258_update_completed_ <-& (MUL_f32_f32_1258_Update)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := (iNsTr_5 * iNsTr_4)
        // start:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 598
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1264_sample_start_] 
        $T[UGT_u16_u1_1264_sample_completed_] 
        $T[UGT_u16_u1_1264_update_start_] 
        $T[UGT_u16_u1_1264_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1264_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_1264_sample_start_
        ;;[UGT_u16_u1_1264_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1264_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1264_sample_start_ &-> (UGT_u16_u1_1264_Sample)
        UGT_u16_u1_1264_sample_completed_ <-& (UGT_u16_u1_1264_Sample)
        UGT_u16_u1_1264_sample_completed_ &-> ($null)
        UGT_u16_u1_1264_update_start_ &-> (UGT_u16_u1_1264_Update)
        UGT_u16_u1_1264_update_completed_ <-& (UGT_u16_u1_1264_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 599
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1270_sample_start_] 
        $T[ADD_u16_u16_1270_sample_completed_] 
        $T[ADD_u16_u16_1270_update_start_] 
        $T[ADD_u16_u16_1270_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1270_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_1270_sample_start_
        ;;[ADD_u16_u16_1270_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1270_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1270_sample_start_ &-> (ADD_u16_u16_1270_Sample)
        ADD_u16_u16_1270_sample_completed_ <-& (ADD_u16_u16_1270_Sample)
        ADD_u16_u16_1270_sample_completed_ &-> ($null)
        ADD_u16_u16_1270_update_start_ &-> (ADD_u16_u16_1270_Update)
        ADD_u16_u16_1270_update_completed_ <-& (ADD_u16_u16_1270_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_7 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 600
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_1274_sample_start_] 
        $T[type_cast_1274_sample_completed_] 
        $T[type_cast_1274_update_start_] 
        $T[type_cast_1274_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_1274_sample_start_
        type_cast_1274_sample_start_ <-& (ADD_u16_u16_1270_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_1274_sample_start_
        ;;[type_cast_1274_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1274_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1274_sample_start_ &-> (type_cast_1274_Sample)
        type_cast_1274_sample_completed_ <-& (type_cast_1274_Sample)
        type_cast_1274_sample_completed_ &-> ($null)
        type_cast_1274_update_start_ &-> (type_cast_1274_Update)
        type_cast_1274_update_completed_ <-& (type_cast_1274_Update)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop6 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 601
        // Source expression
        // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1280_sample_start_] 
        $T[ADD_u64_u64_1280_sample_completed_] 
        $T[ADD_u64_u64_1280_update_start_] 
        $T[ADD_u64_u64_1280_update_completed_] 
        // iNsTr_7
        // start: Forward dependencies from iNsTr_7 to transition ADD_u64_u64_1280_sample_start_
        ADD_u64_u64_1280_sample_start_ <-& (type_cast_1274_update_completed_)
        // done: Forward dependencies from iNsTr_7 to transition ADD_u64_u64_1280_sample_start_
        ;;[ADD_u64_u64_1280_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1280_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1280_sample_start_ &-> (ADD_u64_u64_1280_Sample)
        ADD_u64_u64_1280_sample_completed_ <-& (ADD_u64_u64_1280_Sample)
        ADD_u64_u64_1280_sample_completed_ &-> ($null)
        ADD_u64_u64_1280_update_start_ &-> (ADD_u64_u64_1280_Update)
        ADD_u64_u64_1280_update_completed_ <-& (ADD_u64_u64_1280_Update)
        // Target expression
        // (as target) xx_xop6
        // start: WAR dependencies for xx_xop6
        // done: WAR dependencies for xx_xop6
        // end:  		xx_xop6 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 602
        // Source expression
        // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1287_sample_start_] 
        $T[MUX_1287_sample_completed_] 
        $T[MUX_1287_update_start_] 
        $T[MUX_1287_update_completed_] 
        // tmp
        // xx_xop6
        // start: Forward dependencies from tmp to transition MUX_1287_sample_start_
        MUX_1287_sample_start_ <-& (UGT_u16_u1_1264_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_1287_sample_start_
        // start: Forward dependencies from xx_xop6 to transition MUX_1287_sample_start_
        MUX_1287_sample_start_ <-& (ADD_u64_u64_1280_update_completed_)
        // done: Forward dependencies from xx_xop6 to transition MUX_1287_sample_start_
        ;;[MUX_1287_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1287_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1287_sample_start_ &-> (MUX_1287_start)
        MUX_1287_sample_completed_ <-& (MUX_1287_start)
        MUX_1287_update_start_ &-> (MUX_1287_complete)
        MUX_1287_update_completed_ <-& (MUX_1287_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1251_to_assign_stmt_1288__entry__ |-> (assign_stmt_1251_to_assign_stmt_1288)
      assign_stmt_1251_to_assign_stmt_1288__exit__ <-| (assign_stmt_1251_to_assign_stmt_1288)
      ::[assign_stmt_1303_to_assign_stmt_1338] 
      {
        // start:  		scevgep5 := @(aPriori[indvar])
        //  file prog.linked.opt.aa, line 607
        // Source expression
        // @(aPriori[indvar])
        $T[addr_of_1302_sample_start_] 
        $T[addr_of_1302_sample_completed_] 
        $T[addr_of_1302_update_start_] 
        $T[addr_of_1302_update_completed_] 
        $T[array_obj_ref_1301_root_address_calculated] 
        $T[array_obj_ref_1301_offset_calculated] 
        $T[array_obj_ref_1301_index_resized_0] 
        $T[array_obj_ref_1301_index_scaled_0] 
        $T[array_obj_ref_1301_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1301_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_1301_index_computed_0
        ;;[array_obj_ref_1301_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1301_index_computed_0 &-> (array_obj_ref_1301_index_resize_0)
        array_obj_ref_1301_index_resized_0 <-& (array_obj_ref_1301_index_resize_0)
        ;;[array_obj_ref_1301_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1301_index_resized_0 &-> (array_obj_ref_1301_index_scale_0)
        array_obj_ref_1301_index_scaled_0 <-& (array_obj_ref_1301_index_scale_0)
        ;;[array_obj_ref_1301_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1301_index_scaled_0 &-> (array_obj_ref_1301_final_index_sum_regn)
        array_obj_ref_1301_offset_calculated <-& (array_obj_ref_1301_final_index_sum_regn)
        ;;[array_obj_ref_1301_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1301_offset_calculated &-> (array_obj_ref_1301_base_plus_offset)
        array_obj_ref_1301_root_address_calculated <-& (array_obj_ref_1301_base_plus_offset)
        ;;[addr_of_1302_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1302_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1302_sample_start_ <-& (array_obj_ref_1301_root_address_calculated)
        addr_of_1302_sample_start_ &-> (addr_of_1302_request)
        addr_of_1302_sample_completed_ <-& (addr_of_1302_request)
        addr_of_1302_update_start_ &-> (addr_of_1302_complete)
        addr_of_1302_update_completed_ <-& (addr_of_1302_complete)
        // Target expression
        // (as target) scevgep5
        // start: WAR dependencies for scevgep5
        // done: WAR dependencies for scevgep5
        // end:  		scevgep5 := @(aPriori[indvar])
        // start:  		scevgep := @(code_block[indvar])
        //  file prog.linked.opt.aa, line 608
        // Source expression
        // @(code_block[indvar])
        $T[addr_of_1307_sample_start_] 
        $T[addr_of_1307_sample_completed_] 
        $T[addr_of_1307_update_start_] 
        $T[addr_of_1307_update_completed_] 
        $T[array_obj_ref_1306_root_address_calculated] 
        $T[array_obj_ref_1306_offset_calculated] 
        $T[array_obj_ref_1306_index_resized_0] 
        $T[array_obj_ref_1306_index_scaled_0] 
        $T[array_obj_ref_1306_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_1306_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_1306_index_computed_0
        ;;[array_obj_ref_1306_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1306_index_computed_0 &-> (array_obj_ref_1306_index_resize_0)
        array_obj_ref_1306_index_resized_0 <-& (array_obj_ref_1306_index_resize_0)
        ;;[array_obj_ref_1306_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1306_index_resized_0 &-> (array_obj_ref_1306_index_scale_0)
        array_obj_ref_1306_index_scaled_0 <-& (array_obj_ref_1306_index_scale_0)
        ;;[array_obj_ref_1306_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1306_index_scaled_0 &-> (array_obj_ref_1306_final_index_sum_regn)
        array_obj_ref_1306_offset_calculated <-& (array_obj_ref_1306_final_index_sum_regn)
        ;;[array_obj_ref_1306_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1306_offset_calculated &-> (array_obj_ref_1306_base_plus_offset)
        array_obj_ref_1306_root_address_calculated <-& (array_obj_ref_1306_base_plus_offset)
        ;;[addr_of_1307_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1307_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1307_sample_start_ <-& (array_obj_ref_1306_root_address_calculated)
        addr_of_1307_sample_start_ &-> (addr_of_1307_request)
        addr_of_1307_sample_completed_ <-& (addr_of_1307_request)
        addr_of_1307_update_start_ &-> (addr_of_1307_complete)
        addr_of_1307_update_completed_ <-& (addr_of_1307_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(code_block[indvar])
        // start:  		iNsTr_9 := ->(scevgep)
        //  file prog.linked.opt.aa, line 609
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_1311_sample_start_] 
        $T[ptr_deref_1311_sample_completed_] 
        $T[ptr_deref_1311_update_start_] 
        $T[ptr_deref_1311_update_completed_] 
        $T[ptr_deref_1311_base_address_calculated] 
        // scevgep
        $T[ptr_deref_1311_word_address_calculated] 
        $T[ptr_deref_1311_root_address_calculated] 
        $T[ptr_deref_1311_base_address_resized] 
        ;;[ptr_deref_1311_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1311_base_address_calculated &-> (ptr_deref_1311_base_addr_resize)
        ptr_deref_1311_base_address_resized <-& (ptr_deref_1311_base_addr_resize)
        ;;[ptr_deref_1311_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1311_base_address_resized &-> (ptr_deref_1311_base_plus_offset)
        ptr_deref_1311_root_address_calculated <-& (ptr_deref_1311_base_plus_offset)
        ;;[ptr_deref_1311_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1311_root_address_calculated &-> (ptr_deref_1311_word_addrgen)
        ptr_deref_1311_word_address_calculated <-& (ptr_deref_1311_word_addrgen)
        ;;[ptr_deref_1311_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1311_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1311_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1311_sample_start_ <-& (ptr_deref_1311_word_address_calculated)
        ptr_deref_1311_sample_start_ &-> (ptr_deref_1311_Sample)
        ptr_deref_1311_sample_completed_ <-& (ptr_deref_1311_Sample)
        ptr_deref_1311_sample_completed_ &-> ($null)
        ptr_deref_1311_update_start_ &-> (ptr_deref_1311_Update)
        ptr_deref_1311_update_completed_ <-& (ptr_deref_1311_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_1311_base_address_calculated
        ptr_deref_1311_base_address_calculated <-& (addr_of_1307_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_1311_base_address_calculated
        ptr_deref_1311_sample_start_ <-& (ptr_deref_1311_base_address_calculated)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := ->(scevgep)
        // start:  		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        //  file prog.linked.opt.aa, line 610
        // Source expression
        // (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        $T[MUL_f32_f32_1317_sample_start_] 
        $T[MUL_f32_f32_1317_sample_completed_] 
        $T[MUL_f32_f32_1317_update_start_] 
        $T[MUL_f32_f32_1317_update_completed_] 
        // iNsTr_9
        // start: Forward dependencies from iNsTr_9 to transition MUL_f32_f32_1317_sample_start_
        MUL_f32_f32_1317_sample_start_ <-& (ptr_deref_1311_update_completed_)
        // done: Forward dependencies from iNsTr_9 to transition MUL_f32_f32_1317_sample_start_
        ;;[MUL_f32_f32_1317_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1317_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1317_sample_start_ &-> (MUL_f32_f32_1317_Sample)
        MUL_f32_f32_1317_sample_completed_ <-& (MUL_f32_f32_1317_Sample)
        MUL_f32_f32_1317_sample_completed_ &-> ($null)
        MUL_f32_f32_1317_update_start_ &-> (MUL_f32_f32_1317_Update)
        MUL_f32_f32_1317_update_completed_ <-& (MUL_f32_f32_1317_Update)
        // Target expression
        // (as target) iNsTr_10
        // start: WAR dependencies for iNsTr_10
        // done: WAR dependencies for iNsTr_10
        // end:  		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        // start:  		iNsTr_11 := (iNsTr_6 * iNsTr_10)
        //  file prog.linked.opt.aa, line 611
        // Source expression
        // (iNsTr_6 * iNsTr_10)
        $T[MUL_f32_f32_1322_sample_start_] 
        $T[MUL_f32_f32_1322_sample_completed_] 
        $T[MUL_f32_f32_1322_update_start_] 
        $T[MUL_f32_f32_1322_update_completed_] 
        // iNsTr_6
        // iNsTr_10
        // start: Forward dependencies from iNsTr_6 to transition MUL_f32_f32_1322_sample_start_
        // done: Forward dependencies from iNsTr_6 to transition MUL_f32_f32_1322_sample_start_
        // start: Forward dependencies from iNsTr_10 to transition MUL_f32_f32_1322_sample_start_
        MUL_f32_f32_1322_sample_start_ <-& (MUL_f32_f32_1317_update_completed_)
        // done: Forward dependencies from iNsTr_10 to transition MUL_f32_f32_1322_sample_start_
        ;;[MUL_f32_f32_1322_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1322_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1322_sample_start_ &-> (MUL_f32_f32_1322_Sample)
        MUL_f32_f32_1322_sample_completed_ <-& (MUL_f32_f32_1322_Sample)
        MUL_f32_f32_1322_sample_completed_ &-> ($null)
        MUL_f32_f32_1322_update_start_ &-> (MUL_f32_f32_1322_Update)
        MUL_f32_f32_1322_update_completed_ <-& (MUL_f32_f32_1322_Update)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := (iNsTr_6 * iNsTr_10)
        // start:  		->(scevgep5) := iNsTr_11
        //  file prog.linked.opt.aa, line 612
        // Source expression
        // iNsTr_11
        // Target expression
        // ->(scevgep5)
        $T[ptr_deref_1325_sample_start_] 
        $T[ptr_deref_1325_sample_completed_] 
        $T[ptr_deref_1325_update_start_] 
        $T[ptr_deref_1325_update_completed_] 
        $T[ptr_deref_1325_base_address_calculated] 
        // scevgep5
        $T[ptr_deref_1325_word_address_calculated] 
        $T[ptr_deref_1325_root_address_calculated] 
        $T[ptr_deref_1325_base_address_resized] 
        ;;[ptr_deref_1325_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1325_base_address_calculated &-> (ptr_deref_1325_base_addr_resize)
        ptr_deref_1325_base_address_resized <-& (ptr_deref_1325_base_addr_resize)
        ;;[ptr_deref_1325_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1325_base_address_resized &-> (ptr_deref_1325_base_plus_offset)
        ptr_deref_1325_root_address_calculated <-& (ptr_deref_1325_base_plus_offset)
        ;;[ptr_deref_1325_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1325_root_address_calculated &-> (ptr_deref_1325_word_addrgen)
        ptr_deref_1325_word_address_calculated <-& (ptr_deref_1325_word_addrgen)
        ;;[ptr_deref_1325_Sample] 
        {
          ;;[ptr_deref_1325_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1325_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1325_sample_start_ <-& (ptr_deref_1325_word_address_calculated)
        ptr_deref_1325_sample_start_ &-> (ptr_deref_1325_Sample)
        ptr_deref_1325_sample_completed_ <-& (ptr_deref_1325_Sample)
        ptr_deref_1325_sample_completed_ &-> ($null)
        ptr_deref_1325_update_start_ &-> (ptr_deref_1325_Update)
        ptr_deref_1325_update_completed_ <-& (ptr_deref_1325_Update)
        // start: Forward dependencies from scevgep5 to transition ptr_deref_1325_base_address_calculated
        ptr_deref_1325_base_address_calculated <-& (addr_of_1302_update_completed_)
        // done: Forward dependencies from scevgep5 to transition ptr_deref_1325_base_address_calculated
        ptr_deref_1325_sample_start_ <-& (ptr_deref_1325_base_address_calculated)
        // start: Forward dependencies from iNsTr_11 to transition ptr_deref_1325_sample_start_
        ptr_deref_1325_sample_start_ <-& (MUL_f32_f32_1322_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition ptr_deref_1325_sample_start_
        // end:  		->(scevgep5) := iNsTr_11
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 613
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1332_sample_start_] 
        $T[ADD_u64_u64_1332_sample_completed_] 
        $T[ADD_u64_u64_1332_update_start_] 
        $T[ADD_u64_u64_1332_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_1332_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_1332_sample_start_
        ;;[ADD_u64_u64_1332_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1332_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1332_sample_start_ &-> (ADD_u64_u64_1332_Sample)
        ADD_u64_u64_1332_sample_completed_ <-& (ADD_u64_u64_1332_Sample)
        ADD_u64_u64_1332_sample_completed_ &-> ($null)
        ADD_u64_u64_1332_update_start_ &-> (ADD_u64_u64_1332_Update)
        ADD_u64_u64_1332_update_completed_ <-& (ADD_u64_u64_1332_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 614
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_1337_sample_start_] 
        $T[EQ_u64_u1_1337_sample_completed_] 
        $T[EQ_u64_u1_1337_update_start_] 
        $T[EQ_u64_u1_1337_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1337_sample_start_
        EQ_u64_u1_1337_sample_start_ <-& (ADD_u64_u64_1332_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_1337_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_1337_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_1337_sample_start_
        ;;[EQ_u64_u1_1337_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1337_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1337_sample_start_ &-> (EQ_u64_u1_1337_Sample)
        EQ_u64_u1_1337_sample_completed_ <-& (EQ_u64_u1_1337_Sample)
        EQ_u64_u1_1337_sample_completed_ &-> ($null)
        EQ_u64_u1_1337_update_start_ &-> (EQ_u64_u1_1337_Update)
        EQ_u64_u1_1337_update_completed_ <-& (EQ_u64_u1_1337_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
      }
      assign_stmt_1303_to_assign_stmt_1338__entry__ |-> (assign_stmt_1303_to_assign_stmt_1338)
      assign_stmt_1303_to_assign_stmt_1338__exit__ <-| (assign_stmt_1303_to_assign_stmt_1338)
      // if-statement  
      //  file prog.linked.opt.aa, line 615
      ;;[if_stmt_1339_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1339__entry__ |-> (if_stmt_1339_dead_link)
      if_stmt_1339__exit__ <-| (if_stmt_1339_dead_link)
      ;;[if_stmt_1339_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1339__entry__ |-> (if_stmt_1339_eval_test)
      $P [R_exitcond1_1340_place]
      R_exitcond1_1340_place <-| (if_stmt_1339_eval_test)
      ;;[if_stmt_1339_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1339_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_1340_place |-> (if_stmt_1339_if_link if_stmt_1339_else_link)
      $P [bb_2_xx_x_crit_edgex_xloopexit]
      bb_2_xx_x_crit_edgex_xloopexit <-| (if_stmt_1339_if_link)
      $P [bb_2_bb_2]
      bb_2_bb_2 <-| (if_stmt_1339_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 593
      ;;[merge_stmt_1248_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1248__entry__ |-> (merge_stmt_1248_dead_link)
      merge_stmt_1248__exit__ <-| (merge_stmt_1248_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 593  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_1248_PhiReqMerge] 
      merge_stmt_1248_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_1248_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1248_PhiReqMerge |-> (merge_stmt_1248_PhiAck)
      merge_stmt_1248__exit__  <-| (merge_stmt_1248_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 593  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 604
      //---------------------   merge statement  file prog.linked.opt.aa, line 604  --------------------------
      ||[bb_2_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1291] 
        {
          ||[phi_stmt_1291_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_1297] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1291_req] 
        }
      }
      bb_2_bb_2 |-> (bb_2_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_1291] 
        {
          ||[phi_stmt_1291_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1295_konst_delay_trans] $delay
          }
          $T [phi_stmt_1291_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_1290_PhiReqMerge] 
      merge_stmt_1290_PhiReqMerge <-| ( bb_2_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_1290_PhiAck] 
      {
        $T [phi_stmt_1291_ack] 
      }
      merge_stmt_1290_PhiReqMerge |-> (merge_stmt_1290_PhiAck)
      merge_stmt_1290__exit__  <-| (merge_stmt_1290_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 604  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 620
      ;;[merge_stmt_1345_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1345__entry__ |-> (merge_stmt_1345_dead_link)
      merge_stmt_1345__exit__ <-| (merge_stmt_1345_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 620  --------------------------
      ||[bb_2_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_xx_x_crit_edgex_xloopexit |-> (bb_2_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_1345_PhiReqMerge] 
      merge_stmt_1345_PhiReqMerge <-| ( bb_2_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_1345_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1345_PhiReqMerge |-> (merge_stmt_1345_PhiAck)
      merge_stmt_1345__exit__  <-| (merge_stmt_1345_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 620  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 623
      //---------------------   merge statement  file prog.linked.opt.aa, line 623  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_1347_PhiReqMerge] 
      merge_stmt_1347_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_1347_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1347_PhiReqMerge |-> (merge_stmt_1347_PhiAck)
      merge_stmt_1347__exit__  <-| (merge_stmt_1347_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 623  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 626
      //---------------------   merge statement  file prog.linked.opt.aa, line 626  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_1349_PhiReqMerge] 
      merge_stmt_1349_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_1349_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1349_PhiReqMerge |-> (merge_stmt_1349_PhiAck)
      merge_stmt_1349__exit__  <-| (merge_stmt_1349_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 626  --------------------------
      assign_stmt_1235_to_assign_stmt_1241__entry__ <-| (branch_block_stmt_1232__entry__)
      if_stmt_1242__entry__ <-| (assign_stmt_1235_to_assign_stmt_1241__exit__)
      merge_stmt_1248__entry__ <-| (if_stmt_1242__exit__)
      assign_stmt_1251_to_assign_stmt_1288__entry__ <-| (merge_stmt_1248__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_1251_to_assign_stmt_1288__exit__)
      assign_stmt_1303_to_assign_stmt_1338__entry__ <-| (merge_stmt_1290__exit__)
      if_stmt_1339__entry__ <-| (assign_stmt_1303_to_assign_stmt_1338__exit__)
      merge_stmt_1345__entry__ <-| (if_stmt_1339__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_1345__exit__)
      return__ <-| (merge_stmt_1347__exit__)
      merge_stmt_1349__exit__ |-> (branch_block_stmt_1232__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 593
    // constant-object-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 604
    // constant-object-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 620
    // constant-object-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 623
    // constant-object-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 626
    // constant-object-declarations for block %initialize_aPriori%body
    //  file prog.linked.opt.aa, line 584
    // constant-object-declarations for block %initialize_aPriori
    //  file prog.linked.opt.aa, line 579
    // constant-declarations for block %initialize_aPriori%body
    //  file prog.linked.opt.aa, line 584
    // ncols
    $constant $W[LOAD_ncols_1234_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1239_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 588
    // constant-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 593
    // ebbyNo
    $constant $W[LOAD_ebbyNo_1250_word_address_0] : $pointer<memory_space_4> := _b0
    // rate
    $constant $W[LOAD_rate_1253_word_address_0] : $pointer<memory_space_13> := _b0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1263_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1269_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1279_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1286_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 604
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 605
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1295_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(aPriori[indvar])
    $constant $W[array_obj_ref_1301_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1301_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(code_block[indvar])
    $constant $W[array_obj_ref_1306_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1306_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_1311_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<8,23>) _f-4.000000e+00 )
    $constant $W[type_cast_1316_wire_constant] : $float<8,23> := _b11000000100000000000000000000000// -4.000000e+00
    // ->(scevgep5)
    $constant $W[ptr_deref_1325_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1331_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 615
    // constant-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 620
    // constant-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 623
    // constant-declarations for block %initialize_aPriori%body%
    //  file prog.linked.opt.aa, line 626
    // block %initialize_aPriori%body
    //  file prog.linked.opt.aa, line 584
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 586
    // ncols
    $W[LOAD_ncols_1234_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_1235] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 587
    // iNsTr_1
    $W[iNsTr_1_1241] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 588
    // 		iNsTr_4 := ebbyNo
    //  file prog.linked.opt.aa, line 595
    // ebbyNo
    $W[LOAD_ebbyNo_1250_data_0] : $int<32>
    // iNsTr_4
    $W[iNsTr_4_1251] : $float<8,23>
    // 		iNsTr_5 := rate
    //  file prog.linked.opt.aa, line 596
    // rate
    $W[LOAD_rate_1253_data_0] : $int<32>
    // iNsTr_5
    $W[iNsTr_5_1254] : $float<8,23>
    // 		iNsTr_6 := (iNsTr_5 * iNsTr_4)
    //  file prog.linked.opt.aa, line 597
    // iNsTr_6
    $W[iNsTr_6_1259] : $float<8,23>
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 598
    // tmp
    $W[tmp_1265] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 599
    // xx_xop
    $W[xx_xop_1271] : $int<16>
    // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 600
    // iNsTr_7
    $W[iNsTr_7_1275] : $int<64>
    // 		xx_xop6 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 601
    // xx_xop6
    $W[xx_xop6_1281] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 602
    // tmp4
    $W[tmp4_1288] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 604
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 605
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_1297_wire] : $int<64>
    // indvar
    $W[indvar_1291] : $int<64>
    // 		scevgep5 := @(aPriori[indvar])
    //  file prog.linked.opt.aa, line 607
    // @(aPriori[indvar])
    $intermediate $W[R_indvar_1300_resized] : $int<10>
    $intermediate $W[R_indvar_1300_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1301_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1301_root_address] : $int<10>
    // scevgep5
    $W[scevgep5_1303] : $int<32>
    // 		scevgep := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 608
    // @(code_block[indvar])
    $intermediate $W[R_indvar_1305_resized] : $int<10>
    $intermediate $W[R_indvar_1305_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1306_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1306_root_address] : $int<10>
    // scevgep
    $W[scevgep_1308] : $int<32>
    // 		iNsTr_9 := ->(scevgep)
    //  file prog.linked.opt.aa, line 609
    // ->(scevgep)
    $intermediate $W[ptr_deref_1311_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1311_root_address] : $int<10>
    $W[ptr_deref_1311_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_1311_data_0] : $int<32>
    // iNsTr_9
    $W[iNsTr_9_1312] : $float<8,23>
    // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    //  file prog.linked.opt.aa, line 610
    // iNsTr_10
    $W[iNsTr_10_1318] : $float<8,23>
    // 		iNsTr_11 := (iNsTr_6 * iNsTr_10)
    //  file prog.linked.opt.aa, line 611
    // iNsTr_11
    $W[iNsTr_11_1323] : $float<8,23>
    // 		->(scevgep5) := iNsTr_11
    //  file prog.linked.opt.aa, line 612
    // ->(scevgep5)
    $intermediate $W[ptr_deref_1325_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1325_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1325_root_address] : $int<10>
    $W[ptr_deref_1325_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1325_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 613
    // indvarx_xnext
    $W[indvarx_xnext_1333] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 614
    // exitcond1
    $W[exitcond1_1338] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 615
    // datapath-instances for block %initialize_aPriori%body
    //  file prog.linked.opt.aa, line 584
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 586
    // ncols
    $load [LOAD_ncols_1234_load_0] $from memory_space_11 (LOAD_ncols_1234_word_address_0) (LOAD_ncols_1234_data_0) 
    $delay LOAD_ncols_1234_load_0 4
    &/ [LOAD_ncols_1234_gather_scatter] (LOAD_ncols_1234_data_0) (iNsTr_0_1235) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 587
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1240_inst] (iNsTr_0_1235 type_cast_1239_wire_constant) (iNsTr_1_1241)   
    $buffering  $out EQ_u16_u1_1240_inst iNsTr_1_1241 1
    $delay EQ_u16_u1_1240_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 588
    ==0? [if_stmt_1242_branch] (iNsTr_1_1241)
    // 		iNsTr_4 := ebbyNo
    //  file prog.linked.opt.aa, line 595
    // ebbyNo
    $load [LOAD_ebbyNo_1250_load_0] $from memory_space_4 (LOAD_ebbyNo_1250_word_address_0) (LOAD_ebbyNo_1250_data_0) 
    $delay LOAD_ebbyNo_1250_load_0 4
    &/ [LOAD_ebbyNo_1250_gather_scatter] (LOAD_ebbyNo_1250_data_0) (iNsTr_4_1251) 
    $flowthrough 
    // 		iNsTr_5 := rate
    //  file prog.linked.opt.aa, line 596
    // rate
    $load [LOAD_rate_1253_load_0] $from memory_space_13 (LOAD_rate_1253_word_address_0) (LOAD_rate_1253_data_0) 
    $delay LOAD_rate_1253_load_0 4
    &/ [LOAD_rate_1253_gather_scatter] (LOAD_rate_1253_data_0) (iNsTr_5_1254) 
    $flowthrough 
    // 		iNsTr_6 := (iNsTr_5 * iNsTr_4)
    //  file prog.linked.opt.aa, line 597
    // (iNsTr_5 * iNsTr_4)
    *[MUL_f32_f32_1258_inst] (iNsTr_5_1254 iNsTr_4_1251) (iNsTr_6_1259)   
    $buffering  $out MUL_f32_f32_1258_inst iNsTr_6_1259 1
    $delay MUL_f32_f32_1258_inst 14
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 598
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1264_inst] (iNsTr_0_1235 type_cast_1263_wire_constant) (tmp_1265)   
    $buffering  $out UGT_u16_u1_1264_inst tmp_1265 1
    $delay UGT_u16_u1_1264_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 599
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1270_inst] (iNsTr_0_1235 type_cast_1269_wire_constant) (xx_xop_1271)   
    $buffering  $out ADD_u16_u16_1270_inst xx_xop_1271 1
    $delay ADD_u16_u16_1270_inst 1
    // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 600
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_1274_inst] (xx_xop_1271) (iNsTr_7_1275)   
    $buffering  $out type_cast_1274_inst iNsTr_7_1275 1
    $delay type_cast_1274_inst 1
    // 		xx_xop6 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 601
    // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1280_inst] (iNsTr_7_1275 type_cast_1279_wire_constant) (xx_xop6_1281)   
    $buffering  $out ADD_u64_u64_1280_inst xx_xop6_1281 1
    $delay ADD_u64_u64_1280_inst 1
    // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 602
    // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1287_inst] (tmp_1265 xx_xop6_1281 type_cast_1286_wire_constant) (tmp4_1288) 
    $buffering  $out MUX_1287_inst tmp4_1288 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 604
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 605
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_1297_inst] (indvarx_xnext_1333) (type_cast_1297_wire)   
    $buffering  $out type_cast_1297_inst type_cast_1297_wire 1
    $delay type_cast_1297_inst 1
    $phi [phi_stmt_1291] (type_cast_1295_wire_constant type_cast_1297_wire) ( indvar_1291 ) 
    // 		scevgep5 := @(aPriori[indvar])
    //  file prog.linked.opt.aa, line 607
    &/ [array_obj_ref_1301_index_0_resize] (indvar_1291) (R_indvar_1300_resized) 
    $flowthrough 
    &/ [array_obj_ref_1301_index_0_rename] (R_indvar_1300_resized) (R_indvar_1300_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1301_index_offset] (R_indvar_1300_scaled) (array_obj_ref_1301_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1301_root_address_inst] (array_obj_ref_1301_final_offset) (array_obj_ref_1301_root_address) 
    $flowthrough 
    # := [addr_of_1302_final_reg] (array_obj_ref_1301_root_address) (scevgep5_1303)   
    $buffering  $out addr_of_1302_final_reg scevgep5_1303 1
    // 		scevgep := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 608
    &/ [array_obj_ref_1306_index_0_resize] (indvar_1291) (R_indvar_1305_resized) 
    $flowthrough 
    &/ [array_obj_ref_1306_index_0_rename] (R_indvar_1305_resized) (R_indvar_1305_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1306_index_offset] (R_indvar_1305_scaled) (array_obj_ref_1306_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1306_root_address_inst] (array_obj_ref_1306_final_offset) (array_obj_ref_1306_root_address) 
    $flowthrough 
    # := [addr_of_1307_final_reg] (array_obj_ref_1306_root_address) (scevgep_1308)   
    $buffering  $out addr_of_1307_final_reg scevgep_1308 1
    // 		iNsTr_9 := ->(scevgep)
    //  file prog.linked.opt.aa, line 609
    // ->(scevgep)
    &/ [ptr_deref_1311_base_resize] (scevgep_1308) (ptr_deref_1311_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1311_root_address_inst] (ptr_deref_1311_resized_base_address) (ptr_deref_1311_root_address) 
    $flowthrough 
    &/ [ptr_deref_1311_addr_0] (ptr_deref_1311_root_address) (ptr_deref_1311_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1311_load_0] $from memory_space_3 (ptr_deref_1311_word_address_0) (ptr_deref_1311_data_0) 
    $delay ptr_deref_1311_load_0 4
    &/ [ptr_deref_1311_gather_scatter] (ptr_deref_1311_data_0) (iNsTr_9_1312) 
    $flowthrough 
    // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    //  file prog.linked.opt.aa, line 610
    // (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    *[MUL_f32_f32_1317_inst] (iNsTr_9_1312 type_cast_1316_wire_constant) (iNsTr_10_1318)   
    $buffering  $out MUL_f32_f32_1317_inst iNsTr_10_1318 1
    $delay MUL_f32_f32_1317_inst 14
    // 		iNsTr_11 := (iNsTr_6 * iNsTr_10)
    //  file prog.linked.opt.aa, line 611
    // (iNsTr_6 * iNsTr_10)
    *[MUL_f32_f32_1322_inst] (iNsTr_6_1259 iNsTr_10_1318) (iNsTr_11_1323)   
    $buffering  $out MUL_f32_f32_1322_inst iNsTr_11_1323 1
    $delay MUL_f32_f32_1322_inst 14
    // 		->(scevgep5) := iNsTr_11
    //  file prog.linked.opt.aa, line 612
    // ->(scevgep5)
    &/ [ptr_deref_1325_base_resize] (scevgep5_1303) (ptr_deref_1325_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1325_root_address_inst] (ptr_deref_1325_resized_base_address) (ptr_deref_1325_root_address) 
    $flowthrough 
    &/ [ptr_deref_1325_addr_0] (ptr_deref_1325_root_address) (ptr_deref_1325_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1325_store_0] $to memory_space_2 (ptr_deref_1325_word_address_0 ptr_deref_1325_data_0) 
    $delay ptr_deref_1325_store_0 4
    &/ [ptr_deref_1325_gather_scatter] (iNsTr_11_1323) (ptr_deref_1325_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 613
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1332_inst] (indvar_1291 type_cast_1331_wire_constant) (indvarx_xnext_1333)   
    $buffering  $out ADD_u64_u64_1332_inst indvarx_xnext_1333 1
    $delay ADD_u64_u64_1332_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 614
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_1337_inst] (indvarx_xnext_1333 tmp4_1288) (exitcond1_1338)   
    $buffering  $out EQ_u64_u1_1337_inst exitcond1_1338 1
    $delay EQ_u64_u1_1337_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 615
    ==0? [if_stmt_1339_branch] (exitcond1_1338)
  }
  // end data-path
  // 		iNsTr_0 := ncols
  //  file prog.linked.opt.aa, line 586
  // ncols
  LOAD_ncols_1234_gather_scatter <=> (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Update/LOAD_ncols_1234_Merge/merge_req) (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Update/LOAD_ncols_1234_Merge/merge_ack)
  LOAD_ncols_1234_load_0 <=> (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Sample/word_access_start/word_0/rr branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Update/word_access_complete/word_0/cr) (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Sample/word_access_start/word_0/ra branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/LOAD_ncols_1234_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 587
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_1240_inst <=> (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/EQ_u16_u1_1240_Sample/rr branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/EQ_u16_u1_1240_Update/cr) (branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/EQ_u16_u1_1240_Sample/ra branch_block_stmt_1232/assign_stmt_1235_to_assign_stmt_1241/EQ_u16_u1_1240_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 588
  if_stmt_1242_branch <=> (branch_block_stmt_1232/if_stmt_1242_eval_test/branch_req) (branch_block_stmt_1232/if_stmt_1242_else_link/else_choice_transition branch_block_stmt_1232/if_stmt_1242_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 593
  // 		iNsTr_4 := ebbyNo
  //  file prog.linked.opt.aa, line 595
  // ebbyNo
  LOAD_ebbyNo_1250_gather_scatter <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Update/LOAD_ebbyNo_1250_Merge/merge_req) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Update/LOAD_ebbyNo_1250_Merge/merge_ack)
  LOAD_ebbyNo_1250_load_0 <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Sample/word_access_start/word_0/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Update/word_access_complete/word_0/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Sample/word_access_start/word_0/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_ebbyNo_1250_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := rate
  //  file prog.linked.opt.aa, line 596
  // rate
  LOAD_rate_1253_gather_scatter <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Update/LOAD_rate_1253_Merge/merge_req) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Update/LOAD_rate_1253_Merge/merge_ack)
  LOAD_rate_1253_load_0 <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Sample/word_access_start/word_0/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Update/word_access_complete/word_0/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Sample/word_access_start/word_0/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/LOAD_rate_1253_Update/word_access_complete/word_0/ca)
  // 		iNsTr_6 := (iNsTr_5 * iNsTr_4)
  //  file prog.linked.opt.aa, line 597
  // (iNsTr_5 * iNsTr_4)
  // iNsTr_5
  // iNsTr_4
  MUL_f32_f32_1258_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUL_f32_f32_1258_Sample/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUL_f32_f32_1258_Update/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUL_f32_f32_1258_Sample/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUL_f32_f32_1258_Update/ca)
  // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 598
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_1264_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/UGT_u16_u1_1264_Sample/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/UGT_u16_u1_1264_Update/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/UGT_u16_u1_1264_Sample/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/UGT_u16_u1_1264_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 599
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_1270_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u16_u16_1270_Sample/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u16_u16_1270_Update/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u16_u16_1270_Sample/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u16_u16_1270_Update/ca)
  // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 600
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_1274_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/type_cast_1274_Sample/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/type_cast_1274_Update/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/type_cast_1274_Sample/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/type_cast_1274_Update/ca)
  // 		xx_xop6 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 601
  // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_7
  ADD_u64_u64_1280_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u64_u64_1280_Sample/rr branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u64_u64_1280_Update/cr) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u64_u64_1280_Sample/ra branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/ADD_u64_u64_1280_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 602
  // tmp
  // xx_xop6
  // ( $mux tmp xx_xop6  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1287_inst <=> (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUX_1287_start/req branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUX_1287_complete/req) (branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUX_1287_start/ack branch_block_stmt_1232/assign_stmt_1251_to_assign_stmt_1288/MUX_1287_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 604
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_1297_inst <=> (branch_block_stmt_1232/bb_2_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_sources/type_cast_1297/SplitProtocol/Sample/rr branch_block_stmt_1232/bb_2_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_sources/type_cast_1297/SplitProtocol/Update/cr) (branch_block_stmt_1232/bb_2_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_sources/type_cast_1297/SplitProtocol/Sample/ra branch_block_stmt_1232/bb_2_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_sources/type_cast_1297/SplitProtocol/Update/ca)
  phi_stmt_1291 <=> (branch_block_stmt_1232/bbx_xnph_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_req branch_block_stmt_1232/bb_2_bb_2_PhiReq/phi_stmt_1291/phi_stmt_1291_req) (branch_block_stmt_1232/merge_stmt_1290_PhiAck/phi_stmt_1291_ack)
  // 		scevgep5 := @(aPriori[indvar])
  //  file prog.linked.opt.aa, line 607
  // indvar
  array_obj_ref_1301_index_0_resize <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_index_resize_0/index_resize_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_index_resize_0/index_resize_ack)
  array_obj_ref_1301_index_0_rename <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_index_scale_0/scale_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_index_scale_0/scale_rename_ack)
  array_obj_ref_1301_index_offset <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_final_index_sum_regn/req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_final_index_sum_regn/ack)
  array_obj_ref_1301_root_address_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_base_plus_offset/sum_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1301_base_plus_offset/sum_rename_ack)
  addr_of_1302_final_reg <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1302_request/req branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1302_complete/req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1302_request/ack branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1302_complete/ack)
  // 		scevgep := @(code_block[indvar])
  //  file prog.linked.opt.aa, line 608
  // indvar
  array_obj_ref_1306_index_0_resize <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_index_resize_0/index_resize_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_index_resize_0/index_resize_ack)
  array_obj_ref_1306_index_0_rename <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_index_scale_0/scale_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_index_scale_0/scale_rename_ack)
  array_obj_ref_1306_index_offset <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_final_index_sum_regn/req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_final_index_sum_regn/ack)
  array_obj_ref_1306_root_address_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_base_plus_offset/sum_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/array_obj_ref_1306_base_plus_offset/sum_rename_ack)
  addr_of_1307_final_reg <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1307_request/req branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1307_complete/req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1307_request/ack branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/addr_of_1307_complete/ack)
  // 		iNsTr_9 := ->(scevgep)
  //  file prog.linked.opt.aa, line 609
  // scevgep
  ptr_deref_1311_base_resize <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_base_addr_resize/base_resize_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_base_addr_resize/base_resize_ack)
  ptr_deref_1311_root_address_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_base_plus_offset/sum_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_base_plus_offset/sum_rename_ack)
  ptr_deref_1311_addr_0 <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_word_addrgen/root_register_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_word_addrgen/root_register_ack)
  ptr_deref_1311_gather_scatter <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Update/ptr_deref_1311_Merge/merge_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Update/ptr_deref_1311_Merge/merge_ack)
  ptr_deref_1311_load_0 <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Sample/word_access_start/word_0/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Update/word_access_complete/word_0/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Sample/word_access_start/word_0/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1311_Update/word_access_complete/word_0/ca)
  // 		iNsTr_10 := (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
  //  file prog.linked.opt.aa, line 610
  // (iNsTr_9 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
  // iNsTr_9
  MUL_f32_f32_1317_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1317_Sample/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1317_Update/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1317_Sample/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1317_Update/ca)
  // 		iNsTr_11 := (iNsTr_6 * iNsTr_10)
  //  file prog.linked.opt.aa, line 611
  // (iNsTr_6 * iNsTr_10)
  // iNsTr_6
  // iNsTr_10
  MUL_f32_f32_1322_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1322_Sample/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1322_Update/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1322_Sample/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/MUL_f32_f32_1322_Update/ca)
  // 		->(scevgep5) := iNsTr_11
  //  file prog.linked.opt.aa, line 612
  // iNsTr_11
  // scevgep5
  ptr_deref_1325_base_resize <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_base_addr_resize/base_resize_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_base_addr_resize/base_resize_ack)
  ptr_deref_1325_root_address_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_base_plus_offset/sum_rename_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_base_plus_offset/sum_rename_ack)
  ptr_deref_1325_addr_0 <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_word_addrgen/root_register_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_word_addrgen/root_register_ack)
  ptr_deref_1325_gather_scatter <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Sample/ptr_deref_1325_Split/split_req) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Sample/ptr_deref_1325_Split/split_ack)
  ptr_deref_1325_store_0 <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Sample/word_access_start/word_0/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Update/word_access_complete/word_0/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Sample/word_access_start/word_0/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ptr_deref_1325_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 613
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_1332_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ADD_u64_u64_1332_Sample/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ADD_u64_u64_1332_Update/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ADD_u64_u64_1332_Sample/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/ADD_u64_u64_1332_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 614
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_1337_inst <=> (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/EQ_u64_u1_1337_Sample/rr branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/EQ_u64_u1_1337_Update/cr) (branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/EQ_u64_u1_1337_Sample/ra branch_block_stmt_1232/assign_stmt_1303_to_assign_stmt_1338/EQ_u64_u1_1337_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 615
  if_stmt_1339_branch <=> (branch_block_stmt_1232/if_stmt_1339_eval_test/branch_req) (branch_block_stmt_1232/if_stmt_1339_else_link/else_choice_transition branch_block_stmt_1232/if_stmt_1339_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 620
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 623
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 626
}
$module [minSumDecode] 
{
  // pipe-declarations for block %minSumDecode
  //  file prog.linked.opt.aa, line 630
  // pipe-declarations for block %minSumDecode%body
  //  file prog.linked.opt.aa, line 635
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 638
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 648
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 651
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 674
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 683
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 694
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 710
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 713
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 723
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 731
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 750
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 753
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 757
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 770
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 778
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 786
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 800
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 803
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 811
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 819
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 831
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 834
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 844
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 852
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 873
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 876
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 886
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 891
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 899
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 913
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 923
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 927
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 932
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 940
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 950
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 954
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 959
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 969
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 978
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 987
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1001
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1015
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1020
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1026
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1036
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1040
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1064
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1067
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1076
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1079
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1083
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1094
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1097
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1114
  // pipe-declarations for block %minSumDecode%body%
  //  file prog.linked.opt.aa, line 1118
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1353] // Branch Block  file prog.linked.opt.aa, line 635
    {
      $P [branch_block_stmt_1353__entry__]
      branch_block_stmt_1353__entry__ <-| ($entry)
      $P [branch_block_stmt_1353__exit__]
      branch_block_stmt_1353__exit__ |-> ($exit)
      $P [bb_0_bb_1]
      $P [merge_stmt_1355__exit__] 
      $P [call_stmt_1356__entry__] 
      $P [call_stmt_1356__exit__] 
      $P [assign_stmt_1359_to_assign_stmt_1365__entry__] 
      $P [assign_stmt_1359_to_assign_stmt_1365__exit__] 
      $P [if_stmt_1366__entry__] 
      $P [if_stmt_1366__exit__] 
      $P [merge_stmt_1372__entry__] 
      $P [merge_stmt_1372__exit__] 
      $P [bbx_xnphx_xix_xpreheader_bbx_xnphx_xi]
      $P [merge_stmt_1374__exit__] 
      $P [do_while_stmt_1381__entry__] 
      $P [do_while_stmt_1381__exit__] 
      $P [if_stmt_1439__entry__] 
      $P [if_stmt_1439__exit__] 
      $P [merge_stmt_1443__entry__] 
      $P [merge_stmt_1443__exit__] 
      $P [assign_stmt_1454__entry__] 
      $P [assign_stmt_1454__exit__] 
      $P [if_stmt_1455__entry__] 
      $P [if_stmt_1455__exit__] 
      $P [merge_stmt_1461__entry__] 
      $P [merge_stmt_1461__exit__] 
      $P [assign_stmt_1464_to_assign_stmt_1501__entry__] 
      $P [assign_stmt_1464_to_assign_stmt_1501__exit__] 
      $P [bbx_xnphx_xi1_bb_6]
      $P [merge_stmt_1503__exit__] 
      $P [assign_stmt_1516_to_assign_stmt_1551__entry__] 
      $P [assign_stmt_1516_to_assign_stmt_1551__exit__] 
      $P [if_stmt_1552__entry__] 
      $P [if_stmt_1552__exit__] 
      $P [merge_stmt_1558__entry__] 
      $P [merge_stmt_1558__exit__] 
      $P [initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit]
      $P [merge_stmt_1560__exit__] 
      $P [assign_stmt_1574_to_assign_stmt_1580__entry__] 
      $P [assign_stmt_1574_to_assign_stmt_1580__exit__] 
      $P [if_stmt_1581__entry__] 
      $P [if_stmt_1581__exit__] 
      $P [merge_stmt_1587__entry__] 
      $P [merge_stmt_1587__exit__] 
      $P [assign_stmt_1593_to_assign_stmt_1616__entry__] 
      $P [assign_stmt_1593_to_assign_stmt_1616__exit__] 
      $P [bbx_xnphx_xi5_bb_10]
      $P [merge_stmt_1618__exit__] 
      $P [assign_stmt_1631_to_assign_stmt_1680__entry__] 
      $P [assign_stmt_1631_to_assign_stmt_1680__exit__] 
      $P [if_stmt_1681__entry__] 
      $P [if_stmt_1681__exit__] 
      $P [merge_stmt_1687__entry__] 
      $P [merge_stmt_1687__exit__] 
      $P [initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader]
      $P [merge_stmt_1689__exit__] 
      $P [initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit]
      $P [merge_stmt_1699__exit__] 
      $P [assign_stmt_1725_to_assign_stmt_1733__entry__] 
      $P [assign_stmt_1725_to_assign_stmt_1733__exit__] 
      $P [if_stmt_1734__entry__] 
      $P [if_stmt_1734__exit__] 
      $P [merge_stmt_1740__entry__] 
      $P [merge_stmt_1740__exit__] 
      $P [assign_stmt_1746__entry__] 
      $P [assign_stmt_1746__exit__] 
      $P [if_stmt_1747__entry__] 
      $P [if_stmt_1747__exit__] 
      $P [merge_stmt_1753__entry__] 
      $P [merge_stmt_1753__exit__] 
      $P [assign_stmt_1759_to_assign_stmt_1782__entry__] 
      $P [assign_stmt_1759_to_assign_stmt_1782__exit__] 
      $P [bbx_xnphx_xi18_bb_16]
      $P [merge_stmt_1784__exit__] 
      $P [assign_stmt_1797_to_assign_stmt_1821__entry__] 
      $P [assign_stmt_1797_to_assign_stmt_1821__exit__] 
      $P [if_stmt_1822__entry__] 
      $P [if_stmt_1822__exit__] 
      $P [merge_stmt_1828__entry__] 
      $P [merge_stmt_1828__exit__] 
      $P [initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit]
      $P [merge_stmt_1830__exit__] 
      $P [assign_stmt_1836__entry__] 
      $P [assign_stmt_1836__exit__] 
      $P [if_stmt_1837__entry__] 
      $P [if_stmt_1837__exit__] 
      $P [merge_stmt_1843__entry__] 
      $P [merge_stmt_1843__exit__] 
      $P [assign_stmt_1849_to_assign_stmt_1872__entry__] 
      $P [assign_stmt_1849_to_assign_stmt_1872__exit__] 
      $P [bbx_xnphx_xi27_bb_20]
      $P [merge_stmt_1874__exit__] 
      $P [assign_stmt_1887_to_assign_stmt_1903__entry__] 
      $P [assign_stmt_1887_to_assign_stmt_1903__exit__] 
      $P [if_stmt_1904__entry__] 
      $P [if_stmt_1904__exit__] 
      $P [merge_stmt_1910__entry__] 
      $P [merge_stmt_1910__exit__] 
      $P [initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit]
      $P [merge_stmt_1912__exit__] 
      $P [call_stmt_1913__entry__] 
      $P [call_stmt_1913__exit__] 
      $P [assign_stmt_1916_to_assign_stmt_1922__entry__] 
      $P [assign_stmt_1916_to_assign_stmt_1922__exit__] 
      $P [if_stmt_1923__entry__] 
      $P [if_stmt_1923__exit__] 
      $P [merge_stmt_1929__entry__] 
      $P [merge_stmt_1929__exit__] 
      $P [assign_stmt_1935_to_assign_stmt_1958__entry__] 
      $P [assign_stmt_1935_to_assign_stmt_1958__exit__] 
      $P [bbx_xnphx_xi54_bb_24]
      $P [merge_stmt_1960__exit__] 
      $P [assign_stmt_1973_to_assign_stmt_2031__entry__] 
      $P [assign_stmt_1973_to_assign_stmt_2031__exit__] 
      $P [if_stmt_2032__entry__] 
      $P [if_stmt_2032__exit__] 
      $P [merge_stmt_2038__entry__] 
      $P [merge_stmt_2038__exit__] 
      $P [update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit]
      $P [merge_stmt_2040__exit__] 
      $P [assign_stmt_2044_to_assign_stmt_2053__entry__] 
      $P [assign_stmt_2044_to_assign_stmt_2053__exit__] 
      $P [if_stmt_2054__entry__] 
      $P [if_stmt_2054__exit__] 
      $P [merge_stmt_2060__entry__] 
      $P [merge_stmt_2060__exit__] 
      $P [assign_stmt_2068__entry__] 
      $P [assign_stmt_2068__exit__] 
      $P [checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit]
      $P [merge_stmt_2070__exit__] 
      $P [assign_stmt_2076_to_assign_stmt_2099__entry__] 
      $P [assign_stmt_2076_to_assign_stmt_2099__exit__] 
      $P [bbx_xnphx_xi43_bb_29]
      $P [merge_stmt_2101__exit__] 
      $P [assign_stmt_2121_to_assign_stmt_2140__entry__] 
      $P [assign_stmt_2121_to_assign_stmt_2140__exit__] 
      $P [if_stmt_2141__entry__] 
      $P [if_stmt_2141__exit__] 
      $P [merge_stmt_2147__entry__] 
      $P [merge_stmt_2147__exit__] 
      $P [assign_stmt_2151_to_assign_stmt_2161__entry__] 
      $P [assign_stmt_2151_to_assign_stmt_2161__exit__] 
      $P [if_stmt_2162__entry__] 
      $P [if_stmt_2162__exit__] 
      $P [merge_stmt_2168__entry__] 
      $P [merge_stmt_2168__exit__] 
      $P [assign_stmt_2172__entry__] 
      $P [assign_stmt_2172__exit__] 
      $P [bb_31_bb_32]
      $P [merge_stmt_2174__exit__] 
      $P [assign_stmt_2187__entry__] 
      $P [assign_stmt_2187__exit__] 
      $P [bb_32_bb_37]
      $P [merge_stmt_2189__exit__] 
      $P [assign_stmt_2195__entry__] 
      $P [assign_stmt_2195__exit__] 
      $P [if_stmt_2196__entry__] 
      $P [if_stmt_2196__exit__] 
      $P [merge_stmt_2202__entry__] 
      $P [merge_stmt_2202__exit__] 
      $P [assign_stmt_2206_to_assign_stmt_2216__entry__] 
      $P [assign_stmt_2206_to_assign_stmt_2216__exit__] 
      $P [if_stmt_2217__entry__] 
      $P [if_stmt_2217__exit__] 
      $P [merge_stmt_2223__entry__] 
      $P [merge_stmt_2223__exit__] 
      $P [assign_stmt_2227__entry__] 
      $P [assign_stmt_2227__exit__] 
      $P [bb_35_bb_36]
      $P [merge_stmt_2229__exit__] 
      $P [assign_stmt_2242__entry__] 
      $P [assign_stmt_2242__exit__] 
      $P [bb_36_bb_37]
      $P [merge_stmt_2244__exit__] 
      $P [assign_stmt_2259_to_assign_stmt_2264__entry__] 
      $P [assign_stmt_2259_to_assign_stmt_2264__exit__] 
      $P [if_stmt_2265__entry__] 
      $P [if_stmt_2265__exit__] 
      $P [merge_stmt_2271__entry__] 
      $P [merge_stmt_2271__exit__] 
      $P [assign_stmt_2282__entry__] 
      $P [assign_stmt_2282__exit__] 
      $P [if_stmt_2283__entry__] 
      $P [if_stmt_2283__exit__] 
      $P [merge_stmt_2289__entry__] 
      $P [merge_stmt_2289__exit__] 
      $P [assign_stmt_2292_to_assign_stmt_2298__entry__] 
      $P [assign_stmt_2292_to_assign_stmt_2298__exit__] 
      $P [if_stmt_2299__entry__] 
      $P [if_stmt_2299__exit__] 
      $P [merge_stmt_2305__entry__] 
      $P [merge_stmt_2305__exit__] 
      $P [assign_stmt_2309_to_assign_stmt_2366__entry__] 
      $P [assign_stmt_2309_to_assign_stmt_2366__exit__] 
      $P [bbx_xnph4x_xi_bb_41]
      $P [merge_stmt_2368__exit__] 
      $P [assign_stmt_2381_to_assign_stmt_2405__entry__] 
      $P [assign_stmt_2381_to_assign_stmt_2405__exit__] 
      $P [if_stmt_2406__entry__] 
      $P [if_stmt_2406__exit__] 
      $P [merge_stmt_2412__entry__] 
      $P [merge_stmt_2412__exit__] 
      $P [assign_stmt_2416_to_assign_stmt_2421__entry__] 
      $P [assign_stmt_2416_to_assign_stmt_2421__exit__] 
      $P [bb_42_bb_44]
      $P [merge_stmt_2423__exit__] 
      $P [assign_stmt_2427_to_assign_stmt_2436__entry__] 
      $P [assign_stmt_2427_to_assign_stmt_2436__exit__] 
      $P [bb_43_bb_44]
      $P [merge_stmt_2438__exit__] 
      $P [assign_stmt_2457__entry__] 
      $P [assign_stmt_2457__exit__] 
      $P [if_stmt_2458__entry__] 
      $P [if_stmt_2458__exit__] 
      $P [merge_stmt_2464__entry__] 
      $P [merge_stmt_2464__exit__] 
      $P [assign_stmt_2470__entry__] 
      $P [assign_stmt_2470__exit__] 
      $P [bbx_xnphx_xi36_bb_46]
      $P [merge_stmt_2472__exit__] 
      $P [assign_stmt_2485_to_assign_stmt_2557__entry__] 
      $P [assign_stmt_2485_to_assign_stmt_2557__exit__] 
      $P [if_stmt_2558__entry__] 
      $P [if_stmt_2558__exit__] 
      $P [merge_stmt_2564__entry__] 
      $P [merge_stmt_2564__exit__] 
      $P [xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi]
      $P [merge_stmt_2566__exit__] 
      $P [assign_stmt_2572_to_assign_stmt_2577__entry__] 
      $P [assign_stmt_2572_to_assign_stmt_2577__exit__] 
      $P [if_stmt_2578__entry__] 
      $P [if_stmt_2578__exit__] 
      $P [merge_stmt_2584__entry__] 
      $P [merge_stmt_2584__exit__] 
      $P [updateMessagex_xexitx_xloopexit_updateMessagex_xexit]
      $P [merge_stmt_2586__exit__] 
      $P [assign_stmt_2592__entry__] 
      $P [assign_stmt_2592__exit__] 
      $P [updateMessagex_xexit_initializeMessagex_xexit]
      $P [merge_stmt_2594__exit__] 
      $P [assign_stmt_2610_to_assign_stmt_2616__entry__] 
      $P [assign_stmt_2610_to_assign_stmt_2616__exit__] 
      $P [if_stmt_2617__entry__] 
      $P [if_stmt_2617__exit__] 
      $P [merge_stmt_2623__entry__] 
      $P [merge_stmt_2623__exit__] 
      $P [bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13]
      $P [merge_stmt_2625__exit__] 
      $P [assign_stmt_2638_to_assign_stmt_2658__entry__] 
      $P [assign_stmt_2638_to_assign_stmt_2658__exit__] 
      $P [assign_stmt_2661__entry__] 
      $P [assign_stmt_2661__exit__] 
      $P [assign_stmt_2664_to_assign_stmt_2676__entry__] 
      $P [assign_stmt_2664_to_assign_stmt_2676__exit__] 
      $P [if_stmt_2677__entry__] 
      $P [if_stmt_2677__exit__] 
      $P [merge_stmt_2683__entry__] 
      $P [merge_stmt_2683__exit__] 
      $P [assign_stmt_2686__entry__] 
      $P [assign_stmt_2686__exit__] 
      $P [send_outputx_xexitx_xloopexit_send_outputx_xexit]
      $P [merge_stmt_2688__exit__] 
      $P [assign_stmt_2700__entry__] 
      $P [assign_stmt_2700__exit__] 
      $P [send_outputx_xexit_bb_1]
      ::[call_stmt_1356] 
      {
        // start: 		$call initInputs () () 
        //  file prog.linked.opt.aa, line 640
        $T[call_stmt_1356_sample_start_] 
        $T[call_stmt_1356_sample_completed_] 
        $T[call_stmt_1356_update_start_] 
        $T[call_stmt_1356_update_completed_] 
        ;;[call_stmt_1356_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1356_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1356_sample_start_ &-> (call_stmt_1356_Sample)
        call_stmt_1356_sample_completed_ <-& (call_stmt_1356_Sample)
        call_stmt_1356_sample_completed_ &-> ($null)
        call_stmt_1356_update_start_ &-> (call_stmt_1356_Update)
        call_stmt_1356_update_completed_ <-& (call_stmt_1356_Update)
        // end: 		$call initInputs () () 
        // barrier: 		$call initInputs () () 
        // load-store dependencies..
      }
      call_stmt_1356__entry__ |-> (call_stmt_1356)
      call_stmt_1356__exit__ <-| (call_stmt_1356)
      ::[assign_stmt_1359_to_assign_stmt_1365] 
      {
        // start:  		iNsTr_2 := ncols
        //  file prog.linked.opt.aa, line 641
        // Source expression
        // ncols
        $T[LOAD_ncols_1358_sample_start_] 
        $T[LOAD_ncols_1358_sample_completed_] 
        $T[LOAD_ncols_1358_update_start_] 
        $T[LOAD_ncols_1358_update_completed_] 
        $T[LOAD_ncols_1358_word_address_calculated] 
        $T[LOAD_ncols_1358_root_address_calculated] 
        LOAD_ncols_1358_word_address_calculated <-& (LOAD_ncols_1358_root_address_calculated)
        ;;[LOAD_ncols_1358_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_1358_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_1358_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_1358_sample_start_ <-& (LOAD_ncols_1358_word_address_calculated)
        LOAD_ncols_1358_sample_start_ &-> (LOAD_ncols_1358_Sample)
        LOAD_ncols_1358_sample_completed_ <-& (LOAD_ncols_1358_Sample)
        LOAD_ncols_1358_sample_completed_ &-> ($null)
        LOAD_ncols_1358_update_start_ &-> (LOAD_ncols_1358_Update)
        LOAD_ncols_1358_update_completed_ <-& (LOAD_ncols_1358_Update)
        // Target expression
        // (as target) iNsTr_2
        // start: WAR dependencies for iNsTr_2
        // done: WAR dependencies for iNsTr_2
        // end:  		iNsTr_2 := ncols
        // start:  		iNsTr_3 := (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 642
        // Source expression
        // (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1364_sample_start_] 
        $T[EQ_u16_u1_1364_sample_completed_] 
        $T[EQ_u16_u1_1364_update_start_] 
        $T[EQ_u16_u1_1364_update_completed_] 
        // iNsTr_2
        // start: Forward dependencies from iNsTr_2 to transition EQ_u16_u1_1364_sample_start_
        EQ_u16_u1_1364_sample_start_ <-& (LOAD_ncols_1358_update_completed_)
        // done: Forward dependencies from iNsTr_2 to transition EQ_u16_u1_1364_sample_start_
        ;;[EQ_u16_u1_1364_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1364_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1364_sample_start_ &-> (EQ_u16_u1_1364_Sample)
        EQ_u16_u1_1364_sample_completed_ <-& (EQ_u16_u1_1364_Sample)
        EQ_u16_u1_1364_sample_completed_ &-> ($null)
        EQ_u16_u1_1364_update_start_ &-> (EQ_u16_u1_1364_Update)
        EQ_u16_u1_1364_update_completed_ <-& (EQ_u16_u1_1364_Update)
        // Target expression
        // (as target) iNsTr_3
        // start: WAR dependencies for iNsTr_3
        // done: WAR dependencies for iNsTr_3
        // end:  		iNsTr_3 := (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1359_to_assign_stmt_1365__entry__ |-> (assign_stmt_1359_to_assign_stmt_1365)
      assign_stmt_1359_to_assign_stmt_1365__exit__ <-| (assign_stmt_1359_to_assign_stmt_1365)
      // if-statement  
      //  file prog.linked.opt.aa, line 643
      ;;[if_stmt_1366_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1366__entry__ |-> (if_stmt_1366_dead_link)
      if_stmt_1366__exit__ <-| (if_stmt_1366_dead_link)
      ;;[if_stmt_1366_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1366__entry__ |-> (if_stmt_1366_eval_test)
      $P [R_iNsTr_3_1367_place]
      R_iNsTr_3_1367_place <-| (if_stmt_1366_eval_test)
      ;;[if_stmt_1366_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1366_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_3_1367_place |-> (if_stmt_1366_if_link if_stmt_1366_else_link)
      $P [bb_1_initialize_aPriorix_xexit]
      bb_1_initialize_aPriorix_xexit <-| (if_stmt_1366_if_link)
      $P [bb_1_bbx_xnphx_xix_xpreheader]
      bb_1_bbx_xnphx_xix_xpreheader <-| (if_stmt_1366_else_link)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 654
      <o> [do_while_stmt_1381]  $depth 16 $buffering 2 
      {
        $P[do_while_stmt_1381__entry__] 
        $P[do_while_stmt_1381__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1381_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          aggregated_phi_update_req &-> (condition_evaluated)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_1383
          // 			$phi iNsTr_13 := 			  ($cast ($uint<8>) iNsTr_14 ) $on $loopback			  iNsTr_13_at_entry $on $entry // type of target is $uint<8>
          $T[phi_stmt_1383_sample_start_] 
          $T[phi_stmt_1383_sample_completed_] 
          $T[phi_stmt_1383_update_start_] 
          $T[phi_stmt_1383_update_completed_] 
          $T[phi_stmt_1383_sample_start__ps] 
          aggregated_phi_sample_req <-& (phi_stmt_1383_sample_start_)
          phi_stmt_1383_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1383_sample_completed__ps] 
          phi_stmt_1383_sample_completed__ps &-> (aggregated_phi_sample_ack)
          aggregated_phi_sample_ack &-> (phi_stmt_1383_sample_completed_)
          $T[phi_stmt_1383_update_start__ps] 
          aggregated_phi_update_req <-& (phi_stmt_1383_update_start_)
          phi_stmt_1383_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1383_update_completed__ps] 
          phi_stmt_1383_update_completed__ps &-> (aggregated_phi_update_ack)
          aggregated_phi_update_ack &-> (phi_stmt_1383_update_completed_)
          $T[phi_stmt_1383_loopback_trigger] 
          phi_stmt_1383_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1383_loopback_sample_req] 
          $T[phi_stmt_1383_entry_trigger] 
          phi_stmt_1383_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1383_entry_sample_req] 
          phi_stmt_1383_update_start_ o<-& (phi_stmt_1383_update_completed_ 0)
          phi_stmt_1383_sample_start_ o<-& (phi_stmt_1383_sample_completed_ 1)
          $T[phi_stmt_1383_merged_reqs] 
          $T[phi_stmt_1383_entry_sample_req__merge_in] 
          phi_stmt_1383_entry_sample_req__merge_in <-& (phi_stmt_1383_entry_sample_req)
          $T[phi_stmt_1383_loopback_sample_req__merge_in] 
          phi_stmt_1383_loopback_sample_req__merge_in <-& (phi_stmt_1383_loopback_sample_req)
          $transitionmerge [phi_stmt_1383_req_merge] (phi_stmt_1383_entry_sample_req__merge_in phi_stmt_1383_loopback_sample_req__merge_in) (phi_stmt_1383_merged_reqs)
          phi_stmt_1383_merged_reqs &-> ($null)
          $T[phi_stmt_1383_phi_mux_ack] 
          $T[phi_stmt_1383_phi_mux_ack_ps] 
          phi_stmt_1383_phi_mux_ack_ps <-& (phi_stmt_1383_phi_mux_ack)
          $T[type_cast_1386_sample_start__ps] 
          $T[type_cast_1386_sample_completed__ps] 
          $T[type_cast_1386_update_start__ps] 
          $T[type_cast_1386_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<8>) iNsTr_14 )
          $T[type_cast_1386_sample_start_] 
          $T[type_cast_1386_sample_completed_] 
          $T[type_cast_1386_update_start_] 
          $T[type_cast_1386_update_completed_] 
          // iNsTr_14
          // start: Forward dependencies from iNsTr_14 to transition type_cast_1386_sample_start_
          // done: Forward dependencies from iNsTr_14 to transition type_cast_1386_sample_start_
          ;;[type_cast_1386_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1386_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1386_sample_start_ &-> (type_cast_1386_Sample)
          type_cast_1386_sample_completed_ <-& (type_cast_1386_Sample)
          type_cast_1386_sample_completed_ &-> ($null)
          type_cast_1386_update_start_ &-> (type_cast_1386_Update)
          type_cast_1386_update_completed_ <-& (type_cast_1386_Update)
          // RAW reenables for iNsTr_14
          // self-release: 
          type_cast_1386_sample_start_ o<-& (type_cast_1386_sample_completed_ 1)
          type_cast_1386_update_start_ o<-& (type_cast_1386_update_completed_ 0)
          // Phi start dependency
          type_cast_1386_sample_start_ <-& (type_cast_1386_sample_start__ps)
          type_cast_1386_update_start_ <-& (type_cast_1386_update_start__ps)
          // RAW reenables for ($cast ($uint<8>) iNsTr_14 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_1386_sample_completed__ps <-& (type_cast_1386_sample_completed_)
          type_cast_1386_update_completed__ps <-& (type_cast_1386_update_completed_)
          $T[R_iNsTr_13_at_entry_1387_sample_start__ps] 
          $T[R_iNsTr_13_at_entry_1387_sample_completed__ps] 
          $T[R_iNsTr_13_at_entry_1387_update_start__ps] 
          $T[R_iNsTr_13_at_entry_1387_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_iNsTr_13_at_entry_1387_sample_start_] 
          $T[R_iNsTr_13_at_entry_1387_sample_completed_] 
          $T[R_iNsTr_13_at_entry_1387_update_start_] 
          $T[R_iNsTr_13_at_entry_1387_update_completed_] 
          ;;[R_iNsTr_13_at_entry_1387_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_iNsTr_13_at_entry_1387_sample_start_ &-> (R_iNsTr_13_at_entry_1387_Sample)
          R_iNsTr_13_at_entry_1387_sample_completed_ <-& (R_iNsTr_13_at_entry_1387_Sample)
          ;;[R_iNsTr_13_at_entry_1387_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_iNsTr_13_at_entry_1387_update_start_ &-> (R_iNsTr_13_at_entry_1387_Update)
          R_iNsTr_13_at_entry_1387_update_completed_ <-& (R_iNsTr_13_at_entry_1387_Update)
          // RAW reenables for iNsTr_13_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_iNsTr_13_at_entry_1387_sample_start_ <-& (R_iNsTr_13_at_entry_1387_sample_start__ps)
          R_iNsTr_13_at_entry_1387_update_start_ <-& (R_iNsTr_13_at_entry_1387_update_start__ps)
          // Phi complete dependency.
          R_iNsTr_13_at_entry_1387_sample_completed__ps <-& (R_iNsTr_13_at_entry_1387_sample_completed_)
          R_iNsTr_13_at_entry_1387_update_completed__ps <-& (R_iNsTr_13_at_entry_1387_update_completed_)
          $phisequencer [ phi_stmt_1383_phi_seq] : 
          phi_stmt_1383_loopback_trigger type_cast_1386_sample_start__ps type_cast_1386_sample_completed__ps type_cast_1386_update_start__ps type_cast_1386_update_completed__ps phi_stmt_1383_entry_trigger R_iNsTr_13_at_entry_1387_sample_start__ps R_iNsTr_13_at_entry_1387_sample_completed__ps R_iNsTr_13_at_entry_1387_update_start__ps R_iNsTr_13_at_entry_1387_update_completed__ps :
          phi_stmt_1383_sample_start__ps phi_stmt_1383_sample_completed__ps phi_stmt_1383_update_start__ps phi_stmt_1383_update_completed__ps :
          phi_stmt_1383_loopback_sample_req phi_stmt_1383_entry_sample_req : 
          phi_stmt_1383_phi_mux_ack
          // done: PHI Statement phi_stmt_1383
          // start:  			tmp64 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          //  file prog.linked.opt.aa, line 659
          // Source expression
          // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          $T[ADD_u8_u8_1393_sample_start_] 
          $T[ADD_u8_u8_1393_sample_completed_] 
          $T[ADD_u8_u8_1393_update_start_] 
          $T[ADD_u8_u8_1393_update_completed_] 
          // iNsTr_13
          // start: Forward dependencies from iNsTr_13 to transition ADD_u8_u8_1393_sample_start_
          ADD_u8_u8_1393_sample_start_ <-& (phi_stmt_1383_update_completed_)
          // done: Forward dependencies from iNsTr_13 to transition ADD_u8_u8_1393_sample_start_
          ;;[ADD_u8_u8_1393_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_1393_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_1393_sample_start_ &-> (ADD_u8_u8_1393_Sample)
          ADD_u8_u8_1393_sample_completed_ <-& (ADD_u8_u8_1393_Sample)
          ADD_u8_u8_1393_sample_completed_ &-> ($null)
          ADD_u8_u8_1393_update_start_ &-> (ADD_u8_u8_1393_Update)
          ADD_u8_u8_1393_update_completed_ <-& (ADD_u8_u8_1393_Update)
          // RAW reenables for iNsTr_13
          phi_stmt_1383_update_start_ o<-& (ADD_u8_u8_1393_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_1393_sample_start_ o<-& (ADD_u8_u8_1393_sample_completed_ 1)
          ADD_u8_u8_1393_update_start_ o<-& (ADD_u8_u8_1393_update_completed_ 0)
          // Target expression
          // (as target) tmp64
          // start: WAR dependencies for tmp64
          // done: WAR dependencies for tmp64
          // end:  			tmp64 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          // start:  			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          //  file prog.linked.opt.aa, line 660
          // Source expression
          // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          $T[ADD_u8_u8_1399_sample_start_] 
          $T[ADD_u8_u8_1399_sample_completed_] 
          $T[ADD_u8_u8_1399_update_start_] 
          $T[ADD_u8_u8_1399_update_completed_] 
          // iNsTr_13
          // start: Forward dependencies from iNsTr_13 to transition ADD_u8_u8_1399_sample_start_
          ADD_u8_u8_1399_sample_start_ <-& (phi_stmt_1383_update_completed_)
          // done: Forward dependencies from iNsTr_13 to transition ADD_u8_u8_1399_sample_start_
          ;;[ADD_u8_u8_1399_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_1399_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_1399_sample_start_ &-> (ADD_u8_u8_1399_Sample)
          ADD_u8_u8_1399_sample_completed_ <-& (ADD_u8_u8_1399_Sample)
          ADD_u8_u8_1399_sample_completed_ &-> ($null)
          ADD_u8_u8_1399_update_start_ &-> (ADD_u8_u8_1399_Update)
          ADD_u8_u8_1399_update_completed_ <-& (ADD_u8_u8_1399_Update)
          // RAW reenables for iNsTr_13
          phi_stmt_1383_update_start_ o<-& (ADD_u8_u8_1399_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_1399_sample_start_ o<-& (ADD_u8_u8_1399_sample_completed_ 1)
          ADD_u8_u8_1399_update_start_ o<-& (ADD_u8_u8_1399_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_14
          // start: WAR dependencies for iNsTr_14
          // WAR dependency: Read: iNsTr_14 before Write: 			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          ADD_u8_u8_1399_update_start_ <-& (phi_stmt_1383_sample_completed_)
          // WAR dependency: release  Read: iNsTr_14 with Write: 			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
          phi_stmt_1383_sample_start_ o<-& (ADD_u8_u8_1399_update_completed_ 0)
          // done: WAR dependencies for iNsTr_14
          // end:  			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
          // start:  			iNsTr_17 := code_block_in
          //  file prog.linked.opt.aa, line 661
          // Source expression
          // code_block_in
          $T[RPIPE_code_block_in_1402_sample_start_] 
          $T[RPIPE_code_block_in_1402_sample_completed_] 
          $T[RPIPE_code_block_in_1402_update_start_] 
          $T[RPIPE_code_block_in_1402_update_completed_] 
          ;;[RPIPE_code_block_in_1402_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_code_block_in_1402_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_code_block_in_1402_sample_start_ &-> (RPIPE_code_block_in_1402_Sample)
          RPIPE_code_block_in_1402_sample_completed_ <-& (RPIPE_code_block_in_1402_Sample)
          RPIPE_code_block_in_1402_update_start_ <-& (RPIPE_code_block_in_1402_sample_completed_)
          RPIPE_code_block_in_1402_update_start_ &-> (RPIPE_code_block_in_1402_Update)
          RPIPE_code_block_in_1402_update_completed_ <-& (RPIPE_code_block_in_1402_Update)
          // self-release: 
          RPIPE_code_block_in_1402_sample_start_ o<-& (RPIPE_code_block_in_1402_sample_completed_ 1)
          RPIPE_code_block_in_1402_update_start_ o<-& (RPIPE_code_block_in_1402_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_17
          // start: WAR dependencies for iNsTr_17
          // done: WAR dependencies for iNsTr_17
          // end:  			iNsTr_17 := code_block_in
          // start:  			iNsTr_18 := ($cast ($uint<64>) iNsTr_13 )
          //  file prog.linked.opt.aa, line 662
          // Source expression
          // ($cast ($uint<64>) iNsTr_13 )
          $T[type_cast_1406_sample_start_] 
          $T[type_cast_1406_sample_completed_] 
          $T[type_cast_1406_update_start_] 
          $T[type_cast_1406_update_completed_] 
          // iNsTr_13
          // start: Forward dependencies from iNsTr_13 to transition type_cast_1406_sample_start_
          type_cast_1406_sample_start_ <-& (phi_stmt_1383_update_completed_)
          // done: Forward dependencies from iNsTr_13 to transition type_cast_1406_sample_start_
          ;;[type_cast_1406_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1406_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1406_sample_start_ &-> (type_cast_1406_Sample)
          type_cast_1406_sample_completed_ <-& (type_cast_1406_Sample)
          type_cast_1406_sample_completed_ &-> ($null)
          type_cast_1406_update_start_ &-> (type_cast_1406_Update)
          type_cast_1406_update_completed_ <-& (type_cast_1406_Update)
          // RAW reenables for iNsTr_13
          phi_stmt_1383_update_start_ o<-& (type_cast_1406_sample_completed_ 0)
          // self-release: 
          type_cast_1406_sample_start_ o<-& (type_cast_1406_sample_completed_ 1)
          type_cast_1406_update_start_ o<-& (type_cast_1406_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_18
          // start: WAR dependencies for iNsTr_18
          // done: WAR dependencies for iNsTr_18
          // end:  			iNsTr_18 := ($cast ($uint<64>) iNsTr_13 )
          // start:  			iNsTr_19 := @(code_block[iNsTr_18])
          //  file prog.linked.opt.aa, line 663
          // Source expression
          // @(code_block[iNsTr_18])
          $T[addr_of_1411_sample_start_] 
          $T[addr_of_1411_sample_completed_] 
          $T[addr_of_1411_update_start_] 
          $T[addr_of_1411_update_completed_] 
          $T[array_obj_ref_1410_root_address_calculated] 
          $T[array_obj_ref_1410_offset_calculated] 
          $T[array_obj_ref_1410_index_resized_0] 
          $T[array_obj_ref_1410_index_scaled_0] 
          $T[array_obj_ref_1410_index_computed_0] 
          // iNsTr_18
          // start: Forward dependencies from iNsTr_18 to transition array_obj_ref_1410_index_computed_0
          array_obj_ref_1410_index_computed_0 <-& (type_cast_1406_update_completed_)
          // done: Forward dependencies from iNsTr_18 to transition array_obj_ref_1410_index_computed_0
          ;;[array_obj_ref_1410_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_1410_index_computed_0 &-> (array_obj_ref_1410_index_resize_0)
          array_obj_ref_1410_index_resized_0 <-& (array_obj_ref_1410_index_resize_0)
          ;;[array_obj_ref_1410_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_1410_index_resized_0 &-> (array_obj_ref_1410_index_scale_0)
          array_obj_ref_1410_index_scaled_0 <-& (array_obj_ref_1410_index_scale_0)
          ;;[array_obj_ref_1410_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_1410_index_scaled_0 &-> (array_obj_ref_1410_final_index_sum_regn)
          array_obj_ref_1410_offset_calculated <-& (array_obj_ref_1410_final_index_sum_regn)
          ;;[array_obj_ref_1410_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_1410_offset_calculated &-> (array_obj_ref_1410_base_plus_offset)
          array_obj_ref_1410_root_address_calculated <-& (array_obj_ref_1410_base_plus_offset)
          ;;[addr_of_1411_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_1411_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_1411_sample_start_ <-& (array_obj_ref_1410_root_address_calculated)
          addr_of_1411_sample_start_ &-> (addr_of_1411_request)
          addr_of_1411_sample_completed_ <-& (addr_of_1411_request)
          addr_of_1411_update_start_ &-> (addr_of_1411_complete)
          addr_of_1411_update_completed_ <-& (addr_of_1411_complete)
          // reenables .
          // self-release 
          addr_of_1411_sample_start_ o<-& (addr_of_1411_sample_completed_ 1)
          addr_of_1411_update_start_ o<-& (addr_of_1411_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_19
          // start: WAR dependencies for iNsTr_19
          // done: WAR dependencies for iNsTr_19
          // end:  			iNsTr_19 := @(code_block[iNsTr_18])
          // start:  			->(iNsTr_19) := iNsTr_17
          //  file prog.linked.opt.aa, line 664
          // Source expression
          // iNsTr_17
          // Target expression
          // ->(iNsTr_19)
          $T[ptr_deref_1414_sample_start_] 
          $T[ptr_deref_1414_sample_completed_] 
          $T[ptr_deref_1414_update_start_] 
          $T[ptr_deref_1414_update_completed_] 
          $T[ptr_deref_1414_base_address_calculated] 
          // iNsTr_19
          $T[ptr_deref_1414_word_address_calculated] 
          $T[ptr_deref_1414_root_address_calculated] 
          $T[ptr_deref_1414_base_address_resized] 
          ;;[ptr_deref_1414_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_1414_base_address_calculated &-> (ptr_deref_1414_base_addr_resize)
          ptr_deref_1414_base_address_resized <-& (ptr_deref_1414_base_addr_resize)
          ;;[ptr_deref_1414_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_1414_base_address_resized &-> (ptr_deref_1414_base_plus_offset)
          ptr_deref_1414_root_address_calculated <-& (ptr_deref_1414_base_plus_offset)
          ;;[ptr_deref_1414_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_1414_root_address_calculated &-> (ptr_deref_1414_word_addrgen)
          ptr_deref_1414_word_address_calculated <-& (ptr_deref_1414_word_addrgen)
          ;;[ptr_deref_1414_Sample] 
          {
            ;;[ptr_deref_1414_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_1414_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_1414_sample_start_ <-& (ptr_deref_1414_word_address_calculated)
          // reenable-joins
          addr_of_1411_update_start_ o<-& (ptr_deref_1414_sample_completed_ 0)
          ptr_deref_1414_sample_start_ &-> (ptr_deref_1414_Sample)
          ptr_deref_1414_sample_completed_ <-& (ptr_deref_1414_Sample)
          ptr_deref_1414_sample_completed_ &-> ($null)
          ptr_deref_1414_update_start_ &-> (ptr_deref_1414_Update)
          ptr_deref_1414_update_completed_ <-& (ptr_deref_1414_Update)
          // start: Forward dependencies from iNsTr_19 to transition ptr_deref_1414_base_address_calculated
          ptr_deref_1414_base_address_calculated <-& (addr_of_1411_update_completed_)
          // done: Forward dependencies from iNsTr_19 to transition ptr_deref_1414_base_address_calculated
          ptr_deref_1414_sample_start_ <-& (ptr_deref_1414_base_address_calculated)
          // RAW reenables for iNsTr_19
          addr_of_1411_update_start_ o<-& (ptr_deref_1414_sample_completed_ 0)
          // self-release: 
          ptr_deref_1414_sample_start_ o<-& (ptr_deref_1414_sample_completed_ 1)
          ptr_deref_1414_update_start_ o<-& (ptr_deref_1414_update_completed_ 0)
          // start: Forward dependencies from iNsTr_17 to transition ptr_deref_1414_sample_start_
          ptr_deref_1414_sample_start_ <-& (RPIPE_code_block_in_1402_update_completed_)
          // done: Forward dependencies from iNsTr_17 to transition ptr_deref_1414_sample_start_
          // RAW reenables for iNsTr_17
          RPIPE_code_block_in_1402_update_start_ o<-& (ptr_deref_1414_sample_completed_ 0)
          // end:  			->(iNsTr_19) := iNsTr_17
          // start:  			iNsTr_21 := ($cast ($uint<32>) tmp64 )
          //  file prog.linked.opt.aa, line 665
          // Source expression
          // ($cast ($uint<32>) tmp64 )
          $T[type_cast_1419_sample_start_] 
          $T[type_cast_1419_sample_completed_] 
          $T[type_cast_1419_update_start_] 
          $T[type_cast_1419_update_completed_] 
          // tmp64
          // start: Forward dependencies from tmp64 to transition type_cast_1419_sample_start_
          type_cast_1419_sample_start_ <-& (ADD_u8_u8_1393_update_completed_)
          // done: Forward dependencies from tmp64 to transition type_cast_1419_sample_start_
          ;;[type_cast_1419_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1419_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1419_sample_start_ &-> (type_cast_1419_Sample)
          type_cast_1419_sample_completed_ <-& (type_cast_1419_Sample)
          type_cast_1419_sample_completed_ &-> ($null)
          type_cast_1419_update_start_ &-> (type_cast_1419_Update)
          type_cast_1419_update_completed_ <-& (type_cast_1419_Update)
          // RAW reenables for tmp64
          ADD_u8_u8_1393_update_start_ o<-& (type_cast_1419_sample_completed_ 0)
          // self-release: 
          type_cast_1419_sample_start_ o<-& (type_cast_1419_sample_completed_ 1)
          type_cast_1419_update_start_ o<-& (type_cast_1419_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_21
          // start: WAR dependencies for iNsTr_21
          // done: WAR dependencies for iNsTr_21
          // end:  			iNsTr_21 := ($cast ($uint<32>) tmp64 )
          // start:  			iNsTr_22 := ncols
          //  file prog.linked.opt.aa, line 666
          // Source expression
          // ncols
          $T[LOAD_ncols_1422_sample_start_] 
          $T[LOAD_ncols_1422_sample_completed_] 
          $T[LOAD_ncols_1422_update_start_] 
          $T[LOAD_ncols_1422_update_completed_] 
          $T[LOAD_ncols_1422_word_address_calculated] 
          $T[LOAD_ncols_1422_root_address_calculated] 
          LOAD_ncols_1422_word_address_calculated <-& (LOAD_ncols_1422_root_address_calculated)
          ;;[LOAD_ncols_1422_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[LOAD_ncols_1422_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[LOAD_ncols_1422_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          LOAD_ncols_1422_sample_start_ <-& (LOAD_ncols_1422_word_address_calculated)
          // reenable-joins
          LOAD_ncols_1422_sample_start_ &-> (LOAD_ncols_1422_Sample)
          LOAD_ncols_1422_sample_completed_ <-& (LOAD_ncols_1422_Sample)
          LOAD_ncols_1422_sample_completed_ &-> ($null)
          LOAD_ncols_1422_update_start_ &-> (LOAD_ncols_1422_Update)
          LOAD_ncols_1422_update_completed_ <-& (LOAD_ncols_1422_Update)
          // self-release: 
          LOAD_ncols_1422_sample_start_ o<-& (LOAD_ncols_1422_sample_completed_ 1)
          LOAD_ncols_1422_update_start_ o<-& (LOAD_ncols_1422_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_22
          // start: WAR dependencies for iNsTr_22
          // done: WAR dependencies for iNsTr_22
          // end:  			iNsTr_22 := ncols
          // start:  			iNsTr_23 := ($cast ($uint<32>) iNsTr_22 )
          //  file prog.linked.opt.aa, line 667
          // Source expression
          // ($cast ($uint<32>) iNsTr_22 )
          $T[type_cast_1426_sample_start_] 
          $T[type_cast_1426_sample_completed_] 
          $T[type_cast_1426_update_start_] 
          $T[type_cast_1426_update_completed_] 
          // iNsTr_22
          // start: Forward dependencies from iNsTr_22 to transition type_cast_1426_sample_start_
          type_cast_1426_sample_start_ <-& (LOAD_ncols_1422_update_completed_)
          // done: Forward dependencies from iNsTr_22 to transition type_cast_1426_sample_start_
          ;;[type_cast_1426_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1426_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1426_sample_start_ &-> (type_cast_1426_Sample)
          type_cast_1426_sample_completed_ <-& (type_cast_1426_Sample)
          type_cast_1426_sample_completed_ &-> ($null)
          type_cast_1426_update_start_ &-> (type_cast_1426_Update)
          type_cast_1426_update_completed_ <-& (type_cast_1426_Update)
          // RAW reenables for iNsTr_22
          LOAD_ncols_1422_update_start_ o<-& (type_cast_1426_sample_completed_ 0)
          // self-release: 
          type_cast_1426_sample_start_ o<-& (type_cast_1426_sample_completed_ 1)
          type_cast_1426_update_start_ o<-& (type_cast_1426_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_23
          // start: WAR dependencies for iNsTr_23
          // done: WAR dependencies for iNsTr_23
          // end:  			iNsTr_23 := ($cast ($uint<32>) iNsTr_22 )
          // start:  			iNsTr_24 := (iNsTr_21 < iNsTr_23)
          //  file prog.linked.opt.aa, line 668
          // Source expression
          // (iNsTr_21 < iNsTr_23)
          $T[ULT_u32_u1_1431_sample_start_] 
          $T[ULT_u32_u1_1431_sample_completed_] 
          $T[ULT_u32_u1_1431_update_start_] 
          $T[ULT_u32_u1_1431_update_completed_] 
          // iNsTr_21
          // iNsTr_23
          // start: Forward dependencies from iNsTr_21 to transition ULT_u32_u1_1431_sample_start_
          ULT_u32_u1_1431_sample_start_ <-& (type_cast_1419_update_completed_)
          // done: Forward dependencies from iNsTr_21 to transition ULT_u32_u1_1431_sample_start_
          // start: Forward dependencies from iNsTr_23 to transition ULT_u32_u1_1431_sample_start_
          ULT_u32_u1_1431_sample_start_ <-& (type_cast_1426_update_completed_)
          // done: Forward dependencies from iNsTr_23 to transition ULT_u32_u1_1431_sample_start_
          ;;[ULT_u32_u1_1431_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ULT_u32_u1_1431_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ULT_u32_u1_1431_sample_start_ &-> (ULT_u32_u1_1431_Sample)
          ULT_u32_u1_1431_sample_completed_ <-& (ULT_u32_u1_1431_Sample)
          ULT_u32_u1_1431_sample_completed_ &-> ($null)
          ULT_u32_u1_1431_update_start_ &-> (ULT_u32_u1_1431_Update)
          ULT_u32_u1_1431_update_completed_ <-& (ULT_u32_u1_1431_Update)
          // RAW reenables for iNsTr_21
          type_cast_1419_update_start_ o<-& (ULT_u32_u1_1431_sample_completed_ 0)
          // RAW reenables for iNsTr_23
          type_cast_1426_update_start_ o<-& (ULT_u32_u1_1431_sample_completed_ 0)
          // self-release: 
          ULT_u32_u1_1431_sample_start_ o<-& (ULT_u32_u1_1431_sample_completed_ 1)
          ULT_u32_u1_1431_update_start_ o<-& (ULT_u32_u1_1431_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_24
          // start: WAR dependencies for iNsTr_24
          // done: WAR dependencies for iNsTr_24
          // end:  			iNsTr_24 := (iNsTr_21 < iNsTr_23)
          // start:  			bbx_xnphx_xi_readCodeBlockx_xexit_taken := ( ~ iNsTr_24 )
          //  file prog.linked.opt.aa, line 669
          // Source expression
          // ( ~ iNsTr_24 )
          $T[NOT_u1_u1_1435_sample_start_] 
          $T[NOT_u1_u1_1435_sample_completed_] 
          $T[NOT_u1_u1_1435_update_start_] 
          $T[NOT_u1_u1_1435_update_completed_] 
          // iNsTr_24
          // start: Forward dependencies from iNsTr_24 to transition NOT_u1_u1_1435_sample_start_
          NOT_u1_u1_1435_sample_start_ <-& (ULT_u32_u1_1431_update_completed_)
          // done: Forward dependencies from iNsTr_24 to transition NOT_u1_u1_1435_sample_start_
          ;;[NOT_u1_u1_1435_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_1435_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_1435_sample_start_ &-> (NOT_u1_u1_1435_Sample)
          NOT_u1_u1_1435_sample_completed_ <-& (NOT_u1_u1_1435_Sample)
          NOT_u1_u1_1435_sample_completed_ &-> ($null)
          NOT_u1_u1_1435_update_start_ &-> (NOT_u1_u1_1435_Update)
          NOT_u1_u1_1435_update_completed_ <-& (NOT_u1_u1_1435_Update)
          // RAW reenables for iNsTr_24
          ULT_u32_u1_1431_update_start_ o<-& (NOT_u1_u1_1435_sample_completed_ 0)
          // self-release: 
          NOT_u1_u1_1435_sample_start_ o<-& (NOT_u1_u1_1435_sample_completed_ 1)
          NOT_u1_u1_1435_update_start_ o<-& (NOT_u1_u1_1435_update_completed_ 0)
          // Target expression
          // (as target) bbx_xnphx_xi_readCodeBlockx_xexit_taken
          // start: WAR dependencies for bbx_xnphx_xi_readCodeBlockx_xexit_taken
          // done: WAR dependencies for bbx_xnphx_xi_readCodeBlockx_xexit_taken
          // end:  			bbx_xnphx_xi_readCodeBlockx_xexit_taken := ( ~ iNsTr_24 )
          // iNsTr_24
          // start: Forward dependencies from iNsTr_24 to transition condition_evaluated
          condition_evaluated <-& (ULT_u32_u1_1431_update_completed_)
          // done: Forward dependencies from iNsTr_24 to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_11
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_3
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe code_block_in
          // read-dependencies for pipe code_block_in
          // write-dependencies for pipe code_block_in
          // signal dependencies for code_block_in
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1381__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1381_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1381__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1381_loop_body : condition_evaluated
        $bind do_while_stmt_1381__entry__  => do_while_stmt_1381_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1381_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1381__exit__)
      }
      do_while_stmt_1381__entry__ |-> (do_while_stmt_1381)
      do_while_stmt_1381__exit__ <-| (do_while_stmt_1381)
      // if-statement  
      //  file prog.linked.opt.aa, line 0
      ;;[if_stmt_1439_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1439__entry__ |-> (if_stmt_1439_dead_link)
      if_stmt_1439__exit__ <-| (if_stmt_1439_dead_link)
      ;;[if_stmt_1439_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1439__entry__ |-> (if_stmt_1439_eval_test)
      $P [R_bbx_xnphx_xi_readCodeBlockx_xexit_taken_1440_place]
      R_bbx_xnphx_xi_readCodeBlockx_xexit_taken_1440_place <-| (if_stmt_1439_eval_test)
      ;;[if_stmt_1439_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1439_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_bbx_xnphx_xi_readCodeBlockx_xexit_taken_1440_place |-> (if_stmt_1439_if_link if_stmt_1439_else_link)
      $P [bbx_xnphx_xi_readCodeBlockx_xexit]
      bbx_xnphx_xi_readCodeBlockx_xexit <-| (if_stmt_1439_if_link)
      if_stmt_1439__exit__ <-| (if_stmt_1439_else_link)
      ::[assign_stmt_1454] 
      {
        // start:  		iNsTr_38 := (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 677
        // Source expression
        // (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1453_sample_start_] 
        $T[EQ_u16_u1_1453_sample_completed_] 
        $T[EQ_u16_u1_1453_update_start_] 
        $T[EQ_u16_u1_1453_update_completed_] 
        // xx_xlcssa
        // start: Forward dependencies from xx_xlcssa to transition EQ_u16_u1_1453_sample_start_
        // done: Forward dependencies from xx_xlcssa to transition EQ_u16_u1_1453_sample_start_
        ;;[EQ_u16_u1_1453_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1453_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1453_sample_start_ &-> (EQ_u16_u1_1453_Sample)
        EQ_u16_u1_1453_sample_completed_ <-& (EQ_u16_u1_1453_Sample)
        EQ_u16_u1_1453_sample_completed_ &-> ($null)
        EQ_u16_u1_1453_update_start_ &-> (EQ_u16_u1_1453_Update)
        EQ_u16_u1_1453_update_completed_ <-& (EQ_u16_u1_1453_Update)
        // Target expression
        // (as target) iNsTr_38
        // start: WAR dependencies for iNsTr_38
        // done: WAR dependencies for iNsTr_38
        // end:  		iNsTr_38 := (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1454__entry__ |-> (assign_stmt_1454)
      assign_stmt_1454__exit__ <-| (assign_stmt_1454)
      // if-statement  
      //  file prog.linked.opt.aa, line 678
      ;;[if_stmt_1455_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1455__entry__ |-> (if_stmt_1455_dead_link)
      if_stmt_1455__exit__ <-| (if_stmt_1455_dead_link)
      ;;[if_stmt_1455_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1455__entry__ |-> (if_stmt_1455_eval_test)
      $P [R_iNsTr_38_1456_place]
      R_iNsTr_38_1456_place <-| (if_stmt_1455_eval_test)
      ;;[if_stmt_1455_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1455_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_38_1456_place |-> (if_stmt_1455_if_link if_stmt_1455_else_link)
      $P [readCodeBlockx_xexit_initialize_aPriorix_xexit]
      readCodeBlockx_xexit_initialize_aPriorix_xexit <-| (if_stmt_1455_if_link)
      $P [readCodeBlockx_xexit_bbx_xnphx_xi1]
      readCodeBlockx_xexit_bbx_xnphx_xi1 <-| (if_stmt_1455_else_link)
      ::[assign_stmt_1464_to_assign_stmt_1501] 
      {
        // start:  		iNsTr_46 := ebbyNo
        //  file prog.linked.opt.aa, line 685
        // Source expression
        // ebbyNo
        $T[LOAD_ebbyNo_1463_sample_start_] 
        $T[LOAD_ebbyNo_1463_sample_completed_] 
        $T[LOAD_ebbyNo_1463_update_start_] 
        $T[LOAD_ebbyNo_1463_update_completed_] 
        $T[LOAD_ebbyNo_1463_word_address_calculated] 
        $T[LOAD_ebbyNo_1463_root_address_calculated] 
        LOAD_ebbyNo_1463_word_address_calculated <-& (LOAD_ebbyNo_1463_root_address_calculated)
        ;;[LOAD_ebbyNo_1463_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ebbyNo_1463_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ebbyNo_1463_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ebbyNo_1463_sample_start_ <-& (LOAD_ebbyNo_1463_word_address_calculated)
        LOAD_ebbyNo_1463_sample_start_ &-> (LOAD_ebbyNo_1463_Sample)
        LOAD_ebbyNo_1463_sample_completed_ <-& (LOAD_ebbyNo_1463_Sample)
        LOAD_ebbyNo_1463_sample_completed_ &-> ($null)
        LOAD_ebbyNo_1463_update_start_ &-> (LOAD_ebbyNo_1463_Update)
        LOAD_ebbyNo_1463_update_completed_ <-& (LOAD_ebbyNo_1463_Update)
        // Target expression
        // (as target) iNsTr_46
        // start: WAR dependencies for iNsTr_46
        // done: WAR dependencies for iNsTr_46
        // end:  		iNsTr_46 := ebbyNo
        // start:  		iNsTr_47 := rate
        //  file prog.linked.opt.aa, line 686
        // Source expression
        // rate
        $T[LOAD_rate_1466_sample_start_] 
        $T[LOAD_rate_1466_sample_completed_] 
        $T[LOAD_rate_1466_update_start_] 
        $T[LOAD_rate_1466_update_completed_] 
        $T[LOAD_rate_1466_word_address_calculated] 
        $T[LOAD_rate_1466_root_address_calculated] 
        LOAD_rate_1466_word_address_calculated <-& (LOAD_rate_1466_root_address_calculated)
        ;;[LOAD_rate_1466_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_rate_1466_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_rate_1466_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_rate_1466_sample_start_ <-& (LOAD_rate_1466_word_address_calculated)
        LOAD_rate_1466_sample_start_ &-> (LOAD_rate_1466_Sample)
        LOAD_rate_1466_sample_completed_ <-& (LOAD_rate_1466_Sample)
        LOAD_rate_1466_sample_completed_ &-> ($null)
        LOAD_rate_1466_update_start_ &-> (LOAD_rate_1466_Update)
        LOAD_rate_1466_update_completed_ <-& (LOAD_rate_1466_Update)
        // Target expression
        // (as target) iNsTr_47
        // start: WAR dependencies for iNsTr_47
        // done: WAR dependencies for iNsTr_47
        // end:  		iNsTr_47 := rate
        // start:  		iNsTr_48 := (iNsTr_47 * iNsTr_46)
        //  file prog.linked.opt.aa, line 687
        // Source expression
        // (iNsTr_47 * iNsTr_46)
        $T[MUL_f32_f32_1471_sample_start_] 
        $T[MUL_f32_f32_1471_sample_completed_] 
        $T[MUL_f32_f32_1471_update_start_] 
        $T[MUL_f32_f32_1471_update_completed_] 
        // iNsTr_47
        // iNsTr_46
        // start: Forward dependencies from iNsTr_47 to transition MUL_f32_f32_1471_sample_start_
        MUL_f32_f32_1471_sample_start_ <-& (LOAD_rate_1466_update_completed_)
        // done: Forward dependencies from iNsTr_47 to transition MUL_f32_f32_1471_sample_start_
        // start: Forward dependencies from iNsTr_46 to transition MUL_f32_f32_1471_sample_start_
        MUL_f32_f32_1471_sample_start_ <-& (LOAD_ebbyNo_1463_update_completed_)
        // done: Forward dependencies from iNsTr_46 to transition MUL_f32_f32_1471_sample_start_
        ;;[MUL_f32_f32_1471_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1471_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1471_sample_start_ &-> (MUL_f32_f32_1471_Sample)
        MUL_f32_f32_1471_sample_completed_ <-& (MUL_f32_f32_1471_Sample)
        MUL_f32_f32_1471_sample_completed_ &-> ($null)
        MUL_f32_f32_1471_update_start_ &-> (MUL_f32_f32_1471_Update)
        MUL_f32_f32_1471_update_completed_ <-& (MUL_f32_f32_1471_Update)
        // Target expression
        // (as target) iNsTr_48
        // start: WAR dependencies for iNsTr_48
        // done: WAR dependencies for iNsTr_48
        // end:  		iNsTr_48 := (iNsTr_47 * iNsTr_46)
        // start:  		tmpx_xi := (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 688
        // Source expression
        // (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1477_sample_start_] 
        $T[UGT_u16_u1_1477_sample_completed_] 
        $T[UGT_u16_u1_1477_update_start_] 
        $T[UGT_u16_u1_1477_update_completed_] 
        // xx_xlcssa
        // start: Forward dependencies from xx_xlcssa to transition UGT_u16_u1_1477_sample_start_
        // done: Forward dependencies from xx_xlcssa to transition UGT_u16_u1_1477_sample_start_
        ;;[UGT_u16_u1_1477_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1477_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1477_sample_start_ &-> (UGT_u16_u1_1477_Sample)
        UGT_u16_u1_1477_sample_completed_ <-& (UGT_u16_u1_1477_Sample)
        UGT_u16_u1_1477_sample_completed_ &-> ($null)
        UGT_u16_u1_1477_update_start_ &-> (UGT_u16_u1_1477_Update)
        UGT_u16_u1_1477_update_completed_ <-& (UGT_u16_u1_1477_Update)
        // Target expression
        // (as target) tmpx_xi
        // start: WAR dependencies for tmpx_xi
        // done: WAR dependencies for tmpx_xi
        // end:  		tmpx_xi := (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi := (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 689
        // Source expression
        // (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1483_sample_start_] 
        $T[ADD_u16_u16_1483_sample_completed_] 
        $T[ADD_u16_u16_1483_update_start_] 
        $T[ADD_u16_u16_1483_update_completed_] 
        // xx_xlcssa
        // start: Forward dependencies from xx_xlcssa to transition ADD_u16_u16_1483_sample_start_
        // done: Forward dependencies from xx_xlcssa to transition ADD_u16_u16_1483_sample_start_
        ;;[ADD_u16_u16_1483_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1483_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1483_sample_start_ &-> (ADD_u16_u16_1483_Sample)
        ADD_u16_u16_1483_sample_completed_ <-& (ADD_u16_u16_1483_Sample)
        ADD_u16_u16_1483_sample_completed_ &-> ($null)
        ADD_u16_u16_1483_update_start_ &-> (ADD_u16_u16_1483_Update)
        ADD_u16_u16_1483_update_completed_ <-& (ADD_u16_u16_1483_Update)
        // Target expression
        // (as target) xx_xopx_xi
        // start: WAR dependencies for xx_xopx_xi
        // done: WAR dependencies for xx_xopx_xi
        // end:  		xx_xopx_xi := (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_49 := ($cast ($uint<64>) xx_xopx_xi )
        //  file prog.linked.opt.aa, line 690
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi )
        $T[type_cast_1487_sample_start_] 
        $T[type_cast_1487_sample_completed_] 
        $T[type_cast_1487_update_start_] 
        $T[type_cast_1487_update_completed_] 
        // xx_xopx_xi
        // start: Forward dependencies from xx_xopx_xi to transition type_cast_1487_sample_start_
        type_cast_1487_sample_start_ <-& (ADD_u16_u16_1483_update_completed_)
        // done: Forward dependencies from xx_xopx_xi to transition type_cast_1487_sample_start_
        ;;[type_cast_1487_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1487_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1487_sample_start_ &-> (type_cast_1487_Sample)
        type_cast_1487_sample_completed_ <-& (type_cast_1487_Sample)
        type_cast_1487_sample_completed_ &-> ($null)
        type_cast_1487_update_start_ &-> (type_cast_1487_Update)
        type_cast_1487_update_completed_ <-& (type_cast_1487_Update)
        // Target expression
        // (as target) iNsTr_49
        // start: WAR dependencies for iNsTr_49
        // done: WAR dependencies for iNsTr_49
        // end:  		iNsTr_49 := ($cast ($uint<64>) xx_xopx_xi )
        // start:  		xx_xop6x_xi := (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 691
        // Source expression
        // (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1493_sample_start_] 
        $T[ADD_u64_u64_1493_sample_completed_] 
        $T[ADD_u64_u64_1493_update_start_] 
        $T[ADD_u64_u64_1493_update_completed_] 
        // iNsTr_49
        // start: Forward dependencies from iNsTr_49 to transition ADD_u64_u64_1493_sample_start_
        ADD_u64_u64_1493_sample_start_ <-& (type_cast_1487_update_completed_)
        // done: Forward dependencies from iNsTr_49 to transition ADD_u64_u64_1493_sample_start_
        ;;[ADD_u64_u64_1493_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1493_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1493_sample_start_ &-> (ADD_u64_u64_1493_Sample)
        ADD_u64_u64_1493_sample_completed_ <-& (ADD_u64_u64_1493_Sample)
        ADD_u64_u64_1493_sample_completed_ &-> ($null)
        ADD_u64_u64_1493_update_start_ &-> (ADD_u64_u64_1493_Update)
        ADD_u64_u64_1493_update_completed_ <-& (ADD_u64_u64_1493_Update)
        // Target expression
        // (as target) xx_xop6x_xi
        // start: WAR dependencies for xx_xop6x_xi
        // done: WAR dependencies for xx_xop6x_xi
        // end:  		xx_xop6x_xi := (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi := ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 692
        // Source expression
        // ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1500_sample_start_] 
        $T[MUX_1500_sample_completed_] 
        $T[MUX_1500_update_start_] 
        $T[MUX_1500_update_completed_] 
        // tmpx_xi
        // xx_xop6x_xi
        // start: Forward dependencies from tmpx_xi to transition MUX_1500_sample_start_
        MUX_1500_sample_start_ <-& (UGT_u16_u1_1477_update_completed_)
        // done: Forward dependencies from tmpx_xi to transition MUX_1500_sample_start_
        // start: Forward dependencies from xx_xop6x_xi to transition MUX_1500_sample_start_
        MUX_1500_sample_start_ <-& (ADD_u64_u64_1493_update_completed_)
        // done: Forward dependencies from xx_xop6x_xi to transition MUX_1500_sample_start_
        ;;[MUX_1500_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1500_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1500_sample_start_ &-> (MUX_1500_start)
        MUX_1500_sample_completed_ <-& (MUX_1500_start)
        MUX_1500_update_start_ &-> (MUX_1500_complete)
        MUX_1500_update_completed_ <-& (MUX_1500_complete)
        // Target expression
        // (as target) tmp4x_xi
        // start: WAR dependencies for tmp4x_xi
        // done: WAR dependencies for tmp4x_xi
        // end:  		tmp4x_xi := ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1464_to_assign_stmt_1501__entry__ |-> (assign_stmt_1464_to_assign_stmt_1501)
      assign_stmt_1464_to_assign_stmt_1501__exit__ <-| (assign_stmt_1464_to_assign_stmt_1501)
      ::[assign_stmt_1516_to_assign_stmt_1551] 
      {
        // start:  		scevgepx_xi := @(code_block[indvarx_xi])
        //  file prog.linked.opt.aa, line 697
        // Source expression
        // @(code_block[indvarx_xi])
        $T[addr_of_1515_sample_start_] 
        $T[addr_of_1515_sample_completed_] 
        $T[addr_of_1515_update_start_] 
        $T[addr_of_1515_update_completed_] 
        $T[array_obj_ref_1514_root_address_calculated] 
        $T[array_obj_ref_1514_offset_calculated] 
        $T[array_obj_ref_1514_index_resized_0] 
        $T[array_obj_ref_1514_index_scaled_0] 
        $T[array_obj_ref_1514_index_computed_0] 
        // indvarx_xi
        // start: Forward dependencies from indvarx_xi to transition array_obj_ref_1514_index_computed_0
        // done: Forward dependencies from indvarx_xi to transition array_obj_ref_1514_index_computed_0
        ;;[array_obj_ref_1514_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1514_index_computed_0 &-> (array_obj_ref_1514_index_resize_0)
        array_obj_ref_1514_index_resized_0 <-& (array_obj_ref_1514_index_resize_0)
        ;;[array_obj_ref_1514_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1514_index_resized_0 &-> (array_obj_ref_1514_index_scale_0)
        array_obj_ref_1514_index_scaled_0 <-& (array_obj_ref_1514_index_scale_0)
        ;;[array_obj_ref_1514_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1514_index_scaled_0 &-> (array_obj_ref_1514_final_index_sum_regn)
        array_obj_ref_1514_offset_calculated <-& (array_obj_ref_1514_final_index_sum_regn)
        ;;[array_obj_ref_1514_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1514_offset_calculated &-> (array_obj_ref_1514_base_plus_offset)
        array_obj_ref_1514_root_address_calculated <-& (array_obj_ref_1514_base_plus_offset)
        ;;[addr_of_1515_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1515_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1515_sample_start_ <-& (array_obj_ref_1514_root_address_calculated)
        addr_of_1515_sample_start_ &-> (addr_of_1515_request)
        addr_of_1515_sample_completed_ <-& (addr_of_1515_request)
        addr_of_1515_update_start_ &-> (addr_of_1515_complete)
        addr_of_1515_update_completed_ <-& (addr_of_1515_complete)
        // Target expression
        // (as target) scevgepx_xi
        // start: WAR dependencies for scevgepx_xi
        // done: WAR dependencies for scevgepx_xi
        // end:  		scevgepx_xi := @(code_block[indvarx_xi])
        // start:  		scevgep5x_xi := @(aPriori[indvarx_xi])
        //  file prog.linked.opt.aa, line 698
        // Source expression
        // @(aPriori[indvarx_xi])
        $T[addr_of_1520_sample_start_] 
        $T[addr_of_1520_sample_completed_] 
        $T[addr_of_1520_update_start_] 
        $T[addr_of_1520_update_completed_] 
        $T[array_obj_ref_1519_root_address_calculated] 
        $T[array_obj_ref_1519_offset_calculated] 
        $T[array_obj_ref_1519_index_resized_0] 
        $T[array_obj_ref_1519_index_scaled_0] 
        $T[array_obj_ref_1519_index_computed_0] 
        // indvarx_xi
        // start: Forward dependencies from indvarx_xi to transition array_obj_ref_1519_index_computed_0
        // done: Forward dependencies from indvarx_xi to transition array_obj_ref_1519_index_computed_0
        ;;[array_obj_ref_1519_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1519_index_computed_0 &-> (array_obj_ref_1519_index_resize_0)
        array_obj_ref_1519_index_resized_0 <-& (array_obj_ref_1519_index_resize_0)
        ;;[array_obj_ref_1519_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1519_index_resized_0 &-> (array_obj_ref_1519_index_scale_0)
        array_obj_ref_1519_index_scaled_0 <-& (array_obj_ref_1519_index_scale_0)
        ;;[array_obj_ref_1519_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1519_index_scaled_0 &-> (array_obj_ref_1519_final_index_sum_regn)
        array_obj_ref_1519_offset_calculated <-& (array_obj_ref_1519_final_index_sum_regn)
        ;;[array_obj_ref_1519_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1519_offset_calculated &-> (array_obj_ref_1519_base_plus_offset)
        array_obj_ref_1519_root_address_calculated <-& (array_obj_ref_1519_base_plus_offset)
        ;;[addr_of_1520_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1520_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1520_sample_start_ <-& (array_obj_ref_1519_root_address_calculated)
        addr_of_1520_sample_start_ &-> (addr_of_1520_request)
        addr_of_1520_sample_completed_ <-& (addr_of_1520_request)
        addr_of_1520_update_start_ &-> (addr_of_1520_complete)
        addr_of_1520_update_completed_ <-& (addr_of_1520_complete)
        // Target expression
        // (as target) scevgep5x_xi
        // start: WAR dependencies for scevgep5x_xi
        // done: WAR dependencies for scevgep5x_xi
        // end:  		scevgep5x_xi := @(aPriori[indvarx_xi])
        // start:  		iNsTr_60 := ->(scevgepx_xi)
        //  file prog.linked.opt.aa, line 699
        // Source expression
        // ->(scevgepx_xi)
        $T[ptr_deref_1524_sample_start_] 
        $T[ptr_deref_1524_sample_completed_] 
        $T[ptr_deref_1524_update_start_] 
        $T[ptr_deref_1524_update_completed_] 
        $T[ptr_deref_1524_base_address_calculated] 
        // scevgepx_xi
        $T[ptr_deref_1524_word_address_calculated] 
        $T[ptr_deref_1524_root_address_calculated] 
        $T[ptr_deref_1524_base_address_resized] 
        ;;[ptr_deref_1524_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1524_base_address_calculated &-> (ptr_deref_1524_base_addr_resize)
        ptr_deref_1524_base_address_resized <-& (ptr_deref_1524_base_addr_resize)
        ;;[ptr_deref_1524_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1524_base_address_resized &-> (ptr_deref_1524_base_plus_offset)
        ptr_deref_1524_root_address_calculated <-& (ptr_deref_1524_base_plus_offset)
        ;;[ptr_deref_1524_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1524_root_address_calculated &-> (ptr_deref_1524_word_addrgen)
        ptr_deref_1524_word_address_calculated <-& (ptr_deref_1524_word_addrgen)
        ;;[ptr_deref_1524_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1524_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1524_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1524_sample_start_ <-& (ptr_deref_1524_word_address_calculated)
        ptr_deref_1524_sample_start_ &-> (ptr_deref_1524_Sample)
        ptr_deref_1524_sample_completed_ <-& (ptr_deref_1524_Sample)
        ptr_deref_1524_sample_completed_ &-> ($null)
        ptr_deref_1524_update_start_ &-> (ptr_deref_1524_Update)
        ptr_deref_1524_update_completed_ <-& (ptr_deref_1524_Update)
        // start: Forward dependencies from scevgepx_xi to transition ptr_deref_1524_base_address_calculated
        ptr_deref_1524_base_address_calculated <-& (addr_of_1515_update_completed_)
        // done: Forward dependencies from scevgepx_xi to transition ptr_deref_1524_base_address_calculated
        ptr_deref_1524_sample_start_ <-& (ptr_deref_1524_base_address_calculated)
        // Target expression
        // (as target) iNsTr_60
        // start: WAR dependencies for iNsTr_60
        // done: WAR dependencies for iNsTr_60
        // end:  		iNsTr_60 := ->(scevgepx_xi)
        // start:  		iNsTr_61 := (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        //  file prog.linked.opt.aa, line 700
        // Source expression
        // (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        $T[MUL_f32_f32_1530_sample_start_] 
        $T[MUL_f32_f32_1530_sample_completed_] 
        $T[MUL_f32_f32_1530_update_start_] 
        $T[MUL_f32_f32_1530_update_completed_] 
        // iNsTr_60
        // start: Forward dependencies from iNsTr_60 to transition MUL_f32_f32_1530_sample_start_
        MUL_f32_f32_1530_sample_start_ <-& (ptr_deref_1524_update_completed_)
        // done: Forward dependencies from iNsTr_60 to transition MUL_f32_f32_1530_sample_start_
        ;;[MUL_f32_f32_1530_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1530_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1530_sample_start_ &-> (MUL_f32_f32_1530_Sample)
        MUL_f32_f32_1530_sample_completed_ <-& (MUL_f32_f32_1530_Sample)
        MUL_f32_f32_1530_sample_completed_ &-> ($null)
        MUL_f32_f32_1530_update_start_ &-> (MUL_f32_f32_1530_Update)
        MUL_f32_f32_1530_update_completed_ <-& (MUL_f32_f32_1530_Update)
        // Target expression
        // (as target) iNsTr_61
        // start: WAR dependencies for iNsTr_61
        // done: WAR dependencies for iNsTr_61
        // end:  		iNsTr_61 := (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
        // start:  		iNsTr_62 := (iNsTr_48 * iNsTr_61)
        //  file prog.linked.opt.aa, line 701
        // Source expression
        // (iNsTr_48 * iNsTr_61)
        $T[MUL_f32_f32_1535_sample_start_] 
        $T[MUL_f32_f32_1535_sample_completed_] 
        $T[MUL_f32_f32_1535_update_start_] 
        $T[MUL_f32_f32_1535_update_completed_] 
        // iNsTr_48
        // iNsTr_61
        // start: Forward dependencies from iNsTr_48 to transition MUL_f32_f32_1535_sample_start_
        // done: Forward dependencies from iNsTr_48 to transition MUL_f32_f32_1535_sample_start_
        // start: Forward dependencies from iNsTr_61 to transition MUL_f32_f32_1535_sample_start_
        MUL_f32_f32_1535_sample_start_ <-& (MUL_f32_f32_1530_update_completed_)
        // done: Forward dependencies from iNsTr_61 to transition MUL_f32_f32_1535_sample_start_
        ;;[MUL_f32_f32_1535_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[MUL_f32_f32_1535_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        MUL_f32_f32_1535_sample_start_ &-> (MUL_f32_f32_1535_Sample)
        MUL_f32_f32_1535_sample_completed_ <-& (MUL_f32_f32_1535_Sample)
        MUL_f32_f32_1535_sample_completed_ &-> ($null)
        MUL_f32_f32_1535_update_start_ &-> (MUL_f32_f32_1535_Update)
        MUL_f32_f32_1535_update_completed_ <-& (MUL_f32_f32_1535_Update)
        // Target expression
        // (as target) iNsTr_62
        // start: WAR dependencies for iNsTr_62
        // done: WAR dependencies for iNsTr_62
        // end:  		iNsTr_62 := (iNsTr_48 * iNsTr_61)
        // start:  		->(scevgep5x_xi) := iNsTr_62
        //  file prog.linked.opt.aa, line 702
        // Source expression
        // iNsTr_62
        // Target expression
        // ->(scevgep5x_xi)
        $T[ptr_deref_1538_sample_start_] 
        $T[ptr_deref_1538_sample_completed_] 
        $T[ptr_deref_1538_update_start_] 
        $T[ptr_deref_1538_update_completed_] 
        $T[ptr_deref_1538_base_address_calculated] 
        // scevgep5x_xi
        $T[ptr_deref_1538_word_address_calculated] 
        $T[ptr_deref_1538_root_address_calculated] 
        $T[ptr_deref_1538_base_address_resized] 
        ;;[ptr_deref_1538_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1538_base_address_calculated &-> (ptr_deref_1538_base_addr_resize)
        ptr_deref_1538_base_address_resized <-& (ptr_deref_1538_base_addr_resize)
        ;;[ptr_deref_1538_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1538_base_address_resized &-> (ptr_deref_1538_base_plus_offset)
        ptr_deref_1538_root_address_calculated <-& (ptr_deref_1538_base_plus_offset)
        ;;[ptr_deref_1538_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1538_root_address_calculated &-> (ptr_deref_1538_word_addrgen)
        ptr_deref_1538_word_address_calculated <-& (ptr_deref_1538_word_addrgen)
        ;;[ptr_deref_1538_Sample] 
        {
          ;;[ptr_deref_1538_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1538_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1538_sample_start_ <-& (ptr_deref_1538_word_address_calculated)
        ptr_deref_1538_sample_start_ &-> (ptr_deref_1538_Sample)
        ptr_deref_1538_sample_completed_ <-& (ptr_deref_1538_Sample)
        ptr_deref_1538_sample_completed_ &-> ($null)
        ptr_deref_1538_update_start_ &-> (ptr_deref_1538_Update)
        ptr_deref_1538_update_completed_ <-& (ptr_deref_1538_Update)
        // start: Forward dependencies from scevgep5x_xi to transition ptr_deref_1538_base_address_calculated
        ptr_deref_1538_base_address_calculated <-& (addr_of_1520_update_completed_)
        // done: Forward dependencies from scevgep5x_xi to transition ptr_deref_1538_base_address_calculated
        ptr_deref_1538_sample_start_ <-& (ptr_deref_1538_base_address_calculated)
        // start: Forward dependencies from iNsTr_62 to transition ptr_deref_1538_sample_start_
        ptr_deref_1538_sample_start_ <-& (MUL_f32_f32_1535_update_completed_)
        // done: Forward dependencies from iNsTr_62 to transition ptr_deref_1538_sample_start_
        // end:  		->(scevgep5x_xi) := iNsTr_62
        // start:  		indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 703
        // Source expression
        // (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1545_sample_start_] 
        $T[ADD_u64_u64_1545_sample_completed_] 
        $T[ADD_u64_u64_1545_update_start_] 
        $T[ADD_u64_u64_1545_update_completed_] 
        // indvarx_xi
        // start: Forward dependencies from indvarx_xi to transition ADD_u64_u64_1545_sample_start_
        // done: Forward dependencies from indvarx_xi to transition ADD_u64_u64_1545_sample_start_
        ;;[ADD_u64_u64_1545_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1545_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1545_sample_start_ &-> (ADD_u64_u64_1545_Sample)
        ADD_u64_u64_1545_sample_completed_ <-& (ADD_u64_u64_1545_Sample)
        ADD_u64_u64_1545_sample_completed_ &-> ($null)
        ADD_u64_u64_1545_update_start_ &-> (ADD_u64_u64_1545_Update)
        ADD_u64_u64_1545_update_completed_ <-& (ADD_u64_u64_1545_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi
        // start: WAR dependencies for indvarx_xnextx_xi
        // done: WAR dependencies for indvarx_xnextx_xi
        // end:  		indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond := (indvarx_xnextx_xi == tmp4x_xi)
        //  file prog.linked.opt.aa, line 704
        // Source expression
        // (indvarx_xnextx_xi == tmp4x_xi)
        $T[EQ_u64_u1_1550_sample_start_] 
        $T[EQ_u64_u1_1550_sample_completed_] 
        $T[EQ_u64_u1_1550_update_start_] 
        $T[EQ_u64_u1_1550_update_completed_] 
        // indvarx_xnextx_xi
        // tmp4x_xi
        // start: Forward dependencies from indvarx_xnextx_xi to transition EQ_u64_u1_1550_sample_start_
        EQ_u64_u1_1550_sample_start_ <-& (ADD_u64_u64_1545_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi to transition EQ_u64_u1_1550_sample_start_
        // start: Forward dependencies from tmp4x_xi to transition EQ_u64_u1_1550_sample_start_
        // done: Forward dependencies from tmp4x_xi to transition EQ_u64_u1_1550_sample_start_
        ;;[EQ_u64_u1_1550_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1550_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1550_sample_start_ &-> (EQ_u64_u1_1550_Sample)
        EQ_u64_u1_1550_sample_completed_ <-& (EQ_u64_u1_1550_Sample)
        EQ_u64_u1_1550_sample_completed_ &-> ($null)
        EQ_u64_u1_1550_update_start_ &-> (EQ_u64_u1_1550_Update)
        EQ_u64_u1_1550_update_completed_ <-& (EQ_u64_u1_1550_Update)
        // Target expression
        // (as target) exitcond
        // start: WAR dependencies for exitcond
        // done: WAR dependencies for exitcond
        // end:  		exitcond := (indvarx_xnextx_xi == tmp4x_xi)
        // load-store dependencies..
      }
      assign_stmt_1516_to_assign_stmt_1551__entry__ |-> (assign_stmt_1516_to_assign_stmt_1551)
      assign_stmt_1516_to_assign_stmt_1551__exit__ <-| (assign_stmt_1516_to_assign_stmt_1551)
      // if-statement  
      //  file prog.linked.opt.aa, line 705
      ;;[if_stmt_1552_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1552__entry__ |-> (if_stmt_1552_dead_link)
      if_stmt_1552__exit__ <-| (if_stmt_1552_dead_link)
      ;;[if_stmt_1552_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1552__entry__ |-> (if_stmt_1552_eval_test)
      $P [R_exitcond_1553_place]
      R_exitcond_1553_place <-| (if_stmt_1552_eval_test)
      ;;[if_stmt_1552_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1552_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond_1553_place |-> (if_stmt_1552_if_link if_stmt_1552_else_link)
      $P [bb_6_initialize_aPriorix_xexitx_xloopexit]
      bb_6_initialize_aPriorix_xexitx_xloopexit <-| (if_stmt_1552_if_link)
      $P [bb_6_bb_6]
      bb_6_bb_6 <-| (if_stmt_1552_else_link)
      ::[assign_stmt_1574_to_assign_stmt_1580] 
      {
        // start:  		iNsTr_6 := ncol_ind
        //  file prog.linked.opt.aa, line 716
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_1573_sample_start_] 
        $T[LOAD_ncol_ind_1573_sample_completed_] 
        $T[LOAD_ncol_ind_1573_update_start_] 
        $T[LOAD_ncol_ind_1573_update_completed_] 
        $T[LOAD_ncol_ind_1573_word_address_calculated] 
        $T[LOAD_ncol_ind_1573_root_address_calculated] 
        LOAD_ncol_ind_1573_word_address_calculated <-& (LOAD_ncol_ind_1573_root_address_calculated)
        ;;[LOAD_ncol_ind_1573_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_1573_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_1573_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_1573_sample_start_ <-& (LOAD_ncol_ind_1573_word_address_calculated)
        LOAD_ncol_ind_1573_sample_start_ &-> (LOAD_ncol_ind_1573_Sample)
        LOAD_ncol_ind_1573_sample_completed_ <-& (LOAD_ncol_ind_1573_Sample)
        LOAD_ncol_ind_1573_sample_completed_ &-> ($null)
        LOAD_ncol_ind_1573_update_start_ &-> (LOAD_ncol_ind_1573_Update)
        LOAD_ncol_ind_1573_update_completed_ <-& (LOAD_ncol_ind_1573_Update)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := ncol_ind
        // start:  		iNsTr_7 := (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 717
        // Source expression
        // (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1579_sample_start_] 
        $T[EQ_u16_u1_1579_sample_completed_] 
        $T[EQ_u16_u1_1579_update_start_] 
        $T[EQ_u16_u1_1579_update_completed_] 
        // iNsTr_6
        // start: Forward dependencies from iNsTr_6 to transition EQ_u16_u1_1579_sample_start_
        EQ_u16_u1_1579_sample_start_ <-& (LOAD_ncol_ind_1573_update_completed_)
        // done: Forward dependencies from iNsTr_6 to transition EQ_u16_u1_1579_sample_start_
        ;;[EQ_u16_u1_1579_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1579_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1579_sample_start_ &-> (EQ_u16_u1_1579_Sample)
        EQ_u16_u1_1579_sample_completed_ <-& (EQ_u16_u1_1579_Sample)
        EQ_u16_u1_1579_sample_completed_ &-> ($null)
        EQ_u16_u1_1579_update_start_ &-> (EQ_u16_u1_1579_Update)
        EQ_u16_u1_1579_update_completed_ <-& (EQ_u16_u1_1579_Update)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1574_to_assign_stmt_1580__entry__ |-> (assign_stmt_1574_to_assign_stmt_1580)
      assign_stmt_1574_to_assign_stmt_1580__exit__ <-| (assign_stmt_1574_to_assign_stmt_1580)
      // if-statement  
      //  file prog.linked.opt.aa, line 718
      ;;[if_stmt_1581_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1581__entry__ |-> (if_stmt_1581_dead_link)
      if_stmt_1581__exit__ <-| (if_stmt_1581_dead_link)
      ;;[if_stmt_1581_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1581__entry__ |-> (if_stmt_1581_eval_test)
      $P [R_iNsTr_7_1582_place]
      R_iNsTr_7_1582_place <-| (if_stmt_1581_eval_test)
      ;;[if_stmt_1581_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1581_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_7_1582_place |-> (if_stmt_1581_if_link if_stmt_1581_else_link)
      $P [initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader]
      initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader <-| (if_stmt_1581_if_link)
      $P [initialize_aPriorix_xexit_bbx_xnphx_xi5]
      initialize_aPriorix_xexit_bbx_xnphx_xi5 <-| (if_stmt_1581_else_link)
      ::[assign_stmt_1593_to_assign_stmt_1616] 
      {
        // start:  		tmpx_xi2 := (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 725
        // Source expression
        // (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1592_sample_start_] 
        $T[UGT_u16_u1_1592_sample_completed_] 
        $T[UGT_u16_u1_1592_update_start_] 
        $T[UGT_u16_u1_1592_update_completed_] 
        // iNsTr_6
        // start: Forward dependencies from iNsTr_6 to transition UGT_u16_u1_1592_sample_start_
        // done: Forward dependencies from iNsTr_6 to transition UGT_u16_u1_1592_sample_start_
        ;;[UGT_u16_u1_1592_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1592_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1592_sample_start_ &-> (UGT_u16_u1_1592_Sample)
        UGT_u16_u1_1592_sample_completed_ <-& (UGT_u16_u1_1592_Sample)
        UGT_u16_u1_1592_sample_completed_ &-> ($null)
        UGT_u16_u1_1592_update_start_ &-> (UGT_u16_u1_1592_Update)
        UGT_u16_u1_1592_update_completed_ <-& (UGT_u16_u1_1592_Update)
        // Target expression
        // (as target) tmpx_xi2
        // start: WAR dependencies for tmpx_xi2
        // done: WAR dependencies for tmpx_xi2
        // end:  		tmpx_xi2 := (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi3 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 726
        // Source expression
        // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1598_sample_start_] 
        $T[ADD_u16_u16_1598_sample_completed_] 
        $T[ADD_u16_u16_1598_update_start_] 
        $T[ADD_u16_u16_1598_update_completed_] 
        // iNsTr_6
        // start: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_1598_sample_start_
        // done: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_1598_sample_start_
        ;;[ADD_u16_u16_1598_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1598_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1598_sample_start_ &-> (ADD_u16_u16_1598_Sample)
        ADD_u16_u16_1598_sample_completed_ <-& (ADD_u16_u16_1598_Sample)
        ADD_u16_u16_1598_sample_completed_ &-> ($null)
        ADD_u16_u16_1598_update_start_ &-> (ADD_u16_u16_1598_Update)
        ADD_u16_u16_1598_update_completed_ <-& (ADD_u16_u16_1598_Update)
        // Target expression
        // (as target) xx_xopx_xi3
        // start: WAR dependencies for xx_xopx_xi3
        // done: WAR dependencies for xx_xopx_xi3
        // end:  		xx_xopx_xi3 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_11 := ($cast ($uint<64>) xx_xopx_xi3 )
        //  file prog.linked.opt.aa, line 727
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi3 )
        $T[type_cast_1602_sample_start_] 
        $T[type_cast_1602_sample_completed_] 
        $T[type_cast_1602_update_start_] 
        $T[type_cast_1602_update_completed_] 
        // xx_xopx_xi3
        // start: Forward dependencies from xx_xopx_xi3 to transition type_cast_1602_sample_start_
        type_cast_1602_sample_start_ <-& (ADD_u16_u16_1598_update_completed_)
        // done: Forward dependencies from xx_xopx_xi3 to transition type_cast_1602_sample_start_
        ;;[type_cast_1602_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1602_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1602_sample_start_ &-> (type_cast_1602_Sample)
        type_cast_1602_sample_completed_ <-& (type_cast_1602_Sample)
        type_cast_1602_sample_completed_ &-> ($null)
        type_cast_1602_update_start_ &-> (type_cast_1602_Update)
        type_cast_1602_update_completed_ <-& (type_cast_1602_Update)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ($cast ($uint<64>) xx_xopx_xi3 )
        // start:  		xx_xop7x_xi := (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 728
        // Source expression
        // (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1608_sample_start_] 
        $T[ADD_u64_u64_1608_sample_completed_] 
        $T[ADD_u64_u64_1608_update_start_] 
        $T[ADD_u64_u64_1608_update_completed_] 
        // iNsTr_11
        // start: Forward dependencies from iNsTr_11 to transition ADD_u64_u64_1608_sample_start_
        ADD_u64_u64_1608_sample_start_ <-& (type_cast_1602_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition ADD_u64_u64_1608_sample_start_
        ;;[ADD_u64_u64_1608_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1608_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1608_sample_start_ &-> (ADD_u64_u64_1608_Sample)
        ADD_u64_u64_1608_sample_completed_ <-& (ADD_u64_u64_1608_Sample)
        ADD_u64_u64_1608_sample_completed_ &-> ($null)
        ADD_u64_u64_1608_update_start_ &-> (ADD_u64_u64_1608_Update)
        ADD_u64_u64_1608_update_completed_ <-& (ADD_u64_u64_1608_Update)
        // Target expression
        // (as target) xx_xop7x_xi
        // start: WAR dependencies for xx_xop7x_xi
        // done: WAR dependencies for xx_xop7x_xi
        // end:  		xx_xop7x_xi := (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi4 := ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 729
        // Source expression
        // ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1615_sample_start_] 
        $T[MUX_1615_sample_completed_] 
        $T[MUX_1615_update_start_] 
        $T[MUX_1615_update_completed_] 
        // tmpx_xi2
        // xx_xop7x_xi
        // start: Forward dependencies from tmpx_xi2 to transition MUX_1615_sample_start_
        MUX_1615_sample_start_ <-& (UGT_u16_u1_1592_update_completed_)
        // done: Forward dependencies from tmpx_xi2 to transition MUX_1615_sample_start_
        // start: Forward dependencies from xx_xop7x_xi to transition MUX_1615_sample_start_
        MUX_1615_sample_start_ <-& (ADD_u64_u64_1608_update_completed_)
        // done: Forward dependencies from xx_xop7x_xi to transition MUX_1615_sample_start_
        ;;[MUX_1615_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1615_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1615_sample_start_ &-> (MUX_1615_start)
        MUX_1615_sample_completed_ <-& (MUX_1615_start)
        MUX_1615_update_start_ &-> (MUX_1615_complete)
        MUX_1615_update_completed_ <-& (MUX_1615_complete)
        // Target expression
        // (as target) tmp4x_xi4
        // start: WAR dependencies for tmp4x_xi4
        // done: WAR dependencies for tmp4x_xi4
        // end:  		tmp4x_xi4 := ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1593_to_assign_stmt_1616__entry__ |-> (assign_stmt_1593_to_assign_stmt_1616)
      assign_stmt_1593_to_assign_stmt_1616__exit__ <-| (assign_stmt_1593_to_assign_stmt_1616)
      ::[assign_stmt_1631_to_assign_stmt_1680] 
      {
        // start:  		scevgepx_xi7 := @(message[indvarx_xi6])
        //  file prog.linked.opt.aa, line 734
        // Source expression
        // @(message[indvarx_xi6])
        $T[addr_of_1630_sample_start_] 
        $T[addr_of_1630_sample_completed_] 
        $T[addr_of_1630_update_start_] 
        $T[addr_of_1630_update_completed_] 
        $T[array_obj_ref_1629_root_address_calculated] 
        $T[array_obj_ref_1629_offset_calculated] 
        $T[array_obj_ref_1629_index_resized_0] 
        $T[array_obj_ref_1629_index_scaled_0] 
        $T[array_obj_ref_1629_index_computed_0] 
        // indvarx_xi6
        // start: Forward dependencies from indvarx_xi6 to transition array_obj_ref_1629_index_computed_0
        // done: Forward dependencies from indvarx_xi6 to transition array_obj_ref_1629_index_computed_0
        ;;[array_obj_ref_1629_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1629_index_computed_0 &-> (array_obj_ref_1629_index_resize_0)
        array_obj_ref_1629_index_resized_0 <-& (array_obj_ref_1629_index_resize_0)
        ;;[array_obj_ref_1629_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1629_index_resized_0 &-> (array_obj_ref_1629_index_scale_0)
        array_obj_ref_1629_index_scaled_0 <-& (array_obj_ref_1629_index_scale_0)
        ;;[array_obj_ref_1629_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1629_index_scaled_0 &-> (array_obj_ref_1629_final_index_sum_regn)
        array_obj_ref_1629_offset_calculated <-& (array_obj_ref_1629_final_index_sum_regn)
        ;;[array_obj_ref_1629_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1629_offset_calculated &-> (array_obj_ref_1629_base_plus_offset)
        array_obj_ref_1629_root_address_calculated <-& (array_obj_ref_1629_base_plus_offset)
        ;;[addr_of_1630_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1630_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1630_sample_start_ <-& (array_obj_ref_1629_root_address_calculated)
        addr_of_1630_sample_start_ &-> (addr_of_1630_request)
        addr_of_1630_sample_completed_ <-& (addr_of_1630_request)
        addr_of_1630_update_start_ &-> (addr_of_1630_complete)
        addr_of_1630_update_completed_ <-& (addr_of_1630_complete)
        // Target expression
        // (as target) scevgepx_xi7
        // start: WAR dependencies for scevgepx_xi7
        // done: WAR dependencies for scevgepx_xi7
        // end:  		scevgepx_xi7 := @(message[indvarx_xi6])
        // start:  		tmp4 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 735
        // Source expression
        // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_1636_sample_start_] 
        $T[ADD_u64_u64_1636_sample_completed_] 
        $T[ADD_u64_u64_1636_update_start_] 
        $T[ADD_u64_u64_1636_update_completed_] 
        // indvarx_xi6
        // start: Forward dependencies from indvarx_xi6 to transition ADD_u64_u64_1636_sample_start_
        // done: Forward dependencies from indvarx_xi6 to transition ADD_u64_u64_1636_sample_start_
        ;;[ADD_u64_u64_1636_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1636_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1636_sample_start_ &-> (ADD_u64_u64_1636_Sample)
        ADD_u64_u64_1636_sample_completed_ <-& (ADD_u64_u64_1636_Sample)
        ADD_u64_u64_1636_sample_completed_ &-> ($null)
        ADD_u64_u64_1636_update_start_ &-> (ADD_u64_u64_1636_Update)
        ADD_u64_u64_1636_update_completed_ <-& (ADD_u64_u64_1636_Update)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		scevgep6x_xi := @(mem[tmp4])
        //  file prog.linked.opt.aa, line 736
        // Source expression
        // @(mem[tmp4])
        $T[addr_of_1641_sample_start_] 
        $T[addr_of_1641_sample_completed_] 
        $T[addr_of_1641_update_start_] 
        $T[addr_of_1641_update_completed_] 
        $T[array_obj_ref_1640_root_address_calculated] 
        $T[array_obj_ref_1640_offset_calculated] 
        $T[array_obj_ref_1640_index_resized_0] 
        $T[array_obj_ref_1640_index_scaled_0] 
        $T[array_obj_ref_1640_index_computed_0] 
        // tmp4
        // start: Forward dependencies from tmp4 to transition array_obj_ref_1640_index_computed_0
        array_obj_ref_1640_index_computed_0 <-& (ADD_u64_u64_1636_update_completed_)
        // done: Forward dependencies from tmp4 to transition array_obj_ref_1640_index_computed_0
        ;;[array_obj_ref_1640_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1640_index_computed_0 &-> (array_obj_ref_1640_index_resize_0)
        array_obj_ref_1640_index_resized_0 <-& (array_obj_ref_1640_index_resize_0)
        ;;[array_obj_ref_1640_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1640_index_resized_0 &-> (array_obj_ref_1640_index_scale_0)
        array_obj_ref_1640_index_scaled_0 <-& (array_obj_ref_1640_index_scale_0)
        ;;[array_obj_ref_1640_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1640_index_scaled_0 &-> (array_obj_ref_1640_final_index_sum_regn)
        array_obj_ref_1640_offset_calculated <-& (array_obj_ref_1640_final_index_sum_regn)
        ;;[array_obj_ref_1640_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1640_offset_calculated &-> (array_obj_ref_1640_base_plus_offset)
        array_obj_ref_1640_root_address_calculated <-& (array_obj_ref_1640_base_plus_offset)
        ;;[addr_of_1641_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1641_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1641_sample_start_ <-& (array_obj_ref_1640_root_address_calculated)
        addr_of_1641_sample_start_ &-> (addr_of_1641_request)
        addr_of_1641_sample_completed_ <-& (addr_of_1641_request)
        addr_of_1641_update_start_ &-> (addr_of_1641_complete)
        addr_of_1641_update_completed_ <-& (addr_of_1641_complete)
        // Target expression
        // (as target) scevgep6x_xi
        // start: WAR dependencies for scevgep6x_xi
        // done: WAR dependencies for scevgep6x_xi
        // end:  		scevgep6x_xi := @(mem[tmp4])
        // start:  		iNsTr_31 := ->(scevgep6x_xi)
        //  file prog.linked.opt.aa, line 737
        // Source expression
        // ->(scevgep6x_xi)
        $T[ptr_deref_1645_sample_start_] 
        $T[ptr_deref_1645_sample_completed_] 
        $T[ptr_deref_1645_update_start_] 
        $T[ptr_deref_1645_update_completed_] 
        $T[ptr_deref_1645_base_address_calculated] 
        // scevgep6x_xi
        $T[ptr_deref_1645_word_address_calculated] 
        $T[ptr_deref_1645_root_address_calculated] 
        $T[ptr_deref_1645_base_address_resized] 
        ;;[ptr_deref_1645_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1645_base_address_calculated &-> (ptr_deref_1645_base_addr_resize)
        ptr_deref_1645_base_address_resized <-& (ptr_deref_1645_base_addr_resize)
        ;;[ptr_deref_1645_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1645_base_address_resized &-> (ptr_deref_1645_base_plus_offset)
        ptr_deref_1645_root_address_calculated <-& (ptr_deref_1645_base_plus_offset)
        ;;[ptr_deref_1645_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1645_root_address_calculated &-> (ptr_deref_1645_word_addrgen)
        ptr_deref_1645_word_address_calculated <-& (ptr_deref_1645_word_addrgen)
        ;;[ptr_deref_1645_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1645_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1645_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1645_sample_start_ <-& (ptr_deref_1645_word_address_calculated)
        ptr_deref_1645_sample_start_ &-> (ptr_deref_1645_Sample)
        ptr_deref_1645_sample_completed_ <-& (ptr_deref_1645_Sample)
        ptr_deref_1645_sample_completed_ &-> ($null)
        ptr_deref_1645_update_start_ &-> (ptr_deref_1645_Update)
        ptr_deref_1645_update_completed_ <-& (ptr_deref_1645_Update)
        // start: Forward dependencies from scevgep6x_xi to transition ptr_deref_1645_base_address_calculated
        ptr_deref_1645_base_address_calculated <-& (addr_of_1641_update_completed_)
        // done: Forward dependencies from scevgep6x_xi to transition ptr_deref_1645_base_address_calculated
        ptr_deref_1645_sample_start_ <-& (ptr_deref_1645_base_address_calculated)
        // Target expression
        // (as target) iNsTr_31
        // start: WAR dependencies for iNsTr_31
        // done: WAR dependencies for iNsTr_31
        // end:  		iNsTr_31 := ->(scevgep6x_xi)
        // start:  		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 738
        // Source expression
        // (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1651_sample_start_] 
        $T[ADD_u16_u16_1651_sample_completed_] 
        $T[ADD_u16_u16_1651_update_start_] 
        $T[ADD_u16_u16_1651_update_completed_] 
        // iNsTr_31
        // start: Forward dependencies from iNsTr_31 to transition ADD_u16_u16_1651_sample_start_
        ADD_u16_u16_1651_sample_start_ <-& (ptr_deref_1645_update_completed_)
        // done: Forward dependencies from iNsTr_31 to transition ADD_u16_u16_1651_sample_start_
        ;;[ADD_u16_u16_1651_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1651_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1651_sample_start_ &-> (ADD_u16_u16_1651_Sample)
        ADD_u16_u16_1651_sample_completed_ <-& (ADD_u16_u16_1651_Sample)
        ADD_u16_u16_1651_sample_completed_ &-> ($null)
        ADD_u16_u16_1651_update_start_ &-> (ADD_u16_u16_1651_Update)
        ADD_u16_u16_1651_update_completed_ <-& (ADD_u16_u16_1651_Update)
        // Target expression
        // (as target) iNsTr_32
        // start: WAR dependencies for iNsTr_32
        // done: WAR dependencies for iNsTr_32
        // end:  		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_33 := ($cast ($uint<64>) iNsTr_32 )
        //  file prog.linked.opt.aa, line 739
        // Source expression
        // ($cast ($uint<64>) iNsTr_32 )
        $T[type_cast_1655_sample_start_] 
        $T[type_cast_1655_sample_completed_] 
        $T[type_cast_1655_update_start_] 
        $T[type_cast_1655_update_completed_] 
        // iNsTr_32
        // start: Forward dependencies from iNsTr_32 to transition type_cast_1655_sample_start_
        type_cast_1655_sample_start_ <-& (ADD_u16_u16_1651_update_completed_)
        // done: Forward dependencies from iNsTr_32 to transition type_cast_1655_sample_start_
        ;;[type_cast_1655_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1655_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1655_sample_start_ &-> (type_cast_1655_Sample)
        type_cast_1655_sample_completed_ <-& (type_cast_1655_Sample)
        type_cast_1655_sample_completed_ &-> ($null)
        type_cast_1655_update_start_ &-> (type_cast_1655_Update)
        type_cast_1655_update_completed_ <-& (type_cast_1655_Update)
        // Target expression
        // (as target) iNsTr_33
        // start: WAR dependencies for iNsTr_33
        // done: WAR dependencies for iNsTr_33
        // end:  		iNsTr_33 := ($cast ($uint<64>) iNsTr_32 )
        // start:  		iNsTr_34 := @(aPriori[iNsTr_33])
        //  file prog.linked.opt.aa, line 740
        // Source expression
        // @(aPriori[iNsTr_33])
        $T[addr_of_1660_sample_start_] 
        $T[addr_of_1660_sample_completed_] 
        $T[addr_of_1660_update_start_] 
        $T[addr_of_1660_update_completed_] 
        $T[array_obj_ref_1659_root_address_calculated] 
        $T[array_obj_ref_1659_offset_calculated] 
        $T[array_obj_ref_1659_index_resized_0] 
        $T[array_obj_ref_1659_index_scaled_0] 
        $T[array_obj_ref_1659_index_computed_0] 
        // iNsTr_33
        // start: Forward dependencies from iNsTr_33 to transition array_obj_ref_1659_index_computed_0
        array_obj_ref_1659_index_computed_0 <-& (type_cast_1655_update_completed_)
        // done: Forward dependencies from iNsTr_33 to transition array_obj_ref_1659_index_computed_0
        ;;[array_obj_ref_1659_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1659_index_computed_0 &-> (array_obj_ref_1659_index_resize_0)
        array_obj_ref_1659_index_resized_0 <-& (array_obj_ref_1659_index_resize_0)
        ;;[array_obj_ref_1659_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1659_index_resized_0 &-> (array_obj_ref_1659_index_scale_0)
        array_obj_ref_1659_index_scaled_0 <-& (array_obj_ref_1659_index_scale_0)
        ;;[array_obj_ref_1659_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1659_index_scaled_0 &-> (array_obj_ref_1659_final_index_sum_regn)
        array_obj_ref_1659_offset_calculated <-& (array_obj_ref_1659_final_index_sum_regn)
        ;;[array_obj_ref_1659_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1659_offset_calculated &-> (array_obj_ref_1659_base_plus_offset)
        array_obj_ref_1659_root_address_calculated <-& (array_obj_ref_1659_base_plus_offset)
        ;;[addr_of_1660_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1660_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1660_sample_start_ <-& (array_obj_ref_1659_root_address_calculated)
        addr_of_1660_sample_start_ &-> (addr_of_1660_request)
        addr_of_1660_sample_completed_ <-& (addr_of_1660_request)
        addr_of_1660_update_start_ &-> (addr_of_1660_complete)
        addr_of_1660_update_completed_ <-& (addr_of_1660_complete)
        // Target expression
        // (as target) iNsTr_34
        // start: WAR dependencies for iNsTr_34
        // done: WAR dependencies for iNsTr_34
        // end:  		iNsTr_34 := @(aPriori[iNsTr_33])
        // start:  		iNsTr_35 := ->(iNsTr_34)
        //  file prog.linked.opt.aa, line 741
        // Source expression
        // ->(iNsTr_34)
        $T[ptr_deref_1664_sample_start_] 
        $T[ptr_deref_1664_sample_completed_] 
        $T[ptr_deref_1664_update_start_] 
        $T[ptr_deref_1664_update_completed_] 
        $T[ptr_deref_1664_base_address_calculated] 
        // iNsTr_34
        $T[ptr_deref_1664_word_address_calculated] 
        $T[ptr_deref_1664_root_address_calculated] 
        $T[ptr_deref_1664_base_address_resized] 
        ;;[ptr_deref_1664_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1664_base_address_calculated &-> (ptr_deref_1664_base_addr_resize)
        ptr_deref_1664_base_address_resized <-& (ptr_deref_1664_base_addr_resize)
        ;;[ptr_deref_1664_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1664_base_address_resized &-> (ptr_deref_1664_base_plus_offset)
        ptr_deref_1664_root_address_calculated <-& (ptr_deref_1664_base_plus_offset)
        ;;[ptr_deref_1664_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1664_root_address_calculated &-> (ptr_deref_1664_word_addrgen)
        ptr_deref_1664_word_address_calculated <-& (ptr_deref_1664_word_addrgen)
        ;;[ptr_deref_1664_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1664_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1664_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1664_sample_start_ <-& (ptr_deref_1664_word_address_calculated)
        ptr_deref_1664_sample_start_ &-> (ptr_deref_1664_Sample)
        ptr_deref_1664_sample_completed_ <-& (ptr_deref_1664_Sample)
        ptr_deref_1664_sample_completed_ &-> ($null)
        ptr_deref_1664_update_start_ &-> (ptr_deref_1664_Update)
        ptr_deref_1664_update_completed_ <-& (ptr_deref_1664_Update)
        // start: Forward dependencies from iNsTr_34 to transition ptr_deref_1664_base_address_calculated
        ptr_deref_1664_base_address_calculated <-& (addr_of_1660_update_completed_)
        // done: Forward dependencies from iNsTr_34 to transition ptr_deref_1664_base_address_calculated
        ptr_deref_1664_sample_start_ <-& (ptr_deref_1664_base_address_calculated)
        // Target expression
        // (as target) iNsTr_35
        // start: WAR dependencies for iNsTr_35
        // done: WAR dependencies for iNsTr_35
        // end:  		iNsTr_35 := ->(iNsTr_34)
        // start:  		->(scevgepx_xi7) := iNsTr_35
        //  file prog.linked.opt.aa, line 742
        // Source expression
        // iNsTr_35
        // Target expression
        // ->(scevgepx_xi7)
        $T[ptr_deref_1667_sample_start_] 
        $T[ptr_deref_1667_sample_completed_] 
        $T[ptr_deref_1667_update_start_] 
        $T[ptr_deref_1667_update_completed_] 
        $T[ptr_deref_1667_base_address_calculated] 
        // scevgepx_xi7
        $T[ptr_deref_1667_word_address_calculated] 
        $T[ptr_deref_1667_root_address_calculated] 
        $T[ptr_deref_1667_base_address_resized] 
        ;;[ptr_deref_1667_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1667_base_address_calculated &-> (ptr_deref_1667_base_addr_resize)
        ptr_deref_1667_base_address_resized <-& (ptr_deref_1667_base_addr_resize)
        ;;[ptr_deref_1667_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1667_base_address_resized &-> (ptr_deref_1667_base_plus_offset)
        ptr_deref_1667_root_address_calculated <-& (ptr_deref_1667_base_plus_offset)
        ;;[ptr_deref_1667_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1667_root_address_calculated &-> (ptr_deref_1667_word_addrgen)
        ptr_deref_1667_word_address_calculated <-& (ptr_deref_1667_word_addrgen)
        ;;[ptr_deref_1667_Sample] 
        {
          ;;[ptr_deref_1667_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1667_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1667_sample_start_ <-& (ptr_deref_1667_word_address_calculated)
        ptr_deref_1667_sample_start_ &-> (ptr_deref_1667_Sample)
        ptr_deref_1667_sample_completed_ <-& (ptr_deref_1667_Sample)
        ptr_deref_1667_sample_completed_ &-> ($null)
        ptr_deref_1667_update_start_ &-> (ptr_deref_1667_Update)
        ptr_deref_1667_update_completed_ <-& (ptr_deref_1667_Update)
        // start: Forward dependencies from scevgepx_xi7 to transition ptr_deref_1667_base_address_calculated
        ptr_deref_1667_base_address_calculated <-& (addr_of_1630_update_completed_)
        // done: Forward dependencies from scevgepx_xi7 to transition ptr_deref_1667_base_address_calculated
        ptr_deref_1667_sample_start_ <-& (ptr_deref_1667_base_address_calculated)
        // start: Forward dependencies from iNsTr_35 to transition ptr_deref_1667_sample_start_
        ptr_deref_1667_sample_start_ <-& (ptr_deref_1664_update_completed_)
        // done: Forward dependencies from iNsTr_35 to transition ptr_deref_1667_sample_start_
        // end:  		->(scevgepx_xi7) := iNsTr_35
        // start:  		indvarx_xnextx_xi8 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 743
        // Source expression
        // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1674_sample_start_] 
        $T[ADD_u64_u64_1674_sample_completed_] 
        $T[ADD_u64_u64_1674_update_start_] 
        $T[ADD_u64_u64_1674_update_completed_] 
        // indvarx_xi6
        // start: Forward dependencies from indvarx_xi6 to transition ADD_u64_u64_1674_sample_start_
        // done: Forward dependencies from indvarx_xi6 to transition ADD_u64_u64_1674_sample_start_
        ;;[ADD_u64_u64_1674_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1674_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1674_sample_start_ &-> (ADD_u64_u64_1674_Sample)
        ADD_u64_u64_1674_sample_completed_ <-& (ADD_u64_u64_1674_Sample)
        ADD_u64_u64_1674_sample_completed_ &-> ($null)
        ADD_u64_u64_1674_update_start_ &-> (ADD_u64_u64_1674_Update)
        ADD_u64_u64_1674_update_completed_ <-& (ADD_u64_u64_1674_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi8
        // start: WAR dependencies for indvarx_xnextx_xi8
        // done: WAR dependencies for indvarx_xnextx_xi8
        // end:  		indvarx_xnextx_xi8 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond3 := (indvarx_xnextx_xi8 == tmp4x_xi4)
        //  file prog.linked.opt.aa, line 744
        // Source expression
        // (indvarx_xnextx_xi8 == tmp4x_xi4)
        $T[EQ_u64_u1_1679_sample_start_] 
        $T[EQ_u64_u1_1679_sample_completed_] 
        $T[EQ_u64_u1_1679_update_start_] 
        $T[EQ_u64_u1_1679_update_completed_] 
        // indvarx_xnextx_xi8
        // tmp4x_xi4
        // start: Forward dependencies from indvarx_xnextx_xi8 to transition EQ_u64_u1_1679_sample_start_
        EQ_u64_u1_1679_sample_start_ <-& (ADD_u64_u64_1674_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi8 to transition EQ_u64_u1_1679_sample_start_
        // start: Forward dependencies from tmp4x_xi4 to transition EQ_u64_u1_1679_sample_start_
        // done: Forward dependencies from tmp4x_xi4 to transition EQ_u64_u1_1679_sample_start_
        ;;[EQ_u64_u1_1679_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1679_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1679_sample_start_ &-> (EQ_u64_u1_1679_Sample)
        EQ_u64_u1_1679_sample_completed_ <-& (EQ_u64_u1_1679_Sample)
        EQ_u64_u1_1679_sample_completed_ &-> ($null)
        EQ_u64_u1_1679_update_start_ &-> (EQ_u64_u1_1679_Update)
        EQ_u64_u1_1679_update_completed_ <-& (EQ_u64_u1_1679_Update)
        // Target expression
        // (as target) exitcond3
        // start: WAR dependencies for exitcond3
        // done: WAR dependencies for exitcond3
        // end:  		exitcond3 := (indvarx_xnextx_xi8 == tmp4x_xi4)
        // load-store dependencies..
      }
      assign_stmt_1631_to_assign_stmt_1680__entry__ |-> (assign_stmt_1631_to_assign_stmt_1680)
      assign_stmt_1631_to_assign_stmt_1680__exit__ <-| (assign_stmt_1631_to_assign_stmt_1680)
      // if-statement  
      //  file prog.linked.opt.aa, line 745
      ;;[if_stmt_1681_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1681__entry__ |-> (if_stmt_1681_dead_link)
      if_stmt_1681__exit__ <-| (if_stmt_1681_dead_link)
      ;;[if_stmt_1681_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1681__entry__ |-> (if_stmt_1681_eval_test)
      $P [R_exitcond3_1682_place]
      R_exitcond3_1682_place <-| (if_stmt_1681_eval_test)
      ;;[if_stmt_1681_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1681_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond3_1682_place |-> (if_stmt_1681_if_link if_stmt_1681_else_link)
      $P [bb_10_initializeMessagex_xexitx_xloopexit]
      bb_10_initializeMessagex_xexitx_xloopexit <-| (if_stmt_1681_if_link)
      $P [bb_10_bb_10]
      bb_10_bb_10 <-| (if_stmt_1681_else_link)
      ::[assign_stmt_1725_to_assign_stmt_1733] 
      {
        // start:  		indvar := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 762
        // Source expression
        // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_1724_sample_start_] 
        $T[ADD_u16_u16_1724_sample_completed_] 
        $T[ADD_u16_u16_1724_update_start_] 
        $T[ADD_u16_u16_1724_update_completed_] 
        // indvar18
        // start: Forward dependencies from indvar18 to transition ADD_u16_u16_1724_sample_start_
        // done: Forward dependencies from indvar18 to transition ADD_u16_u16_1724_sample_start_
        ;;[ADD_u16_u16_1724_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1724_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1724_sample_start_ &-> (ADD_u16_u16_1724_Sample)
        ADD_u16_u16_1724_sample_completed_ <-& (ADD_u16_u16_1724_Sample)
        ADD_u16_u16_1724_sample_completed_ &-> ($null)
        ADD_u16_u16_1724_update_start_ &-> (ADD_u16_u16_1724_Update)
        ADD_u16_u16_1724_update_completed_ <-& (ADD_u16_u16_1724_Update)
        // Target expression
        // (as target) indvar
        // start: WAR dependencies for indvar
        // done: WAR dependencies for indvar
        // end:  		indvar := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		iNsTr_28 := maxNitr
        //  file prog.linked.opt.aa, line 763
        // Source expression
        // maxNitr
        $T[LOAD_maxNitr_1727_sample_start_] 
        $T[LOAD_maxNitr_1727_sample_completed_] 
        $T[LOAD_maxNitr_1727_update_start_] 
        $T[LOAD_maxNitr_1727_update_completed_] 
        $T[LOAD_maxNitr_1727_word_address_calculated] 
        $T[LOAD_maxNitr_1727_root_address_calculated] 
        LOAD_maxNitr_1727_word_address_calculated <-& (LOAD_maxNitr_1727_root_address_calculated)
        ;;[LOAD_maxNitr_1727_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_maxNitr_1727_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_maxNitr_1727_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_maxNitr_1727_sample_start_ <-& (LOAD_maxNitr_1727_word_address_calculated)
        LOAD_maxNitr_1727_sample_start_ &-> (LOAD_maxNitr_1727_Sample)
        LOAD_maxNitr_1727_sample_completed_ <-& (LOAD_maxNitr_1727_Sample)
        LOAD_maxNitr_1727_sample_completed_ &-> ($null)
        LOAD_maxNitr_1727_update_start_ &-> (LOAD_maxNitr_1727_Update)
        LOAD_maxNitr_1727_update_completed_ <-& (LOAD_maxNitr_1727_Update)
        // Target expression
        // (as target) iNsTr_28
        // start: WAR dependencies for iNsTr_28
        // done: WAR dependencies for iNsTr_28
        // end:  		iNsTr_28 := maxNitr
        // start:  		iNsTr_29 := (indvar < iNsTr_28)
        //  file prog.linked.opt.aa, line 764
        // Source expression
        // (indvar < iNsTr_28)
        $T[ULT_u16_u1_1732_sample_start_] 
        $T[ULT_u16_u1_1732_sample_completed_] 
        $T[ULT_u16_u1_1732_update_start_] 
        $T[ULT_u16_u1_1732_update_completed_] 
        // indvar
        // iNsTr_28
        // start: Forward dependencies from indvar to transition ULT_u16_u1_1732_sample_start_
        ULT_u16_u1_1732_sample_start_ <-& (ADD_u16_u16_1724_update_completed_)
        // done: Forward dependencies from indvar to transition ULT_u16_u1_1732_sample_start_
        // start: Forward dependencies from iNsTr_28 to transition ULT_u16_u1_1732_sample_start_
        ULT_u16_u1_1732_sample_start_ <-& (LOAD_maxNitr_1727_update_completed_)
        // done: Forward dependencies from iNsTr_28 to transition ULT_u16_u1_1732_sample_start_
        ;;[ULT_u16_u1_1732_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ULT_u16_u1_1732_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ULT_u16_u1_1732_sample_start_ &-> (ULT_u16_u1_1732_Sample)
        ULT_u16_u1_1732_sample_completed_ <-& (ULT_u16_u1_1732_Sample)
        ULT_u16_u1_1732_sample_completed_ &-> ($null)
        ULT_u16_u1_1732_update_start_ &-> (ULT_u16_u1_1732_Update)
        ULT_u16_u1_1732_update_completed_ <-& (ULT_u16_u1_1732_Update)
        // Target expression
        // (as target) iNsTr_29
        // start: WAR dependencies for iNsTr_29
        // done: WAR dependencies for iNsTr_29
        // end:  		iNsTr_29 := (indvar < iNsTr_28)
        // load-store dependencies..
      }
      assign_stmt_1725_to_assign_stmt_1733__entry__ |-> (assign_stmt_1725_to_assign_stmt_1733)
      assign_stmt_1725_to_assign_stmt_1733__exit__ <-| (assign_stmt_1725_to_assign_stmt_1733)
      // if-statement  
      //  file prog.linked.opt.aa, line 765
      ;;[if_stmt_1734_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1734__entry__ |-> (if_stmt_1734_dead_link)
      if_stmt_1734__exit__ <-| (if_stmt_1734_dead_link)
      ;;[if_stmt_1734_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1734__entry__ |-> (if_stmt_1734_eval_test)
      $P [R_iNsTr_29_1735_place]
      R_iNsTr_29_1735_place <-| (if_stmt_1734_eval_test)
      ;;[if_stmt_1734_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1734_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_29_1735_place |-> (if_stmt_1734_if_link if_stmt_1734_else_link)
      $P [initializeMessagex_xexit_bb_14]
      initializeMessagex_xexit_bb_14 <-| (if_stmt_1734_if_link)
      $P [initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread]
      initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread <-| (if_stmt_1734_else_link)
      ::[assign_stmt_1746] 
      {
        // start:  		iNsTr_40 := (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 772
        // Source expression
        // (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1745_sample_start_] 
        $T[EQ_u16_u1_1745_sample_completed_] 
        $T[EQ_u16_u1_1745_update_start_] 
        $T[EQ_u16_u1_1745_update_completed_] 
        // iNsTr_27
        // start: Forward dependencies from iNsTr_27 to transition EQ_u16_u1_1745_sample_start_
        // done: Forward dependencies from iNsTr_27 to transition EQ_u16_u1_1745_sample_start_
        ;;[EQ_u16_u1_1745_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1745_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1745_sample_start_ &-> (EQ_u16_u1_1745_Sample)
        EQ_u16_u1_1745_sample_completed_ <-& (EQ_u16_u1_1745_Sample)
        EQ_u16_u1_1745_sample_completed_ &-> ($null)
        EQ_u16_u1_1745_update_start_ &-> (EQ_u16_u1_1745_Update)
        EQ_u16_u1_1745_update_completed_ <-& (EQ_u16_u1_1745_Update)
        // Target expression
        // (as target) iNsTr_40
        // start: WAR dependencies for iNsTr_40
        // done: WAR dependencies for iNsTr_40
        // end:  		iNsTr_40 := (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1746__entry__ |-> (assign_stmt_1746)
      assign_stmt_1746__exit__ <-| (assign_stmt_1746)
      // if-statement  
      //  file prog.linked.opt.aa, line 773
      ;;[if_stmt_1747_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1747__entry__ |-> (if_stmt_1747_dead_link)
      if_stmt_1747__exit__ <-| (if_stmt_1747_dead_link)
      ;;[if_stmt_1747_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1747__entry__ |-> (if_stmt_1747_eval_test)
      $P [R_iNsTr_40_1748_place]
      R_iNsTr_40_1748_place <-| (if_stmt_1747_eval_test)
      ;;[if_stmt_1747_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1747_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_40_1748_place |-> (if_stmt_1747_if_link if_stmt_1747_else_link)
      $P [bb_14_initialize_aPosteriorix_xexit]
      bb_14_initialize_aPosteriorix_xexit <-| (if_stmt_1747_if_link)
      $P [bb_14_bbx_xnphx_xi18]
      bb_14_bbx_xnphx_xi18 <-| (if_stmt_1747_else_link)
      ::[assign_stmt_1759_to_assign_stmt_1782] 
      {
        // start:  		tmpx_xi14 := (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 780
        // Source expression
        // (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1758_sample_start_] 
        $T[UGT_u16_u1_1758_sample_completed_] 
        $T[UGT_u16_u1_1758_update_start_] 
        $T[UGT_u16_u1_1758_update_completed_] 
        // iNsTr_27
        // start: Forward dependencies from iNsTr_27 to transition UGT_u16_u1_1758_sample_start_
        // done: Forward dependencies from iNsTr_27 to transition UGT_u16_u1_1758_sample_start_
        ;;[UGT_u16_u1_1758_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1758_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1758_sample_start_ &-> (UGT_u16_u1_1758_Sample)
        UGT_u16_u1_1758_sample_completed_ <-& (UGT_u16_u1_1758_Sample)
        UGT_u16_u1_1758_sample_completed_ &-> ($null)
        UGT_u16_u1_1758_update_start_ &-> (UGT_u16_u1_1758_Update)
        UGT_u16_u1_1758_update_completed_ <-& (UGT_u16_u1_1758_Update)
        // Target expression
        // (as target) tmpx_xi14
        // start: WAR dependencies for tmpx_xi14
        // done: WAR dependencies for tmpx_xi14
        // end:  		tmpx_xi14 := (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi15 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 781
        // Source expression
        // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1764_sample_start_] 
        $T[ADD_u16_u16_1764_sample_completed_] 
        $T[ADD_u16_u16_1764_update_start_] 
        $T[ADD_u16_u16_1764_update_completed_] 
        // iNsTr_27
        // start: Forward dependencies from iNsTr_27 to transition ADD_u16_u16_1764_sample_start_
        // done: Forward dependencies from iNsTr_27 to transition ADD_u16_u16_1764_sample_start_
        ;;[ADD_u16_u16_1764_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1764_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1764_sample_start_ &-> (ADD_u16_u16_1764_Sample)
        ADD_u16_u16_1764_sample_completed_ <-& (ADD_u16_u16_1764_Sample)
        ADD_u16_u16_1764_sample_completed_ &-> ($null)
        ADD_u16_u16_1764_update_start_ &-> (ADD_u16_u16_1764_Update)
        ADD_u16_u16_1764_update_completed_ <-& (ADD_u16_u16_1764_Update)
        // Target expression
        // (as target) xx_xopx_xi15
        // start: WAR dependencies for xx_xopx_xi15
        // done: WAR dependencies for xx_xopx_xi15
        // end:  		xx_xopx_xi15 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_53 := ($cast ($uint<64>) xx_xopx_xi15 )
        //  file prog.linked.opt.aa, line 782
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi15 )
        $T[type_cast_1768_sample_start_] 
        $T[type_cast_1768_sample_completed_] 
        $T[type_cast_1768_update_start_] 
        $T[type_cast_1768_update_completed_] 
        // xx_xopx_xi15
        // start: Forward dependencies from xx_xopx_xi15 to transition type_cast_1768_sample_start_
        type_cast_1768_sample_start_ <-& (ADD_u16_u16_1764_update_completed_)
        // done: Forward dependencies from xx_xopx_xi15 to transition type_cast_1768_sample_start_
        ;;[type_cast_1768_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1768_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1768_sample_start_ &-> (type_cast_1768_Sample)
        type_cast_1768_sample_completed_ <-& (type_cast_1768_Sample)
        type_cast_1768_sample_completed_ &-> ($null)
        type_cast_1768_update_start_ &-> (type_cast_1768_Update)
        type_cast_1768_update_completed_ <-& (type_cast_1768_Update)
        // Target expression
        // (as target) iNsTr_53
        // start: WAR dependencies for iNsTr_53
        // done: WAR dependencies for iNsTr_53
        // end:  		iNsTr_53 := ($cast ($uint<64>) xx_xopx_xi15 )
        // start:  		xx_xop6x_xi16 := (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 783
        // Source expression
        // (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1774_sample_start_] 
        $T[ADD_u64_u64_1774_sample_completed_] 
        $T[ADD_u64_u64_1774_update_start_] 
        $T[ADD_u64_u64_1774_update_completed_] 
        // iNsTr_53
        // start: Forward dependencies from iNsTr_53 to transition ADD_u64_u64_1774_sample_start_
        ADD_u64_u64_1774_sample_start_ <-& (type_cast_1768_update_completed_)
        // done: Forward dependencies from iNsTr_53 to transition ADD_u64_u64_1774_sample_start_
        ;;[ADD_u64_u64_1774_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1774_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1774_sample_start_ &-> (ADD_u64_u64_1774_Sample)
        ADD_u64_u64_1774_sample_completed_ <-& (ADD_u64_u64_1774_Sample)
        ADD_u64_u64_1774_sample_completed_ &-> ($null)
        ADD_u64_u64_1774_update_start_ &-> (ADD_u64_u64_1774_Update)
        ADD_u64_u64_1774_update_completed_ <-& (ADD_u64_u64_1774_Update)
        // Target expression
        // (as target) xx_xop6x_xi16
        // start: WAR dependencies for xx_xop6x_xi16
        // done: WAR dependencies for xx_xop6x_xi16
        // end:  		xx_xop6x_xi16 := (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi17 := ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 784
        // Source expression
        // ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1781_sample_start_] 
        $T[MUX_1781_sample_completed_] 
        $T[MUX_1781_update_start_] 
        $T[MUX_1781_update_completed_] 
        // tmpx_xi14
        // xx_xop6x_xi16
        // start: Forward dependencies from tmpx_xi14 to transition MUX_1781_sample_start_
        MUX_1781_sample_start_ <-& (UGT_u16_u1_1758_update_completed_)
        // done: Forward dependencies from tmpx_xi14 to transition MUX_1781_sample_start_
        // start: Forward dependencies from xx_xop6x_xi16 to transition MUX_1781_sample_start_
        MUX_1781_sample_start_ <-& (ADD_u64_u64_1774_update_completed_)
        // done: Forward dependencies from xx_xop6x_xi16 to transition MUX_1781_sample_start_
        ;;[MUX_1781_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1781_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1781_sample_start_ &-> (MUX_1781_start)
        MUX_1781_sample_completed_ <-& (MUX_1781_start)
        MUX_1781_update_start_ &-> (MUX_1781_complete)
        MUX_1781_update_completed_ <-& (MUX_1781_complete)
        // Target expression
        // (as target) tmp4x_xi17
        // start: WAR dependencies for tmp4x_xi17
        // done: WAR dependencies for tmp4x_xi17
        // end:  		tmp4x_xi17 := ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1759_to_assign_stmt_1782__entry__ |-> (assign_stmt_1759_to_assign_stmt_1782)
      assign_stmt_1759_to_assign_stmt_1782__exit__ <-| (assign_stmt_1759_to_assign_stmt_1782)
      ::[assign_stmt_1797_to_assign_stmt_1821] 
      {
        // start:  		scevgepx_xi20 := @(aPriori[indvarx_xi19])
        //  file prog.linked.opt.aa, line 789
        // Source expression
        // @(aPriori[indvarx_xi19])
        $T[addr_of_1796_sample_start_] 
        $T[addr_of_1796_sample_completed_] 
        $T[addr_of_1796_update_start_] 
        $T[addr_of_1796_update_completed_] 
        $T[array_obj_ref_1795_root_address_calculated] 
        $T[array_obj_ref_1795_offset_calculated] 
        $T[array_obj_ref_1795_index_resized_0] 
        $T[array_obj_ref_1795_index_scaled_0] 
        $T[array_obj_ref_1795_index_computed_0] 
        // indvarx_xi19
        // start: Forward dependencies from indvarx_xi19 to transition array_obj_ref_1795_index_computed_0
        // done: Forward dependencies from indvarx_xi19 to transition array_obj_ref_1795_index_computed_0
        ;;[array_obj_ref_1795_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1795_index_computed_0 &-> (array_obj_ref_1795_index_resize_0)
        array_obj_ref_1795_index_resized_0 <-& (array_obj_ref_1795_index_resize_0)
        ;;[array_obj_ref_1795_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1795_index_resized_0 &-> (array_obj_ref_1795_index_scale_0)
        array_obj_ref_1795_index_scaled_0 <-& (array_obj_ref_1795_index_scale_0)
        ;;[array_obj_ref_1795_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1795_index_scaled_0 &-> (array_obj_ref_1795_final_index_sum_regn)
        array_obj_ref_1795_offset_calculated <-& (array_obj_ref_1795_final_index_sum_regn)
        ;;[array_obj_ref_1795_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1795_offset_calculated &-> (array_obj_ref_1795_base_plus_offset)
        array_obj_ref_1795_root_address_calculated <-& (array_obj_ref_1795_base_plus_offset)
        ;;[addr_of_1796_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1796_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1796_sample_start_ <-& (array_obj_ref_1795_root_address_calculated)
        addr_of_1796_sample_start_ &-> (addr_of_1796_request)
        addr_of_1796_sample_completed_ <-& (addr_of_1796_request)
        addr_of_1796_update_start_ &-> (addr_of_1796_complete)
        addr_of_1796_update_completed_ <-& (addr_of_1796_complete)
        // Target expression
        // (as target) scevgepx_xi20
        // start: WAR dependencies for scevgepx_xi20
        // done: WAR dependencies for scevgepx_xi20
        // end:  		scevgepx_xi20 := @(aPriori[indvarx_xi19])
        // start:  		scevgep5x_xi21 := @(aPosteriori[indvarx_xi19])
        //  file prog.linked.opt.aa, line 790
        // Source expression
        // @(aPosteriori[indvarx_xi19])
        $T[addr_of_1801_sample_start_] 
        $T[addr_of_1801_sample_completed_] 
        $T[addr_of_1801_update_start_] 
        $T[addr_of_1801_update_completed_] 
        $T[array_obj_ref_1800_root_address_calculated] 
        $T[array_obj_ref_1800_offset_calculated] 
        $T[array_obj_ref_1800_index_resized_0] 
        $T[array_obj_ref_1800_index_scaled_0] 
        $T[array_obj_ref_1800_index_computed_0] 
        // indvarx_xi19
        // start: Forward dependencies from indvarx_xi19 to transition array_obj_ref_1800_index_computed_0
        // done: Forward dependencies from indvarx_xi19 to transition array_obj_ref_1800_index_computed_0
        ;;[array_obj_ref_1800_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1800_index_computed_0 &-> (array_obj_ref_1800_index_resize_0)
        array_obj_ref_1800_index_resized_0 <-& (array_obj_ref_1800_index_resize_0)
        ;;[array_obj_ref_1800_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1800_index_resized_0 &-> (array_obj_ref_1800_index_scale_0)
        array_obj_ref_1800_index_scaled_0 <-& (array_obj_ref_1800_index_scale_0)
        ;;[array_obj_ref_1800_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1800_index_scaled_0 &-> (array_obj_ref_1800_final_index_sum_regn)
        array_obj_ref_1800_offset_calculated <-& (array_obj_ref_1800_final_index_sum_regn)
        ;;[array_obj_ref_1800_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1800_offset_calculated &-> (array_obj_ref_1800_base_plus_offset)
        array_obj_ref_1800_root_address_calculated <-& (array_obj_ref_1800_base_plus_offset)
        ;;[addr_of_1801_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1801_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1801_sample_start_ <-& (array_obj_ref_1800_root_address_calculated)
        addr_of_1801_sample_start_ &-> (addr_of_1801_request)
        addr_of_1801_sample_completed_ <-& (addr_of_1801_request)
        addr_of_1801_update_start_ &-> (addr_of_1801_complete)
        addr_of_1801_update_completed_ <-& (addr_of_1801_complete)
        // Target expression
        // (as target) scevgep5x_xi21
        // start: WAR dependencies for scevgep5x_xi21
        // done: WAR dependencies for scevgep5x_xi21
        // end:  		scevgep5x_xi21 := @(aPosteriori[indvarx_xi19])
        // start:  		iNsTr_71 := ->(scevgepx_xi20)
        //  file prog.linked.opt.aa, line 791
        // Source expression
        // ->(scevgepx_xi20)
        $T[ptr_deref_1805_sample_start_] 
        $T[ptr_deref_1805_sample_completed_] 
        $T[ptr_deref_1805_update_start_] 
        $T[ptr_deref_1805_update_completed_] 
        $T[ptr_deref_1805_base_address_calculated] 
        // scevgepx_xi20
        $T[ptr_deref_1805_word_address_calculated] 
        $T[ptr_deref_1805_root_address_calculated] 
        $T[ptr_deref_1805_base_address_resized] 
        ;;[ptr_deref_1805_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1805_base_address_calculated &-> (ptr_deref_1805_base_addr_resize)
        ptr_deref_1805_base_address_resized <-& (ptr_deref_1805_base_addr_resize)
        ;;[ptr_deref_1805_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1805_base_address_resized &-> (ptr_deref_1805_base_plus_offset)
        ptr_deref_1805_root_address_calculated <-& (ptr_deref_1805_base_plus_offset)
        ;;[ptr_deref_1805_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1805_root_address_calculated &-> (ptr_deref_1805_word_addrgen)
        ptr_deref_1805_word_address_calculated <-& (ptr_deref_1805_word_addrgen)
        ;;[ptr_deref_1805_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1805_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1805_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1805_sample_start_ <-& (ptr_deref_1805_word_address_calculated)
        ptr_deref_1805_sample_start_ &-> (ptr_deref_1805_Sample)
        ptr_deref_1805_sample_completed_ <-& (ptr_deref_1805_Sample)
        ptr_deref_1805_sample_completed_ &-> ($null)
        ptr_deref_1805_update_start_ &-> (ptr_deref_1805_Update)
        ptr_deref_1805_update_completed_ <-& (ptr_deref_1805_Update)
        // start: Forward dependencies from scevgepx_xi20 to transition ptr_deref_1805_base_address_calculated
        ptr_deref_1805_base_address_calculated <-& (addr_of_1796_update_completed_)
        // done: Forward dependencies from scevgepx_xi20 to transition ptr_deref_1805_base_address_calculated
        ptr_deref_1805_sample_start_ <-& (ptr_deref_1805_base_address_calculated)
        // Target expression
        // (as target) iNsTr_71
        // start: WAR dependencies for iNsTr_71
        // done: WAR dependencies for iNsTr_71
        // end:  		iNsTr_71 := ->(scevgepx_xi20)
        // start:  		->(scevgep5x_xi21) := iNsTr_71
        //  file prog.linked.opt.aa, line 792
        // Source expression
        // iNsTr_71
        // Target expression
        // ->(scevgep5x_xi21)
        $T[ptr_deref_1808_sample_start_] 
        $T[ptr_deref_1808_sample_completed_] 
        $T[ptr_deref_1808_update_start_] 
        $T[ptr_deref_1808_update_completed_] 
        $T[ptr_deref_1808_base_address_calculated] 
        // scevgep5x_xi21
        $T[ptr_deref_1808_word_address_calculated] 
        $T[ptr_deref_1808_root_address_calculated] 
        $T[ptr_deref_1808_base_address_resized] 
        ;;[ptr_deref_1808_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1808_base_address_calculated &-> (ptr_deref_1808_base_addr_resize)
        ptr_deref_1808_base_address_resized <-& (ptr_deref_1808_base_addr_resize)
        ;;[ptr_deref_1808_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1808_base_address_resized &-> (ptr_deref_1808_base_plus_offset)
        ptr_deref_1808_root_address_calculated <-& (ptr_deref_1808_base_plus_offset)
        ;;[ptr_deref_1808_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1808_root_address_calculated &-> (ptr_deref_1808_word_addrgen)
        ptr_deref_1808_word_address_calculated <-& (ptr_deref_1808_word_addrgen)
        ;;[ptr_deref_1808_Sample] 
        {
          ;;[ptr_deref_1808_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1808_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1808_sample_start_ <-& (ptr_deref_1808_word_address_calculated)
        ptr_deref_1808_sample_start_ &-> (ptr_deref_1808_Sample)
        ptr_deref_1808_sample_completed_ <-& (ptr_deref_1808_Sample)
        ptr_deref_1808_sample_completed_ &-> ($null)
        ptr_deref_1808_update_start_ &-> (ptr_deref_1808_Update)
        ptr_deref_1808_update_completed_ <-& (ptr_deref_1808_Update)
        // start: Forward dependencies from scevgep5x_xi21 to transition ptr_deref_1808_base_address_calculated
        ptr_deref_1808_base_address_calculated <-& (addr_of_1801_update_completed_)
        // done: Forward dependencies from scevgep5x_xi21 to transition ptr_deref_1808_base_address_calculated
        ptr_deref_1808_sample_start_ <-& (ptr_deref_1808_base_address_calculated)
        // start: Forward dependencies from iNsTr_71 to transition ptr_deref_1808_sample_start_
        ptr_deref_1808_sample_start_ <-& (ptr_deref_1805_update_completed_)
        // done: Forward dependencies from iNsTr_71 to transition ptr_deref_1808_sample_start_
        // end:  		->(scevgep5x_xi21) := iNsTr_71
        // start:  		indvarx_xnextx_xi22 := (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 793
        // Source expression
        // (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1815_sample_start_] 
        $T[ADD_u64_u64_1815_sample_completed_] 
        $T[ADD_u64_u64_1815_update_start_] 
        $T[ADD_u64_u64_1815_update_completed_] 
        // indvarx_xi19
        // start: Forward dependencies from indvarx_xi19 to transition ADD_u64_u64_1815_sample_start_
        // done: Forward dependencies from indvarx_xi19 to transition ADD_u64_u64_1815_sample_start_
        ;;[ADD_u64_u64_1815_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1815_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1815_sample_start_ &-> (ADD_u64_u64_1815_Sample)
        ADD_u64_u64_1815_sample_completed_ <-& (ADD_u64_u64_1815_Sample)
        ADD_u64_u64_1815_sample_completed_ &-> ($null)
        ADD_u64_u64_1815_update_start_ &-> (ADD_u64_u64_1815_Update)
        ADD_u64_u64_1815_update_completed_ <-& (ADD_u64_u64_1815_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi22
        // start: WAR dependencies for indvarx_xnextx_xi22
        // done: WAR dependencies for indvarx_xnextx_xi22
        // end:  		indvarx_xnextx_xi22 := (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond15 := (indvarx_xnextx_xi22 == tmp4x_xi17)
        //  file prog.linked.opt.aa, line 794
        // Source expression
        // (indvarx_xnextx_xi22 == tmp4x_xi17)
        $T[EQ_u64_u1_1820_sample_start_] 
        $T[EQ_u64_u1_1820_sample_completed_] 
        $T[EQ_u64_u1_1820_update_start_] 
        $T[EQ_u64_u1_1820_update_completed_] 
        // indvarx_xnextx_xi22
        // tmp4x_xi17
        // start: Forward dependencies from indvarx_xnextx_xi22 to transition EQ_u64_u1_1820_sample_start_
        EQ_u64_u1_1820_sample_start_ <-& (ADD_u64_u64_1815_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi22 to transition EQ_u64_u1_1820_sample_start_
        // start: Forward dependencies from tmp4x_xi17 to transition EQ_u64_u1_1820_sample_start_
        // done: Forward dependencies from tmp4x_xi17 to transition EQ_u64_u1_1820_sample_start_
        ;;[EQ_u64_u1_1820_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1820_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1820_sample_start_ &-> (EQ_u64_u1_1820_Sample)
        EQ_u64_u1_1820_sample_completed_ <-& (EQ_u64_u1_1820_Sample)
        EQ_u64_u1_1820_sample_completed_ &-> ($null)
        EQ_u64_u1_1820_update_start_ &-> (EQ_u64_u1_1820_Update)
        EQ_u64_u1_1820_update_completed_ <-& (EQ_u64_u1_1820_Update)
        // Target expression
        // (as target) exitcond15
        // start: WAR dependencies for exitcond15
        // done: WAR dependencies for exitcond15
        // end:  		exitcond15 := (indvarx_xnextx_xi22 == tmp4x_xi17)
        // load-store dependencies..
      }
      assign_stmt_1797_to_assign_stmt_1821__entry__ |-> (assign_stmt_1797_to_assign_stmt_1821)
      assign_stmt_1797_to_assign_stmt_1821__exit__ <-| (assign_stmt_1797_to_assign_stmt_1821)
      // if-statement  
      //  file prog.linked.opt.aa, line 795
      ;;[if_stmt_1822_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1822__entry__ |-> (if_stmt_1822_dead_link)
      if_stmt_1822__exit__ <-| (if_stmt_1822_dead_link)
      ;;[if_stmt_1822_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1822__entry__ |-> (if_stmt_1822_eval_test)
      $P [R_exitcond15_1823_place]
      R_exitcond15_1823_place <-| (if_stmt_1822_eval_test)
      ;;[if_stmt_1822_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1822_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond15_1823_place |-> (if_stmt_1822_if_link if_stmt_1822_else_link)
      $P [bb_16_initialize_aPosteriorix_xexitx_xloopexit]
      bb_16_initialize_aPosteriorix_xexitx_xloopexit <-| (if_stmt_1822_if_link)
      $P [bb_16_bb_16]
      bb_16_bb_16 <-| (if_stmt_1822_else_link)
      ::[assign_stmt_1836] 
      {
        // start:  		iNsTr_51 := (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 805
        // Source expression
        // (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1835_sample_start_] 
        $T[EQ_u16_u1_1835_sample_completed_] 
        $T[EQ_u16_u1_1835_update_start_] 
        $T[EQ_u16_u1_1835_update_completed_] 
        // iNsTr_26
        // start: Forward dependencies from iNsTr_26 to transition EQ_u16_u1_1835_sample_start_
        // done: Forward dependencies from iNsTr_26 to transition EQ_u16_u1_1835_sample_start_
        ;;[EQ_u16_u1_1835_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1835_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1835_sample_start_ &-> (EQ_u16_u1_1835_Sample)
        EQ_u16_u1_1835_sample_completed_ <-& (EQ_u16_u1_1835_Sample)
        EQ_u16_u1_1835_sample_completed_ &-> ($null)
        EQ_u16_u1_1835_update_start_ &-> (EQ_u16_u1_1835_Update)
        EQ_u16_u1_1835_update_completed_ <-& (EQ_u16_u1_1835_Update)
        // Target expression
        // (as target) iNsTr_51
        // start: WAR dependencies for iNsTr_51
        // done: WAR dependencies for iNsTr_51
        // end:  		iNsTr_51 := (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1836__entry__ |-> (assign_stmt_1836)
      assign_stmt_1836__exit__ <-| (assign_stmt_1836)
      // if-statement  
      //  file prog.linked.opt.aa, line 806
      ;;[if_stmt_1837_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1837__entry__ |-> (if_stmt_1837_dead_link)
      if_stmt_1837__exit__ <-| (if_stmt_1837_dead_link)
      ;;[if_stmt_1837_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1837__entry__ |-> (if_stmt_1837_eval_test)
      $P [R_iNsTr_51_1838_place]
      R_iNsTr_51_1838_place <-| (if_stmt_1837_eval_test)
      ;;[if_stmt_1837_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1837_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_51_1838_place |-> (if_stmt_1837_if_link if_stmt_1837_else_link)
      $P [initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit]
      initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit <-| (if_stmt_1837_if_link)
      $P [initialize_aPosteriorix_xexit_bbx_xnphx_xi27]
      initialize_aPosteriorix_xexit_bbx_xnphx_xi27 <-| (if_stmt_1837_else_link)
      ::[assign_stmt_1849_to_assign_stmt_1872] 
      {
        // start:  		tmpx_xi24 := (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 813
        // Source expression
        // (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1848_sample_start_] 
        $T[UGT_u16_u1_1848_sample_completed_] 
        $T[UGT_u16_u1_1848_update_start_] 
        $T[UGT_u16_u1_1848_update_completed_] 
        // iNsTr_26
        // start: Forward dependencies from iNsTr_26 to transition UGT_u16_u1_1848_sample_start_
        // done: Forward dependencies from iNsTr_26 to transition UGT_u16_u1_1848_sample_start_
        ;;[UGT_u16_u1_1848_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1848_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1848_sample_start_ &-> (UGT_u16_u1_1848_Sample)
        UGT_u16_u1_1848_sample_completed_ <-& (UGT_u16_u1_1848_Sample)
        UGT_u16_u1_1848_sample_completed_ &-> ($null)
        UGT_u16_u1_1848_update_start_ &-> (UGT_u16_u1_1848_Update)
        UGT_u16_u1_1848_update_completed_ <-& (UGT_u16_u1_1848_Update)
        // Target expression
        // (as target) tmpx_xi24
        // start: WAR dependencies for tmpx_xi24
        // done: WAR dependencies for tmpx_xi24
        // end:  		tmpx_xi24 := (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi25 := (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 814
        // Source expression
        // (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1854_sample_start_] 
        $T[ADD_u16_u16_1854_sample_completed_] 
        $T[ADD_u16_u16_1854_update_start_] 
        $T[ADD_u16_u16_1854_update_completed_] 
        // iNsTr_26
        // start: Forward dependencies from iNsTr_26 to transition ADD_u16_u16_1854_sample_start_
        // done: Forward dependencies from iNsTr_26 to transition ADD_u16_u16_1854_sample_start_
        ;;[ADD_u16_u16_1854_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1854_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1854_sample_start_ &-> (ADD_u16_u16_1854_Sample)
        ADD_u16_u16_1854_sample_completed_ <-& (ADD_u16_u16_1854_Sample)
        ADD_u16_u16_1854_sample_completed_ &-> ($null)
        ADD_u16_u16_1854_update_start_ &-> (ADD_u16_u16_1854_Update)
        ADD_u16_u16_1854_update_completed_ <-& (ADD_u16_u16_1854_Update)
        // Target expression
        // (as target) xx_xopx_xi25
        // start: WAR dependencies for xx_xopx_xi25
        // done: WAR dependencies for xx_xopx_xi25
        // end:  		xx_xopx_xi25 := (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_69 := ($cast ($uint<64>) xx_xopx_xi25 )
        //  file prog.linked.opt.aa, line 815
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi25 )
        $T[type_cast_1858_sample_start_] 
        $T[type_cast_1858_sample_completed_] 
        $T[type_cast_1858_update_start_] 
        $T[type_cast_1858_update_completed_] 
        // xx_xopx_xi25
        // start: Forward dependencies from xx_xopx_xi25 to transition type_cast_1858_sample_start_
        type_cast_1858_sample_start_ <-& (ADD_u16_u16_1854_update_completed_)
        // done: Forward dependencies from xx_xopx_xi25 to transition type_cast_1858_sample_start_
        ;;[type_cast_1858_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1858_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1858_sample_start_ &-> (type_cast_1858_Sample)
        type_cast_1858_sample_completed_ <-& (type_cast_1858_Sample)
        type_cast_1858_sample_completed_ &-> ($null)
        type_cast_1858_update_start_ &-> (type_cast_1858_Update)
        type_cast_1858_update_completed_ <-& (type_cast_1858_Update)
        // Target expression
        // (as target) iNsTr_69
        // start: WAR dependencies for iNsTr_69
        // done: WAR dependencies for iNsTr_69
        // end:  		iNsTr_69 := ($cast ($uint<64>) xx_xopx_xi25 )
        // start:  		xx_xop5x_xi := (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 816
        // Source expression
        // (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1864_sample_start_] 
        $T[ADD_u64_u64_1864_sample_completed_] 
        $T[ADD_u64_u64_1864_update_start_] 
        $T[ADD_u64_u64_1864_update_completed_] 
        // iNsTr_69
        // start: Forward dependencies from iNsTr_69 to transition ADD_u64_u64_1864_sample_start_
        ADD_u64_u64_1864_sample_start_ <-& (type_cast_1858_update_completed_)
        // done: Forward dependencies from iNsTr_69 to transition ADD_u64_u64_1864_sample_start_
        ;;[ADD_u64_u64_1864_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1864_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1864_sample_start_ &-> (ADD_u64_u64_1864_Sample)
        ADD_u64_u64_1864_sample_completed_ <-& (ADD_u64_u64_1864_Sample)
        ADD_u64_u64_1864_sample_completed_ &-> ($null)
        ADD_u64_u64_1864_update_start_ &-> (ADD_u64_u64_1864_Update)
        ADD_u64_u64_1864_update_completed_ <-& (ADD_u64_u64_1864_Update)
        // Target expression
        // (as target) xx_xop5x_xi
        // start: WAR dependencies for xx_xop5x_xi
        // done: WAR dependencies for xx_xop5x_xi
        // end:  		xx_xop5x_xi := (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi26 := ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 817
        // Source expression
        // ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1871_sample_start_] 
        $T[MUX_1871_sample_completed_] 
        $T[MUX_1871_update_start_] 
        $T[MUX_1871_update_completed_] 
        // tmpx_xi24
        // xx_xop5x_xi
        // start: Forward dependencies from tmpx_xi24 to transition MUX_1871_sample_start_
        MUX_1871_sample_start_ <-& (UGT_u16_u1_1848_update_completed_)
        // done: Forward dependencies from tmpx_xi24 to transition MUX_1871_sample_start_
        // start: Forward dependencies from xx_xop5x_xi to transition MUX_1871_sample_start_
        MUX_1871_sample_start_ <-& (ADD_u64_u64_1864_update_completed_)
        // done: Forward dependencies from xx_xop5x_xi to transition MUX_1871_sample_start_
        ;;[MUX_1871_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1871_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1871_sample_start_ &-> (MUX_1871_start)
        MUX_1871_sample_completed_ <-& (MUX_1871_start)
        MUX_1871_update_start_ &-> (MUX_1871_complete)
        MUX_1871_update_completed_ <-& (MUX_1871_complete)
        // Target expression
        // (as target) tmp4x_xi26
        // start: WAR dependencies for tmp4x_xi26
        // done: WAR dependencies for tmp4x_xi26
        // end:  		tmp4x_xi26 := ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1849_to_assign_stmt_1872__entry__ |-> (assign_stmt_1849_to_assign_stmt_1872)
      assign_stmt_1849_to_assign_stmt_1872__exit__ <-| (assign_stmt_1849_to_assign_stmt_1872)
      ::[assign_stmt_1887_to_assign_stmt_1903] 
      {
        // start:  		scevgepx_xi29 := @(ext_info[indvarx_xi28])
        //  file prog.linked.opt.aa, line 822
        // Source expression
        // @(ext_info[indvarx_xi28])
        $T[addr_of_1886_sample_start_] 
        $T[addr_of_1886_sample_completed_] 
        $T[addr_of_1886_update_start_] 
        $T[addr_of_1886_update_completed_] 
        $T[array_obj_ref_1885_root_address_calculated] 
        $T[array_obj_ref_1885_offset_calculated] 
        $T[array_obj_ref_1885_index_resized_0] 
        $T[array_obj_ref_1885_index_scaled_0] 
        $T[array_obj_ref_1885_index_computed_0] 
        // indvarx_xi28
        // start: Forward dependencies from indvarx_xi28 to transition array_obj_ref_1885_index_computed_0
        // done: Forward dependencies from indvarx_xi28 to transition array_obj_ref_1885_index_computed_0
        ;;[array_obj_ref_1885_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1885_index_computed_0 &-> (array_obj_ref_1885_index_resize_0)
        array_obj_ref_1885_index_resized_0 <-& (array_obj_ref_1885_index_resize_0)
        ;;[array_obj_ref_1885_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1885_index_resized_0 &-> (array_obj_ref_1885_index_scale_0)
        array_obj_ref_1885_index_scaled_0 <-& (array_obj_ref_1885_index_scale_0)
        ;;[array_obj_ref_1885_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1885_index_scaled_0 &-> (array_obj_ref_1885_final_index_sum_regn)
        array_obj_ref_1885_offset_calculated <-& (array_obj_ref_1885_final_index_sum_regn)
        ;;[array_obj_ref_1885_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1885_offset_calculated &-> (array_obj_ref_1885_base_plus_offset)
        array_obj_ref_1885_root_address_calculated <-& (array_obj_ref_1885_base_plus_offset)
        ;;[addr_of_1886_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1886_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1886_sample_start_ <-& (array_obj_ref_1885_root_address_calculated)
        addr_of_1886_sample_start_ &-> (addr_of_1886_request)
        addr_of_1886_sample_completed_ <-& (addr_of_1886_request)
        addr_of_1886_update_start_ &-> (addr_of_1886_complete)
        addr_of_1886_update_completed_ <-& (addr_of_1886_complete)
        // Target expression
        // (as target) scevgepx_xi29
        // start: WAR dependencies for scevgepx_xi29
        // done: WAR dependencies for scevgepx_xi29
        // end:  		scevgepx_xi29 := @(ext_info[indvarx_xi28])
        // start:  		->(scevgepx_xi29) := ($bitcast ($float<8,23>) _h0  )
        //  file prog.linked.opt.aa, line 823
        // Target expression
        // ->(scevgepx_xi29)
        $T[ptr_deref_1889_sample_start_] 
        $T[ptr_deref_1889_sample_completed_] 
        $T[ptr_deref_1889_update_start_] 
        $T[ptr_deref_1889_update_completed_] 
        $T[ptr_deref_1889_base_address_calculated] 
        // scevgepx_xi29
        $T[ptr_deref_1889_word_address_calculated] 
        $T[ptr_deref_1889_root_address_calculated] 
        $T[ptr_deref_1889_base_address_resized] 
        ;;[ptr_deref_1889_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1889_base_address_calculated &-> (ptr_deref_1889_base_addr_resize)
        ptr_deref_1889_base_address_resized <-& (ptr_deref_1889_base_addr_resize)
        ;;[ptr_deref_1889_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1889_base_address_resized &-> (ptr_deref_1889_base_plus_offset)
        ptr_deref_1889_root_address_calculated <-& (ptr_deref_1889_base_plus_offset)
        ;;[ptr_deref_1889_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1889_root_address_calculated &-> (ptr_deref_1889_word_addrgen)
        ptr_deref_1889_word_address_calculated <-& (ptr_deref_1889_word_addrgen)
        ;;[ptr_deref_1889_Sample] 
        {
          ;;[ptr_deref_1889_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1889_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_1889_sample_start_ <-& (ptr_deref_1889_word_address_calculated)
        ptr_deref_1889_sample_start_ &-> (ptr_deref_1889_Sample)
        ptr_deref_1889_sample_completed_ <-& (ptr_deref_1889_Sample)
        ptr_deref_1889_sample_completed_ &-> ($null)
        ptr_deref_1889_update_start_ &-> (ptr_deref_1889_Update)
        ptr_deref_1889_update_completed_ <-& (ptr_deref_1889_Update)
        // start: Forward dependencies from scevgepx_xi29 to transition ptr_deref_1889_base_address_calculated
        ptr_deref_1889_base_address_calculated <-& (addr_of_1886_update_completed_)
        // done: Forward dependencies from scevgepx_xi29 to transition ptr_deref_1889_base_address_calculated
        ptr_deref_1889_sample_start_ <-& (ptr_deref_1889_base_address_calculated)
        // end:  		->(scevgepx_xi29) := ($bitcast ($float<8,23>) _h0  )
        // start:  		indvarx_xnextx_xi30 := (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 824
        // Source expression
        // (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1897_sample_start_] 
        $T[ADD_u64_u64_1897_sample_completed_] 
        $T[ADD_u64_u64_1897_update_start_] 
        $T[ADD_u64_u64_1897_update_completed_] 
        // indvarx_xi28
        // start: Forward dependencies from indvarx_xi28 to transition ADD_u64_u64_1897_sample_start_
        // done: Forward dependencies from indvarx_xi28 to transition ADD_u64_u64_1897_sample_start_
        ;;[ADD_u64_u64_1897_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1897_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1897_sample_start_ &-> (ADD_u64_u64_1897_Sample)
        ADD_u64_u64_1897_sample_completed_ <-& (ADD_u64_u64_1897_Sample)
        ADD_u64_u64_1897_sample_completed_ &-> ($null)
        ADD_u64_u64_1897_update_start_ &-> (ADD_u64_u64_1897_Update)
        ADD_u64_u64_1897_update_completed_ <-& (ADD_u64_u64_1897_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi30
        // start: WAR dependencies for indvarx_xnextx_xi30
        // done: WAR dependencies for indvarx_xnextx_xi30
        // end:  		indvarx_xnextx_xi30 := (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond14 := (indvarx_xnextx_xi30 == tmp4x_xi26)
        //  file prog.linked.opt.aa, line 825
        // Source expression
        // (indvarx_xnextx_xi30 == tmp4x_xi26)
        $T[EQ_u64_u1_1902_sample_start_] 
        $T[EQ_u64_u1_1902_sample_completed_] 
        $T[EQ_u64_u1_1902_update_start_] 
        $T[EQ_u64_u1_1902_update_completed_] 
        // indvarx_xnextx_xi30
        // tmp4x_xi26
        // start: Forward dependencies from indvarx_xnextx_xi30 to transition EQ_u64_u1_1902_sample_start_
        EQ_u64_u1_1902_sample_start_ <-& (ADD_u64_u64_1897_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi30 to transition EQ_u64_u1_1902_sample_start_
        // start: Forward dependencies from tmp4x_xi26 to transition EQ_u64_u1_1902_sample_start_
        // done: Forward dependencies from tmp4x_xi26 to transition EQ_u64_u1_1902_sample_start_
        ;;[EQ_u64_u1_1902_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_1902_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_1902_sample_start_ &-> (EQ_u64_u1_1902_Sample)
        EQ_u64_u1_1902_sample_completed_ <-& (EQ_u64_u1_1902_Sample)
        EQ_u64_u1_1902_sample_completed_ &-> ($null)
        EQ_u64_u1_1902_update_start_ &-> (EQ_u64_u1_1902_Update)
        EQ_u64_u1_1902_update_completed_ <-& (EQ_u64_u1_1902_Update)
        // Target expression
        // (as target) exitcond14
        // start: WAR dependencies for exitcond14
        // done: WAR dependencies for exitcond14
        // end:  		exitcond14 := (indvarx_xnextx_xi30 == tmp4x_xi26)
        // load-store dependencies..
      }
      assign_stmt_1887_to_assign_stmt_1903__entry__ |-> (assign_stmt_1887_to_assign_stmt_1903)
      assign_stmt_1887_to_assign_stmt_1903__exit__ <-| (assign_stmt_1887_to_assign_stmt_1903)
      // if-statement  
      //  file prog.linked.opt.aa, line 826
      ;;[if_stmt_1904_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1904__entry__ |-> (if_stmt_1904_dead_link)
      if_stmt_1904__exit__ <-| (if_stmt_1904_dead_link)
      ;;[if_stmt_1904_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1904__entry__ |-> (if_stmt_1904_eval_test)
      $P [R_exitcond14_1905_place]
      R_exitcond14_1905_place <-| (if_stmt_1904_eval_test)
      ;;[if_stmt_1904_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1904_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond14_1905_place |-> (if_stmt_1904_if_link if_stmt_1904_else_link)
      $P [bb_20_initializeExtrinsicInfox_xexitx_xloopexit]
      bb_20_initializeExtrinsicInfox_xexitx_xloopexit <-| (if_stmt_1904_if_link)
      $P [bb_20_bb_20]
      bb_20_bb_20 <-| (if_stmt_1904_else_link)
      ::[call_stmt_1913] 
      {
        // start: 		$call checkNodeComputeEngine () () 
        //  file prog.linked.opt.aa, line 836
        $T[call_stmt_1913_sample_start_] 
        $T[call_stmt_1913_sample_completed_] 
        $T[call_stmt_1913_update_start_] 
        $T[call_stmt_1913_update_completed_] 
        ;;[call_stmt_1913_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1913_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1913_sample_start_ &-> (call_stmt_1913_Sample)
        call_stmt_1913_sample_completed_ <-& (call_stmt_1913_Sample)
        call_stmt_1913_sample_completed_ &-> ($null)
        call_stmt_1913_update_start_ &-> (call_stmt_1913_Update)
        call_stmt_1913_update_completed_ <-& (call_stmt_1913_Update)
        // end: 		$call checkNodeComputeEngine () () 
        // barrier: 		$call checkNodeComputeEngine () () 
        // load-store dependencies..
      }
      call_stmt_1913__entry__ |-> (call_stmt_1913)
      call_stmt_1913__exit__ <-| (call_stmt_1913)
      ::[assign_stmt_1916_to_assign_stmt_1922] 
      {
        // start:  		iNsTr_66 := ncol_ind
        //  file prog.linked.opt.aa, line 837
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_1915_sample_start_] 
        $T[LOAD_ncol_ind_1915_sample_completed_] 
        $T[LOAD_ncol_ind_1915_update_start_] 
        $T[LOAD_ncol_ind_1915_update_completed_] 
        $T[LOAD_ncol_ind_1915_word_address_calculated] 
        $T[LOAD_ncol_ind_1915_root_address_calculated] 
        LOAD_ncol_ind_1915_word_address_calculated <-& (LOAD_ncol_ind_1915_root_address_calculated)
        ;;[LOAD_ncol_ind_1915_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_1915_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_1915_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_1915_sample_start_ <-& (LOAD_ncol_ind_1915_word_address_calculated)
        LOAD_ncol_ind_1915_sample_start_ &-> (LOAD_ncol_ind_1915_Sample)
        LOAD_ncol_ind_1915_sample_completed_ <-& (LOAD_ncol_ind_1915_Sample)
        LOAD_ncol_ind_1915_sample_completed_ &-> ($null)
        LOAD_ncol_ind_1915_update_start_ &-> (LOAD_ncol_ind_1915_Update)
        LOAD_ncol_ind_1915_update_completed_ <-& (LOAD_ncol_ind_1915_Update)
        // Target expression
        // (as target) iNsTr_66
        // start: WAR dependencies for iNsTr_66
        // done: WAR dependencies for iNsTr_66
        // end:  		iNsTr_66 := ncol_ind
        // start:  		iNsTr_67 := (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 838
        // Source expression
        // (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_1921_sample_start_] 
        $T[EQ_u16_u1_1921_sample_completed_] 
        $T[EQ_u16_u1_1921_update_start_] 
        $T[EQ_u16_u1_1921_update_completed_] 
        // iNsTr_66
        // start: Forward dependencies from iNsTr_66 to transition EQ_u16_u1_1921_sample_start_
        EQ_u16_u1_1921_sample_start_ <-& (LOAD_ncol_ind_1915_update_completed_)
        // done: Forward dependencies from iNsTr_66 to transition EQ_u16_u1_1921_sample_start_
        ;;[EQ_u16_u1_1921_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_1921_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_1921_sample_start_ &-> (EQ_u16_u1_1921_Sample)
        EQ_u16_u1_1921_sample_completed_ <-& (EQ_u16_u1_1921_Sample)
        EQ_u16_u1_1921_sample_completed_ &-> ($null)
        EQ_u16_u1_1921_update_start_ &-> (EQ_u16_u1_1921_Update)
        EQ_u16_u1_1921_update_completed_ <-& (EQ_u16_u1_1921_Update)
        // Target expression
        // (as target) iNsTr_67
        // start: WAR dependencies for iNsTr_67
        // done: WAR dependencies for iNsTr_67
        // end:  		iNsTr_67 := (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_1916_to_assign_stmt_1922__entry__ |-> (assign_stmt_1916_to_assign_stmt_1922)
      assign_stmt_1916_to_assign_stmt_1922__exit__ <-| (assign_stmt_1916_to_assign_stmt_1922)
      // if-statement  
      //  file prog.linked.opt.aa, line 839
      ;;[if_stmt_1923_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1923__entry__ |-> (if_stmt_1923_dead_link)
      if_stmt_1923__exit__ <-| (if_stmt_1923_dead_link)
      ;;[if_stmt_1923_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_1923__entry__ |-> (if_stmt_1923_eval_test)
      $P [R_iNsTr_67_1924_place]
      R_iNsTr_67_1924_place <-| (if_stmt_1923_eval_test)
      ;;[if_stmt_1923_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1923_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_67_1924_place |-> (if_stmt_1923_if_link if_stmt_1923_else_link)
      $P [initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit]
      initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit <-| (if_stmt_1923_if_link)
      $P [initializeExtrinsicInfox_xexit_bbx_xnphx_xi54]
      initializeExtrinsicInfox_xexit_bbx_xnphx_xi54 <-| (if_stmt_1923_else_link)
      ::[assign_stmt_1935_to_assign_stmt_1958] 
      {
        // start:  		tmpx_xi50 := (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 846
        // Source expression
        // (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_1934_sample_start_] 
        $T[UGT_u16_u1_1934_sample_completed_] 
        $T[UGT_u16_u1_1934_update_start_] 
        $T[UGT_u16_u1_1934_update_completed_] 
        // iNsTr_66
        // start: Forward dependencies from iNsTr_66 to transition UGT_u16_u1_1934_sample_start_
        // done: Forward dependencies from iNsTr_66 to transition UGT_u16_u1_1934_sample_start_
        ;;[UGT_u16_u1_1934_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_1934_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_1934_sample_start_ &-> (UGT_u16_u1_1934_Sample)
        UGT_u16_u1_1934_sample_completed_ <-& (UGT_u16_u1_1934_Sample)
        UGT_u16_u1_1934_sample_completed_ &-> ($null)
        UGT_u16_u1_1934_update_start_ &-> (UGT_u16_u1_1934_Update)
        UGT_u16_u1_1934_update_completed_ <-& (UGT_u16_u1_1934_Update)
        // Target expression
        // (as target) tmpx_xi50
        // start: WAR dependencies for tmpx_xi50
        // done: WAR dependencies for tmpx_xi50
        // end:  		tmpx_xi50 := (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi51 := (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 847
        // Source expression
        // (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1940_sample_start_] 
        $T[ADD_u16_u16_1940_sample_completed_] 
        $T[ADD_u16_u16_1940_update_start_] 
        $T[ADD_u16_u16_1940_update_completed_] 
        // iNsTr_66
        // start: Forward dependencies from iNsTr_66 to transition ADD_u16_u16_1940_sample_start_
        // done: Forward dependencies from iNsTr_66 to transition ADD_u16_u16_1940_sample_start_
        ;;[ADD_u16_u16_1940_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1940_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1940_sample_start_ &-> (ADD_u16_u16_1940_Sample)
        ADD_u16_u16_1940_sample_completed_ <-& (ADD_u16_u16_1940_Sample)
        ADD_u16_u16_1940_sample_completed_ &-> ($null)
        ADD_u16_u16_1940_update_start_ &-> (ADD_u16_u16_1940_Update)
        ADD_u16_u16_1940_update_completed_ <-& (ADD_u16_u16_1940_Update)
        // Target expression
        // (as target) xx_xopx_xi51
        // start: WAR dependencies for xx_xopx_xi51
        // done: WAR dependencies for xx_xopx_xi51
        // end:  		xx_xopx_xi51 := (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_86 := ($cast ($uint<64>) xx_xopx_xi51 )
        //  file prog.linked.opt.aa, line 848
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi51 )
        $T[type_cast_1944_sample_start_] 
        $T[type_cast_1944_sample_completed_] 
        $T[type_cast_1944_update_start_] 
        $T[type_cast_1944_update_completed_] 
        // xx_xopx_xi51
        // start: Forward dependencies from xx_xopx_xi51 to transition type_cast_1944_sample_start_
        type_cast_1944_sample_start_ <-& (ADD_u16_u16_1940_update_completed_)
        // done: Forward dependencies from xx_xopx_xi51 to transition type_cast_1944_sample_start_
        ;;[type_cast_1944_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_1944_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_1944_sample_start_ &-> (type_cast_1944_Sample)
        type_cast_1944_sample_completed_ <-& (type_cast_1944_Sample)
        type_cast_1944_sample_completed_ &-> ($null)
        type_cast_1944_update_start_ &-> (type_cast_1944_Update)
        type_cast_1944_update_completed_ <-& (type_cast_1944_Update)
        // Target expression
        // (as target) iNsTr_86
        // start: WAR dependencies for iNsTr_86
        // done: WAR dependencies for iNsTr_86
        // end:  		iNsTr_86 := ($cast ($uint<64>) xx_xopx_xi51 )
        // start:  		xx_xop7x_xi52 := (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 849
        // Source expression
        // (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_1950_sample_start_] 
        $T[ADD_u64_u64_1950_sample_completed_] 
        $T[ADD_u64_u64_1950_update_start_] 
        $T[ADD_u64_u64_1950_update_completed_] 
        // iNsTr_86
        // start: Forward dependencies from iNsTr_86 to transition ADD_u64_u64_1950_sample_start_
        ADD_u64_u64_1950_sample_start_ <-& (type_cast_1944_update_completed_)
        // done: Forward dependencies from iNsTr_86 to transition ADD_u64_u64_1950_sample_start_
        ;;[ADD_u64_u64_1950_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1950_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1950_sample_start_ &-> (ADD_u64_u64_1950_Sample)
        ADD_u64_u64_1950_sample_completed_ <-& (ADD_u64_u64_1950_Sample)
        ADD_u64_u64_1950_sample_completed_ &-> ($null)
        ADD_u64_u64_1950_update_start_ &-> (ADD_u64_u64_1950_Update)
        ADD_u64_u64_1950_update_completed_ <-& (ADD_u64_u64_1950_Update)
        // Target expression
        // (as target) xx_xop7x_xi52
        // start: WAR dependencies for xx_xop7x_xi52
        // done: WAR dependencies for xx_xop7x_xi52
        // end:  		xx_xop7x_xi52 := (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi53 := ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 850
        // Source expression
        // ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_1957_sample_start_] 
        $T[MUX_1957_sample_completed_] 
        $T[MUX_1957_update_start_] 
        $T[MUX_1957_update_completed_] 
        // tmpx_xi50
        // xx_xop7x_xi52
        // start: Forward dependencies from tmpx_xi50 to transition MUX_1957_sample_start_
        MUX_1957_sample_start_ <-& (UGT_u16_u1_1934_update_completed_)
        // done: Forward dependencies from tmpx_xi50 to transition MUX_1957_sample_start_
        // start: Forward dependencies from xx_xop7x_xi52 to transition MUX_1957_sample_start_
        MUX_1957_sample_start_ <-& (ADD_u64_u64_1950_update_completed_)
        // done: Forward dependencies from xx_xop7x_xi52 to transition MUX_1957_sample_start_
        ;;[MUX_1957_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_1957_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_1957_sample_start_ &-> (MUX_1957_start)
        MUX_1957_sample_completed_ <-& (MUX_1957_start)
        MUX_1957_update_start_ &-> (MUX_1957_complete)
        MUX_1957_update_completed_ <-& (MUX_1957_complete)
        // Target expression
        // (as target) tmp4x_xi53
        // start: WAR dependencies for tmp4x_xi53
        // done: WAR dependencies for tmp4x_xi53
        // end:  		tmp4x_xi53 := ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_1935_to_assign_stmt_1958__entry__ |-> (assign_stmt_1935_to_assign_stmt_1958)
      assign_stmt_1935_to_assign_stmt_1958__exit__ <-| (assign_stmt_1935_to_assign_stmt_1958)
      ::[assign_stmt_1973_to_assign_stmt_2031] 
      {
        // start:  		scevgepx_xi56 := @(ext_info[indvarx_xi55])
        //  file prog.linked.opt.aa, line 855
        // Source expression
        // @(ext_info[indvarx_xi55])
        $T[addr_of_1972_sample_start_] 
        $T[addr_of_1972_sample_completed_] 
        $T[addr_of_1972_update_start_] 
        $T[addr_of_1972_update_completed_] 
        $T[array_obj_ref_1971_root_address_calculated] 
        $T[array_obj_ref_1971_offset_calculated] 
        $T[array_obj_ref_1971_index_resized_0] 
        $T[array_obj_ref_1971_index_scaled_0] 
        $T[array_obj_ref_1971_index_computed_0] 
        // indvarx_xi55
        // start: Forward dependencies from indvarx_xi55 to transition array_obj_ref_1971_index_computed_0
        // done: Forward dependencies from indvarx_xi55 to transition array_obj_ref_1971_index_computed_0
        ;;[array_obj_ref_1971_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1971_index_computed_0 &-> (array_obj_ref_1971_index_resize_0)
        array_obj_ref_1971_index_resized_0 <-& (array_obj_ref_1971_index_resize_0)
        ;;[array_obj_ref_1971_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1971_index_resized_0 &-> (array_obj_ref_1971_index_scale_0)
        array_obj_ref_1971_index_scaled_0 <-& (array_obj_ref_1971_index_scale_0)
        ;;[array_obj_ref_1971_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1971_index_scaled_0 &-> (array_obj_ref_1971_final_index_sum_regn)
        array_obj_ref_1971_offset_calculated <-& (array_obj_ref_1971_final_index_sum_regn)
        ;;[array_obj_ref_1971_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1971_offset_calculated &-> (array_obj_ref_1971_base_plus_offset)
        array_obj_ref_1971_root_address_calculated <-& (array_obj_ref_1971_base_plus_offset)
        ;;[addr_of_1972_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1972_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1972_sample_start_ <-& (array_obj_ref_1971_root_address_calculated)
        addr_of_1972_sample_start_ &-> (addr_of_1972_request)
        addr_of_1972_sample_completed_ <-& (addr_of_1972_request)
        addr_of_1972_update_start_ &-> (addr_of_1972_complete)
        addr_of_1972_update_completed_ <-& (addr_of_1972_complete)
        // Target expression
        // (as target) scevgepx_xi56
        // start: WAR dependencies for scevgepx_xi56
        // done: WAR dependencies for scevgepx_xi56
        // end:  		scevgepx_xi56 := @(ext_info[indvarx_xi55])
        // start:  		tmp13 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 856
        // Source expression
        // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_1978_sample_start_] 
        $T[ADD_u64_u64_1978_sample_completed_] 
        $T[ADD_u64_u64_1978_update_start_] 
        $T[ADD_u64_u64_1978_update_completed_] 
        // indvarx_xi55
        // start: Forward dependencies from indvarx_xi55 to transition ADD_u64_u64_1978_sample_start_
        // done: Forward dependencies from indvarx_xi55 to transition ADD_u64_u64_1978_sample_start_
        ;;[ADD_u64_u64_1978_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_1978_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_1978_sample_start_ &-> (ADD_u64_u64_1978_Sample)
        ADD_u64_u64_1978_sample_completed_ <-& (ADD_u64_u64_1978_Sample)
        ADD_u64_u64_1978_sample_completed_ &-> ($null)
        ADD_u64_u64_1978_update_start_ &-> (ADD_u64_u64_1978_Update)
        ADD_u64_u64_1978_update_completed_ <-& (ADD_u64_u64_1978_Update)
        // Target expression
        // (as target) tmp13
        // start: WAR dependencies for tmp13
        // done: WAR dependencies for tmp13
        // end:  		tmp13 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		scevgep6x_xi58 := @(mem[tmp13])
        //  file prog.linked.opt.aa, line 857
        // Source expression
        // @(mem[tmp13])
        $T[addr_of_1983_sample_start_] 
        $T[addr_of_1983_sample_completed_] 
        $T[addr_of_1983_update_start_] 
        $T[addr_of_1983_update_completed_] 
        $T[array_obj_ref_1982_root_address_calculated] 
        $T[array_obj_ref_1982_offset_calculated] 
        $T[array_obj_ref_1982_index_resized_0] 
        $T[array_obj_ref_1982_index_scaled_0] 
        $T[array_obj_ref_1982_index_computed_0] 
        // tmp13
        // start: Forward dependencies from tmp13 to transition array_obj_ref_1982_index_computed_0
        array_obj_ref_1982_index_computed_0 <-& (ADD_u64_u64_1978_update_completed_)
        // done: Forward dependencies from tmp13 to transition array_obj_ref_1982_index_computed_0
        ;;[array_obj_ref_1982_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_1982_index_computed_0 &-> (array_obj_ref_1982_index_resize_0)
        array_obj_ref_1982_index_resized_0 <-& (array_obj_ref_1982_index_resize_0)
        ;;[array_obj_ref_1982_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_1982_index_resized_0 &-> (array_obj_ref_1982_index_scale_0)
        array_obj_ref_1982_index_scaled_0 <-& (array_obj_ref_1982_index_scale_0)
        ;;[array_obj_ref_1982_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_1982_index_scaled_0 &-> (array_obj_ref_1982_final_index_sum_regn)
        array_obj_ref_1982_offset_calculated <-& (array_obj_ref_1982_final_index_sum_regn)
        ;;[array_obj_ref_1982_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_1982_offset_calculated &-> (array_obj_ref_1982_base_plus_offset)
        array_obj_ref_1982_root_address_calculated <-& (array_obj_ref_1982_base_plus_offset)
        ;;[addr_of_1983_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_1983_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_1983_sample_start_ <-& (array_obj_ref_1982_root_address_calculated)
        addr_of_1983_sample_start_ &-> (addr_of_1983_request)
        addr_of_1983_sample_completed_ <-& (addr_of_1983_request)
        addr_of_1983_update_start_ &-> (addr_of_1983_complete)
        addr_of_1983_update_completed_ <-& (addr_of_1983_complete)
        // Target expression
        // (as target) scevgep6x_xi58
        // start: WAR dependencies for scevgep6x_xi58
        // done: WAR dependencies for scevgep6x_xi58
        // end:  		scevgep6x_xi58 := @(mem[tmp13])
        // start:  		iNsTr_96 := ->(scevgep6x_xi58)
        //  file prog.linked.opt.aa, line 858
        // Source expression
        // ->(scevgep6x_xi58)
        $T[ptr_deref_1987_sample_start_] 
        $T[ptr_deref_1987_sample_completed_] 
        $T[ptr_deref_1987_update_start_] 
        $T[ptr_deref_1987_update_completed_] 
        $T[ptr_deref_1987_base_address_calculated] 
        // scevgep6x_xi58
        $T[ptr_deref_1987_word_address_calculated] 
        $T[ptr_deref_1987_root_address_calculated] 
        $T[ptr_deref_1987_base_address_resized] 
        ;;[ptr_deref_1987_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1987_base_address_calculated &-> (ptr_deref_1987_base_addr_resize)
        ptr_deref_1987_base_address_resized <-& (ptr_deref_1987_base_addr_resize)
        ;;[ptr_deref_1987_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1987_base_address_resized &-> (ptr_deref_1987_base_plus_offset)
        ptr_deref_1987_root_address_calculated <-& (ptr_deref_1987_base_plus_offset)
        ;;[ptr_deref_1987_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1987_root_address_calculated &-> (ptr_deref_1987_word_addrgen)
        ptr_deref_1987_word_address_calculated <-& (ptr_deref_1987_word_addrgen)
        ;;[ptr_deref_1987_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1987_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1987_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1987_sample_start_ <-& (ptr_deref_1987_word_address_calculated)
        ptr_deref_1987_sample_start_ &-> (ptr_deref_1987_Sample)
        ptr_deref_1987_sample_completed_ <-& (ptr_deref_1987_Sample)
        ptr_deref_1987_sample_completed_ &-> ($null)
        ptr_deref_1987_update_start_ &-> (ptr_deref_1987_Update)
        ptr_deref_1987_update_completed_ <-& (ptr_deref_1987_Update)
        // start: Forward dependencies from scevgep6x_xi58 to transition ptr_deref_1987_base_address_calculated
        ptr_deref_1987_base_address_calculated <-& (addr_of_1983_update_completed_)
        // done: Forward dependencies from scevgep6x_xi58 to transition ptr_deref_1987_base_address_calculated
        ptr_deref_1987_sample_start_ <-& (ptr_deref_1987_base_address_calculated)
        // Target expression
        // (as target) iNsTr_96
        // start: WAR dependencies for iNsTr_96
        // done: WAR dependencies for iNsTr_96
        // end:  		iNsTr_96 := ->(scevgep6x_xi58)
        // start:  		iNsTr_97 := (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 859
        // Source expression
        // (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_1993_sample_start_] 
        $T[ADD_u16_u16_1993_sample_completed_] 
        $T[ADD_u16_u16_1993_update_start_] 
        $T[ADD_u16_u16_1993_update_completed_] 
        // iNsTr_96
        // start: Forward dependencies from iNsTr_96 to transition ADD_u16_u16_1993_sample_start_
        ADD_u16_u16_1993_sample_start_ <-& (ptr_deref_1987_update_completed_)
        // done: Forward dependencies from iNsTr_96 to transition ADD_u16_u16_1993_sample_start_
        ;;[ADD_u16_u16_1993_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_1993_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_1993_sample_start_ &-> (ADD_u16_u16_1993_Sample)
        ADD_u16_u16_1993_sample_completed_ <-& (ADD_u16_u16_1993_Sample)
        ADD_u16_u16_1993_sample_completed_ &-> ($null)
        ADD_u16_u16_1993_update_start_ &-> (ADD_u16_u16_1993_Update)
        ADD_u16_u16_1993_update_completed_ <-& (ADD_u16_u16_1993_Update)
        // Target expression
        // (as target) iNsTr_97
        // start: WAR dependencies for iNsTr_97
        // done: WAR dependencies for iNsTr_97
        // end:  		iNsTr_97 := (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_98 := ->(scevgepx_xi56)
        //  file prog.linked.opt.aa, line 860
        // Source expression
        // ->(scevgepx_xi56)
        $T[ptr_deref_1997_sample_start_] 
        $T[ptr_deref_1997_sample_completed_] 
        $T[ptr_deref_1997_update_start_] 
        $T[ptr_deref_1997_update_completed_] 
        $T[ptr_deref_1997_base_address_calculated] 
        // scevgepx_xi56
        $T[ptr_deref_1997_word_address_calculated] 
        $T[ptr_deref_1997_root_address_calculated] 
        $T[ptr_deref_1997_base_address_resized] 
        ;;[ptr_deref_1997_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_1997_base_address_calculated &-> (ptr_deref_1997_base_addr_resize)
        ptr_deref_1997_base_address_resized <-& (ptr_deref_1997_base_addr_resize)
        ;;[ptr_deref_1997_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_1997_base_address_resized &-> (ptr_deref_1997_base_plus_offset)
        ptr_deref_1997_root_address_calculated <-& (ptr_deref_1997_base_plus_offset)
        ;;[ptr_deref_1997_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_1997_root_address_calculated &-> (ptr_deref_1997_word_addrgen)
        ptr_deref_1997_word_address_calculated <-& (ptr_deref_1997_word_addrgen)
        ;;[ptr_deref_1997_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_1997_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_1997_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_1997_sample_start_ <-& (ptr_deref_1997_word_address_calculated)
        ptr_deref_1997_sample_start_ &-> (ptr_deref_1997_Sample)
        ptr_deref_1997_sample_completed_ <-& (ptr_deref_1997_Sample)
        ptr_deref_1997_sample_completed_ &-> ($null)
        ptr_deref_1997_update_start_ &-> (ptr_deref_1997_Update)
        ptr_deref_1997_update_completed_ <-& (ptr_deref_1997_Update)
        // start: Forward dependencies from scevgepx_xi56 to transition ptr_deref_1997_base_address_calculated
        ptr_deref_1997_base_address_calculated <-& (addr_of_1972_update_completed_)
        // done: Forward dependencies from scevgepx_xi56 to transition ptr_deref_1997_base_address_calculated
        ptr_deref_1997_sample_start_ <-& (ptr_deref_1997_base_address_calculated)
        // Target expression
        // (as target) iNsTr_98
        // start: WAR dependencies for iNsTr_98
        // done: WAR dependencies for iNsTr_98
        // end:  		iNsTr_98 := ->(scevgepx_xi56)
        // start:  		iNsTr_99 := ($cast ($uint<64>) iNsTr_97 )
        //  file prog.linked.opt.aa, line 861
        // Source expression
        // ($cast ($uint<64>) iNsTr_97 )
        $T[type_cast_2001_sample_start_] 
        $T[type_cast_2001_sample_completed_] 
        $T[type_cast_2001_update_start_] 
        $T[type_cast_2001_update_completed_] 
        // iNsTr_97
        // start: Forward dependencies from iNsTr_97 to transition type_cast_2001_sample_start_
        type_cast_2001_sample_start_ <-& (ADD_u16_u16_1993_update_completed_)
        // done: Forward dependencies from iNsTr_97 to transition type_cast_2001_sample_start_
        ;;[type_cast_2001_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2001_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2001_sample_start_ &-> (type_cast_2001_Sample)
        type_cast_2001_sample_completed_ <-& (type_cast_2001_Sample)
        type_cast_2001_sample_completed_ &-> ($null)
        type_cast_2001_update_start_ &-> (type_cast_2001_Update)
        type_cast_2001_update_completed_ <-& (type_cast_2001_Update)
        // Target expression
        // (as target) iNsTr_99
        // start: WAR dependencies for iNsTr_99
        // done: WAR dependencies for iNsTr_99
        // end:  		iNsTr_99 := ($cast ($uint<64>) iNsTr_97 )
        // start:  		iNsTr_100 := @(aPosteriori[iNsTr_99])
        //  file prog.linked.opt.aa, line 862
        // Source expression
        // @(aPosteriori[iNsTr_99])
        $T[addr_of_2006_sample_start_] 
        $T[addr_of_2006_sample_completed_] 
        $T[addr_of_2006_update_start_] 
        $T[addr_of_2006_update_completed_] 
        $T[array_obj_ref_2005_root_address_calculated] 
        $T[array_obj_ref_2005_offset_calculated] 
        $T[array_obj_ref_2005_index_resized_0] 
        $T[array_obj_ref_2005_index_scaled_0] 
        $T[array_obj_ref_2005_index_computed_0] 
        // iNsTr_99
        // start: Forward dependencies from iNsTr_99 to transition array_obj_ref_2005_index_computed_0
        array_obj_ref_2005_index_computed_0 <-& (type_cast_2001_update_completed_)
        // done: Forward dependencies from iNsTr_99 to transition array_obj_ref_2005_index_computed_0
        ;;[array_obj_ref_2005_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2005_index_computed_0 &-> (array_obj_ref_2005_index_resize_0)
        array_obj_ref_2005_index_resized_0 <-& (array_obj_ref_2005_index_resize_0)
        ;;[array_obj_ref_2005_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2005_index_resized_0 &-> (array_obj_ref_2005_index_scale_0)
        array_obj_ref_2005_index_scaled_0 <-& (array_obj_ref_2005_index_scale_0)
        ;;[array_obj_ref_2005_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2005_index_scaled_0 &-> (array_obj_ref_2005_final_index_sum_regn)
        array_obj_ref_2005_offset_calculated <-& (array_obj_ref_2005_final_index_sum_regn)
        ;;[array_obj_ref_2005_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2005_offset_calculated &-> (array_obj_ref_2005_base_plus_offset)
        array_obj_ref_2005_root_address_calculated <-& (array_obj_ref_2005_base_plus_offset)
        ;;[addr_of_2006_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2006_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2006_sample_start_ <-& (array_obj_ref_2005_root_address_calculated)
        addr_of_2006_sample_start_ &-> (addr_of_2006_request)
        addr_of_2006_sample_completed_ <-& (addr_of_2006_request)
        addr_of_2006_update_start_ &-> (addr_of_2006_complete)
        addr_of_2006_update_completed_ <-& (addr_of_2006_complete)
        // Target expression
        // (as target) iNsTr_100
        // start: WAR dependencies for iNsTr_100
        // done: WAR dependencies for iNsTr_100
        // end:  		iNsTr_100 := @(aPosteriori[iNsTr_99])
        // start:  		iNsTr_101 := ->(iNsTr_100)
        //  file prog.linked.opt.aa, line 863
        // Source expression
        // ->(iNsTr_100)
        $T[ptr_deref_2010_sample_start_] 
        $T[ptr_deref_2010_sample_completed_] 
        $T[ptr_deref_2010_update_start_] 
        $T[ptr_deref_2010_update_completed_] 
        $T[ptr_deref_2010_base_address_calculated] 
        // iNsTr_100
        $T[ptr_deref_2010_word_address_calculated] 
        $T[ptr_deref_2010_root_address_calculated] 
        $T[ptr_deref_2010_base_address_resized] 
        ;;[ptr_deref_2010_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2010_base_address_calculated &-> (ptr_deref_2010_base_addr_resize)
        ptr_deref_2010_base_address_resized <-& (ptr_deref_2010_base_addr_resize)
        ;;[ptr_deref_2010_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2010_base_address_resized &-> (ptr_deref_2010_base_plus_offset)
        ptr_deref_2010_root_address_calculated <-& (ptr_deref_2010_base_plus_offset)
        ;;[ptr_deref_2010_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2010_root_address_calculated &-> (ptr_deref_2010_word_addrgen)
        ptr_deref_2010_word_address_calculated <-& (ptr_deref_2010_word_addrgen)
        ;;[ptr_deref_2010_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2010_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2010_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2010_sample_start_ <-& (ptr_deref_2010_word_address_calculated)
        ptr_deref_2010_sample_start_ &-> (ptr_deref_2010_Sample)
        ptr_deref_2010_sample_completed_ <-& (ptr_deref_2010_Sample)
        ptr_deref_2010_sample_completed_ &-> ($null)
        ptr_deref_2010_update_start_ &-> (ptr_deref_2010_Update)
        ptr_deref_2010_update_completed_ <-& (ptr_deref_2010_Update)
        // start: Forward dependencies from iNsTr_100 to transition ptr_deref_2010_base_address_calculated
        ptr_deref_2010_base_address_calculated <-& (addr_of_2006_update_completed_)
        // done: Forward dependencies from iNsTr_100 to transition ptr_deref_2010_base_address_calculated
        ptr_deref_2010_sample_start_ <-& (ptr_deref_2010_base_address_calculated)
        // Target expression
        // (as target) iNsTr_101
        // start: WAR dependencies for iNsTr_101
        // done: WAR dependencies for iNsTr_101
        // end:  		iNsTr_101 := ->(iNsTr_100)
        // start:  		iNsTr_102 := (iNsTr_101 + iNsTr_98)
        //  file prog.linked.opt.aa, line 864
        // Source expression
        // (iNsTr_101 + iNsTr_98)
        $T[ADD_f32_f32_2015_sample_start_] 
        $T[ADD_f32_f32_2015_sample_completed_] 
        $T[ADD_f32_f32_2015_update_start_] 
        $T[ADD_f32_f32_2015_update_completed_] 
        // iNsTr_101
        // iNsTr_98
        // start: Forward dependencies from iNsTr_101 to transition ADD_f32_f32_2015_sample_start_
        ADD_f32_f32_2015_sample_start_ <-& (ptr_deref_2010_update_completed_)
        // done: Forward dependencies from iNsTr_101 to transition ADD_f32_f32_2015_sample_start_
        // start: Forward dependencies from iNsTr_98 to transition ADD_f32_f32_2015_sample_start_
        ADD_f32_f32_2015_sample_start_ <-& (ptr_deref_1997_update_completed_)
        // done: Forward dependencies from iNsTr_98 to transition ADD_f32_f32_2015_sample_start_
        ;;[ADD_f32_f32_2015_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_2015_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_2015_sample_start_ &-> (ADD_f32_f32_2015_Sample)
        ADD_f32_f32_2015_sample_completed_ <-& (ADD_f32_f32_2015_Sample)
        ADD_f32_f32_2015_sample_completed_ &-> ($null)
        ADD_f32_f32_2015_update_start_ &-> (ADD_f32_f32_2015_Update)
        ADD_f32_f32_2015_update_completed_ <-& (ADD_f32_f32_2015_Update)
        // Target expression
        // (as target) iNsTr_102
        // start: WAR dependencies for iNsTr_102
        // done: WAR dependencies for iNsTr_102
        // end:  		iNsTr_102 := (iNsTr_101 + iNsTr_98)
        // start:  		->(iNsTr_100) := iNsTr_102
        //  file prog.linked.opt.aa, line 865
        // Source expression
        // iNsTr_102
        // Target expression
        // ->(iNsTr_100)
        $T[ptr_deref_2018_sample_start_] 
        $T[ptr_deref_2018_sample_completed_] 
        $T[ptr_deref_2018_update_start_] 
        $T[ptr_deref_2018_update_completed_] 
        $T[ptr_deref_2018_base_address_calculated] 
        // iNsTr_100
        $T[ptr_deref_2018_word_address_calculated] 
        $T[ptr_deref_2018_root_address_calculated] 
        $T[ptr_deref_2018_base_address_resized] 
        ;;[ptr_deref_2018_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2018_base_address_calculated &-> (ptr_deref_2018_base_addr_resize)
        ptr_deref_2018_base_address_resized <-& (ptr_deref_2018_base_addr_resize)
        ;;[ptr_deref_2018_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2018_base_address_resized &-> (ptr_deref_2018_base_plus_offset)
        ptr_deref_2018_root_address_calculated <-& (ptr_deref_2018_base_plus_offset)
        ;;[ptr_deref_2018_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2018_root_address_calculated &-> (ptr_deref_2018_word_addrgen)
        ptr_deref_2018_word_address_calculated <-& (ptr_deref_2018_word_addrgen)
        ;;[ptr_deref_2018_Sample] 
        {
          ;;[ptr_deref_2018_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2018_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2018_sample_start_ <-& (ptr_deref_2018_word_address_calculated)
        ptr_deref_2018_sample_start_ &-> (ptr_deref_2018_Sample)
        ptr_deref_2018_sample_completed_ <-& (ptr_deref_2018_Sample)
        ptr_deref_2018_sample_completed_ &-> ($null)
        ptr_deref_2018_update_start_ &-> (ptr_deref_2018_Update)
        ptr_deref_2018_update_completed_ <-& (ptr_deref_2018_Update)
        // start: Forward dependencies from iNsTr_100 to transition ptr_deref_2018_base_address_calculated
        ptr_deref_2018_base_address_calculated <-& (addr_of_2006_update_completed_)
        // done: Forward dependencies from iNsTr_100 to transition ptr_deref_2018_base_address_calculated
        ptr_deref_2018_sample_start_ <-& (ptr_deref_2018_base_address_calculated)
        // start: Forward dependencies from iNsTr_102 to transition ptr_deref_2018_sample_start_
        ptr_deref_2018_sample_start_ <-& (ADD_f32_f32_2015_update_completed_)
        // done: Forward dependencies from iNsTr_102 to transition ptr_deref_2018_sample_start_
        // end:  		->(iNsTr_100) := iNsTr_102
        // start:  		indvarx_xnextx_xi59 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 866
        // Source expression
        // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2025_sample_start_] 
        $T[ADD_u64_u64_2025_sample_completed_] 
        $T[ADD_u64_u64_2025_update_start_] 
        $T[ADD_u64_u64_2025_update_completed_] 
        // indvarx_xi55
        // start: Forward dependencies from indvarx_xi55 to transition ADD_u64_u64_2025_sample_start_
        // done: Forward dependencies from indvarx_xi55 to transition ADD_u64_u64_2025_sample_start_
        ;;[ADD_u64_u64_2025_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2025_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2025_sample_start_ &-> (ADD_u64_u64_2025_Sample)
        ADD_u64_u64_2025_sample_completed_ <-& (ADD_u64_u64_2025_Sample)
        ADD_u64_u64_2025_sample_completed_ &-> ($null)
        ADD_u64_u64_2025_update_start_ &-> (ADD_u64_u64_2025_Update)
        ADD_u64_u64_2025_update_completed_ <-& (ADD_u64_u64_2025_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi59
        // start: WAR dependencies for indvarx_xnextx_xi59
        // done: WAR dependencies for indvarx_xnextx_xi59
        // end:  		indvarx_xnextx_xi59 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond12 := (indvarx_xnextx_xi59 == tmp4x_xi53)
        //  file prog.linked.opt.aa, line 867
        // Source expression
        // (indvarx_xnextx_xi59 == tmp4x_xi53)
        $T[EQ_u64_u1_2030_sample_start_] 
        $T[EQ_u64_u1_2030_sample_completed_] 
        $T[EQ_u64_u1_2030_update_start_] 
        $T[EQ_u64_u1_2030_update_completed_] 
        // indvarx_xnextx_xi59
        // tmp4x_xi53
        // start: Forward dependencies from indvarx_xnextx_xi59 to transition EQ_u64_u1_2030_sample_start_
        EQ_u64_u1_2030_sample_start_ <-& (ADD_u64_u64_2025_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi59 to transition EQ_u64_u1_2030_sample_start_
        // start: Forward dependencies from tmp4x_xi53 to transition EQ_u64_u1_2030_sample_start_
        // done: Forward dependencies from tmp4x_xi53 to transition EQ_u64_u1_2030_sample_start_
        ;;[EQ_u64_u1_2030_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_2030_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_2030_sample_start_ &-> (EQ_u64_u1_2030_Sample)
        EQ_u64_u1_2030_sample_completed_ <-& (EQ_u64_u1_2030_Sample)
        EQ_u64_u1_2030_sample_completed_ &-> ($null)
        EQ_u64_u1_2030_update_start_ &-> (EQ_u64_u1_2030_Update)
        EQ_u64_u1_2030_update_completed_ <-& (EQ_u64_u1_2030_Update)
        // Target expression
        // (as target) exitcond12
        // start: WAR dependencies for exitcond12
        // done: WAR dependencies for exitcond12
        // end:  		exitcond12 := (indvarx_xnextx_xi59 == tmp4x_xi53)
        // load-store dependencies..
        $T [ptr_deref_2010_ptr_deref_2018_delay] $delay
        // ->(iNsTr_100)(load) -> ->(iNsTr_100)(store)
        ptr_deref_2018_sample_start_ <-& (ptr_deref_2010_ptr_deref_2018_delay)
        ptr_deref_2010_ptr_deref_2018_delay <-& (ptr_deref_2010_sample_completed_)
      }
      assign_stmt_1973_to_assign_stmt_2031__entry__ |-> (assign_stmt_1973_to_assign_stmt_2031)
      assign_stmt_1973_to_assign_stmt_2031__exit__ <-| (assign_stmt_1973_to_assign_stmt_2031)
      // if-statement  
      //  file prog.linked.opt.aa, line 868
      ;;[if_stmt_2032_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2032__entry__ |-> (if_stmt_2032_dead_link)
      if_stmt_2032__exit__ <-| (if_stmt_2032_dead_link)
      ;;[if_stmt_2032_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2032__entry__ |-> (if_stmt_2032_eval_test)
      $P [R_exitcond12_2033_place]
      R_exitcond12_2033_place <-| (if_stmt_2032_eval_test)
      ;;[if_stmt_2032_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2032_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond12_2033_place |-> (if_stmt_2032_if_link if_stmt_2032_else_link)
      $P [bb_24_update_aPosteriorix_xexitx_xloopexit]
      bb_24_update_aPosteriorix_xexitx_xloopexit <-| (if_stmt_2032_if_link)
      $P [bb_24_bb_24]
      bb_24_bb_24 <-| (if_stmt_2032_else_link)
      ::[assign_stmt_2044_to_assign_stmt_2053] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
        //  file prog.linked.opt.aa, line 878
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_2041_sample_start_] 
        $T[STORE_is_decoded_2041_sample_completed_] 
        $T[STORE_is_decoded_2041_update_start_] 
        $T[STORE_is_decoded_2041_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_2041_word_address_calculated] 
        $T[STORE_is_decoded_2041_root_address_calculated] 
        STORE_is_decoded_2041_word_address_calculated <-& (STORE_is_decoded_2041_root_address_calculated)
        ;;[STORE_is_decoded_2041_Sample] 
        {
          ;;[STORE_is_decoded_2041_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_2041_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_2041_sample_start_ <-& (STORE_is_decoded_2041_word_address_calculated)
        STORE_is_decoded_2041_sample_start_ &-> (STORE_is_decoded_2041_Sample)
        STORE_is_decoded_2041_sample_completed_ <-& (STORE_is_decoded_2041_Sample)
        STORE_is_decoded_2041_sample_completed_ &-> ($null)
        STORE_is_decoded_2041_update_start_ &-> (STORE_is_decoded_2041_Update)
        STORE_is_decoded_2041_update_completed_ <-& (STORE_is_decoded_2041_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
        // start:  		iNsTr_83 := ncols
        //  file prog.linked.opt.aa, line 879
        // Source expression
        // ncols
        $T[LOAD_ncols_2046_sample_start_] 
        $T[LOAD_ncols_2046_sample_completed_] 
        $T[LOAD_ncols_2046_update_start_] 
        $T[LOAD_ncols_2046_update_completed_] 
        $T[LOAD_ncols_2046_word_address_calculated] 
        $T[LOAD_ncols_2046_root_address_calculated] 
        LOAD_ncols_2046_word_address_calculated <-& (LOAD_ncols_2046_root_address_calculated)
        ;;[LOAD_ncols_2046_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_2046_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_2046_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_2046_sample_start_ <-& (LOAD_ncols_2046_word_address_calculated)
        LOAD_ncols_2046_sample_start_ &-> (LOAD_ncols_2046_Sample)
        LOAD_ncols_2046_sample_completed_ <-& (LOAD_ncols_2046_Sample)
        LOAD_ncols_2046_sample_completed_ &-> ($null)
        LOAD_ncols_2046_update_start_ &-> (LOAD_ncols_2046_Update)
        LOAD_ncols_2046_update_completed_ <-& (LOAD_ncols_2046_Update)
        // Target expression
        // (as target) iNsTr_83
        // start: WAR dependencies for iNsTr_83
        // done: WAR dependencies for iNsTr_83
        // end:  		iNsTr_83 := ncols
        // start:  		iNsTr_84 := (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 880
        // Source expression
        // (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2052_sample_start_] 
        $T[EQ_u16_u1_2052_sample_completed_] 
        $T[EQ_u16_u1_2052_update_start_] 
        $T[EQ_u16_u1_2052_update_completed_] 
        // iNsTr_83
        // start: Forward dependencies from iNsTr_83 to transition EQ_u16_u1_2052_sample_start_
        EQ_u16_u1_2052_sample_start_ <-& (LOAD_ncols_2046_update_completed_)
        // done: Forward dependencies from iNsTr_83 to transition EQ_u16_u1_2052_sample_start_
        ;;[EQ_u16_u1_2052_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2052_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2052_sample_start_ &-> (EQ_u16_u1_2052_Sample)
        EQ_u16_u1_2052_sample_completed_ <-& (EQ_u16_u1_2052_Sample)
        EQ_u16_u1_2052_sample_completed_ &-> ($null)
        EQ_u16_u1_2052_update_start_ &-> (EQ_u16_u1_2052_Update)
        EQ_u16_u1_2052_update_completed_ <-& (EQ_u16_u1_2052_Update)
        // Target expression
        // (as target) iNsTr_84
        // start: WAR dependencies for iNsTr_84
        // done: WAR dependencies for iNsTr_84
        // end:  		iNsTr_84 := (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2044_to_assign_stmt_2053__entry__ |-> (assign_stmt_2044_to_assign_stmt_2053)
      assign_stmt_2044_to_assign_stmt_2053__exit__ <-| (assign_stmt_2044_to_assign_stmt_2053)
      // if-statement  
      //  file prog.linked.opt.aa, line 881
      ;;[if_stmt_2054_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2054__entry__ |-> (if_stmt_2054_dead_link)
      if_stmt_2054__exit__ <-| (if_stmt_2054_dead_link)
      ;;[if_stmt_2054_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2054__entry__ |-> (if_stmt_2054_eval_test)
      $P [R_iNsTr_84_2055_place]
      R_iNsTr_84_2055_place <-| (if_stmt_2054_eval_test)
      ;;[if_stmt_2054_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2054_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_84_2055_place |-> (if_stmt_2054_if_link if_stmt_2054_else_link)
      $P [update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread]
      update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread <-| (if_stmt_2054_if_link)
      $P [update_aPosteriorix_xexit_bbx_xnphx_xi43]
      update_aPosteriorix_xexit_bbx_xnphx_xi43 <-| (if_stmt_2054_else_link)
      ::[assign_stmt_2068] 
      {
        // start:  		Nitr_required := indvarx_xlcssa17
        //  file prog.linked.opt.aa, line 889
        // Source expression
        // indvarx_xlcssa17
        // Target expression
        // (as target) Nitr_required
        $T[STORE_Nitr_required_2066_sample_start_] 
        $T[STORE_Nitr_required_2066_sample_completed_] 
        $T[STORE_Nitr_required_2066_update_start_] 
        $T[STORE_Nitr_required_2066_update_completed_] 
        // Nitr_required
        $T[STORE_Nitr_required_2066_word_address_calculated] 
        $T[STORE_Nitr_required_2066_root_address_calculated] 
        STORE_Nitr_required_2066_word_address_calculated <-& (STORE_Nitr_required_2066_root_address_calculated)
        ;;[STORE_Nitr_required_2066_Sample] 
        {
          ;;[STORE_Nitr_required_2066_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_Nitr_required_2066_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_Nitr_required_2066_sample_start_ <-& (STORE_Nitr_required_2066_word_address_calculated)
        STORE_Nitr_required_2066_sample_start_ &-> (STORE_Nitr_required_2066_Sample)
        STORE_Nitr_required_2066_sample_completed_ <-& (STORE_Nitr_required_2066_Sample)
        STORE_Nitr_required_2066_sample_completed_ &-> ($null)
        STORE_Nitr_required_2066_update_start_ &-> (STORE_Nitr_required_2066_Update)
        STORE_Nitr_required_2066_update_completed_ <-& (STORE_Nitr_required_2066_Update)
        // start: Forward dependencies from indvarx_xlcssa17 to transition STORE_Nitr_required_2066_sample_start_
        // done: Forward dependencies from indvarx_xlcssa17 to transition STORE_Nitr_required_2066_sample_start_
        // end:  		Nitr_required := indvarx_xlcssa17
        // load-store dependencies..
      }
      assign_stmt_2068__entry__ |-> (assign_stmt_2068)
      assign_stmt_2068__exit__ <-| (assign_stmt_2068)
      ::[assign_stmt_2076_to_assign_stmt_2099] 
      {
        // start:  		tmpx_xi39 := (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 893
        // Source expression
        // (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_2075_sample_start_] 
        $T[UGT_u16_u1_2075_sample_completed_] 
        $T[UGT_u16_u1_2075_update_start_] 
        $T[UGT_u16_u1_2075_update_completed_] 
        // iNsTr_83
        // start: Forward dependencies from iNsTr_83 to transition UGT_u16_u1_2075_sample_start_
        // done: Forward dependencies from iNsTr_83 to transition UGT_u16_u1_2075_sample_start_
        ;;[UGT_u16_u1_2075_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_2075_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_2075_sample_start_ &-> (UGT_u16_u1_2075_Sample)
        UGT_u16_u1_2075_sample_completed_ <-& (UGT_u16_u1_2075_Sample)
        UGT_u16_u1_2075_sample_completed_ &-> ($null)
        UGT_u16_u1_2075_update_start_ &-> (UGT_u16_u1_2075_Update)
        UGT_u16_u1_2075_update_completed_ <-& (UGT_u16_u1_2075_Update)
        // Target expression
        // (as target) tmpx_xi39
        // start: WAR dependencies for tmpx_xi39
        // done: WAR dependencies for tmpx_xi39
        // end:  		tmpx_xi39 := (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi40 := (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 894
        // Source expression
        // (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_2081_sample_start_] 
        $T[ADD_u16_u16_2081_sample_completed_] 
        $T[ADD_u16_u16_2081_update_start_] 
        $T[ADD_u16_u16_2081_update_completed_] 
        // iNsTr_83
        // start: Forward dependencies from iNsTr_83 to transition ADD_u16_u16_2081_sample_start_
        // done: Forward dependencies from iNsTr_83 to transition ADD_u16_u16_2081_sample_start_
        ;;[ADD_u16_u16_2081_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2081_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2081_sample_start_ &-> (ADD_u16_u16_2081_Sample)
        ADD_u16_u16_2081_sample_completed_ <-& (ADD_u16_u16_2081_Sample)
        ADD_u16_u16_2081_sample_completed_ &-> ($null)
        ADD_u16_u16_2081_update_start_ &-> (ADD_u16_u16_2081_Update)
        ADD_u16_u16_2081_update_completed_ <-& (ADD_u16_u16_2081_Update)
        // Target expression
        // (as target) xx_xopx_xi40
        // start: WAR dependencies for xx_xopx_xi40
        // done: WAR dependencies for xx_xopx_xi40
        // end:  		xx_xopx_xi40 := (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_94 := ($cast ($uint<64>) xx_xopx_xi40 )
        //  file prog.linked.opt.aa, line 895
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi40 )
        $T[type_cast_2085_sample_start_] 
        $T[type_cast_2085_sample_completed_] 
        $T[type_cast_2085_update_start_] 
        $T[type_cast_2085_update_completed_] 
        // xx_xopx_xi40
        // start: Forward dependencies from xx_xopx_xi40 to transition type_cast_2085_sample_start_
        type_cast_2085_sample_start_ <-& (ADD_u16_u16_2081_update_completed_)
        // done: Forward dependencies from xx_xopx_xi40 to transition type_cast_2085_sample_start_
        ;;[type_cast_2085_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2085_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2085_sample_start_ &-> (type_cast_2085_Sample)
        type_cast_2085_sample_completed_ <-& (type_cast_2085_Sample)
        type_cast_2085_sample_completed_ &-> ($null)
        type_cast_2085_update_start_ &-> (type_cast_2085_Update)
        type_cast_2085_update_completed_ <-& (type_cast_2085_Update)
        // Target expression
        // (as target) iNsTr_94
        // start: WAR dependencies for iNsTr_94
        // done: WAR dependencies for iNsTr_94
        // end:  		iNsTr_94 := ($cast ($uint<64>) xx_xopx_xi40 )
        // start:  		xx_xop6x_xi41 := (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 896
        // Source expression
        // (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2091_sample_start_] 
        $T[ADD_u64_u64_2091_sample_completed_] 
        $T[ADD_u64_u64_2091_update_start_] 
        $T[ADD_u64_u64_2091_update_completed_] 
        // iNsTr_94
        // start: Forward dependencies from iNsTr_94 to transition ADD_u64_u64_2091_sample_start_
        ADD_u64_u64_2091_sample_start_ <-& (type_cast_2085_update_completed_)
        // done: Forward dependencies from iNsTr_94 to transition ADD_u64_u64_2091_sample_start_
        ;;[ADD_u64_u64_2091_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2091_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2091_sample_start_ &-> (ADD_u64_u64_2091_Sample)
        ADD_u64_u64_2091_sample_completed_ <-& (ADD_u64_u64_2091_Sample)
        ADD_u64_u64_2091_sample_completed_ &-> ($null)
        ADD_u64_u64_2091_update_start_ &-> (ADD_u64_u64_2091_Update)
        ADD_u64_u64_2091_update_completed_ <-& (ADD_u64_u64_2091_Update)
        // Target expression
        // (as target) xx_xop6x_xi41
        // start: WAR dependencies for xx_xop6x_xi41
        // done: WAR dependencies for xx_xop6x_xi41
        // end:  		xx_xop6x_xi41 := (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4x_xi42 := ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 897
        // Source expression
        // ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_2098_sample_start_] 
        $T[MUX_2098_sample_completed_] 
        $T[MUX_2098_update_start_] 
        $T[MUX_2098_update_completed_] 
        // tmpx_xi39
        // xx_xop6x_xi41
        // start: Forward dependencies from tmpx_xi39 to transition MUX_2098_sample_start_
        MUX_2098_sample_start_ <-& (UGT_u16_u1_2075_update_completed_)
        // done: Forward dependencies from tmpx_xi39 to transition MUX_2098_sample_start_
        // start: Forward dependencies from xx_xop6x_xi41 to transition MUX_2098_sample_start_
        MUX_2098_sample_start_ <-& (ADD_u64_u64_2091_update_completed_)
        // done: Forward dependencies from xx_xop6x_xi41 to transition MUX_2098_sample_start_
        ;;[MUX_2098_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2098_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2098_sample_start_ &-> (MUX_2098_start)
        MUX_2098_sample_completed_ <-& (MUX_2098_start)
        MUX_2098_update_start_ &-> (MUX_2098_complete)
        MUX_2098_update_completed_ <-& (MUX_2098_complete)
        // Target expression
        // (as target) tmp4x_xi42
        // start: WAR dependencies for tmp4x_xi42
        // done: WAR dependencies for tmp4x_xi42
        // end:  		tmp4x_xi42 := ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_2076_to_assign_stmt_2099__entry__ |-> (assign_stmt_2076_to_assign_stmt_2099)
      assign_stmt_2076_to_assign_stmt_2099__exit__ <-| (assign_stmt_2076_to_assign_stmt_2099)
      ::[assign_stmt_2121_to_assign_stmt_2140] 
      {
        // start:  		scevgepx_xi45 := @(aPosteriori[indvarx_xi44])
        //  file prog.linked.opt.aa, line 903
        // Source expression
        // @(aPosteriori[indvarx_xi44])
        $T[addr_of_2120_sample_start_] 
        $T[addr_of_2120_sample_completed_] 
        $T[addr_of_2120_update_start_] 
        $T[addr_of_2120_update_completed_] 
        $T[array_obj_ref_2119_root_address_calculated] 
        $T[array_obj_ref_2119_offset_calculated] 
        $T[array_obj_ref_2119_index_resized_0] 
        $T[array_obj_ref_2119_index_scaled_0] 
        $T[array_obj_ref_2119_index_computed_0] 
        // indvarx_xi44
        // start: Forward dependencies from indvarx_xi44 to transition array_obj_ref_2119_index_computed_0
        // done: Forward dependencies from indvarx_xi44 to transition array_obj_ref_2119_index_computed_0
        ;;[array_obj_ref_2119_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2119_index_computed_0 &-> (array_obj_ref_2119_index_resize_0)
        array_obj_ref_2119_index_resized_0 <-& (array_obj_ref_2119_index_resize_0)
        ;;[array_obj_ref_2119_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2119_index_resized_0 &-> (array_obj_ref_2119_index_scale_0)
        array_obj_ref_2119_index_scaled_0 <-& (array_obj_ref_2119_index_scale_0)
        ;;[array_obj_ref_2119_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2119_index_scaled_0 &-> (array_obj_ref_2119_final_index_sum_regn)
        array_obj_ref_2119_offset_calculated <-& (array_obj_ref_2119_final_index_sum_regn)
        ;;[array_obj_ref_2119_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2119_offset_calculated &-> (array_obj_ref_2119_base_plus_offset)
        array_obj_ref_2119_root_address_calculated <-& (array_obj_ref_2119_base_plus_offset)
        ;;[addr_of_2120_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2120_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2120_sample_start_ <-& (array_obj_ref_2119_root_address_calculated)
        addr_of_2120_sample_start_ &-> (addr_of_2120_request)
        addr_of_2120_sample_completed_ <-& (addr_of_2120_request)
        addr_of_2120_update_start_ &-> (addr_of_2120_complete)
        addr_of_2120_update_completed_ <-& (addr_of_2120_complete)
        // Target expression
        // (as target) scevgepx_xi45
        // start: WAR dependencies for scevgepx_xi45
        // done: WAR dependencies for scevgepx_xi45
        // end:  		scevgepx_xi45 := @(aPosteriori[indvarx_xi44])
        // start:  		scevgep5x_xi46 := @(code_block[indvarx_xi44])
        //  file prog.linked.opt.aa, line 904
        // Source expression
        // @(code_block[indvarx_xi44])
        $T[addr_of_2125_sample_start_] 
        $T[addr_of_2125_sample_completed_] 
        $T[addr_of_2125_update_start_] 
        $T[addr_of_2125_update_completed_] 
        $T[array_obj_ref_2124_root_address_calculated] 
        $T[array_obj_ref_2124_offset_calculated] 
        $T[array_obj_ref_2124_index_resized_0] 
        $T[array_obj_ref_2124_index_scaled_0] 
        $T[array_obj_ref_2124_index_computed_0] 
        // indvarx_xi44
        // start: Forward dependencies from indvarx_xi44 to transition array_obj_ref_2124_index_computed_0
        // done: Forward dependencies from indvarx_xi44 to transition array_obj_ref_2124_index_computed_0
        ;;[array_obj_ref_2124_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2124_index_computed_0 &-> (array_obj_ref_2124_index_resize_0)
        array_obj_ref_2124_index_resized_0 <-& (array_obj_ref_2124_index_resize_0)
        ;;[array_obj_ref_2124_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2124_index_resized_0 &-> (array_obj_ref_2124_index_scale_0)
        array_obj_ref_2124_index_scaled_0 <-& (array_obj_ref_2124_index_scale_0)
        ;;[array_obj_ref_2124_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2124_index_scaled_0 &-> (array_obj_ref_2124_final_index_sum_regn)
        array_obj_ref_2124_offset_calculated <-& (array_obj_ref_2124_final_index_sum_regn)
        ;;[array_obj_ref_2124_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2124_offset_calculated &-> (array_obj_ref_2124_base_plus_offset)
        array_obj_ref_2124_root_address_calculated <-& (array_obj_ref_2124_base_plus_offset)
        ;;[addr_of_2125_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2125_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2125_sample_start_ <-& (array_obj_ref_2124_root_address_calculated)
        addr_of_2125_sample_start_ &-> (addr_of_2125_request)
        addr_of_2125_sample_completed_ <-& (addr_of_2125_request)
        addr_of_2125_update_start_ &-> (addr_of_2125_complete)
        addr_of_2125_update_completed_ <-& (addr_of_2125_complete)
        // Target expression
        // (as target) scevgep5x_xi46
        // start: WAR dependencies for scevgep5x_xi46
        // done: WAR dependencies for scevgep5x_xi46
        // end:  		scevgep5x_xi46 := @(code_block[indvarx_xi44])
        // start:  		iNsTr_106 := ->(scevgepx_xi45)
        //  file prog.linked.opt.aa, line 905
        // Source expression
        // ->(scevgepx_xi45)
        $T[ptr_deref_2129_sample_start_] 
        $T[ptr_deref_2129_sample_completed_] 
        $T[ptr_deref_2129_update_start_] 
        $T[ptr_deref_2129_update_completed_] 
        $T[ptr_deref_2129_base_address_calculated] 
        // scevgepx_xi45
        $T[ptr_deref_2129_word_address_calculated] 
        $T[ptr_deref_2129_root_address_calculated] 
        $T[ptr_deref_2129_base_address_resized] 
        ;;[ptr_deref_2129_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2129_base_address_calculated &-> (ptr_deref_2129_base_addr_resize)
        ptr_deref_2129_base_address_resized <-& (ptr_deref_2129_base_addr_resize)
        ;;[ptr_deref_2129_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2129_base_address_resized &-> (ptr_deref_2129_base_plus_offset)
        ptr_deref_2129_root_address_calculated <-& (ptr_deref_2129_base_plus_offset)
        ;;[ptr_deref_2129_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2129_root_address_calculated &-> (ptr_deref_2129_word_addrgen)
        ptr_deref_2129_word_address_calculated <-& (ptr_deref_2129_word_addrgen)
        ;;[ptr_deref_2129_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2129_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2129_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2129_sample_start_ <-& (ptr_deref_2129_word_address_calculated)
        ptr_deref_2129_sample_start_ &-> (ptr_deref_2129_Sample)
        ptr_deref_2129_sample_completed_ <-& (ptr_deref_2129_Sample)
        ptr_deref_2129_sample_completed_ &-> ($null)
        ptr_deref_2129_update_start_ &-> (ptr_deref_2129_Update)
        ptr_deref_2129_update_completed_ <-& (ptr_deref_2129_Update)
        // start: Forward dependencies from scevgepx_xi45 to transition ptr_deref_2129_base_address_calculated
        ptr_deref_2129_base_address_calculated <-& (addr_of_2120_update_completed_)
        // done: Forward dependencies from scevgepx_xi45 to transition ptr_deref_2129_base_address_calculated
        ptr_deref_2129_sample_start_ <-& (ptr_deref_2129_base_address_calculated)
        // Target expression
        // (as target) iNsTr_106
        // start: WAR dependencies for iNsTr_106
        // done: WAR dependencies for iNsTr_106
        // end:  		iNsTr_106 := ->(scevgepx_xi45)
        // start:  		iNsTr_107 := ($cast ($float<11,52>) iNsTr_106 )
        //  file prog.linked.opt.aa, line 906
        // Source expression
        // ($cast ($float<11,52>) iNsTr_106 )
        $T[type_cast_2133_sample_start_] 
        $T[type_cast_2133_sample_completed_] 
        $T[type_cast_2133_update_start_] 
        $T[type_cast_2133_update_completed_] 
        // iNsTr_106
        // start: Forward dependencies from iNsTr_106 to transition type_cast_2133_sample_start_
        type_cast_2133_sample_start_ <-& (ptr_deref_2129_update_completed_)
        // done: Forward dependencies from iNsTr_106 to transition type_cast_2133_sample_start_
        ;;[type_cast_2133_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2133_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2133_sample_start_ &-> (type_cast_2133_Sample)
        type_cast_2133_sample_completed_ <-& (type_cast_2133_Sample)
        type_cast_2133_sample_completed_ &-> ($null)
        type_cast_2133_update_start_ &-> (type_cast_2133_Update)
        type_cast_2133_update_completed_ <-& (type_cast_2133_Update)
        // Target expression
        // (as target) iNsTr_107
        // start: WAR dependencies for iNsTr_107
        // done: WAR dependencies for iNsTr_107
        // end:  		iNsTr_107 := ($cast ($float<11,52>) iNsTr_106 )
        // start:  		iNsTr_108 := (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 907
        // Source expression
        // (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
        $T[SGT_f64_u1_2139_sample_start_] 
        $T[SGT_f64_u1_2139_sample_completed_] 
        $T[SGT_f64_u1_2139_update_start_] 
        $T[SGT_f64_u1_2139_update_completed_] 
        // iNsTr_107
        // start: Forward dependencies from iNsTr_107 to transition SGT_f64_u1_2139_sample_start_
        SGT_f64_u1_2139_sample_start_ <-& (type_cast_2133_update_completed_)
        // done: Forward dependencies from iNsTr_107 to transition SGT_f64_u1_2139_sample_start_
        ;;[SGT_f64_u1_2139_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2139_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2139_sample_start_ &-> (SGT_f64_u1_2139_Sample)
        SGT_f64_u1_2139_sample_completed_ <-& (SGT_f64_u1_2139_Sample)
        SGT_f64_u1_2139_sample_completed_ &-> ($null)
        SGT_f64_u1_2139_update_start_ &-> (SGT_f64_u1_2139_Update)
        SGT_f64_u1_2139_update_completed_ <-& (SGT_f64_u1_2139_Update)
        // Target expression
        // (as target) iNsTr_108
        // start: WAR dependencies for iNsTr_108
        // done: WAR dependencies for iNsTr_108
        // end:  		iNsTr_108 := (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_2121_to_assign_stmt_2140__entry__ |-> (assign_stmt_2121_to_assign_stmt_2140)
      assign_stmt_2121_to_assign_stmt_2140__exit__ <-| (assign_stmt_2121_to_assign_stmt_2140)
      // if-statement  
      //  file prog.linked.opt.aa, line 908
      ;;[if_stmt_2141_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2141__entry__ |-> (if_stmt_2141_dead_link)
      if_stmt_2141__exit__ <-| (if_stmt_2141_dead_link)
      ;;[if_stmt_2141_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2141__entry__ |-> (if_stmt_2141_eval_test)
      $P [R_iNsTr_108_2142_place]
      R_iNsTr_108_2142_place <-| (if_stmt_2141_eval_test)
      ;;[if_stmt_2141_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2141_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_108_2142_place |-> (if_stmt_2141_if_link if_stmt_2141_else_link)
      $P [bb_29_bb_30]
      bb_29_bb_30 <-| (if_stmt_2141_if_link)
      $P [bb_29_bb_33]
      bb_29_bb_33 <-| (if_stmt_2141_else_link)
      ::[assign_stmt_2151_to_assign_stmt_2161] 
      {
        // start:  		iNsTr_111 := ->(scevgep5x_xi46)
        //  file prog.linked.opt.aa, line 915
        // Source expression
        // ->(scevgep5x_xi46)
        $T[ptr_deref_2150_sample_start_] 
        $T[ptr_deref_2150_sample_completed_] 
        $T[ptr_deref_2150_update_start_] 
        $T[ptr_deref_2150_update_completed_] 
        $T[ptr_deref_2150_base_address_calculated] 
        // scevgep5x_xi46
        $T[ptr_deref_2150_word_address_calculated] 
        $T[ptr_deref_2150_root_address_calculated] 
        $T[ptr_deref_2150_base_address_resized] 
        ;;[ptr_deref_2150_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2150_base_address_calculated &-> (ptr_deref_2150_base_addr_resize)
        ptr_deref_2150_base_address_resized <-& (ptr_deref_2150_base_addr_resize)
        ;;[ptr_deref_2150_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2150_base_address_resized &-> (ptr_deref_2150_base_plus_offset)
        ptr_deref_2150_root_address_calculated <-& (ptr_deref_2150_base_plus_offset)
        ;;[ptr_deref_2150_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2150_root_address_calculated &-> (ptr_deref_2150_word_addrgen)
        ptr_deref_2150_word_address_calculated <-& (ptr_deref_2150_word_addrgen)
        ;;[ptr_deref_2150_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2150_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2150_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2150_sample_start_ <-& (ptr_deref_2150_word_address_calculated)
        ptr_deref_2150_sample_start_ &-> (ptr_deref_2150_Sample)
        ptr_deref_2150_sample_completed_ <-& (ptr_deref_2150_Sample)
        ptr_deref_2150_sample_completed_ &-> ($null)
        ptr_deref_2150_update_start_ &-> (ptr_deref_2150_Update)
        ptr_deref_2150_update_completed_ <-& (ptr_deref_2150_Update)
        // start: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2150_base_address_calculated
        // done: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2150_base_address_calculated
        ptr_deref_2150_sample_start_ <-& (ptr_deref_2150_base_address_calculated)
        // Target expression
        // (as target) iNsTr_111
        // start: WAR dependencies for iNsTr_111
        // done: WAR dependencies for iNsTr_111
        // end:  		iNsTr_111 := ->(scevgep5x_xi46)
        // start:  		iNsTr_112 := ($cast ($float<11,52>) iNsTr_111 )
        //  file prog.linked.opt.aa, line 916
        // Source expression
        // ($cast ($float<11,52>) iNsTr_111 )
        $T[type_cast_2154_sample_start_] 
        $T[type_cast_2154_sample_completed_] 
        $T[type_cast_2154_update_start_] 
        $T[type_cast_2154_update_completed_] 
        // iNsTr_111
        // start: Forward dependencies from iNsTr_111 to transition type_cast_2154_sample_start_
        type_cast_2154_sample_start_ <-& (ptr_deref_2150_update_completed_)
        // done: Forward dependencies from iNsTr_111 to transition type_cast_2154_sample_start_
        ;;[type_cast_2154_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2154_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2154_sample_start_ &-> (type_cast_2154_Sample)
        type_cast_2154_sample_completed_ <-& (type_cast_2154_Sample)
        type_cast_2154_sample_completed_ &-> ($null)
        type_cast_2154_update_start_ &-> (type_cast_2154_Update)
        type_cast_2154_update_completed_ <-& (type_cast_2154_Update)
        // Target expression
        // (as target) iNsTr_112
        // start: WAR dependencies for iNsTr_112
        // done: WAR dependencies for iNsTr_112
        // end:  		iNsTr_112 := ($cast ($float<11,52>) iNsTr_111 )
        // start:  		iNsTr_113 := (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 917
        // Source expression
        // (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
        $T[SGT_f64_u1_2160_sample_start_] 
        $T[SGT_f64_u1_2160_sample_completed_] 
        $T[SGT_f64_u1_2160_update_start_] 
        $T[SGT_f64_u1_2160_update_completed_] 
        // iNsTr_112
        // start: Forward dependencies from iNsTr_112 to transition SGT_f64_u1_2160_sample_start_
        SGT_f64_u1_2160_sample_start_ <-& (type_cast_2154_update_completed_)
        // done: Forward dependencies from iNsTr_112 to transition SGT_f64_u1_2160_sample_start_
        ;;[SGT_f64_u1_2160_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SGT_f64_u1_2160_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SGT_f64_u1_2160_sample_start_ &-> (SGT_f64_u1_2160_Sample)
        SGT_f64_u1_2160_sample_completed_ <-& (SGT_f64_u1_2160_Sample)
        SGT_f64_u1_2160_sample_completed_ &-> ($null)
        SGT_f64_u1_2160_update_start_ &-> (SGT_f64_u1_2160_Update)
        SGT_f64_u1_2160_update_completed_ <-& (SGT_f64_u1_2160_Update)
        // Target expression
        // (as target) iNsTr_113
        // start: WAR dependencies for iNsTr_113
        // done: WAR dependencies for iNsTr_113
        // end:  		iNsTr_113 := (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_2151_to_assign_stmt_2161__entry__ |-> (assign_stmt_2151_to_assign_stmt_2161)
      assign_stmt_2151_to_assign_stmt_2161__exit__ <-| (assign_stmt_2151_to_assign_stmt_2161)
      // if-statement  
      //  file prog.linked.opt.aa, line 918
      ;;[if_stmt_2162_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2162__entry__ |-> (if_stmt_2162_dead_link)
      if_stmt_2162__exit__ <-| (if_stmt_2162_dead_link)
      ;;[if_stmt_2162_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2162__entry__ |-> (if_stmt_2162_eval_test)
      $P [R_iNsTr_113_2163_place]
      R_iNsTr_113_2163_place <-| (if_stmt_2162_eval_test)
      ;;[if_stmt_2162_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2162_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_113_2163_place |-> (if_stmt_2162_if_link if_stmt_2162_else_link)
      $P [bb_30_bb_31]
      bb_30_bb_31 <-| (if_stmt_2162_if_link)
      $P [bb_30_bb_32]
      bb_30_bb_32 <-| (if_stmt_2162_else_link)
      ::[assign_stmt_2172] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        //  file prog.linked.opt.aa, line 925
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_2169_sample_start_] 
        $T[STORE_is_decoded_2169_sample_completed_] 
        $T[STORE_is_decoded_2169_update_start_] 
        $T[STORE_is_decoded_2169_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_2169_word_address_calculated] 
        $T[STORE_is_decoded_2169_root_address_calculated] 
        STORE_is_decoded_2169_word_address_calculated <-& (STORE_is_decoded_2169_root_address_calculated)
        ;;[STORE_is_decoded_2169_Sample] 
        {
          ;;[STORE_is_decoded_2169_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_2169_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_2169_sample_start_ <-& (STORE_is_decoded_2169_word_address_calculated)
        STORE_is_decoded_2169_sample_start_ &-> (STORE_is_decoded_2169_Sample)
        STORE_is_decoded_2169_sample_completed_ <-& (STORE_is_decoded_2169_Sample)
        STORE_is_decoded_2169_sample_completed_ &-> ($null)
        STORE_is_decoded_2169_update_start_ &-> (STORE_is_decoded_2169_Update)
        STORE_is_decoded_2169_update_completed_ <-& (STORE_is_decoded_2169_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        // load-store dependencies..
      }
      assign_stmt_2172__entry__ |-> (assign_stmt_2172)
      assign_stmt_2172__exit__ <-| (assign_stmt_2172)
      ::[assign_stmt_2187] 
      {
        // start:  		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
        //  file prog.linked.opt.aa, line 930
        // Target expression
        // ->(scevgep5x_xi46)
        $T[ptr_deref_2184_sample_start_] 
        $T[ptr_deref_2184_sample_completed_] 
        $T[ptr_deref_2184_update_start_] 
        $T[ptr_deref_2184_update_completed_] 
        $T[ptr_deref_2184_base_address_calculated] 
        // scevgep5x_xi46
        $T[ptr_deref_2184_word_address_calculated] 
        $T[ptr_deref_2184_root_address_calculated] 
        $T[ptr_deref_2184_base_address_resized] 
        ;;[ptr_deref_2184_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2184_base_address_calculated &-> (ptr_deref_2184_base_addr_resize)
        ptr_deref_2184_base_address_resized <-& (ptr_deref_2184_base_addr_resize)
        ;;[ptr_deref_2184_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2184_base_address_resized &-> (ptr_deref_2184_base_plus_offset)
        ptr_deref_2184_root_address_calculated <-& (ptr_deref_2184_base_plus_offset)
        ;;[ptr_deref_2184_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2184_root_address_calculated &-> (ptr_deref_2184_word_addrgen)
        ptr_deref_2184_word_address_calculated <-& (ptr_deref_2184_word_addrgen)
        ;;[ptr_deref_2184_Sample] 
        {
          ;;[ptr_deref_2184_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2184_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2184_sample_start_ <-& (ptr_deref_2184_word_address_calculated)
        ptr_deref_2184_sample_start_ &-> (ptr_deref_2184_Sample)
        ptr_deref_2184_sample_completed_ <-& (ptr_deref_2184_Sample)
        ptr_deref_2184_sample_completed_ &-> ($null)
        ptr_deref_2184_update_start_ &-> (ptr_deref_2184_Update)
        ptr_deref_2184_update_completed_ <-& (ptr_deref_2184_Update)
        // start: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2184_base_address_calculated
        // done: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2184_base_address_calculated
        ptr_deref_2184_sample_start_ <-& (ptr_deref_2184_base_address_calculated)
        // end:  		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
        // load-store dependencies..
      }
      assign_stmt_2187__entry__ |-> (assign_stmt_2187)
      assign_stmt_2187__exit__ <-| (assign_stmt_2187)
      ::[assign_stmt_2195] 
      {
        // start:  		iNsTr_115 := (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 934
        // Source expression
        // (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_2194_sample_start_] 
        $T[SLT_f64_u1_2194_sample_completed_] 
        $T[SLT_f64_u1_2194_update_start_] 
        $T[SLT_f64_u1_2194_update_completed_] 
        // iNsTr_107
        // start: Forward dependencies from iNsTr_107 to transition SLT_f64_u1_2194_sample_start_
        // done: Forward dependencies from iNsTr_107 to transition SLT_f64_u1_2194_sample_start_
        ;;[SLT_f64_u1_2194_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_2194_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_2194_sample_start_ &-> (SLT_f64_u1_2194_Sample)
        SLT_f64_u1_2194_sample_completed_ <-& (SLT_f64_u1_2194_Sample)
        SLT_f64_u1_2194_sample_completed_ &-> ($null)
        SLT_f64_u1_2194_update_start_ &-> (SLT_f64_u1_2194_Update)
        SLT_f64_u1_2194_update_completed_ <-& (SLT_f64_u1_2194_Update)
        // Target expression
        // (as target) iNsTr_115
        // start: WAR dependencies for iNsTr_115
        // done: WAR dependencies for iNsTr_115
        // end:  		iNsTr_115 := (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_2195__entry__ |-> (assign_stmt_2195)
      assign_stmt_2195__exit__ <-| (assign_stmt_2195)
      // if-statement  
      //  file prog.linked.opt.aa, line 935
      ;;[if_stmt_2196_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2196__entry__ |-> (if_stmt_2196_dead_link)
      if_stmt_2196__exit__ <-| (if_stmt_2196_dead_link)
      ;;[if_stmt_2196_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2196__entry__ |-> (if_stmt_2196_eval_test)
      $P [R_iNsTr_115_2197_place]
      R_iNsTr_115_2197_place <-| (if_stmt_2196_eval_test)
      ;;[if_stmt_2196_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2196_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_115_2197_place |-> (if_stmt_2196_if_link if_stmt_2196_else_link)
      $P [bb_33_bb_34]
      bb_33_bb_34 <-| (if_stmt_2196_if_link)
      $P [bb_33_bb_37]
      bb_33_bb_37 <-| (if_stmt_2196_else_link)
      ::[assign_stmt_2206_to_assign_stmt_2216] 
      {
        // start:  		iNsTr_121 := ->(scevgep5x_xi46)
        //  file prog.linked.opt.aa, line 942
        // Source expression
        // ->(scevgep5x_xi46)
        $T[ptr_deref_2205_sample_start_] 
        $T[ptr_deref_2205_sample_completed_] 
        $T[ptr_deref_2205_update_start_] 
        $T[ptr_deref_2205_update_completed_] 
        $T[ptr_deref_2205_base_address_calculated] 
        // scevgep5x_xi46
        $T[ptr_deref_2205_word_address_calculated] 
        $T[ptr_deref_2205_root_address_calculated] 
        $T[ptr_deref_2205_base_address_resized] 
        ;;[ptr_deref_2205_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2205_base_address_calculated &-> (ptr_deref_2205_base_addr_resize)
        ptr_deref_2205_base_address_resized <-& (ptr_deref_2205_base_addr_resize)
        ;;[ptr_deref_2205_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2205_base_address_resized &-> (ptr_deref_2205_base_plus_offset)
        ptr_deref_2205_root_address_calculated <-& (ptr_deref_2205_base_plus_offset)
        ;;[ptr_deref_2205_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2205_root_address_calculated &-> (ptr_deref_2205_word_addrgen)
        ptr_deref_2205_word_address_calculated <-& (ptr_deref_2205_word_addrgen)
        ;;[ptr_deref_2205_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2205_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2205_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2205_sample_start_ <-& (ptr_deref_2205_word_address_calculated)
        ptr_deref_2205_sample_start_ &-> (ptr_deref_2205_Sample)
        ptr_deref_2205_sample_completed_ <-& (ptr_deref_2205_Sample)
        ptr_deref_2205_sample_completed_ &-> ($null)
        ptr_deref_2205_update_start_ &-> (ptr_deref_2205_Update)
        ptr_deref_2205_update_completed_ <-& (ptr_deref_2205_Update)
        // start: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2205_base_address_calculated
        // done: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2205_base_address_calculated
        ptr_deref_2205_sample_start_ <-& (ptr_deref_2205_base_address_calculated)
        // Target expression
        // (as target) iNsTr_121
        // start: WAR dependencies for iNsTr_121
        // done: WAR dependencies for iNsTr_121
        // end:  		iNsTr_121 := ->(scevgep5x_xi46)
        // start:  		iNsTr_122 := ($cast ($float<11,52>) iNsTr_121 )
        //  file prog.linked.opt.aa, line 943
        // Source expression
        // ($cast ($float<11,52>) iNsTr_121 )
        $T[type_cast_2209_sample_start_] 
        $T[type_cast_2209_sample_completed_] 
        $T[type_cast_2209_update_start_] 
        $T[type_cast_2209_update_completed_] 
        // iNsTr_121
        // start: Forward dependencies from iNsTr_121 to transition type_cast_2209_sample_start_
        type_cast_2209_sample_start_ <-& (ptr_deref_2205_update_completed_)
        // done: Forward dependencies from iNsTr_121 to transition type_cast_2209_sample_start_
        ;;[type_cast_2209_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2209_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2209_sample_start_ &-> (type_cast_2209_Sample)
        type_cast_2209_sample_completed_ <-& (type_cast_2209_Sample)
        type_cast_2209_sample_completed_ &-> ($null)
        type_cast_2209_update_start_ &-> (type_cast_2209_Update)
        type_cast_2209_update_completed_ <-& (type_cast_2209_Update)
        // Target expression
        // (as target) iNsTr_122
        // start: WAR dependencies for iNsTr_122
        // done: WAR dependencies for iNsTr_122
        // end:  		iNsTr_122 := ($cast ($float<11,52>) iNsTr_121 )
        // start:  		iNsTr_123 := (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
        //  file prog.linked.opt.aa, line 944
        // Source expression
        // (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
        $T[SLT_f64_u1_2215_sample_start_] 
        $T[SLT_f64_u1_2215_sample_completed_] 
        $T[SLT_f64_u1_2215_update_start_] 
        $T[SLT_f64_u1_2215_update_completed_] 
        // iNsTr_122
        // start: Forward dependencies from iNsTr_122 to transition SLT_f64_u1_2215_sample_start_
        SLT_f64_u1_2215_sample_start_ <-& (type_cast_2209_update_completed_)
        // done: Forward dependencies from iNsTr_122 to transition SLT_f64_u1_2215_sample_start_
        ;;[SLT_f64_u1_2215_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_f64_u1_2215_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_f64_u1_2215_sample_start_ &-> (SLT_f64_u1_2215_Sample)
        SLT_f64_u1_2215_sample_completed_ <-& (SLT_f64_u1_2215_Sample)
        SLT_f64_u1_2215_sample_completed_ &-> ($null)
        SLT_f64_u1_2215_update_start_ &-> (SLT_f64_u1_2215_Update)
        SLT_f64_u1_2215_update_completed_ <-& (SLT_f64_u1_2215_Update)
        // Target expression
        // (as target) iNsTr_123
        // start: WAR dependencies for iNsTr_123
        // done: WAR dependencies for iNsTr_123
        // end:  		iNsTr_123 := (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
        // load-store dependencies..
      }
      assign_stmt_2206_to_assign_stmt_2216__entry__ |-> (assign_stmt_2206_to_assign_stmt_2216)
      assign_stmt_2206_to_assign_stmt_2216__exit__ <-| (assign_stmt_2206_to_assign_stmt_2216)
      // if-statement  
      //  file prog.linked.opt.aa, line 945
      ;;[if_stmt_2217_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2217__entry__ |-> (if_stmt_2217_dead_link)
      if_stmt_2217__exit__ <-| (if_stmt_2217_dead_link)
      ;;[if_stmt_2217_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2217__entry__ |-> (if_stmt_2217_eval_test)
      $P [R_iNsTr_123_2218_place]
      R_iNsTr_123_2218_place <-| (if_stmt_2217_eval_test)
      ;;[if_stmt_2217_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2217_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_123_2218_place |-> (if_stmt_2217_if_link if_stmt_2217_else_link)
      $P [bb_34_bb_35]
      bb_34_bb_35 <-| (if_stmt_2217_if_link)
      $P [bb_34_bb_36]
      bb_34_bb_36 <-| (if_stmt_2217_else_link)
      ::[assign_stmt_2227] 
      {
        // start:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        //  file prog.linked.opt.aa, line 952
        // Target expression
        // (as target) is_decoded
        $T[STORE_is_decoded_2224_sample_start_] 
        $T[STORE_is_decoded_2224_sample_completed_] 
        $T[STORE_is_decoded_2224_update_start_] 
        $T[STORE_is_decoded_2224_update_completed_] 
        // is_decoded
        $T[STORE_is_decoded_2224_word_address_calculated] 
        $T[STORE_is_decoded_2224_root_address_calculated] 
        STORE_is_decoded_2224_word_address_calculated <-& (STORE_is_decoded_2224_root_address_calculated)
        ;;[STORE_is_decoded_2224_Sample] 
        {
          ;;[STORE_is_decoded_2224_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_is_decoded_2224_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_is_decoded_2224_sample_start_ <-& (STORE_is_decoded_2224_word_address_calculated)
        STORE_is_decoded_2224_sample_start_ &-> (STORE_is_decoded_2224_Sample)
        STORE_is_decoded_2224_sample_completed_ <-& (STORE_is_decoded_2224_Sample)
        STORE_is_decoded_2224_sample_completed_ &-> ($null)
        STORE_is_decoded_2224_update_start_ &-> (STORE_is_decoded_2224_Update)
        STORE_is_decoded_2224_update_completed_ <-& (STORE_is_decoded_2224_Update)
        // end:  		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
        // load-store dependencies..
      }
      assign_stmt_2227__entry__ |-> (assign_stmt_2227)
      assign_stmt_2227__exit__ <-| (assign_stmt_2227)
      ::[assign_stmt_2242] 
      {
        // start:  		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f1.000000e+00 )
        //  file prog.linked.opt.aa, line 957
        // Target expression
        // ->(scevgep5x_xi46)
        $T[ptr_deref_2239_sample_start_] 
        $T[ptr_deref_2239_sample_completed_] 
        $T[ptr_deref_2239_update_start_] 
        $T[ptr_deref_2239_update_completed_] 
        $T[ptr_deref_2239_base_address_calculated] 
        // scevgep5x_xi46
        $T[ptr_deref_2239_word_address_calculated] 
        $T[ptr_deref_2239_root_address_calculated] 
        $T[ptr_deref_2239_base_address_resized] 
        ;;[ptr_deref_2239_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2239_base_address_calculated &-> (ptr_deref_2239_base_addr_resize)
        ptr_deref_2239_base_address_resized <-& (ptr_deref_2239_base_addr_resize)
        ;;[ptr_deref_2239_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2239_base_address_resized &-> (ptr_deref_2239_base_plus_offset)
        ptr_deref_2239_root_address_calculated <-& (ptr_deref_2239_base_plus_offset)
        ;;[ptr_deref_2239_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2239_root_address_calculated &-> (ptr_deref_2239_word_addrgen)
        ptr_deref_2239_word_address_calculated <-& (ptr_deref_2239_word_addrgen)
        ;;[ptr_deref_2239_Sample] 
        {
          ;;[ptr_deref_2239_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2239_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2239_sample_start_ <-& (ptr_deref_2239_word_address_calculated)
        ptr_deref_2239_sample_start_ &-> (ptr_deref_2239_Sample)
        ptr_deref_2239_sample_completed_ <-& (ptr_deref_2239_Sample)
        ptr_deref_2239_sample_completed_ &-> ($null)
        ptr_deref_2239_update_start_ &-> (ptr_deref_2239_Update)
        ptr_deref_2239_update_completed_ <-& (ptr_deref_2239_Update)
        // start: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2239_base_address_calculated
        // done: Forward dependencies from scevgep5x_xi46 to transition ptr_deref_2239_base_address_calculated
        ptr_deref_2239_sample_start_ <-& (ptr_deref_2239_base_address_calculated)
        // end:  		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f1.000000e+00 )
        // load-store dependencies..
      }
      assign_stmt_2242__entry__ |-> (assign_stmt_2242)
      assign_stmt_2242__exit__ <-| (assign_stmt_2242)
      ::[assign_stmt_2259_to_assign_stmt_2264] 
      {
        // start:  		indvarx_xnextx_xi47 := (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 962
        // Source expression
        // (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2258_sample_start_] 
        $T[ADD_u64_u64_2258_sample_completed_] 
        $T[ADD_u64_u64_2258_update_start_] 
        $T[ADD_u64_u64_2258_update_completed_] 
        // indvarx_xi44
        // start: Forward dependencies from indvarx_xi44 to transition ADD_u64_u64_2258_sample_start_
        // done: Forward dependencies from indvarx_xi44 to transition ADD_u64_u64_2258_sample_start_
        ;;[ADD_u64_u64_2258_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2258_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2258_sample_start_ &-> (ADD_u64_u64_2258_Sample)
        ADD_u64_u64_2258_sample_completed_ <-& (ADD_u64_u64_2258_Sample)
        ADD_u64_u64_2258_sample_completed_ &-> ($null)
        ADD_u64_u64_2258_update_start_ &-> (ADD_u64_u64_2258_Update)
        ADD_u64_u64_2258_update_completed_ <-& (ADD_u64_u64_2258_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi47
        // start: WAR dependencies for indvarx_xnextx_xi47
        // done: WAR dependencies for indvarx_xnextx_xi47
        // end:  		indvarx_xnextx_xi47 := (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond16 := (indvarx_xnextx_xi47 == tmp4x_xi42)
        //  file prog.linked.opt.aa, line 963
        // Source expression
        // (indvarx_xnextx_xi47 == tmp4x_xi42)
        $T[EQ_u64_u1_2263_sample_start_] 
        $T[EQ_u64_u1_2263_sample_completed_] 
        $T[EQ_u64_u1_2263_update_start_] 
        $T[EQ_u64_u1_2263_update_completed_] 
        // indvarx_xnextx_xi47
        // tmp4x_xi42
        // start: Forward dependencies from indvarx_xnextx_xi47 to transition EQ_u64_u1_2263_sample_start_
        EQ_u64_u1_2263_sample_start_ <-& (ADD_u64_u64_2258_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi47 to transition EQ_u64_u1_2263_sample_start_
        // start: Forward dependencies from tmp4x_xi42 to transition EQ_u64_u1_2263_sample_start_
        // done: Forward dependencies from tmp4x_xi42 to transition EQ_u64_u1_2263_sample_start_
        ;;[EQ_u64_u1_2263_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_2263_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_2263_sample_start_ &-> (EQ_u64_u1_2263_Sample)
        EQ_u64_u1_2263_sample_completed_ <-& (EQ_u64_u1_2263_Sample)
        EQ_u64_u1_2263_sample_completed_ &-> ($null)
        EQ_u64_u1_2263_update_start_ &-> (EQ_u64_u1_2263_Update)
        EQ_u64_u1_2263_update_completed_ <-& (EQ_u64_u1_2263_Update)
        // Target expression
        // (as target) exitcond16
        // start: WAR dependencies for exitcond16
        // done: WAR dependencies for exitcond16
        // end:  		exitcond16 := (indvarx_xnextx_xi47 == tmp4x_xi42)
        // load-store dependencies..
      }
      assign_stmt_2259_to_assign_stmt_2264__entry__ |-> (assign_stmt_2259_to_assign_stmt_2264)
      assign_stmt_2259_to_assign_stmt_2264__exit__ <-| (assign_stmt_2259_to_assign_stmt_2264)
      // if-statement  
      //  file prog.linked.opt.aa, line 964
      ;;[if_stmt_2265_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2265__entry__ |-> (if_stmt_2265_dead_link)
      if_stmt_2265__exit__ <-| (if_stmt_2265_dead_link)
      ;;[if_stmt_2265_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2265__entry__ |-> (if_stmt_2265_eval_test)
      $P [R_exitcond16_2266_place]
      R_exitcond16_2266_place <-| (if_stmt_2265_eval_test)
      ;;[if_stmt_2265_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2265_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond16_2266_place |-> (if_stmt_2265_if_link if_stmt_2265_else_link)
      $P [bb_37_checkIsdecodedx_xexit]
      bb_37_checkIsdecodedx_xexit <-| (if_stmt_2265_if_link)
      $P [bb_37_bb_29]
      bb_37_bb_29 <-| (if_stmt_2265_else_link)
      ::[assign_stmt_2282] 
      {
        // start:  		iNsTr_130 := (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 972
        // Source expression
        // (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[EQ_u16_u1_2281_sample_start_] 
        $T[EQ_u16_u1_2281_sample_completed_] 
        $T[EQ_u16_u1_2281_update_start_] 
        $T[EQ_u16_u1_2281_update_completed_] 
        // xx_xprx_xlcssa
        // start: Forward dependencies from xx_xprx_xlcssa to transition EQ_u16_u1_2281_sample_start_
        // done: Forward dependencies from xx_xprx_xlcssa to transition EQ_u16_u1_2281_sample_start_
        ;;[EQ_u16_u1_2281_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2281_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2281_sample_start_ &-> (EQ_u16_u1_2281_Sample)
        EQ_u16_u1_2281_sample_completed_ <-& (EQ_u16_u1_2281_Sample)
        EQ_u16_u1_2281_sample_completed_ &-> ($null)
        EQ_u16_u1_2281_update_start_ &-> (EQ_u16_u1_2281_Update)
        EQ_u16_u1_2281_update_completed_ <-& (EQ_u16_u1_2281_Update)
        // Target expression
        // (as target) iNsTr_130
        // start: WAR dependencies for iNsTr_130
        // done: WAR dependencies for iNsTr_130
        // end:  		iNsTr_130 := (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
        // load-store dependencies..
      }
      assign_stmt_2282__entry__ |-> (assign_stmt_2282)
      assign_stmt_2282__exit__ <-| (assign_stmt_2282)
      // if-statement  
      //  file prog.linked.opt.aa, line 973
      ;;[if_stmt_2283_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2283__entry__ |-> (if_stmt_2283_dead_link)
      if_stmt_2283__exit__ <-| (if_stmt_2283_dead_link)
      ;;[if_stmt_2283_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2283__entry__ |-> (if_stmt_2283_eval_test)
      $P [R_iNsTr_130_2284_place]
      R_iNsTr_130_2284_place <-| (if_stmt_2283_eval_test)
      ;;[if_stmt_2283_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2283_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_130_2284_place |-> (if_stmt_2283_if_link if_stmt_2283_else_link)
      $P [checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread]
      checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread <-| (if_stmt_2283_if_link)
      $P [checkIsdecodedx_xexit_bb_39]
      checkIsdecodedx_xexit_bb_39 <-| (if_stmt_2283_else_link)
      ::[assign_stmt_2292_to_assign_stmt_2298] 
      {
        // start:  		iNsTr_132 := nrows
        //  file prog.linked.opt.aa, line 980
        // Source expression
        // nrows
        $T[LOAD_nrows_2291_sample_start_] 
        $T[LOAD_nrows_2291_sample_completed_] 
        $T[LOAD_nrows_2291_update_start_] 
        $T[LOAD_nrows_2291_update_completed_] 
        $T[LOAD_nrows_2291_word_address_calculated] 
        $T[LOAD_nrows_2291_root_address_calculated] 
        LOAD_nrows_2291_word_address_calculated <-& (LOAD_nrows_2291_root_address_calculated)
        ;;[LOAD_nrows_2291_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_nrows_2291_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_nrows_2291_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_nrows_2291_sample_start_ <-& (LOAD_nrows_2291_word_address_calculated)
        LOAD_nrows_2291_sample_start_ &-> (LOAD_nrows_2291_Sample)
        LOAD_nrows_2291_sample_completed_ <-& (LOAD_nrows_2291_Sample)
        LOAD_nrows_2291_sample_completed_ &-> ($null)
        LOAD_nrows_2291_update_start_ &-> (LOAD_nrows_2291_Update)
        LOAD_nrows_2291_update_completed_ <-& (LOAD_nrows_2291_Update)
        // Target expression
        // (as target) iNsTr_132
        // start: WAR dependencies for iNsTr_132
        // done: WAR dependencies for iNsTr_132
        // end:  		iNsTr_132 := nrows
        // start:  		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 981
        // Source expression
        // (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2297_sample_start_] 
        $T[EQ_u16_u1_2297_sample_completed_] 
        $T[EQ_u16_u1_2297_update_start_] 
        $T[EQ_u16_u1_2297_update_completed_] 
        // iNsTr_132
        // start: Forward dependencies from iNsTr_132 to transition EQ_u16_u1_2297_sample_start_
        EQ_u16_u1_2297_sample_start_ <-& (LOAD_nrows_2291_update_completed_)
        // done: Forward dependencies from iNsTr_132 to transition EQ_u16_u1_2297_sample_start_
        ;;[EQ_u16_u1_2297_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2297_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2297_sample_start_ &-> (EQ_u16_u1_2297_Sample)
        EQ_u16_u1_2297_sample_completed_ <-& (EQ_u16_u1_2297_Sample)
        EQ_u16_u1_2297_sample_completed_ &-> ($null)
        EQ_u16_u1_2297_update_start_ &-> (EQ_u16_u1_2297_Update)
        EQ_u16_u1_2297_update_completed_ <-& (EQ_u16_u1_2297_Update)
        // Target expression
        // (as target) iNsTr_133
        // start: WAR dependencies for iNsTr_133
        // done: WAR dependencies for iNsTr_133
        // end:  		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2292_to_assign_stmt_2298__entry__ |-> (assign_stmt_2292_to_assign_stmt_2298)
      assign_stmt_2292_to_assign_stmt_2298__exit__ <-| (assign_stmt_2292_to_assign_stmt_2298)
      // if-statement  
      //  file prog.linked.opt.aa, line 982
      ;;[if_stmt_2299_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2299__entry__ |-> (if_stmt_2299_dead_link)
      if_stmt_2299__exit__ <-| (if_stmt_2299_dead_link)
      ;;[if_stmt_2299_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2299__entry__ |-> (if_stmt_2299_eval_test)
      $P [R_iNsTr_133_2300_place]
      R_iNsTr_133_2300_place <-| (if_stmt_2299_eval_test)
      ;;[if_stmt_2299_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2299_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_133_2300_place |-> (if_stmt_2299_if_link if_stmt_2299_else_link)
      $P [bb_39_updateMessagex_xexit]
      bb_39_updateMessagex_xexit <-| (if_stmt_2299_if_link)
      $P [bb_39_bbx_xnph4x_xi]
      bb_39_bbx_xnph4x_xi <-| (if_stmt_2299_else_link)
      ::[assign_stmt_2309_to_assign_stmt_2366] 
      {
        // start:  		iNsTr_136 := ($cast ($uint<32>) iNsTr_132 )
        //  file prog.linked.opt.aa, line 989
        // Source expression
        // ($cast ($uint<32>) iNsTr_132 )
        $T[type_cast_2308_sample_start_] 
        $T[type_cast_2308_sample_completed_] 
        $T[type_cast_2308_update_start_] 
        $T[type_cast_2308_update_completed_] 
        // iNsTr_132
        // start: Forward dependencies from iNsTr_132 to transition type_cast_2308_sample_start_
        // done: Forward dependencies from iNsTr_132 to transition type_cast_2308_sample_start_
        ;;[type_cast_2308_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2308_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2308_sample_start_ &-> (type_cast_2308_Sample)
        type_cast_2308_sample_completed_ <-& (type_cast_2308_Sample)
        type_cast_2308_sample_completed_ &-> ($null)
        type_cast_2308_update_start_ &-> (type_cast_2308_Update)
        type_cast_2308_update_completed_ <-& (type_cast_2308_Update)
        // Target expression
        // (as target) iNsTr_136
        // start: WAR dependencies for iNsTr_136
        // done: WAR dependencies for iNsTr_136
        // end:  		iNsTr_136 := ($cast ($uint<32>) iNsTr_132 )
        // start:  		iNsTr_137 := (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 990
        // Source expression
        // (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_2314_sample_start_] 
        $T[ADD_u32_u32_2314_sample_completed_] 
        $T[ADD_u32_u32_2314_update_start_] 
        $T[ADD_u32_u32_2314_update_completed_] 
        // iNsTr_136
        // start: Forward dependencies from iNsTr_136 to transition ADD_u32_u32_2314_sample_start_
        ADD_u32_u32_2314_sample_start_ <-& (type_cast_2308_update_completed_)
        // done: Forward dependencies from iNsTr_136 to transition ADD_u32_u32_2314_sample_start_
        ;;[ADD_u32_u32_2314_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2314_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2314_sample_start_ &-> (ADD_u32_u32_2314_Sample)
        ADD_u32_u32_2314_sample_completed_ <-& (ADD_u32_u32_2314_Sample)
        ADD_u32_u32_2314_sample_completed_ &-> ($null)
        ADD_u32_u32_2314_update_start_ &-> (ADD_u32_u32_2314_Update)
        ADD_u32_u32_2314_update_completed_ <-& (ADD_u32_u32_2314_Update)
        // Target expression
        // (as target) iNsTr_137
        // start: WAR dependencies for iNsTr_137
        // done: WAR dependencies for iNsTr_137
        // end:  		iNsTr_137 := (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // start:  		tmp7x_xi := (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 991
        // Source expression
        // (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_2320_sample_start_] 
        $T[UGT_u16_u1_2320_sample_completed_] 
        $T[UGT_u16_u1_2320_update_start_] 
        $T[UGT_u16_u1_2320_update_completed_] 
        // iNsTr_132
        // start: Forward dependencies from iNsTr_132 to transition UGT_u16_u1_2320_sample_start_
        // done: Forward dependencies from iNsTr_132 to transition UGT_u16_u1_2320_sample_start_
        ;;[UGT_u16_u1_2320_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_2320_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_2320_sample_start_ &-> (UGT_u16_u1_2320_Sample)
        UGT_u16_u1_2320_sample_completed_ <-& (UGT_u16_u1_2320_Sample)
        UGT_u16_u1_2320_sample_completed_ &-> ($null)
        UGT_u16_u1_2320_update_start_ &-> (UGT_u16_u1_2320_Update)
        UGT_u16_u1_2320_update_completed_ <-& (UGT_u16_u1_2320_Update)
        // Target expression
        // (as target) tmp7x_xi
        // start: WAR dependencies for tmp7x_xi
        // done: WAR dependencies for tmp7x_xi
        // end:  		tmp7x_xi := (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xopx_xi32 := (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 992
        // Source expression
        // (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_2326_sample_start_] 
        $T[ADD_u16_u16_2326_sample_completed_] 
        $T[ADD_u16_u16_2326_update_start_] 
        $T[ADD_u16_u16_2326_update_completed_] 
        // iNsTr_132
        // start: Forward dependencies from iNsTr_132 to transition ADD_u16_u16_2326_sample_start_
        // done: Forward dependencies from iNsTr_132 to transition ADD_u16_u16_2326_sample_start_
        ;;[ADD_u16_u16_2326_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2326_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2326_sample_start_ &-> (ADD_u16_u16_2326_Sample)
        ADD_u16_u16_2326_sample_completed_ <-& (ADD_u16_u16_2326_Sample)
        ADD_u16_u16_2326_sample_completed_ &-> ($null)
        ADD_u16_u16_2326_update_start_ &-> (ADD_u16_u16_2326_Update)
        ADD_u16_u16_2326_update_completed_ <-& (ADD_u16_u16_2326_Update)
        // Target expression
        // (as target) xx_xopx_xi32
        // start: WAR dependencies for xx_xopx_xi32
        // done: WAR dependencies for xx_xopx_xi32
        // end:  		xx_xopx_xi32 := (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_138 := ($cast ($uint<64>) xx_xopx_xi32 )
        //  file prog.linked.opt.aa, line 993
        // Source expression
        // ($cast ($uint<64>) xx_xopx_xi32 )
        $T[type_cast_2330_sample_start_] 
        $T[type_cast_2330_sample_completed_] 
        $T[type_cast_2330_update_start_] 
        $T[type_cast_2330_update_completed_] 
        // xx_xopx_xi32
        // start: Forward dependencies from xx_xopx_xi32 to transition type_cast_2330_sample_start_
        type_cast_2330_sample_start_ <-& (ADD_u16_u16_2326_update_completed_)
        // done: Forward dependencies from xx_xopx_xi32 to transition type_cast_2330_sample_start_
        ;;[type_cast_2330_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2330_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2330_sample_start_ &-> (type_cast_2330_Sample)
        type_cast_2330_sample_completed_ <-& (type_cast_2330_Sample)
        type_cast_2330_sample_completed_ &-> ($null)
        type_cast_2330_update_start_ &-> (type_cast_2330_Update)
        type_cast_2330_update_completed_ <-& (type_cast_2330_Update)
        // Target expression
        // (as target) iNsTr_138
        // start: WAR dependencies for iNsTr_138
        // done: WAR dependencies for iNsTr_138
        // end:  		iNsTr_138 := ($cast ($uint<64>) xx_xopx_xi32 )
        // start:  		xx_xop19x_xi := (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 994
        // Source expression
        // (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2336_sample_start_] 
        $T[ADD_u64_u64_2336_sample_completed_] 
        $T[ADD_u64_u64_2336_update_start_] 
        $T[ADD_u64_u64_2336_update_completed_] 
        // iNsTr_138
        // start: Forward dependencies from iNsTr_138 to transition ADD_u64_u64_2336_sample_start_
        ADD_u64_u64_2336_sample_start_ <-& (type_cast_2330_update_completed_)
        // done: Forward dependencies from iNsTr_138 to transition ADD_u64_u64_2336_sample_start_
        ;;[ADD_u64_u64_2336_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2336_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2336_sample_start_ &-> (ADD_u64_u64_2336_Sample)
        ADD_u64_u64_2336_sample_completed_ <-& (ADD_u64_u64_2336_Sample)
        ADD_u64_u64_2336_sample_completed_ &-> ($null)
        ADD_u64_u64_2336_update_start_ &-> (ADD_u64_u64_2336_Update)
        ADD_u64_u64_2336_update_completed_ <-& (ADD_u64_u64_2336_Update)
        // Target expression
        // (as target) xx_xop19x_xi
        // start: WAR dependencies for xx_xop19x_xi
        // done: WAR dependencies for xx_xop19x_xi
        // end:  		xx_xop19x_xi := (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp10x_xi := ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 995
        // Source expression
        // ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_2343_sample_start_] 
        $T[MUX_2343_sample_completed_] 
        $T[MUX_2343_update_start_] 
        $T[MUX_2343_update_completed_] 
        // tmp7x_xi
        // xx_xop19x_xi
        // start: Forward dependencies from tmp7x_xi to transition MUX_2343_sample_start_
        MUX_2343_sample_start_ <-& (UGT_u16_u1_2320_update_completed_)
        // done: Forward dependencies from tmp7x_xi to transition MUX_2343_sample_start_
        // start: Forward dependencies from xx_xop19x_xi to transition MUX_2343_sample_start_
        MUX_2343_sample_start_ <-& (ADD_u64_u64_2336_update_completed_)
        // done: Forward dependencies from xx_xop19x_xi to transition MUX_2343_sample_start_
        ;;[MUX_2343_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2343_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2343_sample_start_ &-> (MUX_2343_start)
        MUX_2343_sample_completed_ <-& (MUX_2343_start)
        MUX_2343_update_start_ &-> (MUX_2343_complete)
        MUX_2343_update_completed_ <-& (MUX_2343_complete)
        // Target expression
        // (as target) tmp10x_xi
        // start: WAR dependencies for tmp10x_xi
        // done: WAR dependencies for tmp10x_xi
        // end:  		tmp10x_xi := ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // start:  		xx_xneg1x_xi := (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 996
        // Source expression
        // (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_2349_sample_start_] 
        $T[ADD_u16_u16_2349_sample_completed_] 
        $T[ADD_u16_u16_2349_update_start_] 
        $T[ADD_u16_u16_2349_update_completed_] 
        // iNsTr_66
        // start: Forward dependencies from iNsTr_66 to transition ADD_u16_u16_2349_sample_start_
        // done: Forward dependencies from iNsTr_66 to transition ADD_u16_u16_2349_sample_start_
        ;;[ADD_u16_u16_2349_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2349_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2349_sample_start_ &-> (ADD_u16_u16_2349_Sample)
        ADD_u16_u16_2349_sample_completed_ <-& (ADD_u16_u16_2349_Sample)
        ADD_u16_u16_2349_sample_completed_ &-> ($null)
        ADD_u16_u16_2349_update_start_ &-> (ADD_u16_u16_2349_Update)
        ADD_u16_u16_2349_update_completed_ <-& (ADD_u16_u16_2349_Update)
        // Target expression
        // (as target) xx_xneg1x_xi
        // start: WAR dependencies for xx_xneg1x_xi
        // done: WAR dependencies for xx_xneg1x_xi
        // end:  		xx_xneg1x_xi := (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		tmp := ($cast ($uint<64>) iNsTr_66 )
        //  file prog.linked.opt.aa, line 997
        // Source expression
        // ($cast ($uint<64>) iNsTr_66 )
        $T[type_cast_2353_sample_start_] 
        $T[type_cast_2353_sample_completed_] 
        $T[type_cast_2353_update_start_] 
        $T[type_cast_2353_update_completed_] 
        // iNsTr_66
        // start: Forward dependencies from iNsTr_66 to transition type_cast_2353_sample_start_
        // done: Forward dependencies from iNsTr_66 to transition type_cast_2353_sample_start_
        ;;[type_cast_2353_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2353_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2353_sample_start_ &-> (type_cast_2353_Sample)
        type_cast_2353_sample_completed_ <-& (type_cast_2353_Sample)
        type_cast_2353_sample_completed_ &-> ($null)
        type_cast_2353_update_start_ &-> (type_cast_2353_Update)
        type_cast_2353_update_completed_ <-& (type_cast_2353_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := ($cast ($uint<64>) iNsTr_66 )
        // start:  		tmp7 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        //  file prog.linked.opt.aa, line 998
        // Source expression
        // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        $T[ADD_u64_u64_2359_sample_start_] 
        $T[ADD_u64_u64_2359_sample_completed_] 
        $T[ADD_u64_u64_2359_update_start_] 
        $T[ADD_u64_u64_2359_update_completed_] 
        // tmp
        // start: Forward dependencies from tmp to transition ADD_u64_u64_2359_sample_start_
        ADD_u64_u64_2359_sample_start_ <-& (type_cast_2353_update_completed_)
        // done: Forward dependencies from tmp to transition ADD_u64_u64_2359_sample_start_
        ;;[ADD_u64_u64_2359_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2359_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2359_sample_start_ &-> (ADD_u64_u64_2359_Sample)
        ADD_u64_u64_2359_sample_completed_ <-& (ADD_u64_u64_2359_Sample)
        ADD_u64_u64_2359_sample_completed_ &-> ($null)
        ADD_u64_u64_2359_update_start_ &-> (ADD_u64_u64_2359_Update)
        ADD_u64_u64_2359_update_completed_ <-& (ADD_u64_u64_2359_Update)
        // Target expression
        // (as target) tmp7
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // end:  		tmp7 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        // start:  		tmp10 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 999
        // Source expression
        // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_2365_sample_start_] 
        $T[ADD_u64_u64_2365_sample_completed_] 
        $T[ADD_u64_u64_2365_update_start_] 
        $T[ADD_u64_u64_2365_update_completed_] 
        // tmp
        // start: Forward dependencies from tmp to transition ADD_u64_u64_2365_sample_start_
        ADD_u64_u64_2365_sample_start_ <-& (type_cast_2353_update_completed_)
        // done: Forward dependencies from tmp to transition ADD_u64_u64_2365_sample_start_
        ;;[ADD_u64_u64_2365_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2365_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2365_sample_start_ &-> (ADD_u64_u64_2365_Sample)
        ADD_u64_u64_2365_sample_completed_ <-& (ADD_u64_u64_2365_Sample)
        ADD_u64_u64_2365_sample_completed_ &-> ($null)
        ADD_u64_u64_2365_update_start_ &-> (ADD_u64_u64_2365_Update)
        ADD_u64_u64_2365_update_completed_ <-& (ADD_u64_u64_2365_Update)
        // Target expression
        // (as target) tmp10
        // start: WAR dependencies for tmp10
        // done: WAR dependencies for tmp10
        // end:  		tmp10 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // load-store dependencies..
      }
      assign_stmt_2309_to_assign_stmt_2366__entry__ |-> (assign_stmt_2309_to_assign_stmt_2366)
      assign_stmt_2309_to_assign_stmt_2366__exit__ <-| (assign_stmt_2309_to_assign_stmt_2366)
      ::[assign_stmt_2381_to_assign_stmt_2405] 
      {
        // start:  		tmp8 := (tmp7 + indvarx_xi33)
        //  file prog.linked.opt.aa, line 1004
        // Source expression
        // (tmp7 + indvarx_xi33)
        $T[ADD_u64_u64_2380_sample_start_] 
        $T[ADD_u64_u64_2380_sample_completed_] 
        $T[ADD_u64_u64_2380_update_start_] 
        $T[ADD_u64_u64_2380_update_completed_] 
        // tmp7
        // indvarx_xi33
        // start: Forward dependencies from tmp7 to transition ADD_u64_u64_2380_sample_start_
        // done: Forward dependencies from tmp7 to transition ADD_u64_u64_2380_sample_start_
        // start: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2380_sample_start_
        // done: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2380_sample_start_
        ;;[ADD_u64_u64_2380_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2380_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2380_sample_start_ &-> (ADD_u64_u64_2380_Sample)
        ADD_u64_u64_2380_sample_completed_ <-& (ADD_u64_u64_2380_Sample)
        ADD_u64_u64_2380_sample_completed_ &-> ($null)
        ADD_u64_u64_2380_update_start_ &-> (ADD_u64_u64_2380_Update)
        ADD_u64_u64_2380_update_completed_ <-& (ADD_u64_u64_2380_Update)
        // Target expression
        // (as target) tmp8
        // start: WAR dependencies for tmp8
        // done: WAR dependencies for tmp8
        // end:  		tmp8 := (tmp7 + indvarx_xi33)
        // start:  		scevgep18x_xi := @(mem[tmp8])
        //  file prog.linked.opt.aa, line 1005
        // Source expression
        // @(mem[tmp8])
        $T[addr_of_2385_sample_start_] 
        $T[addr_of_2385_sample_completed_] 
        $T[addr_of_2385_update_start_] 
        $T[addr_of_2385_update_completed_] 
        $T[array_obj_ref_2384_root_address_calculated] 
        $T[array_obj_ref_2384_offset_calculated] 
        $T[array_obj_ref_2384_index_resized_0] 
        $T[array_obj_ref_2384_index_scaled_0] 
        $T[array_obj_ref_2384_index_computed_0] 
        // tmp8
        // start: Forward dependencies from tmp8 to transition array_obj_ref_2384_index_computed_0
        array_obj_ref_2384_index_computed_0 <-& (ADD_u64_u64_2380_update_completed_)
        // done: Forward dependencies from tmp8 to transition array_obj_ref_2384_index_computed_0
        ;;[array_obj_ref_2384_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2384_index_computed_0 &-> (array_obj_ref_2384_index_resize_0)
        array_obj_ref_2384_index_resized_0 <-& (array_obj_ref_2384_index_resize_0)
        ;;[array_obj_ref_2384_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2384_index_resized_0 &-> (array_obj_ref_2384_index_scale_0)
        array_obj_ref_2384_index_scaled_0 <-& (array_obj_ref_2384_index_scale_0)
        ;;[array_obj_ref_2384_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2384_index_scaled_0 &-> (array_obj_ref_2384_final_index_sum_regn)
        array_obj_ref_2384_offset_calculated <-& (array_obj_ref_2384_final_index_sum_regn)
        ;;[array_obj_ref_2384_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2384_offset_calculated &-> (array_obj_ref_2384_base_plus_offset)
        array_obj_ref_2384_root_address_calculated <-& (array_obj_ref_2384_base_plus_offset)
        ;;[addr_of_2385_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2385_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2385_sample_start_ <-& (array_obj_ref_2384_root_address_calculated)
        addr_of_2385_sample_start_ &-> (addr_of_2385_request)
        addr_of_2385_sample_completed_ <-& (addr_of_2385_request)
        addr_of_2385_update_start_ &-> (addr_of_2385_complete)
        addr_of_2385_update_completed_ <-& (addr_of_2385_complete)
        // Target expression
        // (as target) scevgep18x_xi
        // start: WAR dependencies for scevgep18x_xi
        // done: WAR dependencies for scevgep18x_xi
        // end:  		scevgep18x_xi := @(mem[tmp8])
        // start:  		tmp12x_xi := ($cast ($uint<32>) indvarx_xi33 )
        //  file prog.linked.opt.aa, line 1006
        // Source expression
        // ($cast ($uint<32>) indvarx_xi33 )
        $T[type_cast_2389_sample_start_] 
        $T[type_cast_2389_sample_completed_] 
        $T[type_cast_2389_update_start_] 
        $T[type_cast_2389_update_completed_] 
        // indvarx_xi33
        // start: Forward dependencies from indvarx_xi33 to transition type_cast_2389_sample_start_
        // done: Forward dependencies from indvarx_xi33 to transition type_cast_2389_sample_start_
        ;;[type_cast_2389_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2389_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2389_sample_start_ &-> (type_cast_2389_Sample)
        type_cast_2389_sample_completed_ <-& (type_cast_2389_Sample)
        type_cast_2389_sample_completed_ &-> ($null)
        type_cast_2389_update_start_ &-> (type_cast_2389_Update)
        type_cast_2389_update_completed_ <-& (type_cast_2389_Update)
        // Target expression
        // (as target) tmp12x_xi
        // start: WAR dependencies for tmp12x_xi
        // done: WAR dependencies for tmp12x_xi
        // end:  		tmp12x_xi := ($cast ($uint<32>) indvarx_xi33 )
        // start:  		tmp11 := (tmp10 + indvarx_xi33)
        //  file prog.linked.opt.aa, line 1007
        // Source expression
        // (tmp10 + indvarx_xi33)
        $T[ADD_u64_u64_2394_sample_start_] 
        $T[ADD_u64_u64_2394_sample_completed_] 
        $T[ADD_u64_u64_2394_update_start_] 
        $T[ADD_u64_u64_2394_update_completed_] 
        // tmp10
        // indvarx_xi33
        // start: Forward dependencies from tmp10 to transition ADD_u64_u64_2394_sample_start_
        // done: Forward dependencies from tmp10 to transition ADD_u64_u64_2394_sample_start_
        // start: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2394_sample_start_
        // done: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2394_sample_start_
        ;;[ADD_u64_u64_2394_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2394_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2394_sample_start_ &-> (ADD_u64_u64_2394_Sample)
        ADD_u64_u64_2394_sample_completed_ <-& (ADD_u64_u64_2394_Sample)
        ADD_u64_u64_2394_sample_completed_ &-> ($null)
        ADD_u64_u64_2394_update_start_ &-> (ADD_u64_u64_2394_Update)
        ADD_u64_u64_2394_update_completed_ <-& (ADD_u64_u64_2394_Update)
        // Target expression
        // (as target) tmp11
        // start: WAR dependencies for tmp11
        // done: WAR dependencies for tmp11
        // end:  		tmp11 := (tmp10 + indvarx_xi33)
        // start:  		scevgepx_xi34 := @(mem[tmp11])
        //  file prog.linked.opt.aa, line 1008
        // Source expression
        // @(mem[tmp11])
        $T[addr_of_2399_sample_start_] 
        $T[addr_of_2399_sample_completed_] 
        $T[addr_of_2399_update_start_] 
        $T[addr_of_2399_update_completed_] 
        $T[array_obj_ref_2398_root_address_calculated] 
        $T[array_obj_ref_2398_offset_calculated] 
        $T[array_obj_ref_2398_index_resized_0] 
        $T[array_obj_ref_2398_index_scaled_0] 
        $T[array_obj_ref_2398_index_computed_0] 
        // tmp11
        // start: Forward dependencies from tmp11 to transition array_obj_ref_2398_index_computed_0
        array_obj_ref_2398_index_computed_0 <-& (ADD_u64_u64_2394_update_completed_)
        // done: Forward dependencies from tmp11 to transition array_obj_ref_2398_index_computed_0
        ;;[array_obj_ref_2398_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2398_index_computed_0 &-> (array_obj_ref_2398_index_resize_0)
        array_obj_ref_2398_index_resized_0 <-& (array_obj_ref_2398_index_resize_0)
        ;;[array_obj_ref_2398_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2398_index_resized_0 &-> (array_obj_ref_2398_index_scale_0)
        array_obj_ref_2398_index_scaled_0 <-& (array_obj_ref_2398_index_scale_0)
        ;;[array_obj_ref_2398_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2398_index_scaled_0 &-> (array_obj_ref_2398_final_index_sum_regn)
        array_obj_ref_2398_offset_calculated <-& (array_obj_ref_2398_final_index_sum_regn)
        ;;[array_obj_ref_2398_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2398_offset_calculated &-> (array_obj_ref_2398_base_plus_offset)
        array_obj_ref_2398_root_address_calculated <-& (array_obj_ref_2398_base_plus_offset)
        ;;[addr_of_2399_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2399_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2399_sample_start_ <-& (array_obj_ref_2398_root_address_calculated)
        addr_of_2399_sample_start_ &-> (addr_of_2399_request)
        addr_of_2399_sample_completed_ <-& (addr_of_2399_request)
        addr_of_2399_update_start_ &-> (addr_of_2399_complete)
        addr_of_2399_update_completed_ <-& (addr_of_2399_complete)
        // Target expression
        // (as target) scevgepx_xi34
        // start: WAR dependencies for scevgepx_xi34
        // done: WAR dependencies for scevgepx_xi34
        // end:  		scevgepx_xi34 := @(mem[tmp11])
        // start:  		iNsTr_140 := (tmp12x_xi == iNsTr_137)
        //  file prog.linked.opt.aa, line 1009
        // Source expression
        // (tmp12x_xi == iNsTr_137)
        $T[EQ_u32_u1_2404_sample_start_] 
        $T[EQ_u32_u1_2404_sample_completed_] 
        $T[EQ_u32_u1_2404_update_start_] 
        $T[EQ_u32_u1_2404_update_completed_] 
        // tmp12x_xi
        // iNsTr_137
        // start: Forward dependencies from tmp12x_xi to transition EQ_u32_u1_2404_sample_start_
        EQ_u32_u1_2404_sample_start_ <-& (type_cast_2389_update_completed_)
        // done: Forward dependencies from tmp12x_xi to transition EQ_u32_u1_2404_sample_start_
        // start: Forward dependencies from iNsTr_137 to transition EQ_u32_u1_2404_sample_start_
        // done: Forward dependencies from iNsTr_137 to transition EQ_u32_u1_2404_sample_start_
        ;;[EQ_u32_u1_2404_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_2404_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_2404_sample_start_ &-> (EQ_u32_u1_2404_Sample)
        EQ_u32_u1_2404_sample_completed_ <-& (EQ_u32_u1_2404_Sample)
        EQ_u32_u1_2404_sample_completed_ &-> ($null)
        EQ_u32_u1_2404_update_start_ &-> (EQ_u32_u1_2404_Update)
        EQ_u32_u1_2404_update_completed_ <-& (EQ_u32_u1_2404_Update)
        // Target expression
        // (as target) iNsTr_140
        // start: WAR dependencies for iNsTr_140
        // done: WAR dependencies for iNsTr_140
        // end:  		iNsTr_140 := (tmp12x_xi == iNsTr_137)
        // load-store dependencies..
      }
      assign_stmt_2381_to_assign_stmt_2405__entry__ |-> (assign_stmt_2381_to_assign_stmt_2405)
      assign_stmt_2381_to_assign_stmt_2405__exit__ <-| (assign_stmt_2381_to_assign_stmt_2405)
      // if-statement  
      //  file prog.linked.opt.aa, line 1010
      ;;[if_stmt_2406_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2406__entry__ |-> (if_stmt_2406_dead_link)
      if_stmt_2406__exit__ <-| (if_stmt_2406_dead_link)
      ;;[if_stmt_2406_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2406__entry__ |-> (if_stmt_2406_eval_test)
      $P [R_iNsTr_140_2407_place]
      R_iNsTr_140_2407_place <-| (if_stmt_2406_eval_test)
      ;;[if_stmt_2406_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2406_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_140_2407_place |-> (if_stmt_2406_if_link if_stmt_2406_else_link)
      $P [bb_41_bb_42]
      bb_41_bb_42 <-| (if_stmt_2406_if_link)
      $P [bb_41_bb_43]
      bb_41_bb_43 <-| (if_stmt_2406_else_link)
      ::[assign_stmt_2416_to_assign_stmt_2421] 
      {
        // start:  		iNsTr_142 := ->(scevgepx_xi34)
        //  file prog.linked.opt.aa, line 1017
        // Source expression
        // ->(scevgepx_xi34)
        $T[ptr_deref_2415_sample_start_] 
        $T[ptr_deref_2415_sample_completed_] 
        $T[ptr_deref_2415_update_start_] 
        $T[ptr_deref_2415_update_completed_] 
        $T[ptr_deref_2415_base_address_calculated] 
        // scevgepx_xi34
        $T[ptr_deref_2415_word_address_calculated] 
        $T[ptr_deref_2415_root_address_calculated] 
        $T[ptr_deref_2415_base_address_resized] 
        ;;[ptr_deref_2415_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2415_base_address_calculated &-> (ptr_deref_2415_base_addr_resize)
        ptr_deref_2415_base_address_resized <-& (ptr_deref_2415_base_addr_resize)
        ;;[ptr_deref_2415_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2415_base_address_resized &-> (ptr_deref_2415_base_plus_offset)
        ptr_deref_2415_root_address_calculated <-& (ptr_deref_2415_base_plus_offset)
        ;;[ptr_deref_2415_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2415_root_address_calculated &-> (ptr_deref_2415_word_addrgen)
        ptr_deref_2415_word_address_calculated <-& (ptr_deref_2415_word_addrgen)
        ;;[ptr_deref_2415_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2415_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2415_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2415_sample_start_ <-& (ptr_deref_2415_word_address_calculated)
        ptr_deref_2415_sample_start_ &-> (ptr_deref_2415_Sample)
        ptr_deref_2415_sample_completed_ <-& (ptr_deref_2415_Sample)
        ptr_deref_2415_sample_completed_ &-> ($null)
        ptr_deref_2415_update_start_ &-> (ptr_deref_2415_Update)
        ptr_deref_2415_update_completed_ <-& (ptr_deref_2415_Update)
        // start: Forward dependencies from scevgepx_xi34 to transition ptr_deref_2415_base_address_calculated
        // done: Forward dependencies from scevgepx_xi34 to transition ptr_deref_2415_base_address_calculated
        ptr_deref_2415_sample_start_ <-& (ptr_deref_2415_base_address_calculated)
        // Target expression
        // (as target) iNsTr_142
        // start: WAR dependencies for iNsTr_142
        // done: WAR dependencies for iNsTr_142
        // end:  		iNsTr_142 := ->(scevgepx_xi34)
        // start:  		iNsTr_143 := (xx_xneg1x_xi - iNsTr_142)
        //  file prog.linked.opt.aa, line 1018
        // Source expression
        // (xx_xneg1x_xi - iNsTr_142)
        $T[SUB_u16_u16_2420_sample_start_] 
        $T[SUB_u16_u16_2420_sample_completed_] 
        $T[SUB_u16_u16_2420_update_start_] 
        $T[SUB_u16_u16_2420_update_completed_] 
        // xx_xneg1x_xi
        // iNsTr_142
        // start: Forward dependencies from xx_xneg1x_xi to transition SUB_u16_u16_2420_sample_start_
        // done: Forward dependencies from xx_xneg1x_xi to transition SUB_u16_u16_2420_sample_start_
        // start: Forward dependencies from iNsTr_142 to transition SUB_u16_u16_2420_sample_start_
        SUB_u16_u16_2420_sample_start_ <-& (ptr_deref_2415_update_completed_)
        // done: Forward dependencies from iNsTr_142 to transition SUB_u16_u16_2420_sample_start_
        ;;[SUB_u16_u16_2420_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_2420_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_2420_sample_start_ &-> (SUB_u16_u16_2420_Sample)
        SUB_u16_u16_2420_sample_completed_ <-& (SUB_u16_u16_2420_Sample)
        SUB_u16_u16_2420_sample_completed_ &-> ($null)
        SUB_u16_u16_2420_update_start_ &-> (SUB_u16_u16_2420_Update)
        SUB_u16_u16_2420_update_completed_ <-& (SUB_u16_u16_2420_Update)
        // Target expression
        // (as target) iNsTr_143
        // start: WAR dependencies for iNsTr_143
        // done: WAR dependencies for iNsTr_143
        // end:  		iNsTr_143 := (xx_xneg1x_xi - iNsTr_142)
        // load-store dependencies..
      }
      assign_stmt_2416_to_assign_stmt_2421__entry__ |-> (assign_stmt_2416_to_assign_stmt_2421)
      assign_stmt_2416_to_assign_stmt_2421__exit__ <-| (assign_stmt_2416_to_assign_stmt_2421)
      ::[assign_stmt_2427_to_assign_stmt_2436] 
      {
        // start:  		iNsTr_145 := ->(scevgepx_xi34)
        //  file prog.linked.opt.aa, line 1022
        // Source expression
        // ->(scevgepx_xi34)
        $T[ptr_deref_2426_sample_start_] 
        $T[ptr_deref_2426_sample_completed_] 
        $T[ptr_deref_2426_update_start_] 
        $T[ptr_deref_2426_update_completed_] 
        $T[ptr_deref_2426_base_address_calculated] 
        // scevgepx_xi34
        $T[ptr_deref_2426_word_address_calculated] 
        $T[ptr_deref_2426_root_address_calculated] 
        $T[ptr_deref_2426_base_address_resized] 
        ;;[ptr_deref_2426_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2426_base_address_calculated &-> (ptr_deref_2426_base_addr_resize)
        ptr_deref_2426_base_address_resized <-& (ptr_deref_2426_base_addr_resize)
        ;;[ptr_deref_2426_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2426_base_address_resized &-> (ptr_deref_2426_base_plus_offset)
        ptr_deref_2426_root_address_calculated <-& (ptr_deref_2426_base_plus_offset)
        ;;[ptr_deref_2426_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2426_root_address_calculated &-> (ptr_deref_2426_word_addrgen)
        ptr_deref_2426_word_address_calculated <-& (ptr_deref_2426_word_addrgen)
        ;;[ptr_deref_2426_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2426_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2426_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2426_sample_start_ <-& (ptr_deref_2426_word_address_calculated)
        ptr_deref_2426_sample_start_ &-> (ptr_deref_2426_Sample)
        ptr_deref_2426_sample_completed_ <-& (ptr_deref_2426_Sample)
        ptr_deref_2426_sample_completed_ &-> ($null)
        ptr_deref_2426_update_start_ &-> (ptr_deref_2426_Update)
        ptr_deref_2426_update_completed_ <-& (ptr_deref_2426_Update)
        // start: Forward dependencies from scevgepx_xi34 to transition ptr_deref_2426_base_address_calculated
        // done: Forward dependencies from scevgepx_xi34 to transition ptr_deref_2426_base_address_calculated
        ptr_deref_2426_sample_start_ <-& (ptr_deref_2426_base_address_calculated)
        // Target expression
        // (as target) iNsTr_145
        // start: WAR dependencies for iNsTr_145
        // done: WAR dependencies for iNsTr_145
        // end:  		iNsTr_145 := ->(scevgepx_xi34)
        // start:  		iNsTr_146 := ->(scevgep18x_xi)
        //  file prog.linked.opt.aa, line 1023
        // Source expression
        // ->(scevgep18x_xi)
        $T[ptr_deref_2430_sample_start_] 
        $T[ptr_deref_2430_sample_completed_] 
        $T[ptr_deref_2430_update_start_] 
        $T[ptr_deref_2430_update_completed_] 
        $T[ptr_deref_2430_base_address_calculated] 
        // scevgep18x_xi
        $T[ptr_deref_2430_word_address_calculated] 
        $T[ptr_deref_2430_root_address_calculated] 
        $T[ptr_deref_2430_base_address_resized] 
        ;;[ptr_deref_2430_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2430_base_address_calculated &-> (ptr_deref_2430_base_addr_resize)
        ptr_deref_2430_base_address_resized <-& (ptr_deref_2430_base_addr_resize)
        ;;[ptr_deref_2430_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2430_base_address_resized &-> (ptr_deref_2430_base_plus_offset)
        ptr_deref_2430_root_address_calculated <-& (ptr_deref_2430_base_plus_offset)
        ;;[ptr_deref_2430_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2430_root_address_calculated &-> (ptr_deref_2430_word_addrgen)
        ptr_deref_2430_word_address_calculated <-& (ptr_deref_2430_word_addrgen)
        ;;[ptr_deref_2430_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2430_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2430_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2430_sample_start_ <-& (ptr_deref_2430_word_address_calculated)
        ptr_deref_2430_sample_start_ &-> (ptr_deref_2430_Sample)
        ptr_deref_2430_sample_completed_ <-& (ptr_deref_2430_Sample)
        ptr_deref_2430_sample_completed_ &-> ($null)
        ptr_deref_2430_update_start_ &-> (ptr_deref_2430_Update)
        ptr_deref_2430_update_completed_ <-& (ptr_deref_2430_Update)
        // start: Forward dependencies from scevgep18x_xi to transition ptr_deref_2430_base_address_calculated
        // done: Forward dependencies from scevgep18x_xi to transition ptr_deref_2430_base_address_calculated
        ptr_deref_2430_sample_start_ <-& (ptr_deref_2430_base_address_calculated)
        // Target expression
        // (as target) iNsTr_146
        // start: WAR dependencies for iNsTr_146
        // done: WAR dependencies for iNsTr_146
        // end:  		iNsTr_146 := ->(scevgep18x_xi)
        // start:  		iNsTr_147 := (iNsTr_146 - iNsTr_145)
        //  file prog.linked.opt.aa, line 1024
        // Source expression
        // (iNsTr_146 - iNsTr_145)
        $T[SUB_u16_u16_2435_sample_start_] 
        $T[SUB_u16_u16_2435_sample_completed_] 
        $T[SUB_u16_u16_2435_update_start_] 
        $T[SUB_u16_u16_2435_update_completed_] 
        // iNsTr_146
        // iNsTr_145
        // start: Forward dependencies from iNsTr_146 to transition SUB_u16_u16_2435_sample_start_
        SUB_u16_u16_2435_sample_start_ <-& (ptr_deref_2430_update_completed_)
        // done: Forward dependencies from iNsTr_146 to transition SUB_u16_u16_2435_sample_start_
        // start: Forward dependencies from iNsTr_145 to transition SUB_u16_u16_2435_sample_start_
        SUB_u16_u16_2435_sample_start_ <-& (ptr_deref_2426_update_completed_)
        // done: Forward dependencies from iNsTr_145 to transition SUB_u16_u16_2435_sample_start_
        ;;[SUB_u16_u16_2435_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_2435_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_2435_sample_start_ &-> (SUB_u16_u16_2435_Sample)
        SUB_u16_u16_2435_sample_completed_ <-& (SUB_u16_u16_2435_Sample)
        SUB_u16_u16_2435_sample_completed_ &-> ($null)
        SUB_u16_u16_2435_update_start_ &-> (SUB_u16_u16_2435_Update)
        SUB_u16_u16_2435_update_completed_ <-& (SUB_u16_u16_2435_Update)
        // Target expression
        // (as target) iNsTr_147
        // start: WAR dependencies for iNsTr_147
        // done: WAR dependencies for iNsTr_147
        // end:  		iNsTr_147 := (iNsTr_146 - iNsTr_145)
        // load-store dependencies..
      }
      assign_stmt_2427_to_assign_stmt_2436__entry__ |-> (assign_stmt_2427_to_assign_stmt_2436)
      assign_stmt_2427_to_assign_stmt_2436__exit__ <-| (assign_stmt_2427_to_assign_stmt_2436)
      ::[assign_stmt_2457] 
      {
        // start:  		iNsTr_150 := (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1030
        // Source expression
        // (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2456_sample_start_] 
        $T[EQ_u16_u1_2456_sample_completed_] 
        $T[EQ_u16_u1_2456_update_start_] 
        $T[EQ_u16_u1_2456_update_completed_] 
        // rangex_x0x_xi
        // start: Forward dependencies from rangex_x0x_xi to transition EQ_u16_u1_2456_sample_start_
        // done: Forward dependencies from rangex_x0x_xi to transition EQ_u16_u1_2456_sample_start_
        ;;[EQ_u16_u1_2456_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2456_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2456_sample_start_ &-> (EQ_u16_u1_2456_Sample)
        EQ_u16_u1_2456_sample_completed_ <-& (EQ_u16_u1_2456_Sample)
        EQ_u16_u1_2456_sample_completed_ &-> ($null)
        EQ_u16_u1_2456_update_start_ &-> (EQ_u16_u1_2456_Update)
        EQ_u16_u1_2456_update_completed_ <-& (EQ_u16_u1_2456_Update)
        // Target expression
        // (as target) iNsTr_150
        // start: WAR dependencies for iNsTr_150
        // done: WAR dependencies for iNsTr_150
        // end:  		iNsTr_150 := (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2457__entry__ |-> (assign_stmt_2457)
      assign_stmt_2457__exit__ <-| (assign_stmt_2457)
      // if-statement  
      //  file prog.linked.opt.aa, line 1031
      ;;[if_stmt_2458_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2458__entry__ |-> (if_stmt_2458_dead_link)
      if_stmt_2458__exit__ <-| (if_stmt_2458_dead_link)
      ;;[if_stmt_2458_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2458__entry__ |-> (if_stmt_2458_eval_test)
      $P [R_iNsTr_150_2459_place]
      R_iNsTr_150_2459_place <-| (if_stmt_2458_eval_test)
      ;;[if_stmt_2458_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2458_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_150_2459_place |-> (if_stmt_2458_if_link if_stmt_2458_else_link)
      $P [bb_44_xx_x_crit_edgex_xi]
      bb_44_xx_x_crit_edgex_xi <-| (if_stmt_2458_if_link)
      $P [bb_44_bbx_xnphx_xi36]
      bb_44_bbx_xnphx_xi36 <-| (if_stmt_2458_else_link)
      ::[assign_stmt_2470] 
      {
        // start:  		tmpx_xi35 := (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1038
        // Source expression
        // (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_2469_sample_start_] 
        $T[ADD_u16_u16_2469_sample_completed_] 
        $T[ADD_u16_u16_2469_update_start_] 
        $T[ADD_u16_u16_2469_update_completed_] 
        // iNsTr_149
        // start: Forward dependencies from iNsTr_149 to transition ADD_u16_u16_2469_sample_start_
        // done: Forward dependencies from iNsTr_149 to transition ADD_u16_u16_2469_sample_start_
        ;;[ADD_u16_u16_2469_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2469_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2469_sample_start_ &-> (ADD_u16_u16_2469_Sample)
        ADD_u16_u16_2469_sample_completed_ <-& (ADD_u16_u16_2469_Sample)
        ADD_u16_u16_2469_sample_completed_ &-> ($null)
        ADD_u16_u16_2469_update_start_ &-> (ADD_u16_u16_2469_Update)
        ADD_u16_u16_2469_update_completed_ <-& (ADD_u16_u16_2469_Update)
        // Target expression
        // (as target) tmpx_xi35
        // start: WAR dependencies for tmpx_xi35
        // done: WAR dependencies for tmpx_xi35
        // end:  		tmpx_xi35 := (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // load-store dependencies..
      }
      assign_stmt_2470__entry__ |-> (assign_stmt_2470)
      assign_stmt_2470__exit__ <-| (assign_stmt_2470)
      ::[assign_stmt_2485_to_assign_stmt_2557] 
      {
        // start:  		tmp6x_xi := (tmpx_xi35 + colx_x02x_xi)
        //  file prog.linked.opt.aa, line 1043
        // Source expression
        // (tmpx_xi35 + colx_x02x_xi)
        $T[ADD_u16_u16_2484_sample_start_] 
        $T[ADD_u16_u16_2484_sample_completed_] 
        $T[ADD_u16_u16_2484_update_start_] 
        $T[ADD_u16_u16_2484_update_completed_] 
        // tmpx_xi35
        // colx_x02x_xi
        // start: Forward dependencies from tmpx_xi35 to transition ADD_u16_u16_2484_sample_start_
        // done: Forward dependencies from tmpx_xi35 to transition ADD_u16_u16_2484_sample_start_
        // start: Forward dependencies from colx_x02x_xi to transition ADD_u16_u16_2484_sample_start_
        // done: Forward dependencies from colx_x02x_xi to transition ADD_u16_u16_2484_sample_start_
        ;;[ADD_u16_u16_2484_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2484_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2484_sample_start_ &-> (ADD_u16_u16_2484_Sample)
        ADD_u16_u16_2484_sample_completed_ <-& (ADD_u16_u16_2484_Sample)
        ADD_u16_u16_2484_sample_completed_ &-> ($null)
        ADD_u16_u16_2484_update_start_ &-> (ADD_u16_u16_2484_Update)
        ADD_u16_u16_2484_update_completed_ <-& (ADD_u16_u16_2484_Update)
        // Target expression
        // (as target) tmp6x_xi
        // start: WAR dependencies for tmp6x_xi
        // done: WAR dependencies for tmp6x_xi
        // end:  		tmp6x_xi := (tmpx_xi35 + colx_x02x_xi)
        // start:  		iNsTr_155 := ($cast ($uint<64>) tmp6x_xi )
        //  file prog.linked.opt.aa, line 1044
        // Source expression
        // ($cast ($uint<64>) tmp6x_xi )
        $T[type_cast_2488_sample_start_] 
        $T[type_cast_2488_sample_completed_] 
        $T[type_cast_2488_update_start_] 
        $T[type_cast_2488_update_completed_] 
        // tmp6x_xi
        // start: Forward dependencies from tmp6x_xi to transition type_cast_2488_sample_start_
        type_cast_2488_sample_start_ <-& (ADD_u16_u16_2484_update_completed_)
        // done: Forward dependencies from tmp6x_xi to transition type_cast_2488_sample_start_
        ;;[type_cast_2488_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2488_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2488_sample_start_ &-> (type_cast_2488_Sample)
        type_cast_2488_sample_completed_ <-& (type_cast_2488_Sample)
        type_cast_2488_sample_completed_ &-> ($null)
        type_cast_2488_update_start_ &-> (type_cast_2488_Update)
        type_cast_2488_update_completed_ <-& (type_cast_2488_Update)
        // Target expression
        // (as target) iNsTr_155
        // start: WAR dependencies for iNsTr_155
        // done: WAR dependencies for iNsTr_155
        // end:  		iNsTr_155 := ($cast ($uint<64>) tmp6x_xi )
        // start:  		iNsTr_156 := (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 1045
        // Source expression
        // (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_2494_sample_start_] 
        $T[ADD_u64_u64_2494_sample_completed_] 
        $T[ADD_u64_u64_2494_update_start_] 
        $T[ADD_u64_u64_2494_update_completed_] 
        // iNsTr_155
        // start: Forward dependencies from iNsTr_155 to transition ADD_u64_u64_2494_sample_start_
        ADD_u64_u64_2494_sample_start_ <-& (type_cast_2488_update_completed_)
        // done: Forward dependencies from iNsTr_155 to transition ADD_u64_u64_2494_sample_start_
        ;;[ADD_u64_u64_2494_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2494_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2494_sample_start_ &-> (ADD_u64_u64_2494_Sample)
        ADD_u64_u64_2494_sample_completed_ <-& (ADD_u64_u64_2494_Sample)
        ADD_u64_u64_2494_sample_completed_ &-> ($null)
        ADD_u64_u64_2494_update_start_ &-> (ADD_u64_u64_2494_Update)
        ADD_u64_u64_2494_update_completed_ <-& (ADD_u64_u64_2494_Update)
        // Target expression
        // (as target) iNsTr_156
        // start: WAR dependencies for iNsTr_156
        // done: WAR dependencies for iNsTr_156
        // end:  		iNsTr_156 := (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		iNsTr_157 := @(mem[iNsTr_156])
        //  file prog.linked.opt.aa, line 1046
        // Source expression
        // @(mem[iNsTr_156])
        $T[addr_of_2499_sample_start_] 
        $T[addr_of_2499_sample_completed_] 
        $T[addr_of_2499_update_start_] 
        $T[addr_of_2499_update_completed_] 
        $T[array_obj_ref_2498_root_address_calculated] 
        $T[array_obj_ref_2498_offset_calculated] 
        $T[array_obj_ref_2498_index_resized_0] 
        $T[array_obj_ref_2498_index_scaled_0] 
        $T[array_obj_ref_2498_index_computed_0] 
        // iNsTr_156
        // start: Forward dependencies from iNsTr_156 to transition array_obj_ref_2498_index_computed_0
        array_obj_ref_2498_index_computed_0 <-& (ADD_u64_u64_2494_update_completed_)
        // done: Forward dependencies from iNsTr_156 to transition array_obj_ref_2498_index_computed_0
        ;;[array_obj_ref_2498_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2498_index_computed_0 &-> (array_obj_ref_2498_index_resize_0)
        array_obj_ref_2498_index_resized_0 <-& (array_obj_ref_2498_index_resize_0)
        ;;[array_obj_ref_2498_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2498_index_resized_0 &-> (array_obj_ref_2498_index_scale_0)
        array_obj_ref_2498_index_scaled_0 <-& (array_obj_ref_2498_index_scale_0)
        ;;[array_obj_ref_2498_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2498_index_scaled_0 &-> (array_obj_ref_2498_final_index_sum_regn)
        array_obj_ref_2498_offset_calculated <-& (array_obj_ref_2498_final_index_sum_regn)
        ;;[array_obj_ref_2498_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2498_offset_calculated &-> (array_obj_ref_2498_base_plus_offset)
        array_obj_ref_2498_root_address_calculated <-& (array_obj_ref_2498_base_plus_offset)
        ;;[addr_of_2499_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2499_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2499_sample_start_ <-& (array_obj_ref_2498_root_address_calculated)
        addr_of_2499_sample_start_ &-> (addr_of_2499_request)
        addr_of_2499_sample_completed_ <-& (addr_of_2499_request)
        addr_of_2499_update_start_ &-> (addr_of_2499_complete)
        addr_of_2499_update_completed_ <-& (addr_of_2499_complete)
        // Target expression
        // (as target) iNsTr_157
        // start: WAR dependencies for iNsTr_157
        // done: WAR dependencies for iNsTr_157
        // end:  		iNsTr_157 := @(mem[iNsTr_156])
        // start:  		iNsTr_158 := ->(iNsTr_157)
        //  file prog.linked.opt.aa, line 1047
        // Source expression
        // ->(iNsTr_157)
        $T[ptr_deref_2503_sample_start_] 
        $T[ptr_deref_2503_sample_completed_] 
        $T[ptr_deref_2503_update_start_] 
        $T[ptr_deref_2503_update_completed_] 
        $T[ptr_deref_2503_base_address_calculated] 
        // iNsTr_157
        $T[ptr_deref_2503_word_address_calculated] 
        $T[ptr_deref_2503_root_address_calculated] 
        $T[ptr_deref_2503_base_address_resized] 
        ;;[ptr_deref_2503_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2503_base_address_calculated &-> (ptr_deref_2503_base_addr_resize)
        ptr_deref_2503_base_address_resized <-& (ptr_deref_2503_base_addr_resize)
        ;;[ptr_deref_2503_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2503_base_address_resized &-> (ptr_deref_2503_base_plus_offset)
        ptr_deref_2503_root_address_calculated <-& (ptr_deref_2503_base_plus_offset)
        ;;[ptr_deref_2503_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2503_root_address_calculated &-> (ptr_deref_2503_word_addrgen)
        ptr_deref_2503_word_address_calculated <-& (ptr_deref_2503_word_addrgen)
        ;;[ptr_deref_2503_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2503_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2503_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2503_sample_start_ <-& (ptr_deref_2503_word_address_calculated)
        ptr_deref_2503_sample_start_ &-> (ptr_deref_2503_Sample)
        ptr_deref_2503_sample_completed_ <-& (ptr_deref_2503_Sample)
        ptr_deref_2503_sample_completed_ &-> ($null)
        ptr_deref_2503_update_start_ &-> (ptr_deref_2503_Update)
        ptr_deref_2503_update_completed_ <-& (ptr_deref_2503_Update)
        // start: Forward dependencies from iNsTr_157 to transition ptr_deref_2503_base_address_calculated
        ptr_deref_2503_base_address_calculated <-& (addr_of_2499_update_completed_)
        // done: Forward dependencies from iNsTr_157 to transition ptr_deref_2503_base_address_calculated
        ptr_deref_2503_sample_start_ <-& (ptr_deref_2503_base_address_calculated)
        // Target expression
        // (as target) iNsTr_158
        // start: WAR dependencies for iNsTr_158
        // done: WAR dependencies for iNsTr_158
        // end:  		iNsTr_158 := ->(iNsTr_157)
        // start:  		iNsTr_159 := (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1048
        // Source expression
        // (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_2509_sample_start_] 
        $T[ADD_u16_u16_2509_sample_completed_] 
        $T[ADD_u16_u16_2509_update_start_] 
        $T[ADD_u16_u16_2509_update_completed_] 
        // iNsTr_158
        // start: Forward dependencies from iNsTr_158 to transition ADD_u16_u16_2509_sample_start_
        ADD_u16_u16_2509_sample_start_ <-& (ptr_deref_2503_update_completed_)
        // done: Forward dependencies from iNsTr_158 to transition ADD_u16_u16_2509_sample_start_
        ;;[ADD_u16_u16_2509_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2509_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2509_sample_start_ &-> (ADD_u16_u16_2509_Sample)
        ADD_u16_u16_2509_sample_completed_ <-& (ADD_u16_u16_2509_Sample)
        ADD_u16_u16_2509_sample_completed_ &-> ($null)
        ADD_u16_u16_2509_update_start_ &-> (ADD_u16_u16_2509_Update)
        ADD_u16_u16_2509_update_completed_ <-& (ADD_u16_u16_2509_Update)
        // Target expression
        // (as target) iNsTr_159
        // start: WAR dependencies for iNsTr_159
        // done: WAR dependencies for iNsTr_159
        // end:  		iNsTr_159 := (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_160 := ($cast ($uint<64>) iNsTr_159 )
        //  file prog.linked.opt.aa, line 1049
        // Source expression
        // ($cast ($uint<64>) iNsTr_159 )
        $T[type_cast_2513_sample_start_] 
        $T[type_cast_2513_sample_completed_] 
        $T[type_cast_2513_update_start_] 
        $T[type_cast_2513_update_completed_] 
        // iNsTr_159
        // start: Forward dependencies from iNsTr_159 to transition type_cast_2513_sample_start_
        type_cast_2513_sample_start_ <-& (ADD_u16_u16_2509_update_completed_)
        // done: Forward dependencies from iNsTr_159 to transition type_cast_2513_sample_start_
        ;;[type_cast_2513_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2513_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2513_sample_start_ &-> (type_cast_2513_Sample)
        type_cast_2513_sample_completed_ <-& (type_cast_2513_Sample)
        type_cast_2513_sample_completed_ &-> ($null)
        type_cast_2513_update_start_ &-> (type_cast_2513_Update)
        type_cast_2513_update_completed_ <-& (type_cast_2513_Update)
        // Target expression
        // (as target) iNsTr_160
        // start: WAR dependencies for iNsTr_160
        // done: WAR dependencies for iNsTr_160
        // end:  		iNsTr_160 := ($cast ($uint<64>) iNsTr_159 )
        // start:  		iNsTr_161 := @(aPosteriori[iNsTr_160])
        //  file prog.linked.opt.aa, line 1050
        // Source expression
        // @(aPosteriori[iNsTr_160])
        $T[addr_of_2518_sample_start_] 
        $T[addr_of_2518_sample_completed_] 
        $T[addr_of_2518_update_start_] 
        $T[addr_of_2518_update_completed_] 
        $T[array_obj_ref_2517_root_address_calculated] 
        $T[array_obj_ref_2517_offset_calculated] 
        $T[array_obj_ref_2517_index_resized_0] 
        $T[array_obj_ref_2517_index_scaled_0] 
        $T[array_obj_ref_2517_index_computed_0] 
        // iNsTr_160
        // start: Forward dependencies from iNsTr_160 to transition array_obj_ref_2517_index_computed_0
        array_obj_ref_2517_index_computed_0 <-& (type_cast_2513_update_completed_)
        // done: Forward dependencies from iNsTr_160 to transition array_obj_ref_2517_index_computed_0
        ;;[array_obj_ref_2517_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2517_index_computed_0 &-> (array_obj_ref_2517_index_resize_0)
        array_obj_ref_2517_index_resized_0 <-& (array_obj_ref_2517_index_resize_0)
        ;;[array_obj_ref_2517_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2517_index_resized_0 &-> (array_obj_ref_2517_index_scale_0)
        array_obj_ref_2517_index_scaled_0 <-& (array_obj_ref_2517_index_scale_0)
        ;;[array_obj_ref_2517_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2517_index_scaled_0 &-> (array_obj_ref_2517_final_index_sum_regn)
        array_obj_ref_2517_offset_calculated <-& (array_obj_ref_2517_final_index_sum_regn)
        ;;[array_obj_ref_2517_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2517_offset_calculated &-> (array_obj_ref_2517_base_plus_offset)
        array_obj_ref_2517_root_address_calculated <-& (array_obj_ref_2517_base_plus_offset)
        ;;[addr_of_2518_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2518_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2518_sample_start_ <-& (array_obj_ref_2517_root_address_calculated)
        addr_of_2518_sample_start_ &-> (addr_of_2518_request)
        addr_of_2518_sample_completed_ <-& (addr_of_2518_request)
        addr_of_2518_update_start_ &-> (addr_of_2518_complete)
        addr_of_2518_update_completed_ <-& (addr_of_2518_complete)
        // Target expression
        // (as target) iNsTr_161
        // start: WAR dependencies for iNsTr_161
        // done: WAR dependencies for iNsTr_161
        // end:  		iNsTr_161 := @(aPosteriori[iNsTr_160])
        // start:  		iNsTr_162 := ->(iNsTr_161)
        //  file prog.linked.opt.aa, line 1051
        // Source expression
        // ->(iNsTr_161)
        $T[ptr_deref_2522_sample_start_] 
        $T[ptr_deref_2522_sample_completed_] 
        $T[ptr_deref_2522_update_start_] 
        $T[ptr_deref_2522_update_completed_] 
        $T[ptr_deref_2522_base_address_calculated] 
        // iNsTr_161
        $T[ptr_deref_2522_word_address_calculated] 
        $T[ptr_deref_2522_root_address_calculated] 
        $T[ptr_deref_2522_base_address_resized] 
        ;;[ptr_deref_2522_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2522_base_address_calculated &-> (ptr_deref_2522_base_addr_resize)
        ptr_deref_2522_base_address_resized <-& (ptr_deref_2522_base_addr_resize)
        ;;[ptr_deref_2522_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2522_base_address_resized &-> (ptr_deref_2522_base_plus_offset)
        ptr_deref_2522_root_address_calculated <-& (ptr_deref_2522_base_plus_offset)
        ;;[ptr_deref_2522_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2522_root_address_calculated &-> (ptr_deref_2522_word_addrgen)
        ptr_deref_2522_word_address_calculated <-& (ptr_deref_2522_word_addrgen)
        ;;[ptr_deref_2522_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2522_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2522_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2522_sample_start_ <-& (ptr_deref_2522_word_address_calculated)
        ptr_deref_2522_sample_start_ &-> (ptr_deref_2522_Sample)
        ptr_deref_2522_sample_completed_ <-& (ptr_deref_2522_Sample)
        ptr_deref_2522_sample_completed_ &-> ($null)
        ptr_deref_2522_update_start_ &-> (ptr_deref_2522_Update)
        ptr_deref_2522_update_completed_ <-& (ptr_deref_2522_Update)
        // start: Forward dependencies from iNsTr_161 to transition ptr_deref_2522_base_address_calculated
        ptr_deref_2522_base_address_calculated <-& (addr_of_2518_update_completed_)
        // done: Forward dependencies from iNsTr_161 to transition ptr_deref_2522_base_address_calculated
        ptr_deref_2522_sample_start_ <-& (ptr_deref_2522_base_address_calculated)
        // Target expression
        // (as target) iNsTr_162
        // start: WAR dependencies for iNsTr_162
        // done: WAR dependencies for iNsTr_162
        // end:  		iNsTr_162 := ->(iNsTr_161)
        // start:  		iNsTr_163 := @(ext_info[iNsTr_155])
        //  file prog.linked.opt.aa, line 1052
        // Source expression
        // @(ext_info[iNsTr_155])
        $T[addr_of_2527_sample_start_] 
        $T[addr_of_2527_sample_completed_] 
        $T[addr_of_2527_update_start_] 
        $T[addr_of_2527_update_completed_] 
        $T[array_obj_ref_2526_root_address_calculated] 
        $T[array_obj_ref_2526_offset_calculated] 
        $T[array_obj_ref_2526_index_resized_0] 
        $T[array_obj_ref_2526_index_scaled_0] 
        $T[array_obj_ref_2526_index_computed_0] 
        // iNsTr_155
        // start: Forward dependencies from iNsTr_155 to transition array_obj_ref_2526_index_computed_0
        array_obj_ref_2526_index_computed_0 <-& (type_cast_2488_update_completed_)
        // done: Forward dependencies from iNsTr_155 to transition array_obj_ref_2526_index_computed_0
        ;;[array_obj_ref_2526_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2526_index_computed_0 &-> (array_obj_ref_2526_index_resize_0)
        array_obj_ref_2526_index_resized_0 <-& (array_obj_ref_2526_index_resize_0)
        ;;[array_obj_ref_2526_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2526_index_resized_0 &-> (array_obj_ref_2526_index_scale_0)
        array_obj_ref_2526_index_scaled_0 <-& (array_obj_ref_2526_index_scale_0)
        ;;[array_obj_ref_2526_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2526_index_scaled_0 &-> (array_obj_ref_2526_final_index_sum_regn)
        array_obj_ref_2526_offset_calculated <-& (array_obj_ref_2526_final_index_sum_regn)
        ;;[array_obj_ref_2526_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2526_offset_calculated &-> (array_obj_ref_2526_base_plus_offset)
        array_obj_ref_2526_root_address_calculated <-& (array_obj_ref_2526_base_plus_offset)
        ;;[addr_of_2527_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2527_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2527_sample_start_ <-& (array_obj_ref_2526_root_address_calculated)
        addr_of_2527_sample_start_ &-> (addr_of_2527_request)
        addr_of_2527_sample_completed_ <-& (addr_of_2527_request)
        addr_of_2527_update_start_ &-> (addr_of_2527_complete)
        addr_of_2527_update_completed_ <-& (addr_of_2527_complete)
        // Target expression
        // (as target) iNsTr_163
        // start: WAR dependencies for iNsTr_163
        // done: WAR dependencies for iNsTr_163
        // end:  		iNsTr_163 := @(ext_info[iNsTr_155])
        // start:  		iNsTr_164 := ->(iNsTr_163)
        //  file prog.linked.opt.aa, line 1053
        // Source expression
        // ->(iNsTr_163)
        $T[ptr_deref_2531_sample_start_] 
        $T[ptr_deref_2531_sample_completed_] 
        $T[ptr_deref_2531_update_start_] 
        $T[ptr_deref_2531_update_completed_] 
        $T[ptr_deref_2531_base_address_calculated] 
        // iNsTr_163
        $T[ptr_deref_2531_word_address_calculated] 
        $T[ptr_deref_2531_root_address_calculated] 
        $T[ptr_deref_2531_base_address_resized] 
        ;;[ptr_deref_2531_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2531_base_address_calculated &-> (ptr_deref_2531_base_addr_resize)
        ptr_deref_2531_base_address_resized <-& (ptr_deref_2531_base_addr_resize)
        ;;[ptr_deref_2531_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2531_base_address_resized &-> (ptr_deref_2531_base_plus_offset)
        ptr_deref_2531_root_address_calculated <-& (ptr_deref_2531_base_plus_offset)
        ;;[ptr_deref_2531_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2531_root_address_calculated &-> (ptr_deref_2531_word_addrgen)
        ptr_deref_2531_word_address_calculated <-& (ptr_deref_2531_word_addrgen)
        ;;[ptr_deref_2531_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2531_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2531_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2531_sample_start_ <-& (ptr_deref_2531_word_address_calculated)
        ptr_deref_2531_sample_start_ &-> (ptr_deref_2531_Sample)
        ptr_deref_2531_sample_completed_ <-& (ptr_deref_2531_Sample)
        ptr_deref_2531_sample_completed_ &-> ($null)
        ptr_deref_2531_update_start_ &-> (ptr_deref_2531_Update)
        ptr_deref_2531_update_completed_ <-& (ptr_deref_2531_Update)
        // start: Forward dependencies from iNsTr_163 to transition ptr_deref_2531_base_address_calculated
        ptr_deref_2531_base_address_calculated <-& (addr_of_2527_update_completed_)
        // done: Forward dependencies from iNsTr_163 to transition ptr_deref_2531_base_address_calculated
        ptr_deref_2531_sample_start_ <-& (ptr_deref_2531_base_address_calculated)
        // Target expression
        // (as target) iNsTr_164
        // start: WAR dependencies for iNsTr_164
        // done: WAR dependencies for iNsTr_164
        // end:  		iNsTr_164 := ->(iNsTr_163)
        // start:  		iNsTr_165 := (iNsTr_162 - iNsTr_164)
        //  file prog.linked.opt.aa, line 1054
        // Source expression
        // (iNsTr_162 - iNsTr_164)
        $T[SUB_f32_f32_2536_sample_start_] 
        $T[SUB_f32_f32_2536_sample_completed_] 
        $T[SUB_f32_f32_2536_update_start_] 
        $T[SUB_f32_f32_2536_update_completed_] 
        // iNsTr_162
        // iNsTr_164
        // start: Forward dependencies from iNsTr_162 to transition SUB_f32_f32_2536_sample_start_
        SUB_f32_f32_2536_sample_start_ <-& (ptr_deref_2522_update_completed_)
        // done: Forward dependencies from iNsTr_162 to transition SUB_f32_f32_2536_sample_start_
        // start: Forward dependencies from iNsTr_164 to transition SUB_f32_f32_2536_sample_start_
        SUB_f32_f32_2536_sample_start_ <-& (ptr_deref_2531_update_completed_)
        // done: Forward dependencies from iNsTr_164 to transition SUB_f32_f32_2536_sample_start_
        ;;[SUB_f32_f32_2536_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_2536_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_2536_sample_start_ &-> (SUB_f32_f32_2536_Sample)
        SUB_f32_f32_2536_sample_completed_ <-& (SUB_f32_f32_2536_Sample)
        SUB_f32_f32_2536_sample_completed_ &-> ($null)
        SUB_f32_f32_2536_update_start_ &-> (SUB_f32_f32_2536_Update)
        SUB_f32_f32_2536_update_completed_ <-& (SUB_f32_f32_2536_Update)
        // Target expression
        // (as target) iNsTr_165
        // start: WAR dependencies for iNsTr_165
        // done: WAR dependencies for iNsTr_165
        // end:  		iNsTr_165 := (iNsTr_162 - iNsTr_164)
        // start:  		iNsTr_166 := @(message[iNsTr_155])
        //  file prog.linked.opt.aa, line 1055
        // Source expression
        // @(message[iNsTr_155])
        $T[addr_of_2541_sample_start_] 
        $T[addr_of_2541_sample_completed_] 
        $T[addr_of_2541_update_start_] 
        $T[addr_of_2541_update_completed_] 
        $T[array_obj_ref_2540_root_address_calculated] 
        $T[array_obj_ref_2540_offset_calculated] 
        $T[array_obj_ref_2540_index_resized_0] 
        $T[array_obj_ref_2540_index_scaled_0] 
        $T[array_obj_ref_2540_index_computed_0] 
        // iNsTr_155
        // start: Forward dependencies from iNsTr_155 to transition array_obj_ref_2540_index_computed_0
        array_obj_ref_2540_index_computed_0 <-& (type_cast_2488_update_completed_)
        // done: Forward dependencies from iNsTr_155 to transition array_obj_ref_2540_index_computed_0
        ;;[array_obj_ref_2540_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2540_index_computed_0 &-> (array_obj_ref_2540_index_resize_0)
        array_obj_ref_2540_index_resized_0 <-& (array_obj_ref_2540_index_resize_0)
        ;;[array_obj_ref_2540_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2540_index_resized_0 &-> (array_obj_ref_2540_index_scale_0)
        array_obj_ref_2540_index_scaled_0 <-& (array_obj_ref_2540_index_scale_0)
        ;;[array_obj_ref_2540_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2540_index_scaled_0 &-> (array_obj_ref_2540_final_index_sum_regn)
        array_obj_ref_2540_offset_calculated <-& (array_obj_ref_2540_final_index_sum_regn)
        ;;[array_obj_ref_2540_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2540_offset_calculated &-> (array_obj_ref_2540_base_plus_offset)
        array_obj_ref_2540_root_address_calculated <-& (array_obj_ref_2540_base_plus_offset)
        ;;[addr_of_2541_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2541_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2541_sample_start_ <-& (array_obj_ref_2540_root_address_calculated)
        addr_of_2541_sample_start_ &-> (addr_of_2541_request)
        addr_of_2541_sample_completed_ <-& (addr_of_2541_request)
        addr_of_2541_update_start_ &-> (addr_of_2541_complete)
        addr_of_2541_update_completed_ <-& (addr_of_2541_complete)
        // Target expression
        // (as target) iNsTr_166
        // start: WAR dependencies for iNsTr_166
        // done: WAR dependencies for iNsTr_166
        // end:  		iNsTr_166 := @(message[iNsTr_155])
        // start:  		->(iNsTr_166) := iNsTr_165
        //  file prog.linked.opt.aa, line 1056
        // Source expression
        // iNsTr_165
        // Target expression
        // ->(iNsTr_166)
        $T[ptr_deref_2544_sample_start_] 
        $T[ptr_deref_2544_sample_completed_] 
        $T[ptr_deref_2544_update_start_] 
        $T[ptr_deref_2544_update_completed_] 
        $T[ptr_deref_2544_base_address_calculated] 
        // iNsTr_166
        $T[ptr_deref_2544_word_address_calculated] 
        $T[ptr_deref_2544_root_address_calculated] 
        $T[ptr_deref_2544_base_address_resized] 
        ;;[ptr_deref_2544_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2544_base_address_calculated &-> (ptr_deref_2544_base_addr_resize)
        ptr_deref_2544_base_address_resized <-& (ptr_deref_2544_base_addr_resize)
        ;;[ptr_deref_2544_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2544_base_address_resized &-> (ptr_deref_2544_base_plus_offset)
        ptr_deref_2544_root_address_calculated <-& (ptr_deref_2544_base_plus_offset)
        ;;[ptr_deref_2544_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2544_root_address_calculated &-> (ptr_deref_2544_word_addrgen)
        ptr_deref_2544_word_address_calculated <-& (ptr_deref_2544_word_addrgen)
        ;;[ptr_deref_2544_Sample] 
        {
          ;;[ptr_deref_2544_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2544_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_2544_sample_start_ <-& (ptr_deref_2544_word_address_calculated)
        ptr_deref_2544_sample_start_ &-> (ptr_deref_2544_Sample)
        ptr_deref_2544_sample_completed_ <-& (ptr_deref_2544_Sample)
        ptr_deref_2544_sample_completed_ &-> ($null)
        ptr_deref_2544_update_start_ &-> (ptr_deref_2544_Update)
        ptr_deref_2544_update_completed_ <-& (ptr_deref_2544_Update)
        // start: Forward dependencies from iNsTr_166 to transition ptr_deref_2544_base_address_calculated
        ptr_deref_2544_base_address_calculated <-& (addr_of_2541_update_completed_)
        // done: Forward dependencies from iNsTr_166 to transition ptr_deref_2544_base_address_calculated
        ptr_deref_2544_sample_start_ <-& (ptr_deref_2544_base_address_calculated)
        // start: Forward dependencies from iNsTr_165 to transition ptr_deref_2544_sample_start_
        ptr_deref_2544_sample_start_ <-& (SUB_f32_f32_2536_update_completed_)
        // done: Forward dependencies from iNsTr_165 to transition ptr_deref_2544_sample_start_
        // end:  		->(iNsTr_166) := iNsTr_165
        // start:  		iNsTr_168 := (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1057
        // Source expression
        // (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_2551_sample_start_] 
        $T[ADD_u16_u16_2551_sample_completed_] 
        $T[ADD_u16_u16_2551_update_start_] 
        $T[ADD_u16_u16_2551_update_completed_] 
        // colx_x02x_xi
        // start: Forward dependencies from colx_x02x_xi to transition ADD_u16_u16_2551_sample_start_
        // done: Forward dependencies from colx_x02x_xi to transition ADD_u16_u16_2551_sample_start_
        ;;[ADD_u16_u16_2551_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2551_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2551_sample_start_ &-> (ADD_u16_u16_2551_Sample)
        ADD_u16_u16_2551_sample_completed_ <-& (ADD_u16_u16_2551_Sample)
        ADD_u16_u16_2551_sample_completed_ &-> ($null)
        ADD_u16_u16_2551_update_start_ &-> (ADD_u16_u16_2551_Update)
        ADD_u16_u16_2551_update_completed_ <-& (ADD_u16_u16_2551_Update)
        // Target expression
        // (as target) iNsTr_168
        // start: WAR dependencies for iNsTr_168
        // done: WAR dependencies for iNsTr_168
        // end:  		iNsTr_168 := (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		exitcond5 := (iNsTr_168 == rangex_x0x_xi)
        //  file prog.linked.opt.aa, line 1058
        // Source expression
        // (iNsTr_168 == rangex_x0x_xi)
        $T[EQ_u16_u1_2556_sample_start_] 
        $T[EQ_u16_u1_2556_sample_completed_] 
        $T[EQ_u16_u1_2556_update_start_] 
        $T[EQ_u16_u1_2556_update_completed_] 
        // iNsTr_168
        // rangex_x0x_xi
        // start: Forward dependencies from iNsTr_168 to transition EQ_u16_u1_2556_sample_start_
        EQ_u16_u1_2556_sample_start_ <-& (ADD_u16_u16_2551_update_completed_)
        // done: Forward dependencies from iNsTr_168 to transition EQ_u16_u1_2556_sample_start_
        // start: Forward dependencies from rangex_x0x_xi to transition EQ_u16_u1_2556_sample_start_
        // done: Forward dependencies from rangex_x0x_xi to transition EQ_u16_u1_2556_sample_start_
        ;;[EQ_u16_u1_2556_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2556_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2556_sample_start_ &-> (EQ_u16_u1_2556_Sample)
        EQ_u16_u1_2556_sample_completed_ <-& (EQ_u16_u1_2556_Sample)
        EQ_u16_u1_2556_sample_completed_ &-> ($null)
        EQ_u16_u1_2556_update_start_ &-> (EQ_u16_u1_2556_Update)
        EQ_u16_u1_2556_update_completed_ <-& (EQ_u16_u1_2556_Update)
        // Target expression
        // (as target) exitcond5
        // start: WAR dependencies for exitcond5
        // done: WAR dependencies for exitcond5
        // end:  		exitcond5 := (iNsTr_168 == rangex_x0x_xi)
        // load-store dependencies..
      }
      assign_stmt_2485_to_assign_stmt_2557__entry__ |-> (assign_stmt_2485_to_assign_stmt_2557)
      assign_stmt_2485_to_assign_stmt_2557__exit__ <-| (assign_stmt_2485_to_assign_stmt_2557)
      // if-statement  
      //  file prog.linked.opt.aa, line 1059
      ;;[if_stmt_2558_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2558__entry__ |-> (if_stmt_2558_dead_link)
      if_stmt_2558__exit__ <-| (if_stmt_2558_dead_link)
      ;;[if_stmt_2558_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2558__entry__ |-> (if_stmt_2558_eval_test)
      $P [R_exitcond5_2559_place]
      R_exitcond5_2559_place <-| (if_stmt_2558_eval_test)
      ;;[if_stmt_2558_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2558_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond5_2559_place |-> (if_stmt_2558_if_link if_stmt_2558_else_link)
      $P [bb_46_xx_x_crit_edgex_xix_xloopexit]
      bb_46_xx_x_crit_edgex_xix_xloopexit <-| (if_stmt_2558_if_link)
      $P [bb_46_bb_46]
      bb_46_bb_46 <-| (if_stmt_2558_else_link)
      ::[assign_stmt_2572_to_assign_stmt_2577] 
      {
        // start:  		indvarx_xnextx_xi38 := (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1069
        // Source expression
        // (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2571_sample_start_] 
        $T[ADD_u64_u64_2571_sample_completed_] 
        $T[ADD_u64_u64_2571_update_start_] 
        $T[ADD_u64_u64_2571_update_completed_] 
        // indvarx_xi33
        // start: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2571_sample_start_
        // done: Forward dependencies from indvarx_xi33 to transition ADD_u64_u64_2571_sample_start_
        ;;[ADD_u64_u64_2571_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2571_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2571_sample_start_ &-> (ADD_u64_u64_2571_Sample)
        ADD_u64_u64_2571_sample_completed_ <-& (ADD_u64_u64_2571_Sample)
        ADD_u64_u64_2571_sample_completed_ &-> ($null)
        ADD_u64_u64_2571_update_start_ &-> (ADD_u64_u64_2571_Update)
        ADD_u64_u64_2571_update_completed_ <-& (ADD_u64_u64_2571_Update)
        // Target expression
        // (as target) indvarx_xnextx_xi38
        // start: WAR dependencies for indvarx_xnextx_xi38
        // done: WAR dependencies for indvarx_xnextx_xi38
        // end:  		indvarx_xnextx_xi38 := (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond6 := (indvarx_xnextx_xi38 == tmp10x_xi)
        //  file prog.linked.opt.aa, line 1070
        // Source expression
        // (indvarx_xnextx_xi38 == tmp10x_xi)
        $T[EQ_u64_u1_2576_sample_start_] 
        $T[EQ_u64_u1_2576_sample_completed_] 
        $T[EQ_u64_u1_2576_update_start_] 
        $T[EQ_u64_u1_2576_update_completed_] 
        // indvarx_xnextx_xi38
        // tmp10x_xi
        // start: Forward dependencies from indvarx_xnextx_xi38 to transition EQ_u64_u1_2576_sample_start_
        EQ_u64_u1_2576_sample_start_ <-& (ADD_u64_u64_2571_update_completed_)
        // done: Forward dependencies from indvarx_xnextx_xi38 to transition EQ_u64_u1_2576_sample_start_
        // start: Forward dependencies from tmp10x_xi to transition EQ_u64_u1_2576_sample_start_
        // done: Forward dependencies from tmp10x_xi to transition EQ_u64_u1_2576_sample_start_
        ;;[EQ_u64_u1_2576_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_2576_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_2576_sample_start_ &-> (EQ_u64_u1_2576_Sample)
        EQ_u64_u1_2576_sample_completed_ <-& (EQ_u64_u1_2576_Sample)
        EQ_u64_u1_2576_sample_completed_ &-> ($null)
        EQ_u64_u1_2576_update_start_ &-> (EQ_u64_u1_2576_Update)
        EQ_u64_u1_2576_update_completed_ <-& (EQ_u64_u1_2576_Update)
        // Target expression
        // (as target) exitcond6
        // start: WAR dependencies for exitcond6
        // done: WAR dependencies for exitcond6
        // end:  		exitcond6 := (indvarx_xnextx_xi38 == tmp10x_xi)
        // load-store dependencies..
      }
      assign_stmt_2572_to_assign_stmt_2577__entry__ |-> (assign_stmt_2572_to_assign_stmt_2577)
      assign_stmt_2572_to_assign_stmt_2577__exit__ <-| (assign_stmt_2572_to_assign_stmt_2577)
      // if-statement  
      //  file prog.linked.opt.aa, line 1071
      ;;[if_stmt_2578_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2578__entry__ |-> (if_stmt_2578_dead_link)
      if_stmt_2578__exit__ <-| (if_stmt_2578_dead_link)
      ;;[if_stmt_2578_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2578__entry__ |-> (if_stmt_2578_eval_test)
      $P [R_exitcond6_2579_place]
      R_exitcond6_2579_place <-| (if_stmt_2578_eval_test)
      ;;[if_stmt_2578_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2578_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond6_2579_place |-> (if_stmt_2578_if_link if_stmt_2578_else_link)
      $P [xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit]
      xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit <-| (if_stmt_2578_if_link)
      $P [xx_x_crit_edgex_xi_bb_41]
      xx_x_crit_edgex_xi_bb_41 <-| (if_stmt_2578_else_link)
      ::[assign_stmt_2592] 
      {
        // start:  		indvarx_xnext := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1081
        // Source expression
        // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_2591_sample_start_] 
        $T[ADD_u16_u16_2591_sample_completed_] 
        $T[ADD_u16_u16_2591_update_start_] 
        $T[ADD_u16_u16_2591_update_completed_] 
        // indvar18
        // start: Forward dependencies from indvar18 to transition ADD_u16_u16_2591_sample_start_
        // done: Forward dependencies from indvar18 to transition ADD_u16_u16_2591_sample_start_
        ;;[ADD_u16_u16_2591_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2591_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2591_sample_start_ &-> (ADD_u16_u16_2591_Sample)
        ADD_u16_u16_2591_sample_completed_ <-& (ADD_u16_u16_2591_Sample)
        ADD_u16_u16_2591_sample_completed_ &-> ($null)
        ADD_u16_u16_2591_update_start_ &-> (ADD_u16_u16_2591_Update)
        ADD_u16_u16_2591_update_completed_ <-& (ADD_u16_u16_2591_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // load-store dependencies..
      }
      assign_stmt_2592__entry__ |-> (assign_stmt_2592)
      assign_stmt_2592__exit__ <-| (assign_stmt_2592)
      ::[assign_stmt_2610_to_assign_stmt_2616] 
      {
        // start:  		Nitr_required := indvarx_xlcssa
        //  file prog.linked.opt.aa, line 1087
        // Source expression
        // indvarx_xlcssa
        // Target expression
        // (as target) Nitr_required
        $T[STORE_Nitr_required_2608_sample_start_] 
        $T[STORE_Nitr_required_2608_sample_completed_] 
        $T[STORE_Nitr_required_2608_update_start_] 
        $T[STORE_Nitr_required_2608_update_completed_] 
        // Nitr_required
        $T[STORE_Nitr_required_2608_word_address_calculated] 
        $T[STORE_Nitr_required_2608_root_address_calculated] 
        STORE_Nitr_required_2608_word_address_calculated <-& (STORE_Nitr_required_2608_root_address_calculated)
        ;;[STORE_Nitr_required_2608_Sample] 
        {
          ;;[STORE_Nitr_required_2608_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[STORE_Nitr_required_2608_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        STORE_Nitr_required_2608_sample_start_ <-& (STORE_Nitr_required_2608_word_address_calculated)
        STORE_Nitr_required_2608_sample_start_ &-> (STORE_Nitr_required_2608_Sample)
        STORE_Nitr_required_2608_sample_completed_ <-& (STORE_Nitr_required_2608_Sample)
        STORE_Nitr_required_2608_sample_completed_ &-> ($null)
        STORE_Nitr_required_2608_update_start_ &-> (STORE_Nitr_required_2608_Update)
        STORE_Nitr_required_2608_update_completed_ <-& (STORE_Nitr_required_2608_Update)
        // start: Forward dependencies from indvarx_xlcssa to transition STORE_Nitr_required_2608_sample_start_
        // done: Forward dependencies from indvarx_xlcssa to transition STORE_Nitr_required_2608_sample_start_
        // end:  		Nitr_required := indvarx_xlcssa
        // start:  		iNsTr_43 := (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1088
        // Source expression
        // (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2615_sample_start_] 
        $T[EQ_u16_u1_2615_sample_completed_] 
        $T[EQ_u16_u1_2615_update_start_] 
        $T[EQ_u16_u1_2615_update_completed_] 
        // xx_xpr62
        // start: Forward dependencies from xx_xpr62 to transition EQ_u16_u1_2615_sample_start_
        // done: Forward dependencies from xx_xpr62 to transition EQ_u16_u1_2615_sample_start_
        ;;[EQ_u16_u1_2615_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2615_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2615_sample_start_ &-> (EQ_u16_u1_2615_Sample)
        EQ_u16_u1_2615_sample_completed_ <-& (EQ_u16_u1_2615_Sample)
        EQ_u16_u1_2615_sample_completed_ &-> ($null)
        EQ_u16_u1_2615_update_start_ &-> (EQ_u16_u1_2615_Update)
        EQ_u16_u1_2615_update_completed_ <-& (EQ_u16_u1_2615_Update)
        // Target expression
        // (as target) iNsTr_43
        // start: WAR dependencies for iNsTr_43
        // done: WAR dependencies for iNsTr_43
        // end:  		iNsTr_43 := (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2610_to_assign_stmt_2616__entry__ |-> (assign_stmt_2610_to_assign_stmt_2616)
      assign_stmt_2610_to_assign_stmt_2616__exit__ <-| (assign_stmt_2610_to_assign_stmt_2616)
      // if-statement  
      //  file prog.linked.opt.aa, line 1089
      ;;[if_stmt_2617_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2617__entry__ |-> (if_stmt_2617_dead_link)
      if_stmt_2617__exit__ <-| (if_stmt_2617_dead_link)
      ;;[if_stmt_2617_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2617__entry__ |-> (if_stmt_2617_eval_test)
      $P [R_iNsTr_43_2618_place]
      R_iNsTr_43_2618_place <-| (if_stmt_2617_eval_test)
      ;;[if_stmt_2617_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2617_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_43_2618_place |-> (if_stmt_2617_if_link if_stmt_2617_else_link)
      $P [checkIsdecodedx_xexitx_xthread_send_outputx_xexit]
      checkIsdecodedx_xexitx_xthread_send_outputx_xexit <-| (if_stmt_2617_if_link)
      $P [checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader]
      checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader <-| (if_stmt_2617_else_link)
      ::[assign_stmt_2638_to_assign_stmt_2658] 
      {
        // start:  		scevgepx_xi11 := @(code_block[indvarx_xi10])
        //  file prog.linked.opt.aa, line 1100
        // Source expression
        // @(code_block[indvarx_xi10])
        $T[addr_of_2637_sample_start_] 
        $T[addr_of_2637_sample_completed_] 
        $T[addr_of_2637_update_start_] 
        $T[addr_of_2637_update_completed_] 
        $T[array_obj_ref_2636_root_address_calculated] 
        $T[array_obj_ref_2636_offset_calculated] 
        $T[array_obj_ref_2636_index_resized_0] 
        $T[array_obj_ref_2636_index_scaled_0] 
        $T[array_obj_ref_2636_index_computed_0] 
        // indvarx_xi10
        // start: Forward dependencies from indvarx_xi10 to transition array_obj_ref_2636_index_computed_0
        // done: Forward dependencies from indvarx_xi10 to transition array_obj_ref_2636_index_computed_0
        ;;[array_obj_ref_2636_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2636_index_computed_0 &-> (array_obj_ref_2636_index_resize_0)
        array_obj_ref_2636_index_resized_0 <-& (array_obj_ref_2636_index_resize_0)
        ;;[array_obj_ref_2636_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2636_index_resized_0 &-> (array_obj_ref_2636_index_scale_0)
        array_obj_ref_2636_index_scaled_0 <-& (array_obj_ref_2636_index_scale_0)
        ;;[array_obj_ref_2636_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2636_index_scaled_0 &-> (array_obj_ref_2636_final_index_sum_regn)
        array_obj_ref_2636_offset_calculated <-& (array_obj_ref_2636_final_index_sum_regn)
        ;;[array_obj_ref_2636_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2636_offset_calculated &-> (array_obj_ref_2636_base_plus_offset)
        array_obj_ref_2636_root_address_calculated <-& (array_obj_ref_2636_base_plus_offset)
        ;;[addr_of_2637_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2637_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2637_sample_start_ <-& (array_obj_ref_2636_root_address_calculated)
        addr_of_2637_sample_start_ &-> (addr_of_2637_request)
        addr_of_2637_sample_completed_ <-& (addr_of_2637_request)
        addr_of_2637_update_start_ &-> (addr_of_2637_complete)
        addr_of_2637_update_completed_ <-& (addr_of_2637_complete)
        // Target expression
        // (as target) scevgepx_xi11
        // start: WAR dependencies for scevgepx_xi11
        // done: WAR dependencies for scevgepx_xi11
        // end:  		scevgepx_xi11 := @(code_block[indvarx_xi10])
        // start:  		tmp1 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1101
        // Source expression
        // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2643_sample_start_] 
        $T[ADD_u64_u64_2643_sample_completed_] 
        $T[ADD_u64_u64_2643_update_start_] 
        $T[ADD_u64_u64_2643_update_completed_] 
        // indvarx_xi10
        // start: Forward dependencies from indvarx_xi10 to transition ADD_u64_u64_2643_sample_start_
        // done: Forward dependencies from indvarx_xi10 to transition ADD_u64_u64_2643_sample_start_
        ;;[ADD_u64_u64_2643_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2643_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2643_sample_start_ &-> (ADD_u64_u64_2643_Sample)
        ADD_u64_u64_2643_sample_completed_ <-& (ADD_u64_u64_2643_Sample)
        ADD_u64_u64_2643_sample_completed_ &-> ($null)
        ADD_u64_u64_2643_update_start_ &-> (ADD_u64_u64_2643_Update)
        ADD_u64_u64_2643_update_completed_ <-& (ADD_u64_u64_2643_Update)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp2x_xi := ($cast ($uint<32>) tmp1 )
        //  file prog.linked.opt.aa, line 1102
        // Source expression
        // ($cast ($uint<32>) tmp1 )
        $T[type_cast_2647_sample_start_] 
        $T[type_cast_2647_sample_completed_] 
        $T[type_cast_2647_update_start_] 
        $T[type_cast_2647_update_completed_] 
        // tmp1
        // start: Forward dependencies from tmp1 to transition type_cast_2647_sample_start_
        type_cast_2647_sample_start_ <-& (ADD_u64_u64_2643_update_completed_)
        // done: Forward dependencies from tmp1 to transition type_cast_2647_sample_start_
        ;;[type_cast_2647_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2647_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2647_sample_start_ &-> (type_cast_2647_Sample)
        type_cast_2647_sample_completed_ <-& (type_cast_2647_Sample)
        type_cast_2647_sample_completed_ &-> ($null)
        type_cast_2647_update_start_ &-> (type_cast_2647_Update)
        type_cast_2647_update_completed_ <-& (type_cast_2647_Update)
        // Target expression
        // (as target) tmp2x_xi
        // start: WAR dependencies for tmp2x_xi
        // done: WAR dependencies for tmp2x_xi
        // end:  		tmp2x_xi := ($cast ($uint<32>) tmp1 )
        // start:  		tmp82 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1103
        // Source expression
        // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2653_sample_start_] 
        $T[ADD_u64_u64_2653_sample_completed_] 
        $T[ADD_u64_u64_2653_update_start_] 
        $T[ADD_u64_u64_2653_update_completed_] 
        // indvarx_xi10
        // start: Forward dependencies from indvarx_xi10 to transition ADD_u64_u64_2653_sample_start_
        // done: Forward dependencies from indvarx_xi10 to transition ADD_u64_u64_2653_sample_start_
        ;;[ADD_u64_u64_2653_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2653_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2653_sample_start_ &-> (ADD_u64_u64_2653_Sample)
        ADD_u64_u64_2653_sample_completed_ <-& (ADD_u64_u64_2653_Sample)
        ADD_u64_u64_2653_sample_completed_ &-> ($null)
        ADD_u64_u64_2653_update_start_ &-> (ADD_u64_u64_2653_Update)
        ADD_u64_u64_2653_update_completed_ <-& (ADD_u64_u64_2653_Update)
        // Target expression
        // (as target) tmp82
        // start: WAR dependencies for tmp82
        // done: WAR dependencies for tmp82
        // end:  		tmp82 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		iNsTr_74 := ->(scevgepx_xi11)
        //  file prog.linked.opt.aa, line 1104
        // Source expression
        // ->(scevgepx_xi11)
        $T[ptr_deref_2657_sample_start_] 
        $T[ptr_deref_2657_sample_completed_] 
        $T[ptr_deref_2657_update_start_] 
        $T[ptr_deref_2657_update_completed_] 
        $T[ptr_deref_2657_base_address_calculated] 
        // scevgepx_xi11
        $T[ptr_deref_2657_word_address_calculated] 
        $T[ptr_deref_2657_root_address_calculated] 
        $T[ptr_deref_2657_base_address_resized] 
        ;;[ptr_deref_2657_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2657_base_address_calculated &-> (ptr_deref_2657_base_addr_resize)
        ptr_deref_2657_base_address_resized <-& (ptr_deref_2657_base_addr_resize)
        ;;[ptr_deref_2657_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2657_base_address_resized &-> (ptr_deref_2657_base_plus_offset)
        ptr_deref_2657_root_address_calculated <-& (ptr_deref_2657_base_plus_offset)
        ;;[ptr_deref_2657_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2657_root_address_calculated &-> (ptr_deref_2657_word_addrgen)
        ptr_deref_2657_word_address_calculated <-& (ptr_deref_2657_word_addrgen)
        ;;[ptr_deref_2657_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2657_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2657_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2657_sample_start_ <-& (ptr_deref_2657_word_address_calculated)
        ptr_deref_2657_sample_start_ &-> (ptr_deref_2657_Sample)
        ptr_deref_2657_sample_completed_ <-& (ptr_deref_2657_Sample)
        ptr_deref_2657_sample_completed_ &-> ($null)
        ptr_deref_2657_update_start_ &-> (ptr_deref_2657_Update)
        ptr_deref_2657_update_completed_ <-& (ptr_deref_2657_Update)
        // start: Forward dependencies from scevgepx_xi11 to transition ptr_deref_2657_base_address_calculated
        ptr_deref_2657_base_address_calculated <-& (addr_of_2637_update_completed_)
        // done: Forward dependencies from scevgepx_xi11 to transition ptr_deref_2657_base_address_calculated
        ptr_deref_2657_sample_start_ <-& (ptr_deref_2657_base_address_calculated)
        // Target expression
        // (as target) iNsTr_74
        // start: WAR dependencies for iNsTr_74
        // done: WAR dependencies for iNsTr_74
        // end:  		iNsTr_74 := ->(scevgepx_xi11)
        // load-store dependencies..
      }
      assign_stmt_2638_to_assign_stmt_2658__entry__ |-> (assign_stmt_2638_to_assign_stmt_2658)
      assign_stmt_2638_to_assign_stmt_2658__exit__ <-| (assign_stmt_2638_to_assign_stmt_2658)
      ::[assign_stmt_2661] 
      {
        // start:  		code_block_decoded := iNsTr_74
        //  file prog.linked.opt.aa, line 1105
        // Source expression
        // iNsTr_74
        // Target expression
        // (as target) code_block_decoded
        $T[WPIPE_code_block_decoded_2659_sample_start_] 
        $T[WPIPE_code_block_decoded_2659_sample_completed_] 
        $T[WPIPE_code_block_decoded_2659_update_start_] 
        $T[WPIPE_code_block_decoded_2659_update_completed_] 
        ;;[WPIPE_code_block_decoded_2659_Sample] 
        {
          // pipe write sample-start code_block_decoded
          $T [req] $T [ack] 
        }
        ;;[WPIPE_code_block_decoded_2659_Update] 
        {
          // pipe write update (complete) code_block_decoded
          $T [req] $T [ack] 
        }
        WPIPE_code_block_decoded_2659_sample_start_ &-> (WPIPE_code_block_decoded_2659_Sample)
        WPIPE_code_block_decoded_2659_sample_completed_ <-& (WPIPE_code_block_decoded_2659_Sample)
        WPIPE_code_block_decoded_2659_update_start_ <-& (WPIPE_code_block_decoded_2659_sample_completed_)
        WPIPE_code_block_decoded_2659_update_start_ &-> (WPIPE_code_block_decoded_2659_Update)
        WPIPE_code_block_decoded_2659_update_completed_ <-& (WPIPE_code_block_decoded_2659_Update)
        // start: Forward dependencies from iNsTr_74 to transition WPIPE_code_block_decoded_2659_sample_start_
        // done: Forward dependencies from iNsTr_74 to transition WPIPE_code_block_decoded_2659_sample_start_
        // end:  		code_block_decoded := iNsTr_74
        // barrier: 		code_block_decoded := iNsTr_74
        // load-store dependencies..
        // pipe read/write dependencies for pipe code_block_decoded
        // read-dependencies for pipe code_block_decoded
        // write-dependencies for pipe code_block_decoded
        // signal dependencies for code_block_decoded
      }
      assign_stmt_2661__entry__ |-> (assign_stmt_2661)
      assign_stmt_2661__exit__ <-| (assign_stmt_2661)
      ::[assign_stmt_2664_to_assign_stmt_2676] 
      {
        // start:  		iNsTr_77 := ncols
        //  file prog.linked.opt.aa, line 1106
        // Source expression
        // ncols
        $T[LOAD_ncols_2663_sample_start_] 
        $T[LOAD_ncols_2663_sample_completed_] 
        $T[LOAD_ncols_2663_update_start_] 
        $T[LOAD_ncols_2663_update_completed_] 
        $T[LOAD_ncols_2663_word_address_calculated] 
        $T[LOAD_ncols_2663_root_address_calculated] 
        LOAD_ncols_2663_word_address_calculated <-& (LOAD_ncols_2663_root_address_calculated)
        ;;[LOAD_ncols_2663_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_2663_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_2663_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_2663_sample_start_ <-& (LOAD_ncols_2663_word_address_calculated)
        LOAD_ncols_2663_sample_start_ &-> (LOAD_ncols_2663_Sample)
        LOAD_ncols_2663_sample_completed_ <-& (LOAD_ncols_2663_Sample)
        LOAD_ncols_2663_sample_completed_ &-> ($null)
        LOAD_ncols_2663_update_start_ &-> (LOAD_ncols_2663_Update)
        LOAD_ncols_2663_update_completed_ <-& (LOAD_ncols_2663_Update)
        // Target expression
        // (as target) iNsTr_77
        // start: WAR dependencies for iNsTr_77
        // done: WAR dependencies for iNsTr_77
        // end:  		iNsTr_77 := ncols
        // start:  		iNsTr_78 := ($cast ($uint<32>) iNsTr_77 )
        //  file prog.linked.opt.aa, line 1107
        // Source expression
        // ($cast ($uint<32>) iNsTr_77 )
        $T[type_cast_2667_sample_start_] 
        $T[type_cast_2667_sample_completed_] 
        $T[type_cast_2667_update_start_] 
        $T[type_cast_2667_update_completed_] 
        // iNsTr_77
        // start: Forward dependencies from iNsTr_77 to transition type_cast_2667_sample_start_
        type_cast_2667_sample_start_ <-& (LOAD_ncols_2663_update_completed_)
        // done: Forward dependencies from iNsTr_77 to transition type_cast_2667_sample_start_
        ;;[type_cast_2667_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2667_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2667_sample_start_ &-> (type_cast_2667_Sample)
        type_cast_2667_sample_completed_ <-& (type_cast_2667_Sample)
        type_cast_2667_sample_completed_ &-> ($null)
        type_cast_2667_update_start_ &-> (type_cast_2667_Update)
        type_cast_2667_update_completed_ <-& (type_cast_2667_Update)
        // Target expression
        // (as target) iNsTr_78
        // start: WAR dependencies for iNsTr_78
        // done: WAR dependencies for iNsTr_78
        // end:  		iNsTr_78 := ($cast ($uint<32>) iNsTr_77 )
        // start:  		iNsTr_79 := (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
        //  file prog.linked.opt.aa, line 1108
        // Source expression
        // (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
        $T[SLT_i32_u1_2675_sample_start_] 
        $T[SLT_i32_u1_2675_sample_completed_] 
        $T[SLT_i32_u1_2675_update_start_] 
        $T[SLT_i32_u1_2675_update_completed_] 
        // ($bitcast ($int<32>) tmp2x_xi )
        // tmp2x_xi
        // ($bitcast ($int<32>) iNsTr_78 )
        // iNsTr_78
        // start: Forward dependencies from ($bitcast ($int<32>) tmp2x_xi ) to transition SLT_i32_u1_2675_sample_start_
        // done: Forward dependencies from ($bitcast ($int<32>) tmp2x_xi ) to transition SLT_i32_u1_2675_sample_start_
        // start: Forward dependencies from ($bitcast ($int<32>) iNsTr_78 ) to transition SLT_i32_u1_2675_sample_start_
        SLT_i32_u1_2675_sample_start_ <-& (type_cast_2667_update_completed_)
        // done: Forward dependencies from ($bitcast ($int<32>) iNsTr_78 ) to transition SLT_i32_u1_2675_sample_start_
        ;;[SLT_i32_u1_2675_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_2675_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_2675_sample_start_ &-> (SLT_i32_u1_2675_Sample)
        SLT_i32_u1_2675_sample_completed_ <-& (SLT_i32_u1_2675_Sample)
        SLT_i32_u1_2675_sample_completed_ &-> ($null)
        SLT_i32_u1_2675_update_start_ &-> (SLT_i32_u1_2675_Update)
        SLT_i32_u1_2675_update_completed_ <-& (SLT_i32_u1_2675_Update)
        // Target expression
        // (as target) iNsTr_79
        // start: WAR dependencies for iNsTr_79
        // done: WAR dependencies for iNsTr_79
        // end:  		iNsTr_79 := (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
        // load-store dependencies..
      }
      assign_stmt_2664_to_assign_stmt_2676__entry__ |-> (assign_stmt_2664_to_assign_stmt_2676)
      assign_stmt_2664_to_assign_stmt_2676__exit__ <-| (assign_stmt_2664_to_assign_stmt_2676)
      // if-statement  
      //  file prog.linked.opt.aa, line 1109
      ;;[if_stmt_2677_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2677__entry__ |-> (if_stmt_2677_dead_link)
      if_stmt_2677__exit__ <-| (if_stmt_2677_dead_link)
      ;;[if_stmt_2677_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2677__entry__ |-> (if_stmt_2677_eval_test)
      $P [R_iNsTr_79_2678_place]
      R_iNsTr_79_2678_place <-| (if_stmt_2677_eval_test)
      ;;[if_stmt_2677_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2677_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_79_2678_place |-> (if_stmt_2677_if_link if_stmt_2677_else_link)
      $P [bbx_xnphx_xi13_bbx_xnphx_xi13]
      bbx_xnphx_xi13_bbx_xnphx_xi13 <-| (if_stmt_2677_if_link)
      $P [bbx_xnphx_xi13_send_outputx_xexitx_xloopexit]
      bbx_xnphx_xi13_send_outputx_xexitx_xloopexit <-| (if_stmt_2677_else_link)
      ::[assign_stmt_2686] 
      {
        // start:  		xx_xpre := Nitr_required
        //  file prog.linked.opt.aa, line 1116
        // Source expression
        // Nitr_required
        $T[LOAD_Nitr_required_2685_sample_start_] 
        $T[LOAD_Nitr_required_2685_sample_completed_] 
        $T[LOAD_Nitr_required_2685_update_start_] 
        $T[LOAD_Nitr_required_2685_update_completed_] 
        $T[LOAD_Nitr_required_2685_word_address_calculated] 
        $T[LOAD_Nitr_required_2685_root_address_calculated] 
        LOAD_Nitr_required_2685_word_address_calculated <-& (LOAD_Nitr_required_2685_root_address_calculated)
        ;;[LOAD_Nitr_required_2685_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_Nitr_required_2685_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_Nitr_required_2685_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_Nitr_required_2685_sample_start_ <-& (LOAD_Nitr_required_2685_word_address_calculated)
        LOAD_Nitr_required_2685_sample_start_ &-> (LOAD_Nitr_required_2685_Sample)
        LOAD_Nitr_required_2685_sample_completed_ <-& (LOAD_Nitr_required_2685_Sample)
        LOAD_Nitr_required_2685_sample_completed_ &-> ($null)
        LOAD_Nitr_required_2685_update_start_ &-> (LOAD_Nitr_required_2685_Update)
        LOAD_Nitr_required_2685_update_completed_ <-& (LOAD_Nitr_required_2685_Update)
        // Target expression
        // (as target) xx_xpre
        // start: WAR dependencies for xx_xpre
        // done: WAR dependencies for xx_xpre
        // end:  		xx_xpre := Nitr_required
        // load-store dependencies..
      }
      assign_stmt_2686__entry__ |-> (assign_stmt_2686)
      assign_stmt_2686__exit__ <-| (assign_stmt_2686)
      ::[assign_stmt_2700] 
      {
        // start:  		nitr_required := iNsTr_55
        //  file prog.linked.opt.aa, line 1121
        // Source expression
        // iNsTr_55
        // Target expression
        // (as target) nitr_required
        $T[WPIPE_nitr_required_2698_sample_start_] 
        $T[WPIPE_nitr_required_2698_sample_completed_] 
        $T[WPIPE_nitr_required_2698_update_start_] 
        $T[WPIPE_nitr_required_2698_update_completed_] 
        ;;[WPIPE_nitr_required_2698_Sample] 
        {
          // pipe write sample-start nitr_required
          $T [req] $T [ack] 
        }
        ;;[WPIPE_nitr_required_2698_Update] 
        {
          // pipe write update (complete) nitr_required
          $T [req] $T [ack] 
        }
        WPIPE_nitr_required_2698_sample_start_ &-> (WPIPE_nitr_required_2698_Sample)
        WPIPE_nitr_required_2698_sample_completed_ <-& (WPIPE_nitr_required_2698_Sample)
        WPIPE_nitr_required_2698_update_start_ <-& (WPIPE_nitr_required_2698_sample_completed_)
        WPIPE_nitr_required_2698_update_start_ &-> (WPIPE_nitr_required_2698_Update)
        WPIPE_nitr_required_2698_update_completed_ <-& (WPIPE_nitr_required_2698_Update)
        // start: Forward dependencies from iNsTr_55 to transition WPIPE_nitr_required_2698_sample_start_
        // done: Forward dependencies from iNsTr_55 to transition WPIPE_nitr_required_2698_sample_start_
        // end:  		nitr_required := iNsTr_55
        // barrier: 		nitr_required := iNsTr_55
        // load-store dependencies..
        // pipe read/write dependencies for pipe nitr_required
        // read-dependencies for pipe nitr_required
        // write-dependencies for pipe nitr_required
        // signal dependencies for nitr_required
      }
      assign_stmt_2700__entry__ |-> (assign_stmt_2700)
      assign_stmt_2700__exit__ <-| (assign_stmt_2700)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 638
      //---------------------   merge statement  file prog.linked.opt.aa, line 638  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      ||[send_outputx_xexit_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      send_outputx_xexit_bb_1 |-> (send_outputx_xexit_bb_1_PhiReq)
      $P [merge_stmt_1355_PhiReqMerge] 
      merge_stmt_1355_PhiReqMerge <-| ( bb_0_bb_1_PhiReq  send_outputx_xexit_bb_1_PhiReq )
      ||[merge_stmt_1355_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1355_PhiReqMerge |-> (merge_stmt_1355_PhiAck)
      merge_stmt_1355__exit__  <-| (merge_stmt_1355_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 638  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 648
      ;;[merge_stmt_1372_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1372__entry__ |-> (merge_stmt_1372_dead_link)
      merge_stmt_1372__exit__ <-| (merge_stmt_1372_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 648  --------------------------
      ||[bb_1_bbx_xnphx_xix_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bbx_xnphx_xix_xpreheader |-> (bb_1_bbx_xnphx_xix_xpreheader_PhiReq)
      $P [merge_stmt_1372_PhiReqMerge] 
      merge_stmt_1372_PhiReqMerge <-| ( bb_1_bbx_xnphx_xix_xpreheader_PhiReq )
      ||[merge_stmt_1372_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1372_PhiReqMerge |-> (merge_stmt_1372_PhiAck)
      merge_stmt_1372__exit__  <-| (merge_stmt_1372_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 648  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 651
      //---------------------   merge statement  file prog.linked.opt.aa, line 651  --------------------------
      ||[bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq] 
      {
        ;;[phi_stmt_1375] 
        {
          ||[phi_stmt_1375_sources] 
          {
            // sources for 			$phi iNsTr_13_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_1379_konst_delay_trans] $delay
          }
          $T [phi_stmt_1375_req] 
        }
      }
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi |-> (bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq)
      $P [merge_stmt_1374_PhiReqMerge] 
      merge_stmt_1374_PhiReqMerge <-| ( bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq )
      ||[merge_stmt_1374_PhiAck] 
      {
        $T [phi_stmt_1375_ack] 
      }
      merge_stmt_1374_PhiReqMerge |-> (merge_stmt_1374_PhiAck)
      merge_stmt_1374__exit__  <-| (merge_stmt_1374_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 651  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 674
      ;;[merge_stmt_1443_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1443__entry__ |-> (merge_stmt_1443_dead_link)
      merge_stmt_1443__exit__ <-| (merge_stmt_1443_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 674  --------------------------
      ||[bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq] 
      {
        ;;[phi_stmt_1444] 
        {
          ||[phi_stmt_1444_sources] 
          {
            // sources for 			$phi xx_xlcssa := 			  ($cast ($uint<16>) iNsTr_22 ) $on bbx_xnphx_xi_readCodeBlockx_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_22 )
            ;;[type_cast_1447] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1444_req] 
        }
      }
      bbx_xnphx_xi_readCodeBlockx_xexit |-> (bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq)
      $P [merge_stmt_1443_PhiReqMerge] 
      merge_stmt_1443_PhiReqMerge <-| ( bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq )
      ||[merge_stmt_1443_PhiAck] 
      {
        $T [phi_stmt_1444_ack] 
      }
      merge_stmt_1443_PhiReqMerge |-> (merge_stmt_1443_PhiAck)
      merge_stmt_1443__exit__  <-| (merge_stmt_1443_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 674  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 683
      ;;[merge_stmt_1461_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1461__entry__ |-> (merge_stmt_1461_dead_link)
      merge_stmt_1461__exit__ <-| (merge_stmt_1461_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 683  --------------------------
      ||[readCodeBlockx_xexit_bbx_xnphx_xi1_PhiReq] 
      {
        // no phi statements in merge..
      }
      readCodeBlockx_xexit_bbx_xnphx_xi1 |-> (readCodeBlockx_xexit_bbx_xnphx_xi1_PhiReq)
      $P [merge_stmt_1461_PhiReqMerge] 
      merge_stmt_1461_PhiReqMerge <-| ( readCodeBlockx_xexit_bbx_xnphx_xi1_PhiReq )
      ||[merge_stmt_1461_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1461_PhiReqMerge |-> (merge_stmt_1461_PhiAck)
      merge_stmt_1461__exit__  <-| (merge_stmt_1461_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 683  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 694
      //---------------------   merge statement  file prog.linked.opt.aa, line 694  --------------------------
      ||[bb_6_bb_6_PhiReq] 
      {
        ;;[phi_stmt_1504] 
        {
          ||[phi_stmt_1504_sources] 
          {
            // sources for 			$phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi1_bb_6			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on bb_6_bb_6 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi )
            ;;[type_cast_1510] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1504_req] 
        }
      }
      bb_6_bb_6 |-> (bb_6_bb_6_PhiReq)
      ||[bbx_xnphx_xi1_bb_6_PhiReq] 
      {
        ;;[phi_stmt_1504] 
        {
          ||[phi_stmt_1504_sources] 
          {
            // sources for 			$phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi1_bb_6			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on bb_6_bb_6 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1508_konst_delay_trans] $delay
          }
          $T [phi_stmt_1504_req] 
        }
      }
      bbx_xnphx_xi1_bb_6 |-> (bbx_xnphx_xi1_bb_6_PhiReq)
      $P [merge_stmt_1503_PhiReqMerge] 
      merge_stmt_1503_PhiReqMerge <-| ( bb_6_bb_6_PhiReq  bbx_xnphx_xi1_bb_6_PhiReq )
      ||[merge_stmt_1503_PhiAck] 
      {
        $T [phi_stmt_1504_ack] 
      }
      merge_stmt_1503_PhiReqMerge |-> (merge_stmt_1503_PhiAck)
      merge_stmt_1503__exit__  <-| (merge_stmt_1503_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 694  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 710
      ;;[merge_stmt_1558_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1558__entry__ |-> (merge_stmt_1558_dead_link)
      merge_stmt_1558__exit__ <-| (merge_stmt_1558_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 710  --------------------------
      ||[bb_6_initialize_aPriorix_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_initialize_aPriorix_xexitx_xloopexit |-> (bb_6_initialize_aPriorix_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_1558_PhiReqMerge] 
      merge_stmt_1558_PhiReqMerge <-| ( bb_6_initialize_aPriorix_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_1558_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1558_PhiReqMerge |-> (merge_stmt_1558_PhiAck)
      merge_stmt_1558__exit__  <-| (merge_stmt_1558_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 710  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 713
      //---------------------   merge statement  file prog.linked.opt.aa, line 713  --------------------------
      ||[bb_1_initialize_aPriorix_xexit_PhiReq] 
      {
        ;;[phi_stmt_1561] 
        {
          ||[phi_stmt_1561_sources] 
          {
            // sources for 			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1565_konst_delay_trans] $delay
          }
          $T [phi_stmt_1561_req] 
        }
      }
      bb_1_initialize_aPriorix_xexit |-> (bb_1_initialize_aPriorix_xexit_PhiReq)
      ||[initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq] 
      {
        ;;[phi_stmt_1561] 
        {
          ||[phi_stmt_1561_sources] 
          {
            // sources for 			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xlcssa )
            ;;[type_cast_1570] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1561_req] 
        }
      }
      initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit |-> (initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq)
      ||[readCodeBlockx_xexit_initialize_aPriorix_xexit_PhiReq] 
      {
        ;;[phi_stmt_1561] 
        {
          ||[phi_stmt_1561_sources] 
          {
            // sources for 			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1568_konst_delay_trans] $delay
          }
          $T [phi_stmt_1561_req] 
        }
      }
      readCodeBlockx_xexit_initialize_aPriorix_xexit |-> (readCodeBlockx_xexit_initialize_aPriorix_xexit_PhiReq)
      $P [merge_stmt_1560_PhiReqMerge] 
      merge_stmt_1560_PhiReqMerge <-| ( bb_1_initialize_aPriorix_xexit_PhiReq  initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq  readCodeBlockx_xexit_initialize_aPriorix_xexit_PhiReq )
      ||[merge_stmt_1560_PhiAck] 
      {
        $T [phi_stmt_1561_ack] 
      }
      merge_stmt_1560_PhiReqMerge |-> (merge_stmt_1560_PhiAck)
      merge_stmt_1560__exit__  <-| (merge_stmt_1560_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 713  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 723
      ;;[merge_stmt_1587_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1587__entry__ |-> (merge_stmt_1587_dead_link)
      merge_stmt_1587__exit__ <-| (merge_stmt_1587_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 723  --------------------------
      ||[initialize_aPriorix_xexit_bbx_xnphx_xi5_PhiReq] 
      {
        // no phi statements in merge..
      }
      initialize_aPriorix_xexit_bbx_xnphx_xi5 |-> (initialize_aPriorix_xexit_bbx_xnphx_xi5_PhiReq)
      $P [merge_stmt_1587_PhiReqMerge] 
      merge_stmt_1587_PhiReqMerge <-| ( initialize_aPriorix_xexit_bbx_xnphx_xi5_PhiReq )
      ||[merge_stmt_1587_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1587_PhiReqMerge |-> (merge_stmt_1587_PhiAck)
      merge_stmt_1587__exit__  <-| (merge_stmt_1587_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 723  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 731
      //---------------------   merge statement  file prog.linked.opt.aa, line 731  --------------------------
      ||[bb_10_bb_10_PhiReq] 
      {
        ;;[phi_stmt_1619] 
        {
          ||[phi_stmt_1619_sources] 
          {
            // sources for 			$phi indvarx_xi6 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi5_bb_10			  ($cast ($uint<64>) indvarx_xnextx_xi8 ) $on bb_10_bb_10 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi8 )
            ;;[type_cast_1625] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1619_req] 
        }
      }
      bb_10_bb_10 |-> (bb_10_bb_10_PhiReq)
      ||[bbx_xnphx_xi5_bb_10_PhiReq] 
      {
        ;;[phi_stmt_1619] 
        {
          ||[phi_stmt_1619_sources] 
          {
            // sources for 			$phi indvarx_xi6 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi5_bb_10			  ($cast ($uint<64>) indvarx_xnextx_xi8 ) $on bb_10_bb_10 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1623_konst_delay_trans] $delay
          }
          $T [phi_stmt_1619_req] 
        }
      }
      bbx_xnphx_xi5_bb_10 |-> (bbx_xnphx_xi5_bb_10_PhiReq)
      $P [merge_stmt_1618_PhiReqMerge] 
      merge_stmt_1618_PhiReqMerge <-| ( bb_10_bb_10_PhiReq  bbx_xnphx_xi5_bb_10_PhiReq )
      ||[merge_stmt_1618_PhiAck] 
      {
        $T [phi_stmt_1619_ack] 
      }
      merge_stmt_1618_PhiReqMerge |-> (merge_stmt_1618_PhiAck)
      merge_stmt_1618__exit__  <-| (merge_stmt_1618_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 731  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 750
      ;;[merge_stmt_1687_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1687__entry__ |-> (merge_stmt_1687_dead_link)
      merge_stmt_1687__exit__ <-| (merge_stmt_1687_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 750  --------------------------
      ||[bb_10_initializeMessagex_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_initializeMessagex_xexitx_xloopexit |-> (bb_10_initializeMessagex_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_1687_PhiReqMerge] 
      merge_stmt_1687_PhiReqMerge <-| ( bb_10_initializeMessagex_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_1687_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1687_PhiReqMerge |-> (merge_stmt_1687_PhiAck)
      merge_stmt_1687__exit__  <-| (merge_stmt_1687_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 750  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 753
      //---------------------   merge statement  file prog.linked.opt.aa, line 753  --------------------------
      ||[initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 			$phi xx_xph := 			  ($cast ($uint<16>) iNsTr_6 ) $on initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_6 )
            ;;[type_cast_1693] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1690_req] 
        }
      }
      initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader |-> (initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq)
      ||[initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader_PhiReq] 
      {
        ;;[phi_stmt_1690] 
        {
          ||[phi_stmt_1690_sources] 
          {
            // sources for 			$phi xx_xph := 			  ($cast ($uint<16>) iNsTr_6 ) $on initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1696_konst_delay_trans] $delay
          }
          $T [phi_stmt_1690_req] 
        }
      }
      initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader |-> (initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader_PhiReq)
      $P [merge_stmt_1689_PhiReqMerge] 
      merge_stmt_1689_PhiReqMerge <-| ( initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq  initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader_PhiReq )
      ||[merge_stmt_1689_PhiAck] 
      {
        $T [phi_stmt_1690_ack] 
      }
      merge_stmt_1689_PhiReqMerge |-> (merge_stmt_1689_PhiAck)
      merge_stmt_1689__exit__  <-| (merge_stmt_1689_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 753  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 757
      //---------------------   merge statement  file prog.linked.opt.aa, line 757  --------------------------
      ||[initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq] 
      {
        ;;[phi_stmt_1700] 
        {
          ||[phi_stmt_1700_sources] 
          {
            // sources for 			$phi indvar18 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit			  ($cast ($uint<16>) indvarx_xnext ) $on updateMessagex_xexit_initializeMessagex_xexit // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_1704_konst_delay_trans] $delay
          }
          $T [phi_stmt_1700_req] 
        }
        ;;[phi_stmt_1707] 
        {
          ||[phi_stmt_1707_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<16>) iNsTr_66 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) xx_xph ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xph )
            ;;[type_cast_1712] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1707_req] 
        }
        ;;[phi_stmt_1713] 
        {
          ||[phi_stmt_1713_sources] 
          {
            // sources for 			$phi iNsTr_27 := 			  ($cast ($uint<16>) iNsTr_83 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) iNsTr_5 ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_5 )
            ;;[type_cast_1718] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1713_req] 
        }
      }
      initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit |-> (initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq)
      ||[updateMessagex_xexit_initializeMessagex_xexit_PhiReq] 
      {
        ;;[phi_stmt_1700] 
        {
          ||[phi_stmt_1700_sources] 
          {
            // sources for 			$phi indvar18 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit			  ($cast ($uint<16>) indvarx_xnext ) $on updateMessagex_xexit_initializeMessagex_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvarx_xnext )
            ;;[type_cast_1706] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1700_req] 
        }
        ;;[phi_stmt_1707] 
        {
          ||[phi_stmt_1707_sources] 
          {
            // sources for 			$phi iNsTr_26 := 			  ($cast ($uint<16>) iNsTr_66 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) xx_xph ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_66 )
            ;;[type_cast_1710] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1707_req] 
        }
        ;;[phi_stmt_1713] 
        {
          ||[phi_stmt_1713_sources] 
          {
            // sources for 			$phi iNsTr_27 := 			  ($cast ($uint<16>) iNsTr_83 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) iNsTr_5 ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_83 )
            ;;[type_cast_1716] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1713_req] 
        }
      }
      updateMessagex_xexit_initializeMessagex_xexit |-> (updateMessagex_xexit_initializeMessagex_xexit_PhiReq)
      $P [merge_stmt_1699_PhiReqMerge] 
      merge_stmt_1699_PhiReqMerge <-| ( initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq  updateMessagex_xexit_initializeMessagex_xexit_PhiReq )
      ||[merge_stmt_1699_PhiAck] 
      {
        $T [phi_stmt_1700_ack] 
        $T [phi_stmt_1707_ack] 
        $T [phi_stmt_1713_ack] 
      }
      merge_stmt_1699_PhiReqMerge |-> (merge_stmt_1699_PhiAck)
      merge_stmt_1699__exit__  <-| (merge_stmt_1699_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 757  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 770
      ;;[merge_stmt_1740_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1740__entry__ |-> (merge_stmt_1740_dead_link)
      merge_stmt_1740__exit__ <-| (merge_stmt_1740_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 770  --------------------------
      ||[initializeMessagex_xexit_bb_14_PhiReq] 
      {
        // no phi statements in merge..
      }
      initializeMessagex_xexit_bb_14 |-> (initializeMessagex_xexit_bb_14_PhiReq)
      $P [merge_stmt_1740_PhiReqMerge] 
      merge_stmt_1740_PhiReqMerge <-| ( initializeMessagex_xexit_bb_14_PhiReq )
      ||[merge_stmt_1740_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1740_PhiReqMerge |-> (merge_stmt_1740_PhiAck)
      merge_stmt_1740__exit__  <-| (merge_stmt_1740_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 770  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 778
      ;;[merge_stmt_1753_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1753__entry__ |-> (merge_stmt_1753_dead_link)
      merge_stmt_1753__exit__ <-| (merge_stmt_1753_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 778  --------------------------
      ||[bb_14_bbx_xnphx_xi18_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_14_bbx_xnphx_xi18 |-> (bb_14_bbx_xnphx_xi18_PhiReq)
      $P [merge_stmt_1753_PhiReqMerge] 
      merge_stmt_1753_PhiReqMerge <-| ( bb_14_bbx_xnphx_xi18_PhiReq )
      ||[merge_stmt_1753_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1753_PhiReqMerge |-> (merge_stmt_1753_PhiAck)
      merge_stmt_1753__exit__  <-| (merge_stmt_1753_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 778  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 786
      //---------------------   merge statement  file prog.linked.opt.aa, line 786  --------------------------
      ||[bb_16_bb_16_PhiReq] 
      {
        ;;[phi_stmt_1785] 
        {
          ||[phi_stmt_1785_sources] 
          {
            // sources for 			$phi indvarx_xi19 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi18_bb_16			  ($cast ($uint<64>) indvarx_xnextx_xi22 ) $on bb_16_bb_16 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi22 )
            ;;[type_cast_1791] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1785_req] 
        }
      }
      bb_16_bb_16 |-> (bb_16_bb_16_PhiReq)
      ||[bbx_xnphx_xi18_bb_16_PhiReq] 
      {
        ;;[phi_stmt_1785] 
        {
          ||[phi_stmt_1785_sources] 
          {
            // sources for 			$phi indvarx_xi19 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi18_bb_16			  ($cast ($uint<64>) indvarx_xnextx_xi22 ) $on bb_16_bb_16 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1789_konst_delay_trans] $delay
          }
          $T [phi_stmt_1785_req] 
        }
      }
      bbx_xnphx_xi18_bb_16 |-> (bbx_xnphx_xi18_bb_16_PhiReq)
      $P [merge_stmt_1784_PhiReqMerge] 
      merge_stmt_1784_PhiReqMerge <-| ( bb_16_bb_16_PhiReq  bbx_xnphx_xi18_bb_16_PhiReq )
      ||[merge_stmt_1784_PhiAck] 
      {
        $T [phi_stmt_1785_ack] 
      }
      merge_stmt_1784_PhiReqMerge |-> (merge_stmt_1784_PhiAck)
      merge_stmt_1784__exit__  <-| (merge_stmt_1784_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 786  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 800
      ;;[merge_stmt_1828_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1828__entry__ |-> (merge_stmt_1828_dead_link)
      merge_stmt_1828__exit__ <-| (merge_stmt_1828_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 800  --------------------------
      ||[bb_16_initialize_aPosteriorix_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_16_initialize_aPosteriorix_xexitx_xloopexit |-> (bb_16_initialize_aPosteriorix_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_1828_PhiReqMerge] 
      merge_stmt_1828_PhiReqMerge <-| ( bb_16_initialize_aPosteriorix_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_1828_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1828_PhiReqMerge |-> (merge_stmt_1828_PhiAck)
      merge_stmt_1828__exit__  <-| (merge_stmt_1828_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 800  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 803
      //---------------------   merge statement  file prog.linked.opt.aa, line 803  --------------------------
      ||[bb_14_initialize_aPosteriorix_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_14_initialize_aPosteriorix_xexit |-> (bb_14_initialize_aPosteriorix_xexit_PhiReq)
      ||[initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit |-> (initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit_PhiReq)
      $P [merge_stmt_1830_PhiReqMerge] 
      merge_stmt_1830_PhiReqMerge <-| ( bb_14_initialize_aPosteriorix_xexit_PhiReq  initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit_PhiReq )
      ||[merge_stmt_1830_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1830_PhiReqMerge |-> (merge_stmt_1830_PhiAck)
      merge_stmt_1830__exit__  <-| (merge_stmt_1830_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 803  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 811
      ;;[merge_stmt_1843_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1843__entry__ |-> (merge_stmt_1843_dead_link)
      merge_stmt_1843__exit__ <-| (merge_stmt_1843_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 811  --------------------------
      ||[initialize_aPosteriorix_xexit_bbx_xnphx_xi27_PhiReq] 
      {
        // no phi statements in merge..
      }
      initialize_aPosteriorix_xexit_bbx_xnphx_xi27 |-> (initialize_aPosteriorix_xexit_bbx_xnphx_xi27_PhiReq)
      $P [merge_stmt_1843_PhiReqMerge] 
      merge_stmt_1843_PhiReqMerge <-| ( initialize_aPosteriorix_xexit_bbx_xnphx_xi27_PhiReq )
      ||[merge_stmt_1843_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1843_PhiReqMerge |-> (merge_stmt_1843_PhiAck)
      merge_stmt_1843__exit__  <-| (merge_stmt_1843_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 811  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 819
      //---------------------   merge statement  file prog.linked.opt.aa, line 819  --------------------------
      ||[bb_20_bb_20_PhiReq] 
      {
        ;;[phi_stmt_1875] 
        {
          ||[phi_stmt_1875_sources] 
          {
            // sources for 			$phi indvarx_xi28 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi27_bb_20			  ($cast ($uint<64>) indvarx_xnextx_xi30 ) $on bb_20_bb_20 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi30 )
            ;;[type_cast_1881] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1875_req] 
        }
      }
      bb_20_bb_20 |-> (bb_20_bb_20_PhiReq)
      ||[bbx_xnphx_xi27_bb_20_PhiReq] 
      {
        ;;[phi_stmt_1875] 
        {
          ||[phi_stmt_1875_sources] 
          {
            // sources for 			$phi indvarx_xi28 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi27_bb_20			  ($cast ($uint<64>) indvarx_xnextx_xi30 ) $on bb_20_bb_20 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1879_konst_delay_trans] $delay
          }
          $T [phi_stmt_1875_req] 
        }
      }
      bbx_xnphx_xi27_bb_20 |-> (bbx_xnphx_xi27_bb_20_PhiReq)
      $P [merge_stmt_1874_PhiReqMerge] 
      merge_stmt_1874_PhiReqMerge <-| ( bb_20_bb_20_PhiReq  bbx_xnphx_xi27_bb_20_PhiReq )
      ||[merge_stmt_1874_PhiAck] 
      {
        $T [phi_stmt_1875_ack] 
      }
      merge_stmt_1874_PhiReqMerge |-> (merge_stmt_1874_PhiAck)
      merge_stmt_1874__exit__  <-| (merge_stmt_1874_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 819  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 831
      ;;[merge_stmt_1910_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1910__entry__ |-> (merge_stmt_1910_dead_link)
      merge_stmt_1910__exit__ <-| (merge_stmt_1910_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 831  --------------------------
      ||[bb_20_initializeExtrinsicInfox_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_20_initializeExtrinsicInfox_xexitx_xloopexit |-> (bb_20_initializeExtrinsicInfox_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_1910_PhiReqMerge] 
      merge_stmt_1910_PhiReqMerge <-| ( bb_20_initializeExtrinsicInfox_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_1910_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1910_PhiReqMerge |-> (merge_stmt_1910_PhiAck)
      merge_stmt_1910__exit__  <-| (merge_stmt_1910_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 831  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 834
      //---------------------   merge statement  file prog.linked.opt.aa, line 834  --------------------------
      ||[initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit |-> (initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit_PhiReq)
      ||[initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit |-> (initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit_PhiReq)
      $P [merge_stmt_1912_PhiReqMerge] 
      merge_stmt_1912_PhiReqMerge <-| ( initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit_PhiReq  initialize_aPosteriorix_xexit_initializeExtrinsicInfox_xexit_PhiReq )
      ||[merge_stmt_1912_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1912_PhiReqMerge |-> (merge_stmt_1912_PhiAck)
      merge_stmt_1912__exit__  <-| (merge_stmt_1912_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 834  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 844
      ;;[merge_stmt_1929_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1929__entry__ |-> (merge_stmt_1929_dead_link)
      merge_stmt_1929__exit__ <-| (merge_stmt_1929_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 844  --------------------------
      ||[initializeExtrinsicInfox_xexit_bbx_xnphx_xi54_PhiReq] 
      {
        // no phi statements in merge..
      }
      initializeExtrinsicInfox_xexit_bbx_xnphx_xi54 |-> (initializeExtrinsicInfox_xexit_bbx_xnphx_xi54_PhiReq)
      $P [merge_stmt_1929_PhiReqMerge] 
      merge_stmt_1929_PhiReqMerge <-| ( initializeExtrinsicInfox_xexit_bbx_xnphx_xi54_PhiReq )
      ||[merge_stmt_1929_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1929_PhiReqMerge |-> (merge_stmt_1929_PhiAck)
      merge_stmt_1929__exit__  <-| (merge_stmt_1929_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 844  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 852
      //---------------------   merge statement  file prog.linked.opt.aa, line 852  --------------------------
      ||[bb_24_bb_24_PhiReq] 
      {
        ;;[phi_stmt_1961] 
        {
          ||[phi_stmt_1961_sources] 
          {
            // sources for 			$phi indvarx_xi55 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi54_bb_24			  ($cast ($uint<64>) indvarx_xnextx_xi59 ) $on bb_24_bb_24 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi59 )
            ;;[type_cast_1967] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_1961_req] 
        }
      }
      bb_24_bb_24 |-> (bb_24_bb_24_PhiReq)
      ||[bbx_xnphx_xi54_bb_24_PhiReq] 
      {
        ;;[phi_stmt_1961] 
        {
          ||[phi_stmt_1961_sources] 
          {
            // sources for 			$phi indvarx_xi55 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi54_bb_24			  ($cast ($uint<64>) indvarx_xnextx_xi59 ) $on bb_24_bb_24 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_1965_konst_delay_trans] $delay
          }
          $T [phi_stmt_1961_req] 
        }
      }
      bbx_xnphx_xi54_bb_24 |-> (bbx_xnphx_xi54_bb_24_PhiReq)
      $P [merge_stmt_1960_PhiReqMerge] 
      merge_stmt_1960_PhiReqMerge <-| ( bb_24_bb_24_PhiReq  bbx_xnphx_xi54_bb_24_PhiReq )
      ||[merge_stmt_1960_PhiAck] 
      {
        $T [phi_stmt_1961_ack] 
      }
      merge_stmt_1960_PhiReqMerge |-> (merge_stmt_1960_PhiAck)
      merge_stmt_1960__exit__  <-| (merge_stmt_1960_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 852  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 873
      ;;[merge_stmt_2038_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2038__entry__ |-> (merge_stmt_2038_dead_link)
      merge_stmt_2038__exit__ <-| (merge_stmt_2038_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 873  --------------------------
      ||[bb_24_update_aPosteriorix_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_24_update_aPosteriorix_xexitx_xloopexit |-> (bb_24_update_aPosteriorix_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_2038_PhiReqMerge] 
      merge_stmt_2038_PhiReqMerge <-| ( bb_24_update_aPosteriorix_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_2038_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2038_PhiReqMerge |-> (merge_stmt_2038_PhiAck)
      merge_stmt_2038__exit__  <-| (merge_stmt_2038_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 873  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 876
      //---------------------   merge statement  file prog.linked.opt.aa, line 876  --------------------------
      ||[initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit |-> (initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit_PhiReq)
      ||[update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit |-> (update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit_PhiReq)
      $P [merge_stmt_2040_PhiReqMerge] 
      merge_stmt_2040_PhiReqMerge <-| ( initializeExtrinsicInfox_xexit_update_aPosteriorix_xexit_PhiReq  update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit_PhiReq )
      ||[merge_stmt_2040_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2040_PhiReqMerge |-> (merge_stmt_2040_PhiAck)
      merge_stmt_2040__exit__  <-| (merge_stmt_2040_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 876  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 886
      ;;[merge_stmt_2060_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2060__entry__ |-> (merge_stmt_2060_dead_link)
      merge_stmt_2060__exit__ <-| (merge_stmt_2060_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 886  --------------------------
      ||[update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2061] 
        {
          ||[phi_stmt_2061_sources] 
          {
            // sources for 			$phi indvarx_xlcssa17 := 			  ($cast ($uint<16>) indvar ) $on update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvar )
            ;;[type_cast_2064] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2061_req] 
        }
      }
      update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread |-> (update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq)
      $P [merge_stmt_2060_PhiReqMerge] 
      merge_stmt_2060_PhiReqMerge <-| ( update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq )
      ||[merge_stmt_2060_PhiAck] 
      {
        $T [phi_stmt_2061_ack] 
      }
      merge_stmt_2060_PhiReqMerge |-> (merge_stmt_2060_PhiAck)
      merge_stmt_2060__exit__  <-| (merge_stmt_2060_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 886  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 891
      //---------------------   merge statement  file prog.linked.opt.aa, line 891  --------------------------
      ||[update_aPosteriorix_xexit_bbx_xnphx_xi43_PhiReq] 
      {
        // no phi statements in merge..
      }
      update_aPosteriorix_xexit_bbx_xnphx_xi43 |-> (update_aPosteriorix_xexit_bbx_xnphx_xi43_PhiReq)
      $P [merge_stmt_2070_PhiReqMerge] 
      merge_stmt_2070_PhiReqMerge <-| ( update_aPosteriorix_xexit_bbx_xnphx_xi43_PhiReq )
      ||[merge_stmt_2070_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2070_PhiReqMerge |-> (merge_stmt_2070_PhiAck)
      merge_stmt_2070__exit__  <-| (merge_stmt_2070_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 891  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 899
      //---------------------   merge statement  file prog.linked.opt.aa, line 899  --------------------------
      ||[bb_37_bb_29_PhiReq] 
      {
        ;;[phi_stmt_2109] 
        {
          ||[phi_stmt_2109_sources] 
          {
            // sources for 			$phi indvarx_xi44 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<64>) indvarx_xnextx_xi47 ) $on bb_37_bb_29 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi47 )
            ;;[type_cast_2115] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2109_req] 
        }
        ;;[phi_stmt_2102] 
        {
          ||[phi_stmt_2102_sources] 
          {
            // sources for 			$phi xx_xpr85 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<16>) xx_xpr ) $on bb_37_bb_29 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr )
            ;;[type_cast_2108] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2102_req] 
        }
      }
      bb_37_bb_29 |-> (bb_37_bb_29_PhiReq)
      ||[bbx_xnphx_xi43_bb_29_PhiReq] 
      {
        ;;[phi_stmt_2109] 
        {
          ||[phi_stmt_2109_sources] 
          {
            // sources for 			$phi indvarx_xi44 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<64>) indvarx_xnextx_xi47 ) $on bb_37_bb_29 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_2113_konst_delay_trans] $delay
          }
          $T [phi_stmt_2109_req] 
        }
        ;;[phi_stmt_2102] 
        {
          ||[phi_stmt_2102_sources] 
          {
            // sources for 			$phi xx_xpr85 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<16>) xx_xpr ) $on bb_37_bb_29 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2106_konst_delay_trans] $delay
          }
          $T [phi_stmt_2102_req] 
        }
      }
      bbx_xnphx_xi43_bb_29 |-> (bbx_xnphx_xi43_bb_29_PhiReq)
      $P [merge_stmt_2101_PhiReqMerge] 
      merge_stmt_2101_PhiReqMerge <-| ( bb_37_bb_29_PhiReq  bbx_xnphx_xi43_bb_29_PhiReq )
      ||[merge_stmt_2101_PhiAck] 
      {
        $T [phi_stmt_2102_ack] 
        $T [phi_stmt_2109_ack] 
      }
      merge_stmt_2101_PhiReqMerge |-> (merge_stmt_2101_PhiAck)
      merge_stmt_2101__exit__  <-| (merge_stmt_2101_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 899  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 913
      ;;[merge_stmt_2147_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2147__entry__ |-> (merge_stmt_2147_dead_link)
      merge_stmt_2147__exit__ <-| (merge_stmt_2147_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 913  --------------------------
      ||[bb_29_bb_30_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_29_bb_30 |-> (bb_29_bb_30_PhiReq)
      $P [merge_stmt_2147_PhiReqMerge] 
      merge_stmt_2147_PhiReqMerge <-| ( bb_29_bb_30_PhiReq )
      ||[merge_stmt_2147_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2147_PhiReqMerge |-> (merge_stmt_2147_PhiAck)
      merge_stmt_2147__exit__  <-| (merge_stmt_2147_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 913  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 923
      ;;[merge_stmt_2168_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2168__entry__ |-> (merge_stmt_2168_dead_link)
      merge_stmt_2168__exit__ <-| (merge_stmt_2168_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 923  --------------------------
      ||[bb_30_bb_31_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_30_bb_31 |-> (bb_30_bb_31_PhiReq)
      $P [merge_stmt_2168_PhiReqMerge] 
      merge_stmt_2168_PhiReqMerge <-| ( bb_30_bb_31_PhiReq )
      ||[merge_stmt_2168_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2168_PhiReqMerge |-> (merge_stmt_2168_PhiAck)
      merge_stmt_2168__exit__  <-| (merge_stmt_2168_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 923  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 927
      //---------------------   merge statement  file prog.linked.opt.aa, line 927  --------------------------
      ||[bb_30_bb_32_PhiReq] 
      {
        ;;[phi_stmt_2175] 
        {
          ||[phi_stmt_2175_sources] 
          {
            // sources for 			$phi xx_xpr87 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_31_bb_32			  ($cast ($uint<16>) xx_xpr85 ) $on bb_30_bb_32 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr85 )
            ;;[type_cast_2181] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2175_req] 
        }
      }
      bb_30_bb_32 |-> (bb_30_bb_32_PhiReq)
      ||[bb_31_bb_32_PhiReq] 
      {
        ;;[phi_stmt_2175] 
        {
          ||[phi_stmt_2175_sources] 
          {
            // sources for 			$phi xx_xpr87 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_31_bb_32			  ($cast ($uint<16>) xx_xpr85 ) $on bb_30_bb_32 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2179_konst_delay_trans] $delay
          }
          $T [phi_stmt_2175_req] 
        }
      }
      bb_31_bb_32 |-> (bb_31_bb_32_PhiReq)
      $P [merge_stmt_2174_PhiReqMerge] 
      merge_stmt_2174_PhiReqMerge <-| ( bb_30_bb_32_PhiReq  bb_31_bb_32_PhiReq )
      ||[merge_stmt_2174_PhiAck] 
      {
        $T [phi_stmt_2175_ack] 
      }
      merge_stmt_2174_PhiReqMerge |-> (merge_stmt_2174_PhiAck)
      merge_stmt_2174__exit__  <-| (merge_stmt_2174_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 927  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 932
      //---------------------   merge statement  file prog.linked.opt.aa, line 932  --------------------------
      ||[bb_29_bb_33_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_29_bb_33 |-> (bb_29_bb_33_PhiReq)
      $P [merge_stmt_2189_PhiReqMerge] 
      merge_stmt_2189_PhiReqMerge <-| ( bb_29_bb_33_PhiReq )
      ||[merge_stmt_2189_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2189_PhiReqMerge |-> (merge_stmt_2189_PhiAck)
      merge_stmt_2189__exit__  <-| (merge_stmt_2189_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 932  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 940
      ;;[merge_stmt_2202_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2202__entry__ |-> (merge_stmt_2202_dead_link)
      merge_stmt_2202__exit__ <-| (merge_stmt_2202_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 940  --------------------------
      ||[bb_33_bb_34_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_33_bb_34 |-> (bb_33_bb_34_PhiReq)
      $P [merge_stmt_2202_PhiReqMerge] 
      merge_stmt_2202_PhiReqMerge <-| ( bb_33_bb_34_PhiReq )
      ||[merge_stmt_2202_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2202_PhiReqMerge |-> (merge_stmt_2202_PhiAck)
      merge_stmt_2202__exit__  <-| (merge_stmt_2202_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 940  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 950
      ;;[merge_stmt_2223_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2223__entry__ |-> (merge_stmt_2223_dead_link)
      merge_stmt_2223__exit__ <-| (merge_stmt_2223_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 950  --------------------------
      ||[bb_34_bb_35_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_34_bb_35 |-> (bb_34_bb_35_PhiReq)
      $P [merge_stmt_2223_PhiReqMerge] 
      merge_stmt_2223_PhiReqMerge <-| ( bb_34_bb_35_PhiReq )
      ||[merge_stmt_2223_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2223_PhiReqMerge |-> (merge_stmt_2223_PhiAck)
      merge_stmt_2223__exit__  <-| (merge_stmt_2223_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 950  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 954
      //---------------------   merge statement  file prog.linked.opt.aa, line 954  --------------------------
      ||[bb_34_bb_36_PhiReq] 
      {
        ;;[phi_stmt_2230] 
        {
          ||[phi_stmt_2230_sources] 
          {
            // sources for 			$phi xx_xpr84 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_35_bb_36			  ($cast ($uint<16>) xx_xpr85 ) $on bb_34_bb_36 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr85 )
            ;;[type_cast_2236] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2230_req] 
        }
      }
      bb_34_bb_36 |-> (bb_34_bb_36_PhiReq)
      ||[bb_35_bb_36_PhiReq] 
      {
        ;;[phi_stmt_2230] 
        {
          ||[phi_stmt_2230_sources] 
          {
            // sources for 			$phi xx_xpr84 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_35_bb_36			  ($cast ($uint<16>) xx_xpr85 ) $on bb_34_bb_36 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2234_konst_delay_trans] $delay
          }
          $T [phi_stmt_2230_req] 
        }
      }
      bb_35_bb_36 |-> (bb_35_bb_36_PhiReq)
      $P [merge_stmt_2229_PhiReqMerge] 
      merge_stmt_2229_PhiReqMerge <-| ( bb_34_bb_36_PhiReq  bb_35_bb_36_PhiReq )
      ||[merge_stmt_2229_PhiAck] 
      {
        $T [phi_stmt_2230_ack] 
      }
      merge_stmt_2229_PhiReqMerge |-> (merge_stmt_2229_PhiAck)
      merge_stmt_2229__exit__  <-| (merge_stmt_2229_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 954  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 959
      //---------------------   merge statement  file prog.linked.opt.aa, line 959  --------------------------
      ||[bb_32_bb_37_PhiReq] 
      {
        ;;[phi_stmt_2245] 
        {
          ||[phi_stmt_2245_sources] 
          {
            // sources for 			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr87 )
            ;;[type_cast_2252] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2245_req] 
        }
      }
      bb_32_bb_37 |-> (bb_32_bb_37_PhiReq)
      ||[bb_33_bb_37_PhiReq] 
      {
        ;;[phi_stmt_2245] 
        {
          ||[phi_stmt_2245_sources] 
          {
            // sources for 			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr85 )
            ;;[type_cast_2250] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2245_req] 
        }
      }
      bb_33_bb_37 |-> (bb_33_bb_37_PhiReq)
      ||[bb_36_bb_37_PhiReq] 
      {
        ;;[phi_stmt_2245] 
        {
          ||[phi_stmt_2245_sources] 
          {
            // sources for 			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr84 )
            ;;[type_cast_2248] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2245_req] 
        }
      }
      bb_36_bb_37 |-> (bb_36_bb_37_PhiReq)
      $P [merge_stmt_2244_PhiReqMerge] 
      merge_stmt_2244_PhiReqMerge <-| ( bb_32_bb_37_PhiReq  bb_33_bb_37_PhiReq  bb_36_bb_37_PhiReq )
      ||[merge_stmt_2244_PhiAck] 
      {
        $T [phi_stmt_2245_ack] 
      }
      merge_stmt_2244_PhiReqMerge |-> (merge_stmt_2244_PhiAck)
      merge_stmt_2244__exit__  <-| (merge_stmt_2244_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 959  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 969
      ;;[merge_stmt_2271_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2271__entry__ |-> (merge_stmt_2271_dead_link)
      merge_stmt_2271__exit__ <-| (merge_stmt_2271_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 969  --------------------------
      ||[bb_37_checkIsdecodedx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2272] 
        {
          ||[phi_stmt_2272_sources] 
          {
            // sources for 			$phi xx_xprx_xlcssa := 			  ($cast ($uint<16>) xx_xpr ) $on bb_37_checkIsdecodedx_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpr )
            ;;[type_cast_2275] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2272_req] 
        }
      }
      bb_37_checkIsdecodedx_xexit |-> (bb_37_checkIsdecodedx_xexit_PhiReq)
      $P [merge_stmt_2271_PhiReqMerge] 
      merge_stmt_2271_PhiReqMerge <-| ( bb_37_checkIsdecodedx_xexit_PhiReq )
      ||[merge_stmt_2271_PhiAck] 
      {
        $T [phi_stmt_2272_ack] 
      }
      merge_stmt_2271_PhiReqMerge |-> (merge_stmt_2271_PhiAck)
      merge_stmt_2271__exit__  <-| (merge_stmt_2271_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 969  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 978
      ;;[merge_stmt_2289_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2289__entry__ |-> (merge_stmt_2289_dead_link)
      merge_stmt_2289__exit__ <-| (merge_stmt_2289_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 978  --------------------------
      ||[checkIsdecodedx_xexit_bb_39_PhiReq] 
      {
        // no phi statements in merge..
      }
      checkIsdecodedx_xexit_bb_39 |-> (checkIsdecodedx_xexit_bb_39_PhiReq)
      $P [merge_stmt_2289_PhiReqMerge] 
      merge_stmt_2289_PhiReqMerge <-| ( checkIsdecodedx_xexit_bb_39_PhiReq )
      ||[merge_stmt_2289_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2289_PhiReqMerge |-> (merge_stmt_2289_PhiAck)
      merge_stmt_2289__exit__  <-| (merge_stmt_2289_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 978  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 987
      ;;[merge_stmt_2305_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2305__entry__ |-> (merge_stmt_2305_dead_link)
      merge_stmt_2305__exit__ <-| (merge_stmt_2305_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 987  --------------------------
      ||[bb_39_bbx_xnph4x_xi_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_39_bbx_xnph4x_xi |-> (bb_39_bbx_xnph4x_xi_PhiReq)
      $P [merge_stmt_2305_PhiReqMerge] 
      merge_stmt_2305_PhiReqMerge <-| ( bb_39_bbx_xnph4x_xi_PhiReq )
      ||[merge_stmt_2305_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2305_PhiReqMerge |-> (merge_stmt_2305_PhiAck)
      merge_stmt_2305__exit__  <-| (merge_stmt_2305_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 987  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1001
      //---------------------   merge statement  file prog.linked.opt.aa, line 1001  --------------------------
      ||[bbx_xnph4x_xi_bb_41_PhiReq] 
      {
        ;;[phi_stmt_2369] 
        {
          ||[phi_stmt_2369_sources] 
          {
            // sources for 			$phi indvarx_xi33 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4x_xi_bb_41			  ($cast ($uint<64>) indvarx_xnextx_xi38 ) $on xx_x_crit_edgex_xi_bb_41 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_2373_konst_delay_trans] $delay
          }
          $T [phi_stmt_2369_req] 
        }
      }
      bbx_xnph4x_xi_bb_41 |-> (bbx_xnph4x_xi_bb_41_PhiReq)
      ||[xx_x_crit_edgex_xi_bb_41_PhiReq] 
      {
        ;;[phi_stmt_2369] 
        {
          ||[phi_stmt_2369_sources] 
          {
            // sources for 			$phi indvarx_xi33 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4x_xi_bb_41			  ($cast ($uint<64>) indvarx_xnextx_xi38 ) $on xx_x_crit_edgex_xi_bb_41 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnextx_xi38 )
            ;;[type_cast_2375] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2369_req] 
        }
      }
      xx_x_crit_edgex_xi_bb_41 |-> (xx_x_crit_edgex_xi_bb_41_PhiReq)
      $P [merge_stmt_2368_PhiReqMerge] 
      merge_stmt_2368_PhiReqMerge <-| ( bbx_xnph4x_xi_bb_41_PhiReq  xx_x_crit_edgex_xi_bb_41_PhiReq )
      ||[merge_stmt_2368_PhiAck] 
      {
        $T [phi_stmt_2369_ack] 
      }
      merge_stmt_2368_PhiReqMerge |-> (merge_stmt_2368_PhiAck)
      merge_stmt_2368__exit__  <-| (merge_stmt_2368_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1001  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1015
      ;;[merge_stmt_2412_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2412__entry__ |-> (merge_stmt_2412_dead_link)
      merge_stmt_2412__exit__ <-| (merge_stmt_2412_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1015  --------------------------
      ||[bb_41_bb_42_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_41_bb_42 |-> (bb_41_bb_42_PhiReq)
      $P [merge_stmt_2412_PhiReqMerge] 
      merge_stmt_2412_PhiReqMerge <-| ( bb_41_bb_42_PhiReq )
      ||[merge_stmt_2412_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2412_PhiReqMerge |-> (merge_stmt_2412_PhiAck)
      merge_stmt_2412__exit__  <-| (merge_stmt_2412_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1015  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1020
      //---------------------   merge statement  file prog.linked.opt.aa, line 1020  --------------------------
      ||[bb_41_bb_43_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_41_bb_43 |-> (bb_41_bb_43_PhiReq)
      $P [merge_stmt_2423_PhiReqMerge] 
      merge_stmt_2423_PhiReqMerge <-| ( bb_41_bb_43_PhiReq )
      ||[merge_stmt_2423_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2423_PhiReqMerge |-> (merge_stmt_2423_PhiAck)
      merge_stmt_2423__exit__  <-| (merge_stmt_2423_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1020  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1026
      //---------------------   merge statement  file prog.linked.opt.aa, line 1026  --------------------------
      ||[bb_42_bb_44_PhiReq] 
      {
        ;;[phi_stmt_2439] 
        {
          ||[phi_stmt_2439_sources] 
          {
            // sources for 			$phi iNsTr_149 := 			  ($cast ($uint<16>) iNsTr_142 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_145 ) $on bb_43_bb_44 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_142 )
            ;;[type_cast_2442] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2439_req] 
        }
        ;;[phi_stmt_2445] 
        {
          ||[phi_stmt_2445_sources] 
          {
            // sources for 			$phi rangex_x0x_xi := 			  ($cast ($uint<16>) iNsTr_143 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_147 ) $on bb_43_bb_44 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_143 )
            ;;[type_cast_2448] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2445_req] 
        }
      }
      bb_42_bb_44 |-> (bb_42_bb_44_PhiReq)
      ||[bb_43_bb_44_PhiReq] 
      {
        ;;[phi_stmt_2439] 
        {
          ||[phi_stmt_2439_sources] 
          {
            // sources for 			$phi iNsTr_149 := 			  ($cast ($uint<16>) iNsTr_142 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_145 ) $on bb_43_bb_44 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_145 )
            ;;[type_cast_2444] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2439_req] 
        }
        ;;[phi_stmt_2445] 
        {
          ||[phi_stmt_2445_sources] 
          {
            // sources for 			$phi rangex_x0x_xi := 			  ($cast ($uint<16>) iNsTr_143 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_147 ) $on bb_43_bb_44 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_147 )
            ;;[type_cast_2450] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2445_req] 
        }
      }
      bb_43_bb_44 |-> (bb_43_bb_44_PhiReq)
      $P [merge_stmt_2438_PhiReqMerge] 
      merge_stmt_2438_PhiReqMerge <-| ( bb_42_bb_44_PhiReq  bb_43_bb_44_PhiReq )
      ||[merge_stmt_2438_PhiAck] 
      {
        $T [phi_stmt_2439_ack] 
        $T [phi_stmt_2445_ack] 
      }
      merge_stmt_2438_PhiReqMerge |-> (merge_stmt_2438_PhiAck)
      merge_stmt_2438__exit__  <-| (merge_stmt_2438_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1026  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1036
      ;;[merge_stmt_2464_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2464__entry__ |-> (merge_stmt_2464_dead_link)
      merge_stmt_2464__exit__ <-| (merge_stmt_2464_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1036  --------------------------
      ||[bb_44_bbx_xnphx_xi36_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_44_bbx_xnphx_xi36 |-> (bb_44_bbx_xnphx_xi36_PhiReq)
      $P [merge_stmt_2464_PhiReqMerge] 
      merge_stmt_2464_PhiReqMerge <-| ( bb_44_bbx_xnphx_xi36_PhiReq )
      ||[merge_stmt_2464_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2464_PhiReqMerge |-> (merge_stmt_2464_PhiAck)
      merge_stmt_2464__exit__  <-| (merge_stmt_2464_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1036  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1040
      //---------------------   merge statement  file prog.linked.opt.aa, line 1040  --------------------------
      ||[bb_46_bb_46_PhiReq] 
      {
        ;;[phi_stmt_2473] 
        {
          ||[phi_stmt_2473_sources] 
          {
            // sources for 			$phi colx_x02x_xi := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnphx_xi36_bb_46			  ($cast ($uint<16>) iNsTr_168 ) $on bb_46_bb_46 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_168 )
            ;;[type_cast_2479] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2473_req] 
        }
      }
      bb_46_bb_46 |-> (bb_46_bb_46_PhiReq)
      ||[bbx_xnphx_xi36_bb_46_PhiReq] 
      {
        ;;[phi_stmt_2473] 
        {
          ||[phi_stmt_2473_sources] 
          {
            // sources for 			$phi colx_x02x_xi := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnphx_xi36_bb_46			  ($cast ($uint<16>) iNsTr_168 ) $on bb_46_bb_46 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_2477_konst_delay_trans] $delay
          }
          $T [phi_stmt_2473_req] 
        }
      }
      bbx_xnphx_xi36_bb_46 |-> (bbx_xnphx_xi36_bb_46_PhiReq)
      $P [merge_stmt_2472_PhiReqMerge] 
      merge_stmt_2472_PhiReqMerge <-| ( bb_46_bb_46_PhiReq  bbx_xnphx_xi36_bb_46_PhiReq )
      ||[merge_stmt_2472_PhiAck] 
      {
        $T [phi_stmt_2473_ack] 
      }
      merge_stmt_2472_PhiReqMerge |-> (merge_stmt_2472_PhiAck)
      merge_stmt_2472__exit__  <-| (merge_stmt_2472_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1040  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1064
      ;;[merge_stmt_2564_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2564__entry__ |-> (merge_stmt_2564_dead_link)
      merge_stmt_2564__exit__ <-| (merge_stmt_2564_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1064  --------------------------
      ||[bb_46_xx_x_crit_edgex_xix_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_46_xx_x_crit_edgex_xix_xloopexit |-> (bb_46_xx_x_crit_edgex_xix_xloopexit_PhiReq)
      $P [merge_stmt_2564_PhiReqMerge] 
      merge_stmt_2564_PhiReqMerge <-| ( bb_46_xx_x_crit_edgex_xix_xloopexit_PhiReq )
      ||[merge_stmt_2564_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2564_PhiReqMerge |-> (merge_stmt_2564_PhiAck)
      merge_stmt_2564__exit__  <-| (merge_stmt_2564_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1064  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1067
      //---------------------   merge statement  file prog.linked.opt.aa, line 1067  --------------------------
      ||[bb_44_xx_x_crit_edgex_xi_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_44_xx_x_crit_edgex_xi |-> (bb_44_xx_x_crit_edgex_xi_PhiReq)
      ||[xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi |-> (xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq)
      $P [merge_stmt_2566_PhiReqMerge] 
      merge_stmt_2566_PhiReqMerge <-| ( bb_44_xx_x_crit_edgex_xi_PhiReq  xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi_PhiReq )
      ||[merge_stmt_2566_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2566_PhiReqMerge |-> (merge_stmt_2566_PhiAck)
      merge_stmt_2566__exit__  <-| (merge_stmt_2566_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1067  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1076
      ;;[merge_stmt_2584_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2584__entry__ |-> (merge_stmt_2584_dead_link)
      merge_stmt_2584__exit__ <-| (merge_stmt_2584_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1076  --------------------------
      ||[xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit |-> (xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_2584_PhiReqMerge] 
      merge_stmt_2584_PhiReqMerge <-| ( xx_x_crit_edgex_xi_updateMessagex_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_2584_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2584_PhiReqMerge |-> (merge_stmt_2584_PhiAck)
      merge_stmt_2584__exit__  <-| (merge_stmt_2584_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1076  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1079
      //---------------------   merge statement  file prog.linked.opt.aa, line 1079  --------------------------
      ||[bb_39_updateMessagex_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_39_updateMessagex_xexit |-> (bb_39_updateMessagex_xexit_PhiReq)
      ||[updateMessagex_xexitx_xloopexit_updateMessagex_xexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      updateMessagex_xexitx_xloopexit_updateMessagex_xexit |-> (updateMessagex_xexitx_xloopexit_updateMessagex_xexit_PhiReq)
      $P [merge_stmt_2586_PhiReqMerge] 
      merge_stmt_2586_PhiReqMerge <-| ( bb_39_updateMessagex_xexit_PhiReq  updateMessagex_xexitx_xloopexit_updateMessagex_xexit_PhiReq )
      ||[merge_stmt_2586_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2586_PhiReqMerge |-> (merge_stmt_2586_PhiAck)
      merge_stmt_2586__exit__  <-| (merge_stmt_2586_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1079  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1083
      //---------------------   merge statement  file prog.linked.opt.aa, line 1083  --------------------------
      ||[checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2595] 
        {
          ||[phi_stmt_2595_sources] 
          {
            // sources for 			$phi indvarx_xlcssa := 			  ($cast ($uint<16>) indvar ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) indvar ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvar )
            ;;[type_cast_2598] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2595_req] 
        }
        ;;[phi_stmt_2601] 
        {
          ||[phi_stmt_2601_sources] 
          {
            // sources for 			$phi xx_xpr62 := 			  ($cast ($uint<16>) iNsTr_83 ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) iNsTr_27 ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_83 )
            ;;[type_cast_2604] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2601_req] 
        }
      }
      checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread |-> (checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq)
      ||[initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq] 
      {
        ;;[phi_stmt_2595] 
        {
          ||[phi_stmt_2595_sources] 
          {
            // sources for 			$phi indvarx_xlcssa := 			  ($cast ($uint<16>) indvar ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) indvar ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvar )
            ;;[type_cast_2600] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2595_req] 
        }
        ;;[phi_stmt_2601] 
        {
          ||[phi_stmt_2601_sources] 
          {
            // sources for 			$phi xx_xpr62 := 			  ($cast ($uint<16>) iNsTr_83 ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) iNsTr_27 ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_27 )
            ;;[type_cast_2606] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2601_req] 
        }
      }
      initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread |-> (initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq)
      $P [merge_stmt_2594_PhiReqMerge] 
      merge_stmt_2594_PhiReqMerge <-| ( checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq  initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq )
      ||[merge_stmt_2594_PhiAck] 
      {
        $T [phi_stmt_2595_ack] 
        $T [phi_stmt_2601_ack] 
      }
      merge_stmt_2594_PhiReqMerge |-> (merge_stmt_2594_PhiAck)
      merge_stmt_2594__exit__  <-| (merge_stmt_2594_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1083  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1094
      ;;[merge_stmt_2623_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2623__entry__ |-> (merge_stmt_2623_dead_link)
      merge_stmt_2623__exit__ <-| (merge_stmt_2623_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1094  --------------------------
      ||[checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader |-> (checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader_PhiReq)
      $P [merge_stmt_2623_PhiReqMerge] 
      merge_stmt_2623_PhiReqMerge <-| ( checkIsdecodedx_xexitx_xthread_bbx_xnphx_xi13x_xpreheader_PhiReq )
      ||[merge_stmt_2623_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2623_PhiReqMerge |-> (merge_stmt_2623_PhiAck)
      merge_stmt_2623__exit__  <-| (merge_stmt_2623_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1094  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1097
      //---------------------   merge statement  file prog.linked.opt.aa, line 1097  --------------------------
      ||[bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq] 
      {
        ;;[phi_stmt_2626] 
        {
          ||[phi_stmt_2626_sources] 
          {
            // sources for 			$phi indvarx_xi10 := 			  ($cast ($uint<64>) tmp82 ) $on bbx_xnphx_xi13_bbx_xnphx_xi13			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) tmp82 )
            ;;[type_cast_2629] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2626_req] 
        }
      }
      bbx_xnphx_xi13_bbx_xnphx_xi13 |-> (bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq)
      ||[bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13_PhiReq] 
      {
        ;;[phi_stmt_2626] 
        {
          ||[phi_stmt_2626_sources] 
          {
            // sources for 			$phi indvarx_xi10 := 			  ($cast ($uint<64>) tmp82 ) $on bbx_xnphx_xi13_bbx_xnphx_xi13			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_2632_konst_delay_trans] $delay
          }
          $T [phi_stmt_2626_req] 
        }
      }
      bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 |-> (bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13_PhiReq)
      $P [merge_stmt_2625_PhiReqMerge] 
      merge_stmt_2625_PhiReqMerge <-| ( bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq  bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13_PhiReq )
      ||[merge_stmt_2625_PhiAck] 
      {
        $T [phi_stmt_2626_ack] 
      }
      merge_stmt_2625_PhiReqMerge |-> (merge_stmt_2625_PhiAck)
      merge_stmt_2625__exit__  <-| (merge_stmt_2625_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1097  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1114
      ;;[merge_stmt_2683_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2683__entry__ |-> (merge_stmt_2683_dead_link)
      merge_stmt_2683__exit__ <-| (merge_stmt_2683_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1114  --------------------------
      ||[bbx_xnphx_xi13_send_outputx_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnphx_xi13_send_outputx_xexitx_xloopexit |-> (bbx_xnphx_xi13_send_outputx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_2683_PhiReqMerge] 
      merge_stmt_2683_PhiReqMerge <-| ( bbx_xnphx_xi13_send_outputx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_2683_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2683_PhiReqMerge |-> (merge_stmt_2683_PhiAck)
      merge_stmt_2683__exit__  <-| (merge_stmt_2683_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1114  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1118
      //---------------------   merge statement  file prog.linked.opt.aa, line 1118  --------------------------
      ||[checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2689] 
        {
          ||[phi_stmt_2689_sources] 
          {
            // sources for 			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvarx_xlcssa )
            ;;[type_cast_2696] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2689_req] 
        }
      }
      checkIsdecodedx_xexitx_xthread_send_outputx_xexit |-> (checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq)
      ||[checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2689] 
        {
          ||[phi_stmt_2689_sources] 
          {
            // sources for 			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) indvarx_xlcssa17 )
            ;;[type_cast_2694] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2689_req] 
        }
      }
      checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit |-> (checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq)
      ||[send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq] 
      {
        ;;[phi_stmt_2689] 
        {
          ||[phi_stmt_2689_sources] 
          {
            // sources for 			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) xx_xpre )
            ;;[type_cast_2692] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2689_req] 
        }
      }
      send_outputx_xexitx_xloopexit_send_outputx_xexit |-> (send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq)
      $P [merge_stmt_2688_PhiReqMerge] 
      merge_stmt_2688_PhiReqMerge <-| ( checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq  checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq  send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq )
      ||[merge_stmt_2688_PhiAck] 
      {
        $T [phi_stmt_2689_ack] 
      }
      merge_stmt_2688_PhiReqMerge |-> (merge_stmt_2688_PhiAck)
      merge_stmt_2688__exit__  <-| (merge_stmt_2688_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1118  --------------------------
      bb_0_bb_1 <-| (branch_block_stmt_1353__entry__)
      call_stmt_1356__entry__ <-| (merge_stmt_1355__exit__)
      assign_stmt_1359_to_assign_stmt_1365__entry__ <-| (call_stmt_1356__exit__)
      if_stmt_1366__entry__ <-| (assign_stmt_1359_to_assign_stmt_1365__exit__)
      merge_stmt_1372__entry__ <-| (if_stmt_1366__exit__)
      bbx_xnphx_xix_xpreheader_bbx_xnphx_xi <-| (merge_stmt_1372__exit__)
      do_while_stmt_1381__entry__ <-| (merge_stmt_1374__exit__)
      if_stmt_1439__entry__ <-| (do_while_stmt_1381__exit__)
      merge_stmt_1443__entry__ <-| (if_stmt_1439__exit__)
      assign_stmt_1454__entry__ <-| (merge_stmt_1443__exit__)
      if_stmt_1455__entry__ <-| (assign_stmt_1454__exit__)
      merge_stmt_1461__entry__ <-| (if_stmt_1455__exit__)
      assign_stmt_1464_to_assign_stmt_1501__entry__ <-| (merge_stmt_1461__exit__)
      bbx_xnphx_xi1_bb_6 <-| (assign_stmt_1464_to_assign_stmt_1501__exit__)
      assign_stmt_1516_to_assign_stmt_1551__entry__ <-| (merge_stmt_1503__exit__)
      if_stmt_1552__entry__ <-| (assign_stmt_1516_to_assign_stmt_1551__exit__)
      merge_stmt_1558__entry__ <-| (if_stmt_1552__exit__)
      initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit <-| (merge_stmt_1558__exit__)
      assign_stmt_1574_to_assign_stmt_1580__entry__ <-| (merge_stmt_1560__exit__)
      if_stmt_1581__entry__ <-| (assign_stmt_1574_to_assign_stmt_1580__exit__)
      merge_stmt_1587__entry__ <-| (if_stmt_1581__exit__)
      assign_stmt_1593_to_assign_stmt_1616__entry__ <-| (merge_stmt_1587__exit__)
      bbx_xnphx_xi5_bb_10 <-| (assign_stmt_1593_to_assign_stmt_1616__exit__)
      assign_stmt_1631_to_assign_stmt_1680__entry__ <-| (merge_stmt_1618__exit__)
      if_stmt_1681__entry__ <-| (assign_stmt_1631_to_assign_stmt_1680__exit__)
      merge_stmt_1687__entry__ <-| (if_stmt_1681__exit__)
      initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader <-| (merge_stmt_1687__exit__)
      initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit <-| (merge_stmt_1689__exit__)
      assign_stmt_1725_to_assign_stmt_1733__entry__ <-| (merge_stmt_1699__exit__)
      if_stmt_1734__entry__ <-| (assign_stmt_1725_to_assign_stmt_1733__exit__)
      merge_stmt_1740__entry__ <-| (if_stmt_1734__exit__)
      assign_stmt_1746__entry__ <-| (merge_stmt_1740__exit__)
      if_stmt_1747__entry__ <-| (assign_stmt_1746__exit__)
      merge_stmt_1753__entry__ <-| (if_stmt_1747__exit__)
      assign_stmt_1759_to_assign_stmt_1782__entry__ <-| (merge_stmt_1753__exit__)
      bbx_xnphx_xi18_bb_16 <-| (assign_stmt_1759_to_assign_stmt_1782__exit__)
      assign_stmt_1797_to_assign_stmt_1821__entry__ <-| (merge_stmt_1784__exit__)
      if_stmt_1822__entry__ <-| (assign_stmt_1797_to_assign_stmt_1821__exit__)
      merge_stmt_1828__entry__ <-| (if_stmt_1822__exit__)
      initialize_aPosteriorix_xexitx_xloopexit_initialize_aPosteriorix_xexit <-| (merge_stmt_1828__exit__)
      assign_stmt_1836__entry__ <-| (merge_stmt_1830__exit__)
      if_stmt_1837__entry__ <-| (assign_stmt_1836__exit__)
      merge_stmt_1843__entry__ <-| (if_stmt_1837__exit__)
      assign_stmt_1849_to_assign_stmt_1872__entry__ <-| (merge_stmt_1843__exit__)
      bbx_xnphx_xi27_bb_20 <-| (assign_stmt_1849_to_assign_stmt_1872__exit__)
      assign_stmt_1887_to_assign_stmt_1903__entry__ <-| (merge_stmt_1874__exit__)
      if_stmt_1904__entry__ <-| (assign_stmt_1887_to_assign_stmt_1903__exit__)
      merge_stmt_1910__entry__ <-| (if_stmt_1904__exit__)
      initializeExtrinsicInfox_xexitx_xloopexit_initializeExtrinsicInfox_xexit <-| (merge_stmt_1910__exit__)
      call_stmt_1913__entry__ <-| (merge_stmt_1912__exit__)
      assign_stmt_1916_to_assign_stmt_1922__entry__ <-| (call_stmt_1913__exit__)
      if_stmt_1923__entry__ <-| (assign_stmt_1916_to_assign_stmt_1922__exit__)
      merge_stmt_1929__entry__ <-| (if_stmt_1923__exit__)
      assign_stmt_1935_to_assign_stmt_1958__entry__ <-| (merge_stmt_1929__exit__)
      bbx_xnphx_xi54_bb_24 <-| (assign_stmt_1935_to_assign_stmt_1958__exit__)
      assign_stmt_1973_to_assign_stmt_2031__entry__ <-| (merge_stmt_1960__exit__)
      if_stmt_2032__entry__ <-| (assign_stmt_1973_to_assign_stmt_2031__exit__)
      merge_stmt_2038__entry__ <-| (if_stmt_2032__exit__)
      update_aPosteriorix_xexitx_xloopexit_update_aPosteriorix_xexit <-| (merge_stmt_2038__exit__)
      assign_stmt_2044_to_assign_stmt_2053__entry__ <-| (merge_stmt_2040__exit__)
      if_stmt_2054__entry__ <-| (assign_stmt_2044_to_assign_stmt_2053__exit__)
      merge_stmt_2060__entry__ <-| (if_stmt_2054__exit__)
      assign_stmt_2068__entry__ <-| (merge_stmt_2060__exit__)
      checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit <-| (assign_stmt_2068__exit__)
      assign_stmt_2076_to_assign_stmt_2099__entry__ <-| (merge_stmt_2070__exit__)
      bbx_xnphx_xi43_bb_29 <-| (assign_stmt_2076_to_assign_stmt_2099__exit__)
      assign_stmt_2121_to_assign_stmt_2140__entry__ <-| (merge_stmt_2101__exit__)
      if_stmt_2141__entry__ <-| (assign_stmt_2121_to_assign_stmt_2140__exit__)
      merge_stmt_2147__entry__ <-| (if_stmt_2141__exit__)
      assign_stmt_2151_to_assign_stmt_2161__entry__ <-| (merge_stmt_2147__exit__)
      if_stmt_2162__entry__ <-| (assign_stmt_2151_to_assign_stmt_2161__exit__)
      merge_stmt_2168__entry__ <-| (if_stmt_2162__exit__)
      assign_stmt_2172__entry__ <-| (merge_stmt_2168__exit__)
      bb_31_bb_32 <-| (assign_stmt_2172__exit__)
      assign_stmt_2187__entry__ <-| (merge_stmt_2174__exit__)
      bb_32_bb_37 <-| (assign_stmt_2187__exit__)
      assign_stmt_2195__entry__ <-| (merge_stmt_2189__exit__)
      if_stmt_2196__entry__ <-| (assign_stmt_2195__exit__)
      merge_stmt_2202__entry__ <-| (if_stmt_2196__exit__)
      assign_stmt_2206_to_assign_stmt_2216__entry__ <-| (merge_stmt_2202__exit__)
      if_stmt_2217__entry__ <-| (assign_stmt_2206_to_assign_stmt_2216__exit__)
      merge_stmt_2223__entry__ <-| (if_stmt_2217__exit__)
      assign_stmt_2227__entry__ <-| (merge_stmt_2223__exit__)
      bb_35_bb_36 <-| (assign_stmt_2227__exit__)
      assign_stmt_2242__entry__ <-| (merge_stmt_2229__exit__)
      bb_36_bb_37 <-| (assign_stmt_2242__exit__)
      assign_stmt_2259_to_assign_stmt_2264__entry__ <-| (merge_stmt_2244__exit__)
      if_stmt_2265__entry__ <-| (assign_stmt_2259_to_assign_stmt_2264__exit__)
      merge_stmt_2271__entry__ <-| (if_stmt_2265__exit__)
      assign_stmt_2282__entry__ <-| (merge_stmt_2271__exit__)
      if_stmt_2283__entry__ <-| (assign_stmt_2282__exit__)
      merge_stmt_2289__entry__ <-| (if_stmt_2283__exit__)
      assign_stmt_2292_to_assign_stmt_2298__entry__ <-| (merge_stmt_2289__exit__)
      if_stmt_2299__entry__ <-| (assign_stmt_2292_to_assign_stmt_2298__exit__)
      merge_stmt_2305__entry__ <-| (if_stmt_2299__exit__)
      assign_stmt_2309_to_assign_stmt_2366__entry__ <-| (merge_stmt_2305__exit__)
      bbx_xnph4x_xi_bb_41 <-| (assign_stmt_2309_to_assign_stmt_2366__exit__)
      assign_stmt_2381_to_assign_stmt_2405__entry__ <-| (merge_stmt_2368__exit__)
      if_stmt_2406__entry__ <-| (assign_stmt_2381_to_assign_stmt_2405__exit__)
      merge_stmt_2412__entry__ <-| (if_stmt_2406__exit__)
      assign_stmt_2416_to_assign_stmt_2421__entry__ <-| (merge_stmt_2412__exit__)
      bb_42_bb_44 <-| (assign_stmt_2416_to_assign_stmt_2421__exit__)
      assign_stmt_2427_to_assign_stmt_2436__entry__ <-| (merge_stmt_2423__exit__)
      bb_43_bb_44 <-| (assign_stmt_2427_to_assign_stmt_2436__exit__)
      assign_stmt_2457__entry__ <-| (merge_stmt_2438__exit__)
      if_stmt_2458__entry__ <-| (assign_stmt_2457__exit__)
      merge_stmt_2464__entry__ <-| (if_stmt_2458__exit__)
      assign_stmt_2470__entry__ <-| (merge_stmt_2464__exit__)
      bbx_xnphx_xi36_bb_46 <-| (assign_stmt_2470__exit__)
      assign_stmt_2485_to_assign_stmt_2557__entry__ <-| (merge_stmt_2472__exit__)
      if_stmt_2558__entry__ <-| (assign_stmt_2485_to_assign_stmt_2557__exit__)
      merge_stmt_2564__entry__ <-| (if_stmt_2558__exit__)
      xx_x_crit_edgex_xix_xloopexit_xx_x_crit_edgex_xi <-| (merge_stmt_2564__exit__)
      assign_stmt_2572_to_assign_stmt_2577__entry__ <-| (merge_stmt_2566__exit__)
      if_stmt_2578__entry__ <-| (assign_stmt_2572_to_assign_stmt_2577__exit__)
      merge_stmt_2584__entry__ <-| (if_stmt_2578__exit__)
      updateMessagex_xexitx_xloopexit_updateMessagex_xexit <-| (merge_stmt_2584__exit__)
      assign_stmt_2592__entry__ <-| (merge_stmt_2586__exit__)
      updateMessagex_xexit_initializeMessagex_xexit <-| (assign_stmt_2592__exit__)
      assign_stmt_2610_to_assign_stmt_2616__entry__ <-| (merge_stmt_2594__exit__)
      if_stmt_2617__entry__ <-| (assign_stmt_2610_to_assign_stmt_2616__exit__)
      merge_stmt_2623__entry__ <-| (if_stmt_2617__exit__)
      bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 <-| (merge_stmt_2623__exit__)
      assign_stmt_2638_to_assign_stmt_2658__entry__ <-| (merge_stmt_2625__exit__)
      assign_stmt_2661__entry__ <-| (assign_stmt_2638_to_assign_stmt_2658__exit__)
      assign_stmt_2664_to_assign_stmt_2676__entry__ <-| (assign_stmt_2661__exit__)
      if_stmt_2677__entry__ <-| (assign_stmt_2664_to_assign_stmt_2676__exit__)
      merge_stmt_2683__entry__ <-| (if_stmt_2677__exit__)
      assign_stmt_2686__entry__ <-| (merge_stmt_2683__exit__)
      send_outputx_xexitx_xloopexit_send_outputx_xexit <-| (assign_stmt_2686__exit__)
      assign_stmt_2700__entry__ <-| (merge_stmt_2688__exit__)
      send_outputx_xexit_bb_1 <-| (assign_stmt_2700__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 638
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 648
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 651
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 656
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 674
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 683
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 694
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 710
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 713
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 723
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 731
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 750
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 753
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 757
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 770
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 778
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 786
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 800
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 803
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 811
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 819
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 831
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 834
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 844
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 852
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 873
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 876
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 886
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 891
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 899
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 913
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 923
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 927
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 932
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 940
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 950
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 954
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 959
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 969
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 978
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 987
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1001
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1015
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1020
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1026
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1036
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1040
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1064
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1067
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1076
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1079
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1083
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1094
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1097
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1114
    // constant-object-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1118
    // constant-object-declarations for block %minSumDecode%body
    //  file prog.linked.opt.aa, line 635
    // constant-object-declarations for block %minSumDecode
    //  file prog.linked.opt.aa, line 630
    // constant-declarations for block %minSumDecode%body
    //  file prog.linked.opt.aa, line 635
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 638
    // 		$call initInputs () () 
    //  file prog.linked.opt.aa, line 640
    // ncols
    $constant $W[LOAD_ncols_1358_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1363_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 643
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 648
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 651
    // constant-declarations for phi:  			$phi iNsTr_13_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 652
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) )
    $constant $W[type_cast_1379_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 654
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 656
    // constant-declarations for phi:  			$phi iNsTr_13 := 			  ($cast ($uint<8>) iNsTr_14 ) $on $loopback			  iNsTr_13_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 657
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_1392_wire_constant] : $int<8> := _b00000001// 1
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_1398_wire_constant] : $int<8> := _b00000001// 1
    // @(code_block[iNsTr_18])
    $constant $W[array_obj_ref_1410_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1410_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_19)
    $constant $W[ptr_deref_1414_word_offset_0] : $int<10> := _b0000000000// 0
    // ncols
    $constant $W[LOAD_ncols_1422_word_address_0] : $pointer<memory_space_11> := _b0
    // if-statement  
    //  file prog.linked.opt.aa, line 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 674
    // constant-declarations for phi:  			$phi xx_xlcssa := 			  ($cast ($uint<16>) iNsTr_22 ) $on bbx_xnphx_xi_readCodeBlockx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 675
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1452_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 678
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 683
    // ebbyNo
    $constant $W[LOAD_ebbyNo_1463_word_address_0] : $pointer<memory_space_4> := _b0
    // rate
    $constant $W[LOAD_rate_1466_word_address_0] : $pointer<memory_space_13> := _b0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1476_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1482_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1492_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1499_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 694
    // constant-declarations for phi:  			$phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi1_bb_6			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on bb_6_bb_6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 695
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1508_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(code_block[indvarx_xi])
    $constant $W[array_obj_ref_1514_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1514_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(aPriori[indvarx_xi])
    $constant $W[array_obj_ref_1519_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1519_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgepx_xi)
    $constant $W[ptr_deref_1524_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<8,23>) _f-4.000000e+00 )
    $constant $W[type_cast_1529_wire_constant] : $float<8,23> := _b11000000100000000000000000000000// -4.000000e+00
    // ->(scevgep5x_xi)
    $constant $W[ptr_deref_1538_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1544_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 705
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 710
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 713
    // constant-declarations for phi:  			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 714
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1565_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1568_wire_constant] : $int<16> := _b0000000000000000// 0
    // ncol_ind
    $constant $W[LOAD_ncol_ind_1573_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1578_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 718
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 723
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1591_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1597_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1607_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1614_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 731
    // constant-declarations for phi:  			$phi indvarx_xi6 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi5_bb_10			  ($cast ($uint<64>) indvarx_xnextx_xi8 ) $on bb_10_bb_10 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1623_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(message[indvarx_xi6])
    $constant $W[array_obj_ref_1629_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1629_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_1635_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[tmp4])
    $constant $W[array_obj_ref_1640_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1640_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep6x_xi)
    $constant $W[ptr_deref_1645_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1650_wire_constant] : $int<16> := _b1111111111111111// 65535
    // @(aPriori[iNsTr_33])
    $constant $W[array_obj_ref_1659_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1659_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_34)
    $constant $W[ptr_deref_1664_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgepx_xi7)
    $constant $W[ptr_deref_1667_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1673_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 745
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 750
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 753
    // constant-declarations for phi:  			$phi xx_xph := 			  ($cast ($uint<16>) iNsTr_6 ) $on initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 754
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1696_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 757
    // constant-declarations for phi:  			$phi indvar18 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit			  ($cast ($uint<16>) indvarx_xnext ) $on updateMessagex_xexit_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 758
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_1704_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for phi:  			$phi iNsTr_26 := 			  ($cast ($uint<16>) iNsTr_66 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) xx_xph ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 759
    // constant-declarations for phi:  			$phi iNsTr_27 := 			  ($cast ($uint<16>) iNsTr_83 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) iNsTr_5 ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 760
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1723_wire_constant] : $int<16> := _b0000000000000001// 1
    // maxNitr
    $constant $W[LOAD_maxNitr_1727_word_address_0] : $pointer<memory_space_7> := _b0
    // if-statement  
    //  file prog.linked.opt.aa, line 765
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 770
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1744_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 773
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 778
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1757_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1763_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1773_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1780_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 786
    // constant-declarations for phi:  			$phi indvarx_xi19 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi18_bb_16			  ($cast ($uint<64>) indvarx_xnextx_xi22 ) $on bb_16_bb_16 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 787
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1789_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(aPriori[indvarx_xi19])
    $constant $W[array_obj_ref_1795_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1795_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(aPosteriori[indvarx_xi19])
    $constant $W[array_obj_ref_1800_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1800_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgepx_xi20)
    $constant $W[ptr_deref_1805_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgep5x_xi21)
    $constant $W[ptr_deref_1808_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1814_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 795
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 800
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 803
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1834_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 806
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 811
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1847_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1853_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1863_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1870_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 819
    // constant-declarations for phi:  			$phi indvarx_xi28 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi27_bb_20			  ($cast ($uint<64>) indvarx_xnextx_xi30 ) $on bb_20_bb_20 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 820
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1879_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(ext_info[indvarx_xi28])
    $constant $W[array_obj_ref_1885_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1885_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ($bitcast ($float<8,23>) _h0  )
    $constant $W[type_cast_1891_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // ->(scevgepx_xi29)
    $constant $W[ptr_deref_1889_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1896_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 826
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 831
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 834
    // 		$call checkNodeComputeEngine () () 
    //  file prog.linked.opt.aa, line 836
    // ncol_ind
    $constant $W[LOAD_ncol_ind_1915_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_1920_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 839
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 844
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_1933_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1939_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1949_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_1956_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 852
    // constant-declarations for phi:  			$phi indvarx_xi55 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi54_bb_24			  ($cast ($uint<64>) indvarx_xnextx_xi59 ) $on bb_24_bb_24 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 853
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_1965_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(ext_info[indvarx_xi55])
    $constant $W[array_obj_ref_1971_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1971_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_1977_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[tmp13])
    $constant $W[array_obj_ref_1982_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_1982_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep6x_xi58)
    $constant $W[ptr_deref_1987_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_1992_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ->(scevgepx_xi56)
    $constant $W[ptr_deref_1997_word_offset_0] : $int<10> := _b0000000000// 0
    // @(aPosteriori[iNsTr_99])
    $constant $W[array_obj_ref_2005_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2005_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_100)
    $constant $W[ptr_deref_2010_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(iNsTr_100)
    $constant $W[ptr_deref_2018_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2024_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 868
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 873
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 876
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2043_wire_constant] : $int<16> := _b0000000000000001// 1
    // is_decoded
    $constant $W[STORE_is_decoded_2041_word_address_0] : $pointer<memory_space_6> := _b0
    // ncols
    $constant $W[LOAD_ncols_2046_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2051_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 881
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 886
    // constant-declarations for phi:  			$phi indvarx_xlcssa17 := 			  ($cast ($uint<16>) indvar ) $on update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 887
    // Nitr_required
    $constant $W[STORE_Nitr_required_2066_word_address_0] : $pointer<memory_space_0> := _b0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 891
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2074_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_2080_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2090_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2097_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 899
    // constant-declarations for phi:  			$phi xx_xpr85 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<16>) xx_xpr ) $on bb_37_bb_29 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 900
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) )
    $constant $W[type_cast_2106_wire_constant] : $int<16> := _b0000000000000001// 1
    // constant-declarations for phi:  			$phi indvarx_xi44 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<64>) indvarx_xnextx_xi47 ) $on bb_37_bb_29 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 901
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2113_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(aPosteriori[indvarx_xi44])
    $constant $W[array_obj_ref_2119_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2119_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(code_block[indvarx_xi44])
    $constant $W[array_obj_ref_2124_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2124_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgepx_xi45)
    $constant $W[ptr_deref_2129_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_2138_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 908
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 913
    // ->(scevgep5x_xi46)
    $constant $W[ptr_deref_2150_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_2159_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 918
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 923
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2171_wire_constant] : $int<16> := _b0000000000000000// 0
    // is_decoded
    $constant $W[STORE_is_decoded_2169_word_address_0] : $pointer<memory_space_6> := _b0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 927
    // constant-declarations for phi:  			$phi xx_xpr87 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_31_bb_32			  ($cast ($uint<16>) xx_xpr85 ) $on bb_30_bb_32 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 928
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2179_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($float<8,23>) _f-1.000000e+00 )
    $constant $W[type_cast_2186_wire_constant] : $float<8,23> := _b10111111100000000000000000000000// -1.000000e+00
    // ->(scevgep5x_xi46)
    $constant $W[ptr_deref_2184_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 932
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_2193_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 935
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 940
    // ->(scevgep5x_xi46)
    $constant $W[ptr_deref_2205_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($float<11,52>) _h0  )
    $constant $W[type_cast_2214_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // if-statement  
    //  file prog.linked.opt.aa, line 945
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 950
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2226_wire_constant] : $int<16> := _b0000000000000000// 0
    // is_decoded
    $constant $W[STORE_is_decoded_2224_word_address_0] : $pointer<memory_space_6> := _b0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 954
    // constant-declarations for phi:  			$phi xx_xpr84 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_35_bb_36			  ($cast ($uint<16>) xx_xpr85 ) $on bb_34_bb_36 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 955
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2234_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($float<8,23>) _f1.000000e+00 )
    $constant $W[type_cast_2241_wire_constant] : $float<8,23> := _b00111111100000000000000000000000// 1.000000e+00
    // ->(scevgep5x_xi46)
    $constant $W[ptr_deref_2239_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 959
    // constant-declarations for phi:  			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 960
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2257_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 964
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 969
    // constant-declarations for phi:  			$phi xx_xprx_xlcssa := 			  ($cast ($uint<16>) xx_xpr ) $on bb_37_checkIsdecodedx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 970
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2280_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 973
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 978
    // nrows
    $constant $W[LOAD_nrows_2291_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2296_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 982
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 987
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_2313_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2319_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_2325_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2335_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2342_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2348_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )
    $constant $W[type_cast_2358_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000100// 4
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_2364_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1001
    // constant-declarations for phi:  			$phi indvarx_xi33 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4x_xi_bb_41			  ($cast ($uint<64>) indvarx_xnextx_xi38 ) $on xx_x_crit_edgex_xi_bb_41 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1002
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2373_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(mem[tmp8])
    $constant $W[array_obj_ref_2384_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2384_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(mem[tmp11])
    $constant $W[array_obj_ref_2398_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2398_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1010
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1015
    // ->(scevgepx_xi34)
    $constant $W[ptr_deref_2415_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1020
    // ->(scevgepx_xi34)
    $constant $W[ptr_deref_2426_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgep18x_xi)
    $constant $W[ptr_deref_2430_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1026
    // constant-declarations for phi:  			$phi iNsTr_149 := 			  ($cast ($uint<16>) iNsTr_142 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_145 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1027
    // constant-declarations for phi:  			$phi rangex_x0x_xi := 			  ($cast ($uint<16>) iNsTr_143 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_147 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1028
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2455_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1031
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1036
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_2468_wire_constant] : $int<16> := _b1111111111111111// 65535
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1040
    // constant-declarations for phi:  			$phi colx_x02x_xi := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnphx_xi36_bb_46			  ($cast ($uint<16>) iNsTr_168 ) $on bb_46_bb_46 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1041
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_2477_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_2493_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[iNsTr_156])
    $constant $W[array_obj_ref_2498_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2498_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_157)
    $constant $W[ptr_deref_2503_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_2508_wire_constant] : $int<16> := _b1111111111111111// 65535
    // @(aPosteriori[iNsTr_160])
    $constant $W[array_obj_ref_2517_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2517_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_161)
    $constant $W[ptr_deref_2522_word_offset_0] : $int<10> := _b0000000000// 0
    // @(ext_info[iNsTr_155])
    $constant $W[array_obj_ref_2526_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2526_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_163)
    $constant $W[ptr_deref_2531_word_offset_0] : $int<10> := _b0000000000// 0
    // @(message[iNsTr_155])
    $constant $W[array_obj_ref_2540_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2540_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_166)
    $constant $W[ptr_deref_2544_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2550_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1059
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1064
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1067
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2570_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1071
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1076
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1079
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2590_wire_constant] : $int<16> := _b0000000000000001// 1
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1083
    // constant-declarations for phi:  			$phi indvarx_xlcssa := 			  ($cast ($uint<16>) indvar ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) indvar ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1084
    // constant-declarations for phi:  			$phi xx_xpr62 := 			  ($cast ($uint<16>) iNsTr_83 ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) iNsTr_27 ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1085
    // Nitr_required
    $constant $W[STORE_Nitr_required_2608_word_address_0] : $pointer<memory_space_0> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2614_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1089
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1094
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1097
    // constant-declarations for phi:  			$phi indvarx_xi10 := 			  ($cast ($uint<64>) tmp82 ) $on bbx_xnphx_xi13_bbx_xnphx_xi13			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1098
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2632_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(code_block[indvarx_xi10])
    $constant $W[array_obj_ref_2636_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2636_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2642_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2652_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ->(scevgepx_xi11)
    $constant $W[ptr_deref_2657_word_offset_0] : $int<10> := _b0000000000// 0
    // ncols
    $constant $W[LOAD_ncols_2663_word_address_0] : $pointer<memory_space_11> := _b0
    // if-statement  
    //  file prog.linked.opt.aa, line 1109
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1114
    // Nitr_required
    $constant $W[LOAD_Nitr_required_2685_word_address_0] : $pointer<memory_space_0> := _b0
    // constant-declarations for block %minSumDecode%body%
    //  file prog.linked.opt.aa, line 1118
    // constant-declarations for phi:  			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1119
    // block %minSumDecode%body
    //  file prog.linked.opt.aa, line 635
    // 		$call initInputs () () 
    //  file prog.linked.opt.aa, line 640
    // 		iNsTr_2 := ncols
    //  file prog.linked.opt.aa, line 641
    // ncols
    $W[LOAD_ncols_1358_data_0] : $int<16>
    // iNsTr_2
    $W[iNsTr_2_1359] : $int<16>
    // 		iNsTr_3 := (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 642
    // iNsTr_3
    $W[iNsTr_3_1365] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 643
    // merge-statement  
    //  file prog.linked.opt.aa, line 651
    // 			$phi iNsTr_13_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 652
    // iNsTr_13_at_entry
    $W[iNsTr_13_at_entry_1375] : $int<8>
    // do-while statement  
    //  file prog.linked.opt.aa, line 654
    // merge-statement  
    //  file prog.linked.opt.aa, line 656
    // 			$phi iNsTr_13 := 			  ($cast ($uint<8>) iNsTr_14 ) $on $loopback			  iNsTr_13_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 657
    // ($cast ($uint<8>) iNsTr_14 )
    $intermediate $W[type_cast_1386_wire] : $int<8>
    $W[iNsTr_13_at_entry_1375_1387_buffered] : $int<8>
    // iNsTr_13
    $W[iNsTr_13_1383] : $int<8>
    // 			tmp64 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
    //  file prog.linked.opt.aa, line 659
    // tmp64
    $W[tmp64_1394] : $int<8>
    // 			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 660
    // iNsTr_14
    $W[iNsTr_14_1400] : $int<8>
    // 			iNsTr_17 := code_block_in
    //  file prog.linked.opt.aa, line 661
    // iNsTr_17
    $W[iNsTr_17_1403] : $float<8,23>
    // 			iNsTr_18 := ($cast ($uint<64>) iNsTr_13 )
    //  file prog.linked.opt.aa, line 662
    // iNsTr_18
    $W[iNsTr_18_1407] : $int<64>
    // 			iNsTr_19 := @(code_block[iNsTr_18])
    //  file prog.linked.opt.aa, line 663
    // @(code_block[iNsTr_18])
    $intermediate $W[R_iNsTr_18_1409_resized] : $int<10>
    $intermediate $W[R_iNsTr_18_1409_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1410_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1410_root_address] : $int<10>
    // iNsTr_19
    $W[iNsTr_19_1412] : $int<32>
    // 			->(iNsTr_19) := iNsTr_17
    //  file prog.linked.opt.aa, line 664
    // ->(iNsTr_19)
    $intermediate $W[ptr_deref_1414_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1414_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1414_root_address] : $int<10>
    $W[ptr_deref_1414_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_1414_data_0] : $int<32>
    // 			iNsTr_21 := ($cast ($uint<32>) tmp64 )
    //  file prog.linked.opt.aa, line 665
    // iNsTr_21
    $W[iNsTr_21_1420] : $int<32>
    // 			iNsTr_22 := ncols
    //  file prog.linked.opt.aa, line 666
    // ncols
    $W[LOAD_ncols_1422_data_0] : $int<16>
    // iNsTr_22
    $W[iNsTr_22_1423] : $int<16>
    // 			iNsTr_23 := ($cast ($uint<32>) iNsTr_22 )
    //  file prog.linked.opt.aa, line 667
    // iNsTr_23
    $W[iNsTr_23_1427] : $int<32>
    // 			iNsTr_24 := (iNsTr_21 < iNsTr_23)
    //  file prog.linked.opt.aa, line 668
    // iNsTr_24
    $W[iNsTr_24_1432] : $int<1>
    // 			bbx_xnphx_xi_readCodeBlockx_xexit_taken := ( ~ iNsTr_24 )
    //  file prog.linked.opt.aa, line 669
    // bbx_xnphx_xi_readCodeBlockx_xexit_taken
    $W[bbx_xnphx_xi_readCodeBlockx_xexit_taken_1436] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 0
    // merge-statement  
    //  file prog.linked.opt.aa, line 674
    // 			$phi xx_xlcssa := 			  ($cast ($uint<16>) iNsTr_22 ) $on bbx_xnphx_xi_readCodeBlockx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 675
    // ($cast ($uint<16>) iNsTr_22 )
    $intermediate $W[type_cast_1447_wire] : $int<16>
    // xx_xlcssa
    $W[xx_xlcssa_1444] : $int<16>
    // 		iNsTr_38 := (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 677
    // iNsTr_38
    $W[iNsTr_38_1454] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 678
    // 		iNsTr_46 := ebbyNo
    //  file prog.linked.opt.aa, line 685
    // ebbyNo
    $W[LOAD_ebbyNo_1463_data_0] : $int<32>
    // iNsTr_46
    $W[iNsTr_46_1464] : $float<8,23>
    // 		iNsTr_47 := rate
    //  file prog.linked.opt.aa, line 686
    // rate
    $W[LOAD_rate_1466_data_0] : $int<32>
    // iNsTr_47
    $W[iNsTr_47_1467] : $float<8,23>
    // 		iNsTr_48 := (iNsTr_47 * iNsTr_46)
    //  file prog.linked.opt.aa, line 687
    // iNsTr_48
    $W[iNsTr_48_1472] : $float<8,23>
    // 		tmpx_xi := (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 688
    // tmpx_xi
    $W[tmpx_xi_1478] : $int<1>
    // 		xx_xopx_xi := (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 689
    // xx_xopx_xi
    $W[xx_xopx_xi_1484] : $int<16>
    // 		iNsTr_49 := ($cast ($uint<64>) xx_xopx_xi )
    //  file prog.linked.opt.aa, line 690
    // iNsTr_49
    $W[iNsTr_49_1488] : $int<64>
    // 		xx_xop6x_xi := (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 691
    // xx_xop6x_xi
    $W[xx_xop6x_xi_1494] : $int<64>
    // 		tmp4x_xi := ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 692
    // tmp4x_xi
    $W[tmp4x_xi_1501] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 694
    // 			$phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi1_bb_6			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on bb_6_bb_6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 695
    // ($cast ($uint<64>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_1510_wire] : $int<64>
    // indvarx_xi
    $W[indvarx_xi_1504] : $int<64>
    // 		scevgepx_xi := @(code_block[indvarx_xi])
    //  file prog.linked.opt.aa, line 697
    // @(code_block[indvarx_xi])
    $intermediate $W[R_indvarx_xi_1513_resized] : $int<10>
    $intermediate $W[R_indvarx_xi_1513_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1514_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1514_root_address] : $int<10>
    // scevgepx_xi
    $W[scevgepx_xi_1516] : $int<32>
    // 		scevgep5x_xi := @(aPriori[indvarx_xi])
    //  file prog.linked.opt.aa, line 698
    // @(aPriori[indvarx_xi])
    $intermediate $W[R_indvarx_xi_1518_resized] : $int<10>
    $intermediate $W[R_indvarx_xi_1518_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1519_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1519_root_address] : $int<10>
    // scevgep5x_xi
    $W[scevgep5x_xi_1521] : $int<32>
    // 		iNsTr_60 := ->(scevgepx_xi)
    //  file prog.linked.opt.aa, line 699
    // ->(scevgepx_xi)
    $intermediate $W[ptr_deref_1524_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1524_root_address] : $int<10>
    $W[ptr_deref_1524_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_1524_data_0] : $int<32>
    // iNsTr_60
    $W[iNsTr_60_1525] : $float<8,23>
    // 		iNsTr_61 := (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    //  file prog.linked.opt.aa, line 700
    // iNsTr_61
    $W[iNsTr_61_1531] : $float<8,23>
    // 		iNsTr_62 := (iNsTr_48 * iNsTr_61)
    //  file prog.linked.opt.aa, line 701
    // iNsTr_62
    $W[iNsTr_62_1536] : $float<8,23>
    // 		->(scevgep5x_xi) := iNsTr_62
    //  file prog.linked.opt.aa, line 702
    // ->(scevgep5x_xi)
    $intermediate $W[ptr_deref_1538_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1538_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1538_root_address] : $int<10>
    $W[ptr_deref_1538_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1538_data_0] : $int<32>
    // 		indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 703
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_1546] : $int<64>
    // 		exitcond := (indvarx_xnextx_xi == tmp4x_xi)
    //  file prog.linked.opt.aa, line 704
    // exitcond
    $W[exitcond_1551] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 705
    // merge-statement  
    //  file prog.linked.opt.aa, line 713
    // 			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 714
    // ($cast ($uint<16>) xx_xlcssa )
    $intermediate $W[type_cast_1570_wire] : $int<16>
    // iNsTr_5
    $W[iNsTr_5_1561] : $int<16>
    // 		iNsTr_6 := ncol_ind
    //  file prog.linked.opt.aa, line 716
    // ncol_ind
    $W[LOAD_ncol_ind_1573_data_0] : $int<16>
    // iNsTr_6
    $W[iNsTr_6_1574] : $int<16>
    // 		iNsTr_7 := (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 717
    // iNsTr_7
    $W[iNsTr_7_1580] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 718
    // 		tmpx_xi2 := (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 725
    // tmpx_xi2
    $W[tmpx_xi2_1593] : $int<1>
    // 		xx_xopx_xi3 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 726
    // xx_xopx_xi3
    $W[xx_xopx_xi3_1599] : $int<16>
    // 		iNsTr_11 := ($cast ($uint<64>) xx_xopx_xi3 )
    //  file prog.linked.opt.aa, line 727
    // iNsTr_11
    $W[iNsTr_11_1603] : $int<64>
    // 		xx_xop7x_xi := (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 728
    // xx_xop7x_xi
    $W[xx_xop7x_xi_1609] : $int<64>
    // 		tmp4x_xi4 := ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 729
    // tmp4x_xi4
    $W[tmp4x_xi4_1616] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 731
    // 			$phi indvarx_xi6 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi5_bb_10			  ($cast ($uint<64>) indvarx_xnextx_xi8 ) $on bb_10_bb_10 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // ($cast ($uint<64>) indvarx_xnextx_xi8 )
    $intermediate $W[type_cast_1625_wire] : $int<64>
    // indvarx_xi6
    $W[indvarx_xi6_1619] : $int<64>
    // 		scevgepx_xi7 := @(message[indvarx_xi6])
    //  file prog.linked.opt.aa, line 734
    // @(message[indvarx_xi6])
    $intermediate $W[R_indvarx_xi6_1628_resized] : $int<10>
    $intermediate $W[R_indvarx_xi6_1628_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1629_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1629_root_address] : $int<10>
    // scevgepx_xi7
    $W[scevgepx_xi7_1631] : $int<32>
    // 		tmp4 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 735
    // tmp4
    $W[tmp4_1637] : $int<64>
    // 		scevgep6x_xi := @(mem[tmp4])
    //  file prog.linked.opt.aa, line 736
    // @(mem[tmp4])
    $intermediate $W[R_tmp4_1639_resized] : $int<10>
    $intermediate $W[R_tmp4_1639_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1640_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1640_root_address] : $int<10>
    // scevgep6x_xi
    $W[scevgep6x_xi_1642] : $int<32>
    // 		iNsTr_31 := ->(scevgep6x_xi)
    //  file prog.linked.opt.aa, line 737
    // ->(scevgep6x_xi)
    $intermediate $W[ptr_deref_1645_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1645_root_address] : $int<10>
    $W[ptr_deref_1645_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_1645_data_0] : $int<16>
    // iNsTr_31
    $W[iNsTr_31_1646] : $int<16>
    // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 738
    // iNsTr_32
    $W[iNsTr_32_1652] : $int<16>
    // 		iNsTr_33 := ($cast ($uint<64>) iNsTr_32 )
    //  file prog.linked.opt.aa, line 739
    // iNsTr_33
    $W[iNsTr_33_1656] : $int<64>
    // 		iNsTr_34 := @(aPriori[iNsTr_33])
    //  file prog.linked.opt.aa, line 740
    // @(aPriori[iNsTr_33])
    $intermediate $W[R_iNsTr_33_1658_resized] : $int<10>
    $intermediate $W[R_iNsTr_33_1658_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1659_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1659_root_address] : $int<10>
    // iNsTr_34
    $W[iNsTr_34_1661] : $int<32>
    // 		iNsTr_35 := ->(iNsTr_34)
    //  file prog.linked.opt.aa, line 741
    // ->(iNsTr_34)
    $intermediate $W[ptr_deref_1664_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1664_root_address] : $int<10>
    $W[ptr_deref_1664_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1664_data_0] : $int<32>
    // iNsTr_35
    $W[iNsTr_35_1665] : $float<8,23>
    // 		->(scevgepx_xi7) := iNsTr_35
    //  file prog.linked.opt.aa, line 742
    // ->(scevgepx_xi7)
    $intermediate $W[ptr_deref_1667_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1667_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1667_root_address] : $int<10>
    $W[ptr_deref_1667_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_1667_data_0] : $int<32>
    // 		indvarx_xnextx_xi8 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 743
    // indvarx_xnextx_xi8
    $W[indvarx_xnextx_xi8_1675] : $int<64>
    // 		exitcond3 := (indvarx_xnextx_xi8 == tmp4x_xi4)
    //  file prog.linked.opt.aa, line 744
    // exitcond3
    $W[exitcond3_1680] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 745
    // merge-statement  
    //  file prog.linked.opt.aa, line 753
    // 			$phi xx_xph := 			  ($cast ($uint<16>) iNsTr_6 ) $on initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 754
    // ($cast ($uint<16>) iNsTr_6 )
    $intermediate $W[type_cast_1693_wire] : $int<16>
    // xx_xph
    $W[xx_xph_1690] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 757
    // 			$phi indvar18 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit			  ($cast ($uint<16>) indvarx_xnext ) $on updateMessagex_xexit_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 758
    // ($cast ($uint<16>) indvarx_xnext )
    $intermediate $W[type_cast_1706_wire] : $int<16>
    // indvar18
    $W[indvar18_1700] : $int<16>
    // 			$phi iNsTr_26 := 			  ($cast ($uint<16>) iNsTr_66 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) xx_xph ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 759
    // ($cast ($uint<16>) iNsTr_66 )
    $intermediate $W[type_cast_1710_wire] : $int<16>
    // ($cast ($uint<16>) xx_xph )
    $intermediate $W[type_cast_1712_wire] : $int<16>
    // iNsTr_26
    $W[iNsTr_26_1707] : $int<16>
    // 			$phi iNsTr_27 := 			  ($cast ($uint<16>) iNsTr_83 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) iNsTr_5 ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 760
    // ($cast ($uint<16>) iNsTr_83 )
    $intermediate $W[type_cast_1716_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_5 )
    $intermediate $W[type_cast_1718_wire] : $int<16>
    // iNsTr_27
    $W[iNsTr_27_1713] : $int<16>
    // 		indvar := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 762
    // indvar
    $W[indvar_1725] : $int<16>
    // 		iNsTr_28 := maxNitr
    //  file prog.linked.opt.aa, line 763
    // maxNitr
    $W[LOAD_maxNitr_1727_data_0] : $int<16>
    // iNsTr_28
    $W[iNsTr_28_1728] : $int<16>
    // 		iNsTr_29 := (indvar < iNsTr_28)
    //  file prog.linked.opt.aa, line 764
    // iNsTr_29
    $W[iNsTr_29_1733] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 765
    // 		iNsTr_40 := (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 772
    // iNsTr_40
    $W[iNsTr_40_1746] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 773
    // 		tmpx_xi14 := (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 780
    // tmpx_xi14
    $W[tmpx_xi14_1759] : $int<1>
    // 		xx_xopx_xi15 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 781
    // xx_xopx_xi15
    $W[xx_xopx_xi15_1765] : $int<16>
    // 		iNsTr_53 := ($cast ($uint<64>) xx_xopx_xi15 )
    //  file prog.linked.opt.aa, line 782
    // iNsTr_53
    $W[iNsTr_53_1769] : $int<64>
    // 		xx_xop6x_xi16 := (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 783
    // xx_xop6x_xi16
    $W[xx_xop6x_xi16_1775] : $int<64>
    // 		tmp4x_xi17 := ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 784
    // tmp4x_xi17
    $W[tmp4x_xi17_1782] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 786
    // 			$phi indvarx_xi19 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi18_bb_16			  ($cast ($uint<64>) indvarx_xnextx_xi22 ) $on bb_16_bb_16 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 787
    // ($cast ($uint<64>) indvarx_xnextx_xi22 )
    $intermediate $W[type_cast_1791_wire] : $int<64>
    // indvarx_xi19
    $W[indvarx_xi19_1785] : $int<64>
    // 		scevgepx_xi20 := @(aPriori[indvarx_xi19])
    //  file prog.linked.opt.aa, line 789
    // @(aPriori[indvarx_xi19])
    $intermediate $W[R_indvarx_xi19_1794_resized] : $int<10>
    $intermediate $W[R_indvarx_xi19_1794_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1795_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1795_root_address] : $int<10>
    // scevgepx_xi20
    $W[scevgepx_xi20_1797] : $int<32>
    // 		scevgep5x_xi21 := @(aPosteriori[indvarx_xi19])
    //  file prog.linked.opt.aa, line 790
    // @(aPosteriori[indvarx_xi19])
    $intermediate $W[R_indvarx_xi19_1799_resized] : $int<10>
    $intermediate $W[R_indvarx_xi19_1799_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1800_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1800_root_address] : $int<10>
    // scevgep5x_xi21
    $W[scevgep5x_xi21_1802] : $int<32>
    // 		iNsTr_71 := ->(scevgepx_xi20)
    //  file prog.linked.opt.aa, line 791
    // ->(scevgepx_xi20)
    $intermediate $W[ptr_deref_1805_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1805_root_address] : $int<10>
    $W[ptr_deref_1805_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_1805_data_0] : $int<32>
    // iNsTr_71
    $W[iNsTr_71_1806] : $float<8,23>
    // 		->(scevgep5x_xi21) := iNsTr_71
    //  file prog.linked.opt.aa, line 792
    // ->(scevgep5x_xi21)
    $intermediate $W[ptr_deref_1808_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1808_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1808_root_address] : $int<10>
    $W[ptr_deref_1808_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_1808_data_0] : $int<32>
    // 		indvarx_xnextx_xi22 := (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 793
    // indvarx_xnextx_xi22
    $W[indvarx_xnextx_xi22_1816] : $int<64>
    // 		exitcond15 := (indvarx_xnextx_xi22 == tmp4x_xi17)
    //  file prog.linked.opt.aa, line 794
    // exitcond15
    $W[exitcond15_1821] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 795
    // 		iNsTr_51 := (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 805
    // iNsTr_51
    $W[iNsTr_51_1836] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 806
    // 		tmpx_xi24 := (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 813
    // tmpx_xi24
    $W[tmpx_xi24_1849] : $int<1>
    // 		xx_xopx_xi25 := (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 814
    // xx_xopx_xi25
    $W[xx_xopx_xi25_1855] : $int<16>
    // 		iNsTr_69 := ($cast ($uint<64>) xx_xopx_xi25 )
    //  file prog.linked.opt.aa, line 815
    // iNsTr_69
    $W[iNsTr_69_1859] : $int<64>
    // 		xx_xop5x_xi := (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 816
    // xx_xop5x_xi
    $W[xx_xop5x_xi_1865] : $int<64>
    // 		tmp4x_xi26 := ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 817
    // tmp4x_xi26
    $W[tmp4x_xi26_1872] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 819
    // 			$phi indvarx_xi28 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi27_bb_20			  ($cast ($uint<64>) indvarx_xnextx_xi30 ) $on bb_20_bb_20 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 820
    // ($cast ($uint<64>) indvarx_xnextx_xi30 )
    $intermediate $W[type_cast_1881_wire] : $int<64>
    // indvarx_xi28
    $W[indvarx_xi28_1875] : $int<64>
    // 		scevgepx_xi29 := @(ext_info[indvarx_xi28])
    //  file prog.linked.opt.aa, line 822
    // @(ext_info[indvarx_xi28])
    $intermediate $W[R_indvarx_xi28_1884_resized] : $int<10>
    $intermediate $W[R_indvarx_xi28_1884_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1885_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1885_root_address] : $int<10>
    // scevgepx_xi29
    $W[scevgepx_xi29_1887] : $int<32>
    // 		->(scevgepx_xi29) := ($bitcast ($float<8,23>) _h0  )
    //  file prog.linked.opt.aa, line 823
    // ->(scevgepx_xi29)
    $intermediate $W[ptr_deref_1889_wire] : $float<8,23>
    $intermediate $W[ptr_deref_1889_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1889_root_address] : $int<10>
    $W[ptr_deref_1889_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_1889_data_0] : $int<32>
    // 		indvarx_xnextx_xi30 := (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 824
    // indvarx_xnextx_xi30
    $W[indvarx_xnextx_xi30_1898] : $int<64>
    // 		exitcond14 := (indvarx_xnextx_xi30 == tmp4x_xi26)
    //  file prog.linked.opt.aa, line 825
    // exitcond14
    $W[exitcond14_1903] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 826
    // 		$call checkNodeComputeEngine () () 
    //  file prog.linked.opt.aa, line 836
    // 		iNsTr_66 := ncol_ind
    //  file prog.linked.opt.aa, line 837
    // ncol_ind
    $W[LOAD_ncol_ind_1915_data_0] : $int<16>
    // iNsTr_66
    $W[iNsTr_66_1916] : $int<16>
    // 		iNsTr_67 := (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 838
    // iNsTr_67
    $W[iNsTr_67_1922] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 839
    // 		tmpx_xi50 := (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 846
    // tmpx_xi50
    $W[tmpx_xi50_1935] : $int<1>
    // 		xx_xopx_xi51 := (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 847
    // xx_xopx_xi51
    $W[xx_xopx_xi51_1941] : $int<16>
    // 		iNsTr_86 := ($cast ($uint<64>) xx_xopx_xi51 )
    //  file prog.linked.opt.aa, line 848
    // iNsTr_86
    $W[iNsTr_86_1945] : $int<64>
    // 		xx_xop7x_xi52 := (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 849
    // xx_xop7x_xi52
    $W[xx_xop7x_xi52_1951] : $int<64>
    // 		tmp4x_xi53 := ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 850
    // tmp4x_xi53
    $W[tmp4x_xi53_1958] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 852
    // 			$phi indvarx_xi55 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi54_bb_24			  ($cast ($uint<64>) indvarx_xnextx_xi59 ) $on bb_24_bb_24 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 853
    // ($cast ($uint<64>) indvarx_xnextx_xi59 )
    $intermediate $W[type_cast_1967_wire] : $int<64>
    // indvarx_xi55
    $W[indvarx_xi55_1961] : $int<64>
    // 		scevgepx_xi56 := @(ext_info[indvarx_xi55])
    //  file prog.linked.opt.aa, line 855
    // @(ext_info[indvarx_xi55])
    $intermediate $W[R_indvarx_xi55_1970_resized] : $int<10>
    $intermediate $W[R_indvarx_xi55_1970_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1971_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1971_root_address] : $int<10>
    // scevgepx_xi56
    $W[scevgepx_xi56_1973] : $int<32>
    // 		tmp13 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 856
    // tmp13
    $W[tmp13_1979] : $int<64>
    // 		scevgep6x_xi58 := @(mem[tmp13])
    //  file prog.linked.opt.aa, line 857
    // @(mem[tmp13])
    $intermediate $W[R_tmp13_1981_resized] : $int<10>
    $intermediate $W[R_tmp13_1981_scaled] : $int<10>
    $intermediate $W[array_obj_ref_1982_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_1982_root_address] : $int<10>
    // scevgep6x_xi58
    $W[scevgep6x_xi58_1984] : $int<32>
    // 		iNsTr_96 := ->(scevgep6x_xi58)
    //  file prog.linked.opt.aa, line 858
    // ->(scevgep6x_xi58)
    $intermediate $W[ptr_deref_1987_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1987_root_address] : $int<10>
    $W[ptr_deref_1987_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_1987_data_0] : $int<16>
    // iNsTr_96
    $W[iNsTr_96_1988] : $int<16>
    // 		iNsTr_97 := (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 859
    // iNsTr_97
    $W[iNsTr_97_1994] : $int<16>
    // 		iNsTr_98 := ->(scevgepx_xi56)
    //  file prog.linked.opt.aa, line 860
    // ->(scevgepx_xi56)
    $intermediate $W[ptr_deref_1997_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_1997_root_address] : $int<10>
    $W[ptr_deref_1997_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_1997_data_0] : $int<32>
    // iNsTr_98
    $W[iNsTr_98_1998] : $float<8,23>
    // 		iNsTr_99 := ($cast ($uint<64>) iNsTr_97 )
    //  file prog.linked.opt.aa, line 861
    // iNsTr_99
    $W[iNsTr_99_2002] : $int<64>
    // 		iNsTr_100 := @(aPosteriori[iNsTr_99])
    //  file prog.linked.opt.aa, line 862
    // @(aPosteriori[iNsTr_99])
    $intermediate $W[R_iNsTr_99_2004_resized] : $int<10>
    $intermediate $W[R_iNsTr_99_2004_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2005_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2005_root_address] : $int<10>
    // iNsTr_100
    $W[iNsTr_100_2007] : $int<32>
    // 		iNsTr_101 := ->(iNsTr_100)
    //  file prog.linked.opt.aa, line 863
    // ->(iNsTr_100)
    $intermediate $W[ptr_deref_2010_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2010_root_address] : $int<10>
    $W[ptr_deref_2010_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_2010_data_0] : $int<32>
    // iNsTr_101
    $W[iNsTr_101_2011] : $float<8,23>
    // 		iNsTr_102 := (iNsTr_101 + iNsTr_98)
    //  file prog.linked.opt.aa, line 864
    // iNsTr_102
    $W[iNsTr_102_2016] : $float<8,23>
    // 		->(iNsTr_100) := iNsTr_102
    //  file prog.linked.opt.aa, line 865
    // ->(iNsTr_100)
    $intermediate $W[ptr_deref_2018_wire] : $float<8,23>
    $intermediate $W[ptr_deref_2018_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2018_root_address] : $int<10>
    $W[ptr_deref_2018_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_2018_data_0] : $int<32>
    // 		indvarx_xnextx_xi59 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 866
    // indvarx_xnextx_xi59
    $W[indvarx_xnextx_xi59_2026] : $int<64>
    // 		exitcond12 := (indvarx_xnextx_xi59 == tmp4x_xi53)
    //  file prog.linked.opt.aa, line 867
    // exitcond12
    $W[exitcond12_2031] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 868
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
    //  file prog.linked.opt.aa, line 878
    // is_decoded
    $constant $W[STORE_is_decoded_2041_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_2041_data_0] : $int<16>
    // 		iNsTr_83 := ncols
    //  file prog.linked.opt.aa, line 879
    // ncols
    $W[LOAD_ncols_2046_data_0] : $int<16>
    // iNsTr_83
    $W[iNsTr_83_2047] : $int<16>
    // 		iNsTr_84 := (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 880
    // iNsTr_84
    $W[iNsTr_84_2053] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 881
    // merge-statement  
    //  file prog.linked.opt.aa, line 886
    // 			$phi indvarx_xlcssa17 := 			  ($cast ($uint<16>) indvar ) $on update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 887
    // ($cast ($uint<16>) indvar )
    $intermediate $W[type_cast_2064_wire] : $int<16>
    // indvarx_xlcssa17
    $W[indvarx_xlcssa17_2061] : $int<16>
    // 		Nitr_required := indvarx_xlcssa17
    //  file prog.linked.opt.aa, line 889
    // Nitr_required
    $constant $W[STORE_Nitr_required_2066_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_Nitr_required_2066_data_0] : $int<16>
    // 		tmpx_xi39 := (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 893
    // tmpx_xi39
    $W[tmpx_xi39_2076] : $int<1>
    // 		xx_xopx_xi40 := (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 894
    // xx_xopx_xi40
    $W[xx_xopx_xi40_2082] : $int<16>
    // 		iNsTr_94 := ($cast ($uint<64>) xx_xopx_xi40 )
    //  file prog.linked.opt.aa, line 895
    // iNsTr_94
    $W[iNsTr_94_2086] : $int<64>
    // 		xx_xop6x_xi41 := (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 896
    // xx_xop6x_xi41
    $W[xx_xop6x_xi41_2092] : $int<64>
    // 		tmp4x_xi42 := ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 897
    // tmp4x_xi42
    $W[tmp4x_xi42_2099] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 899
    // 			$phi xx_xpr85 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<16>) xx_xpr ) $on bb_37_bb_29 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 900
    // ($cast ($uint<16>) xx_xpr )
    $intermediate $W[type_cast_2108_wire] : $int<16>
    // xx_xpr85
    $W[xx_xpr85_2102] : $int<16>
    // 			$phi indvarx_xi44 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<64>) indvarx_xnextx_xi47 ) $on bb_37_bb_29 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 901
    // ($cast ($uint<64>) indvarx_xnextx_xi47 )
    $intermediate $W[type_cast_2115_wire] : $int<64>
    // indvarx_xi44
    $W[indvarx_xi44_2109] : $int<64>
    // 		scevgepx_xi45 := @(aPosteriori[indvarx_xi44])
    //  file prog.linked.opt.aa, line 903
    // @(aPosteriori[indvarx_xi44])
    $intermediate $W[R_indvarx_xi44_2118_resized] : $int<10>
    $intermediate $W[R_indvarx_xi44_2118_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2119_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2119_root_address] : $int<10>
    // scevgepx_xi45
    $W[scevgepx_xi45_2121] : $int<32>
    // 		scevgep5x_xi46 := @(code_block[indvarx_xi44])
    //  file prog.linked.opt.aa, line 904
    // @(code_block[indvarx_xi44])
    $intermediate $W[R_indvarx_xi44_2123_resized] : $int<10>
    $intermediate $W[R_indvarx_xi44_2123_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2124_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2124_root_address] : $int<10>
    // scevgep5x_xi46
    $W[scevgep5x_xi46_2126] : $int<32>
    // 		iNsTr_106 := ->(scevgepx_xi45)
    //  file prog.linked.opt.aa, line 905
    // ->(scevgepx_xi45)
    $intermediate $W[ptr_deref_2129_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2129_root_address] : $int<10>
    $W[ptr_deref_2129_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_2129_data_0] : $int<32>
    // iNsTr_106
    $W[iNsTr_106_2130] : $float<8,23>
    // 		iNsTr_107 := ($cast ($float<11,52>) iNsTr_106 )
    //  file prog.linked.opt.aa, line 906
    // iNsTr_107
    $W[iNsTr_107_2134] : $float<11,52>
    // 		iNsTr_108 := (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 907
    // iNsTr_108
    $W[iNsTr_108_2140] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 908
    // 		iNsTr_111 := ->(scevgep5x_xi46)
    //  file prog.linked.opt.aa, line 915
    // ->(scevgep5x_xi46)
    $intermediate $W[ptr_deref_2150_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2150_root_address] : $int<10>
    $W[ptr_deref_2150_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2150_data_0] : $int<32>
    // iNsTr_111
    $W[iNsTr_111_2151] : $float<8,23>
    // 		iNsTr_112 := ($cast ($float<11,52>) iNsTr_111 )
    //  file prog.linked.opt.aa, line 916
    // iNsTr_112
    $W[iNsTr_112_2155] : $float<11,52>
    // 		iNsTr_113 := (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 917
    // iNsTr_113
    $W[iNsTr_113_2161] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 918
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 925
    // is_decoded
    $constant $W[STORE_is_decoded_2169_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_2169_data_0] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 927
    // 			$phi xx_xpr87 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_31_bb_32			  ($cast ($uint<16>) xx_xpr85 ) $on bb_30_bb_32 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 928
    // ($cast ($uint<16>) xx_xpr85 )
    $intermediate $W[type_cast_2181_wire] : $int<16>
    // xx_xpr87
    $W[xx_xpr87_2175] : $int<16>
    // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    //  file prog.linked.opt.aa, line 930
    // ->(scevgep5x_xi46)
    $intermediate $W[ptr_deref_2184_wire] : $float<8,23>
    $intermediate $W[ptr_deref_2184_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2184_root_address] : $int<10>
    $W[ptr_deref_2184_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2184_data_0] : $int<32>
    // 		iNsTr_115 := (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 934
    // iNsTr_115
    $W[iNsTr_115_2195] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 935
    // 		iNsTr_121 := ->(scevgep5x_xi46)
    //  file prog.linked.opt.aa, line 942
    // ->(scevgep5x_xi46)
    $intermediate $W[ptr_deref_2205_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2205_root_address] : $int<10>
    $W[ptr_deref_2205_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2205_data_0] : $int<32>
    // iNsTr_121
    $W[iNsTr_121_2206] : $float<8,23>
    // 		iNsTr_122 := ($cast ($float<11,52>) iNsTr_121 )
    //  file prog.linked.opt.aa, line 943
    // iNsTr_122
    $W[iNsTr_122_2210] : $float<11,52>
    // 		iNsTr_123 := (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 944
    // iNsTr_123
    $W[iNsTr_123_2216] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 945
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 952
    // is_decoded
    $constant $W[STORE_is_decoded_2224_word_address_0] : $pointer<memory_space_6> := _b0
    $W[STORE_is_decoded_2224_data_0] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 954
    // 			$phi xx_xpr84 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_35_bb_36			  ($cast ($uint<16>) xx_xpr85 ) $on bb_34_bb_36 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 955
    // ($cast ($uint<16>) xx_xpr85 )
    $intermediate $W[type_cast_2236_wire] : $int<16>
    // xx_xpr84
    $W[xx_xpr84_2230] : $int<16>
    // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    //  file prog.linked.opt.aa, line 957
    // ->(scevgep5x_xi46)
    $intermediate $W[ptr_deref_2239_wire] : $float<8,23>
    $intermediate $W[ptr_deref_2239_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2239_root_address] : $int<10>
    $W[ptr_deref_2239_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2239_data_0] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 959
    // 			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 960
    // ($cast ($uint<16>) xx_xpr84 )
    $intermediate $W[type_cast_2248_wire] : $int<16>
    // ($cast ($uint<16>) xx_xpr85 )
    $intermediate $W[type_cast_2250_wire] : $int<16>
    // ($cast ($uint<16>) xx_xpr87 )
    $intermediate $W[type_cast_2252_wire] : $int<16>
    // xx_xpr
    $W[xx_xpr_2245] : $int<16>
    // 		indvarx_xnextx_xi47 := (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 962
    // indvarx_xnextx_xi47
    $W[indvarx_xnextx_xi47_2259] : $int<64>
    // 		exitcond16 := (indvarx_xnextx_xi47 == tmp4x_xi42)
    //  file prog.linked.opt.aa, line 963
    // exitcond16
    $W[exitcond16_2264] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 964
    // merge-statement  
    //  file prog.linked.opt.aa, line 969
    // 			$phi xx_xprx_xlcssa := 			  ($cast ($uint<16>) xx_xpr ) $on bb_37_checkIsdecodedx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 970
    // ($cast ($uint<16>) xx_xpr )
    $intermediate $W[type_cast_2275_wire] : $int<16>
    // xx_xprx_xlcssa
    $W[xx_xprx_xlcssa_2272] : $int<16>
    // 		iNsTr_130 := (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 972
    // iNsTr_130
    $W[iNsTr_130_2282] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 973
    // 		iNsTr_132 := nrows
    //  file prog.linked.opt.aa, line 980
    // nrows
    $W[LOAD_nrows_2291_data_0] : $int<16>
    // iNsTr_132
    $W[iNsTr_132_2292] : $int<16>
    // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 981
    // iNsTr_133
    $W[iNsTr_133_2298] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 982
    // 		iNsTr_136 := ($cast ($uint<32>) iNsTr_132 )
    //  file prog.linked.opt.aa, line 989
    // iNsTr_136
    $W[iNsTr_136_2309] : $int<32>
    // 		iNsTr_137 := (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 990
    // iNsTr_137
    $W[iNsTr_137_2315] : $int<32>
    // 		tmp7x_xi := (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 991
    // tmp7x_xi
    $W[tmp7x_xi_2321] : $int<1>
    // 		xx_xopx_xi32 := (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 992
    // xx_xopx_xi32
    $W[xx_xopx_xi32_2327] : $int<16>
    // 		iNsTr_138 := ($cast ($uint<64>) xx_xopx_xi32 )
    //  file prog.linked.opt.aa, line 993
    // iNsTr_138
    $W[iNsTr_138_2331] : $int<64>
    // 		xx_xop19x_xi := (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 994
    // xx_xop19x_xi
    $W[xx_xop19x_xi_2337] : $int<64>
    // 		tmp10x_xi := ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 995
    // tmp10x_xi
    $W[tmp10x_xi_2344] : $int<64>
    // 		xx_xneg1x_xi := (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 996
    // xx_xneg1x_xi
    $W[xx_xneg1x_xi_2350] : $int<16>
    // 		tmp := ($cast ($uint<64>) iNsTr_66 )
    //  file prog.linked.opt.aa, line 997
    // tmp
    $W[tmp_2354] : $int<64>
    // 		tmp7 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 998
    // tmp7
    $W[tmp7_2360] : $int<64>
    // 		tmp10 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 999
    // tmp10
    $W[tmp10_2366] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1001
    // 			$phi indvarx_xi33 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4x_xi_bb_41			  ($cast ($uint<64>) indvarx_xnextx_xi38 ) $on xx_x_crit_edgex_xi_bb_41 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1002
    // ($cast ($uint<64>) indvarx_xnextx_xi38 )
    $intermediate $W[type_cast_2375_wire] : $int<64>
    // indvarx_xi33
    $W[indvarx_xi33_2369] : $int<64>
    // 		tmp8 := (tmp7 + indvarx_xi33)
    //  file prog.linked.opt.aa, line 1004
    // tmp8
    $W[tmp8_2381] : $int<64>
    // 		scevgep18x_xi := @(mem[tmp8])
    //  file prog.linked.opt.aa, line 1005
    // @(mem[tmp8])
    $intermediate $W[R_tmp8_2383_resized] : $int<10>
    $intermediate $W[R_tmp8_2383_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2384_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2384_root_address] : $int<10>
    // scevgep18x_xi
    $W[scevgep18x_xi_2386] : $int<32>
    // 		tmp12x_xi := ($cast ($uint<32>) indvarx_xi33 )
    //  file prog.linked.opt.aa, line 1006
    // tmp12x_xi
    $W[tmp12x_xi_2390] : $int<32>
    // 		tmp11 := (tmp10 + indvarx_xi33)
    //  file prog.linked.opt.aa, line 1007
    // tmp11
    $W[tmp11_2395] : $int<64>
    // 		scevgepx_xi34 := @(mem[tmp11])
    //  file prog.linked.opt.aa, line 1008
    // @(mem[tmp11])
    $intermediate $W[R_tmp11_2397_resized] : $int<10>
    $intermediate $W[R_tmp11_2397_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2398_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2398_root_address] : $int<10>
    // scevgepx_xi34
    $W[scevgepx_xi34_2400] : $int<32>
    // 		iNsTr_140 := (tmp12x_xi == iNsTr_137)
    //  file prog.linked.opt.aa, line 1009
    // iNsTr_140
    $W[iNsTr_140_2405] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1010
    // 		iNsTr_142 := ->(scevgepx_xi34)
    //  file prog.linked.opt.aa, line 1017
    // ->(scevgepx_xi34)
    $intermediate $W[ptr_deref_2415_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2415_root_address] : $int<10>
    $W[ptr_deref_2415_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_2415_data_0] : $int<16>
    // iNsTr_142
    $W[iNsTr_142_2416] : $int<16>
    // 		iNsTr_143 := (xx_xneg1x_xi - iNsTr_142)
    //  file prog.linked.opt.aa, line 1018
    // iNsTr_143
    $W[iNsTr_143_2421] : $int<16>
    // 		iNsTr_145 := ->(scevgepx_xi34)
    //  file prog.linked.opt.aa, line 1022
    // ->(scevgepx_xi34)
    $intermediate $W[ptr_deref_2426_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2426_root_address] : $int<10>
    $W[ptr_deref_2426_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_2426_data_0] : $int<16>
    // iNsTr_145
    $W[iNsTr_145_2427] : $int<16>
    // 		iNsTr_146 := ->(scevgep18x_xi)
    //  file prog.linked.opt.aa, line 1023
    // ->(scevgep18x_xi)
    $intermediate $W[ptr_deref_2430_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2430_root_address] : $int<10>
    $W[ptr_deref_2430_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_2430_data_0] : $int<16>
    // iNsTr_146
    $W[iNsTr_146_2431] : $int<16>
    // 		iNsTr_147 := (iNsTr_146 - iNsTr_145)
    //  file prog.linked.opt.aa, line 1024
    // iNsTr_147
    $W[iNsTr_147_2436] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1026
    // 			$phi iNsTr_149 := 			  ($cast ($uint<16>) iNsTr_142 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_145 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1027
    // ($cast ($uint<16>) iNsTr_142 )
    $intermediate $W[type_cast_2442_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_145 )
    $intermediate $W[type_cast_2444_wire] : $int<16>
    // iNsTr_149
    $W[iNsTr_149_2439] : $int<16>
    // 			$phi rangex_x0x_xi := 			  ($cast ($uint<16>) iNsTr_143 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_147 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1028
    // ($cast ($uint<16>) iNsTr_143 )
    $intermediate $W[type_cast_2448_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_147 )
    $intermediate $W[type_cast_2450_wire] : $int<16>
    // rangex_x0x_xi
    $W[rangex_x0x_xi_2445] : $int<16>
    // 		iNsTr_150 := (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1030
    // iNsTr_150
    $W[iNsTr_150_2457] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1031
    // 		tmpx_xi35 := (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1038
    // tmpx_xi35
    $W[tmpx_xi35_2470] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1040
    // 			$phi colx_x02x_xi := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnphx_xi36_bb_46			  ($cast ($uint<16>) iNsTr_168 ) $on bb_46_bb_46 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1041
    // ($cast ($uint<16>) iNsTr_168 )
    $intermediate $W[type_cast_2479_wire] : $int<16>
    // colx_x02x_xi
    $W[colx_x02x_xi_2473] : $int<16>
    // 		tmp6x_xi := (tmpx_xi35 + colx_x02x_xi)
    //  file prog.linked.opt.aa, line 1043
    // tmp6x_xi
    $W[tmp6x_xi_2485] : $int<16>
    // 		iNsTr_155 := ($cast ($uint<64>) tmp6x_xi )
    //  file prog.linked.opt.aa, line 1044
    // iNsTr_155
    $W[iNsTr_155_2489] : $int<64>
    // 		iNsTr_156 := (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1045
    // iNsTr_156
    $W[iNsTr_156_2495] : $int<64>
    // 		iNsTr_157 := @(mem[iNsTr_156])
    //  file prog.linked.opt.aa, line 1046
    // @(mem[iNsTr_156])
    $intermediate $W[R_iNsTr_156_2497_resized] : $int<10>
    $intermediate $W[R_iNsTr_156_2497_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2498_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2498_root_address] : $int<10>
    // iNsTr_157
    $W[iNsTr_157_2500] : $int<32>
    // 		iNsTr_158 := ->(iNsTr_157)
    //  file prog.linked.opt.aa, line 1047
    // ->(iNsTr_157)
    $intermediate $W[ptr_deref_2503_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2503_root_address] : $int<10>
    $W[ptr_deref_2503_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_2503_data_0] : $int<16>
    // iNsTr_158
    $W[iNsTr_158_2504] : $int<16>
    // 		iNsTr_159 := (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1048
    // iNsTr_159
    $W[iNsTr_159_2510] : $int<16>
    // 		iNsTr_160 := ($cast ($uint<64>) iNsTr_159 )
    //  file prog.linked.opt.aa, line 1049
    // iNsTr_160
    $W[iNsTr_160_2514] : $int<64>
    // 		iNsTr_161 := @(aPosteriori[iNsTr_160])
    //  file prog.linked.opt.aa, line 1050
    // @(aPosteriori[iNsTr_160])
    $intermediate $W[R_iNsTr_160_2516_resized] : $int<10>
    $intermediate $W[R_iNsTr_160_2516_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2517_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2517_root_address] : $int<10>
    // iNsTr_161
    $W[iNsTr_161_2519] : $int<32>
    // 		iNsTr_162 := ->(iNsTr_161)
    //  file prog.linked.opt.aa, line 1051
    // ->(iNsTr_161)
    $intermediate $W[ptr_deref_2522_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2522_root_address] : $int<10>
    $W[ptr_deref_2522_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_2522_data_0] : $int<32>
    // iNsTr_162
    $W[iNsTr_162_2523] : $float<8,23>
    // 		iNsTr_163 := @(ext_info[iNsTr_155])
    //  file prog.linked.opt.aa, line 1052
    // @(ext_info[iNsTr_155])
    $intermediate $W[R_iNsTr_155_2525_resized] : $int<10>
    $intermediate $W[R_iNsTr_155_2525_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2526_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2526_root_address] : $int<10>
    // iNsTr_163
    $W[iNsTr_163_2528] : $int<32>
    // 		iNsTr_164 := ->(iNsTr_163)
    //  file prog.linked.opt.aa, line 1053
    // ->(iNsTr_163)
    $intermediate $W[ptr_deref_2531_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2531_root_address] : $int<10>
    $W[ptr_deref_2531_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_2531_data_0] : $int<32>
    // iNsTr_164
    $W[iNsTr_164_2532] : $float<8,23>
    // 		iNsTr_165 := (iNsTr_162 - iNsTr_164)
    //  file prog.linked.opt.aa, line 1054
    // iNsTr_165
    $W[iNsTr_165_2537] : $float<8,23>
    // 		iNsTr_166 := @(message[iNsTr_155])
    //  file prog.linked.opt.aa, line 1055
    // @(message[iNsTr_155])
    $intermediate $W[R_iNsTr_155_2539_resized] : $int<10>
    $intermediate $W[R_iNsTr_155_2539_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2540_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2540_root_address] : $int<10>
    // iNsTr_166
    $W[iNsTr_166_2542] : $int<32>
    // 		->(iNsTr_166) := iNsTr_165
    //  file prog.linked.opt.aa, line 1056
    // ->(iNsTr_166)
    $intermediate $W[ptr_deref_2544_wire] : $float<8,23>
    $intermediate $W[ptr_deref_2544_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2544_root_address] : $int<10>
    $W[ptr_deref_2544_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_2544_data_0] : $int<32>
    // 		iNsTr_168 := (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1057
    // iNsTr_168
    $W[iNsTr_168_2552] : $int<16>
    // 		exitcond5 := (iNsTr_168 == rangex_x0x_xi)
    //  file prog.linked.opt.aa, line 1058
    // exitcond5
    $W[exitcond5_2557] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1059
    // 		indvarx_xnextx_xi38 := (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1069
    // indvarx_xnextx_xi38
    $W[indvarx_xnextx_xi38_2572] : $int<64>
    // 		exitcond6 := (indvarx_xnextx_xi38 == tmp10x_xi)
    //  file prog.linked.opt.aa, line 1070
    // exitcond6
    $W[exitcond6_2577] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1071
    // 		indvarx_xnext := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1081
    // indvarx_xnext
    $W[indvarx_xnext_2592] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1083
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<16>) indvar ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) indvar ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1084
    // ($cast ($uint<16>) indvar )
    $intermediate $W[type_cast_2598_wire] : $int<16>
    // ($cast ($uint<16>) indvar )
    $intermediate $W[type_cast_2600_wire] : $int<16>
    // indvarx_xlcssa
    $W[indvarx_xlcssa_2595] : $int<16>
    // 			$phi xx_xpr62 := 			  ($cast ($uint<16>) iNsTr_83 ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) iNsTr_27 ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1085
    // ($cast ($uint<16>) iNsTr_83 )
    $intermediate $W[type_cast_2604_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_27 )
    $intermediate $W[type_cast_2606_wire] : $int<16>
    // xx_xpr62
    $W[xx_xpr62_2601] : $int<16>
    // 		Nitr_required := indvarx_xlcssa
    //  file prog.linked.opt.aa, line 1087
    // Nitr_required
    $constant $W[STORE_Nitr_required_2608_word_address_0] : $pointer<memory_space_0> := _b0
    $W[STORE_Nitr_required_2608_data_0] : $int<16>
    // 		iNsTr_43 := (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1088
    // iNsTr_43
    $W[iNsTr_43_2616] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1089
    // merge-statement  
    //  file prog.linked.opt.aa, line 1097
    // 			$phi indvarx_xi10 := 			  ($cast ($uint<64>) tmp82 ) $on bbx_xnphx_xi13_bbx_xnphx_xi13			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1098
    // ($cast ($uint<64>) tmp82 )
    $intermediate $W[type_cast_2629_wire] : $int<64>
    // indvarx_xi10
    $W[indvarx_xi10_2626] : $int<64>
    // 		scevgepx_xi11 := @(code_block[indvarx_xi10])
    //  file prog.linked.opt.aa, line 1100
    // @(code_block[indvarx_xi10])
    $intermediate $W[R_indvarx_xi10_2635_resized] : $int<10>
    $intermediate $W[R_indvarx_xi10_2635_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2636_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2636_root_address] : $int<10>
    // scevgepx_xi11
    $W[scevgepx_xi11_2638] : $int<32>
    // 		tmp1 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1101
    // tmp1
    $W[tmp1_2644] : $int<64>
    // 		tmp2x_xi := ($cast ($uint<32>) tmp1 )
    //  file prog.linked.opt.aa, line 1102
    // tmp2x_xi
    $W[tmp2x_xi_2648] : $int<32>
    // 		tmp82 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1103
    // tmp82
    $W[tmp82_2654] : $int<64>
    // 		iNsTr_74 := ->(scevgepx_xi11)
    //  file prog.linked.opt.aa, line 1104
    // ->(scevgepx_xi11)
    $intermediate $W[ptr_deref_2657_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2657_root_address] : $int<10>
    $W[ptr_deref_2657_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2657_data_0] : $int<32>
    // iNsTr_74
    $W[iNsTr_74_2658] : $float<8,23>
    // 		code_block_decoded := iNsTr_74
    //  file prog.linked.opt.aa, line 1105
    // code_block_decoded
    // 		iNsTr_77 := ncols
    //  file prog.linked.opt.aa, line 1106
    // ncols
    $W[LOAD_ncols_2663_data_0] : $int<16>
    // iNsTr_77
    $W[iNsTr_77_2664] : $int<16>
    // 		iNsTr_78 := ($cast ($uint<32>) iNsTr_77 )
    //  file prog.linked.opt.aa, line 1107
    // iNsTr_78
    $W[iNsTr_78_2668] : $int<32>
    // 		iNsTr_79 := (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
    //  file prog.linked.opt.aa, line 1108
    // ($bitcast ($int<32>) tmp2x_xi )
    $intermediate $W[type_cast_2672_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_78 )
    $intermediate $W[type_cast_2674_wire] : $int<32>
    // iNsTr_79
    $W[iNsTr_79_2676] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1109
    // 		xx_xpre := Nitr_required
    //  file prog.linked.opt.aa, line 1116
    // Nitr_required
    $W[LOAD_Nitr_required_2685_data_0] : $int<16>
    // xx_xpre
    $W[xx_xpre_2686] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1118
    // 			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1119
    // ($cast ($uint<16>) xx_xpre )
    $intermediate $W[type_cast_2692_wire] : $int<16>
    // ($cast ($uint<16>) indvarx_xlcssa17 )
    $intermediate $W[type_cast_2694_wire] : $int<16>
    // ($cast ($uint<16>) indvarx_xlcssa )
    $intermediate $W[type_cast_2696_wire] : $int<16>
    // iNsTr_55
    $W[iNsTr_55_2689] : $int<16>
    // 		nitr_required := iNsTr_55
    //  file prog.linked.opt.aa, line 1121
    // nitr_required
    // datapath-instances for block %minSumDecode%body
    //  file prog.linked.opt.aa, line 635
    // 		$call initInputs () () 
    //  file prog.linked.opt.aa, line 640
    $call [call_stmt_1356_call] $module initInputs() ()  
    $delay call_stmt_1356_call 4
    // 		iNsTr_2 := ncols
    //  file prog.linked.opt.aa, line 641
    // ncols
    $load [LOAD_ncols_1358_load_0] $from memory_space_11 (LOAD_ncols_1358_word_address_0) (LOAD_ncols_1358_data_0) 
    $delay LOAD_ncols_1358_load_0 4
    &/ [LOAD_ncols_1358_gather_scatter] (LOAD_ncols_1358_data_0) (iNsTr_2_1359) 
    $flowthrough 
    // 		iNsTr_3 := (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 642
    // (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1364_inst] (iNsTr_2_1359 type_cast_1363_wire_constant) (iNsTr_3_1365)   
    $buffering  $out EQ_u16_u1_1364_inst iNsTr_3_1365 1
    $delay EQ_u16_u1_1364_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 643
    ==0? [if_stmt_1366_branch] (iNsTr_3_1365)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 651
    // 			$phi iNsTr_13_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xix_xpreheader_bbx_xnphx_xi // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 652
    $phi [phi_stmt_1375] (type_cast_1379_wire_constant) ( iNsTr_13_at_entry_1375 ) 
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 654
    ==0? [do_while_stmt_1381_branch] (iNsTr_24_1432)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 656
    // 			$phi iNsTr_13 := 			  ($cast ($uint<8>) iNsTr_14 ) $on $loopback			  iNsTr_13_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 657
    // ($cast ($uint<8>) iNsTr_14 )
    # := [type_cast_1386_inst] (iNsTr_14_1400) (type_cast_1386_wire)    $fullrate
    $buffering  $out type_cast_1386_inst type_cast_1386_wire 1
    $delay type_cast_1386_inst 1
    # := [iNsTr_13_at_entry_1375_1387_buf] (iNsTr_13_at_entry_1375) (iNsTr_13_at_entry_1375_1387_buffered)    $fullrate
    $buffering $out iNsTr_13_at_entry_1375_1387_buf iNsTr_13_at_entry_1375_1387_buffered  1
    # $phi [phi_stmt_1383] (type_cast_1386_wire iNsTr_13_at_entry_1375_1387_buffered) ( iNsTr_13_1383 ) $fullrate
    // $buffering  $out phi_stmt_1383 iNsTr_13_1383 2
    // 			tmp64 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
    //  file prog.linked.opt.aa, line 659
    // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
    +[ADD_u8_u8_1393_inst] (iNsTr_13_1383 type_cast_1392_wire_constant) (tmp64_1394)    $fullrate
    $buffering  $out ADD_u8_u8_1393_inst tmp64_1394 1
    $delay ADD_u8_u8_1393_inst 1
    // 			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 660
    // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
    +[ADD_u8_u8_1399_inst] (iNsTr_13_1383 type_cast_1398_wire_constant) (iNsTr_14_1400)    $fullrate
    $buffering  $out ADD_u8_u8_1399_inst iNsTr_14_1400 2
    $delay ADD_u8_u8_1399_inst 1
    // 			iNsTr_17 := code_block_in
    //  file prog.linked.opt.aa, line 661
    // code_block_in
    $ioport $in [RPIPE_code_block_in_1402_inst] (code_block_in) (iNsTr_17_1403)  $fullrate 
    $buffering $out RPIPE_code_block_in_1402_inst iNsTr_17_1403 2
    // 			iNsTr_18 := ($cast ($uint<64>) iNsTr_13 )
    //  file prog.linked.opt.aa, line 662
    // ($cast ($uint<64>) iNsTr_13 )
    # := [type_cast_1406_inst] (iNsTr_13_1383) (iNsTr_18_1407)    $fullrate
    $buffering  $out type_cast_1406_inst iNsTr_18_1407 1
    $delay type_cast_1406_inst 1
    // 			iNsTr_19 := @(code_block[iNsTr_18])
    //  file prog.linked.opt.aa, line 663
    &/ [array_obj_ref_1410_index_0_resize] (iNsTr_18_1407) (R_iNsTr_18_1409_resized) 
    $flowthrough 
    &/ [array_obj_ref_1410_index_0_rename] (R_iNsTr_18_1409_resized) (R_iNsTr_18_1409_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1410_index_offset] (R_iNsTr_18_1409_scaled) (array_obj_ref_1410_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1410_root_address_inst] (array_obj_ref_1410_final_offset) (array_obj_ref_1410_root_address) 
    $flowthrough 
    # := [addr_of_1411_final_reg] (array_obj_ref_1410_root_address) (iNsTr_19_1412)    $fullrate
    $buffering  $out addr_of_1411_final_reg iNsTr_19_1412 1
    // 			->(iNsTr_19) := iNsTr_17
    //  file prog.linked.opt.aa, line 664
    // ->(iNsTr_19)
    &/ [ptr_deref_1414_base_resize] (iNsTr_19_1412) (ptr_deref_1414_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1414_root_address_inst] (ptr_deref_1414_resized_base_address) (ptr_deref_1414_root_address) 
    $flowthrough 
    &/ [ptr_deref_1414_addr_0] (ptr_deref_1414_root_address) (ptr_deref_1414_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1414_store_0] $to memory_space_3 (ptr_deref_1414_word_address_0 ptr_deref_1414_data_0) 
    $buffering  $in ptr_deref_1414_store_0 ptr_deref_1414_word_address_0 2
    $buffering  $in ptr_deref_1414_store_0 ptr_deref_1414_data_0 2
    $delay ptr_deref_1414_store_0 4
    &/ [ptr_deref_1414_gather_scatter] (iNsTr_17_1403) (ptr_deref_1414_data_0) 
    $flowthrough 
    // 			iNsTr_21 := ($cast ($uint<32>) tmp64 )
    //  file prog.linked.opt.aa, line 665
    // ($cast ($uint<32>) tmp64 )
    # := [type_cast_1419_inst] (tmp64_1394) (iNsTr_21_1420)    $fullrate
    $buffering  $out type_cast_1419_inst iNsTr_21_1420 1
    $delay type_cast_1419_inst 1
    // 			iNsTr_22 := ncols
    //  file prog.linked.opt.aa, line 666
    // ncols
    $load [LOAD_ncols_1422_load_0] $from memory_space_11 (LOAD_ncols_1422_word_address_0) (LOAD_ncols_1422_data_0) 
    $buffering  $in LOAD_ncols_1422_load_0 LOAD_ncols_1422_word_address_0 2
    $buffering  $out LOAD_ncols_1422_load_0 LOAD_ncols_1422_data_0 2
    $delay LOAD_ncols_1422_load_0 4
    &/ [LOAD_ncols_1422_gather_scatter] (LOAD_ncols_1422_data_0) (iNsTr_22_1423) 
    $flowthrough 
    // 			iNsTr_23 := ($cast ($uint<32>) iNsTr_22 )
    //  file prog.linked.opt.aa, line 667
    // ($cast ($uint<32>) iNsTr_22 )
    # := [type_cast_1426_inst] (iNsTr_22_1423) (iNsTr_23_1427)    $fullrate
    $buffering  $out type_cast_1426_inst iNsTr_23_1427 1
    $delay type_cast_1426_inst 1
    // 			iNsTr_24 := (iNsTr_21 < iNsTr_23)
    //  file prog.linked.opt.aa, line 668
    // (iNsTr_21 < iNsTr_23)
    <[ULT_u32_u1_1431_inst] (iNsTr_21_1420 iNsTr_23_1427) (iNsTr_24_1432)    $fullrate
    $buffering  $out ULT_u32_u1_1431_inst iNsTr_24_1432 1
    $delay ULT_u32_u1_1431_inst 1
    // 			bbx_xnphx_xi_readCodeBlockx_xexit_taken := ( ~ iNsTr_24 )
    //  file prog.linked.opt.aa, line 669
    // ( ~ iNsTr_24 )
    ~ [NOT_u1_u1_1435_inst] (iNsTr_24_1432) (bbx_xnphx_xi_readCodeBlockx_xexit_taken_1436)   $fullrate
    $buffering  $out NOT_u1_u1_1435_inst bbx_xnphx_xi_readCodeBlockx_xexit_taken_1436 1
    $delay NOT_u1_u1_1435_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 0
    ==0? [if_stmt_1439_branch] (bbx_xnphx_xi_readCodeBlockx_xexit_taken_1436)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 674
    // 			$phi xx_xlcssa := 			  ($cast ($uint<16>) iNsTr_22 ) $on bbx_xnphx_xi_readCodeBlockx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 675
    // ($cast ($uint<16>) iNsTr_22 )
    # := [type_cast_1447_inst] (iNsTr_22_1423) (type_cast_1447_wire)   
    $buffering  $out type_cast_1447_inst type_cast_1447_wire 1
    $delay type_cast_1447_inst 1
    $phi [phi_stmt_1444] (type_cast_1447_wire) ( xx_xlcssa_1444 ) 
    // 		iNsTr_38 := (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 677
    // (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1453_inst] (xx_xlcssa_1444 type_cast_1452_wire_constant) (iNsTr_38_1454)   
    $buffering  $out EQ_u16_u1_1453_inst iNsTr_38_1454 1
    $delay EQ_u16_u1_1453_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 678
    ==0? [if_stmt_1455_branch] (iNsTr_38_1454)
    // 		iNsTr_46 := ebbyNo
    //  file prog.linked.opt.aa, line 685
    // ebbyNo
    $load [LOAD_ebbyNo_1463_load_0] $from memory_space_4 (LOAD_ebbyNo_1463_word_address_0) (LOAD_ebbyNo_1463_data_0) 
    $delay LOAD_ebbyNo_1463_load_0 4
    &/ [LOAD_ebbyNo_1463_gather_scatter] (LOAD_ebbyNo_1463_data_0) (iNsTr_46_1464) 
    $flowthrough 
    // 		iNsTr_47 := rate
    //  file prog.linked.opt.aa, line 686
    // rate
    $load [LOAD_rate_1466_load_0] $from memory_space_13 (LOAD_rate_1466_word_address_0) (LOAD_rate_1466_data_0) 
    $delay LOAD_rate_1466_load_0 4
    &/ [LOAD_rate_1466_gather_scatter] (LOAD_rate_1466_data_0) (iNsTr_47_1467) 
    $flowthrough 
    // 		iNsTr_48 := (iNsTr_47 * iNsTr_46)
    //  file prog.linked.opt.aa, line 687
    // (iNsTr_47 * iNsTr_46)
    *[MUL_f32_f32_1471_inst] (iNsTr_47_1467 iNsTr_46_1464) (iNsTr_48_1472)   
    $buffering  $out MUL_f32_f32_1471_inst iNsTr_48_1472 1
    $delay MUL_f32_f32_1471_inst 14
    // 		tmpx_xi := (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 688
    // (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1477_inst] (xx_xlcssa_1444 type_cast_1476_wire_constant) (tmpx_xi_1478)   
    $buffering  $out UGT_u16_u1_1477_inst tmpx_xi_1478 1
    $delay UGT_u16_u1_1477_inst 1
    // 		xx_xopx_xi := (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 689
    // (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1483_inst] (xx_xlcssa_1444 type_cast_1482_wire_constant) (xx_xopx_xi_1484)   
    $buffering  $out ADD_u16_u16_1483_inst xx_xopx_xi_1484 1
    $delay ADD_u16_u16_1483_inst 1
    // 		iNsTr_49 := ($cast ($uint<64>) xx_xopx_xi )
    //  file prog.linked.opt.aa, line 690
    // ($cast ($uint<64>) xx_xopx_xi )
    # := [type_cast_1487_inst] (xx_xopx_xi_1484) (iNsTr_49_1488)   
    $buffering  $out type_cast_1487_inst iNsTr_49_1488 1
    $delay type_cast_1487_inst 1
    // 		xx_xop6x_xi := (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 691
    // (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1493_inst] (iNsTr_49_1488 type_cast_1492_wire_constant) (xx_xop6x_xi_1494)   
    $buffering  $out ADD_u64_u64_1493_inst xx_xop6x_xi_1494 1
    $delay ADD_u64_u64_1493_inst 1
    // 		tmp4x_xi := ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 692
    // ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1500_inst] (tmpx_xi_1478 xx_xop6x_xi_1494 type_cast_1499_wire_constant) (tmp4x_xi_1501) 
    $buffering  $out MUX_1500_inst tmp4x_xi_1501 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 694
    // 			$phi indvarx_xi := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi1_bb_6			  ($cast ($uint<64>) indvarx_xnextx_xi ) $on bb_6_bb_6 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 695
    // ($cast ($uint<64>) indvarx_xnextx_xi )
    # := [type_cast_1510_inst] (indvarx_xnextx_xi_1546) (type_cast_1510_wire)   
    $buffering  $out type_cast_1510_inst type_cast_1510_wire 1
    $delay type_cast_1510_inst 1
    $phi [phi_stmt_1504] (type_cast_1508_wire_constant type_cast_1510_wire) ( indvarx_xi_1504 ) 
    // 		scevgepx_xi := @(code_block[indvarx_xi])
    //  file prog.linked.opt.aa, line 697
    &/ [array_obj_ref_1514_index_0_resize] (indvarx_xi_1504) (R_indvarx_xi_1513_resized) 
    $flowthrough 
    &/ [array_obj_ref_1514_index_0_rename] (R_indvarx_xi_1513_resized) (R_indvarx_xi_1513_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1514_index_offset] (R_indvarx_xi_1513_scaled) (array_obj_ref_1514_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1514_root_address_inst] (array_obj_ref_1514_final_offset) (array_obj_ref_1514_root_address) 
    $flowthrough 
    # := [addr_of_1515_final_reg] (array_obj_ref_1514_root_address) (scevgepx_xi_1516)   
    $buffering  $out addr_of_1515_final_reg scevgepx_xi_1516 1
    // 		scevgep5x_xi := @(aPriori[indvarx_xi])
    //  file prog.linked.opt.aa, line 698
    &/ [array_obj_ref_1519_index_0_resize] (indvarx_xi_1504) (R_indvarx_xi_1518_resized) 
    $flowthrough 
    &/ [array_obj_ref_1519_index_0_rename] (R_indvarx_xi_1518_resized) (R_indvarx_xi_1518_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1519_index_offset] (R_indvarx_xi_1518_scaled) (array_obj_ref_1519_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1519_root_address_inst] (array_obj_ref_1519_final_offset) (array_obj_ref_1519_root_address) 
    $flowthrough 
    # := [addr_of_1520_final_reg] (array_obj_ref_1519_root_address) (scevgep5x_xi_1521)   
    $buffering  $out addr_of_1520_final_reg scevgep5x_xi_1521 1
    // 		iNsTr_60 := ->(scevgepx_xi)
    //  file prog.linked.opt.aa, line 699
    // ->(scevgepx_xi)
    &/ [ptr_deref_1524_base_resize] (scevgepx_xi_1516) (ptr_deref_1524_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1524_root_address_inst] (ptr_deref_1524_resized_base_address) (ptr_deref_1524_root_address) 
    $flowthrough 
    &/ [ptr_deref_1524_addr_0] (ptr_deref_1524_root_address) (ptr_deref_1524_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1524_load_0] $from memory_space_3 (ptr_deref_1524_word_address_0) (ptr_deref_1524_data_0) 
    $delay ptr_deref_1524_load_0 4
    &/ [ptr_deref_1524_gather_scatter] (ptr_deref_1524_data_0) (iNsTr_60_1525) 
    $flowthrough 
    // 		iNsTr_61 := (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    //  file prog.linked.opt.aa, line 700
    // (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
    *[MUL_f32_f32_1530_inst] (iNsTr_60_1525 type_cast_1529_wire_constant) (iNsTr_61_1531)   
    $buffering  $out MUL_f32_f32_1530_inst iNsTr_61_1531 1
    $delay MUL_f32_f32_1530_inst 14
    // 		iNsTr_62 := (iNsTr_48 * iNsTr_61)
    //  file prog.linked.opt.aa, line 701
    // (iNsTr_48 * iNsTr_61)
    *[MUL_f32_f32_1535_inst] (iNsTr_48_1472 iNsTr_61_1531) (iNsTr_62_1536)   
    $buffering  $out MUL_f32_f32_1535_inst iNsTr_62_1536 1
    $delay MUL_f32_f32_1535_inst 14
    // 		->(scevgep5x_xi) := iNsTr_62
    //  file prog.linked.opt.aa, line 702
    // ->(scevgep5x_xi)
    &/ [ptr_deref_1538_base_resize] (scevgep5x_xi_1521) (ptr_deref_1538_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1538_root_address_inst] (ptr_deref_1538_resized_base_address) (ptr_deref_1538_root_address) 
    $flowthrough 
    &/ [ptr_deref_1538_addr_0] (ptr_deref_1538_root_address) (ptr_deref_1538_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1538_store_0] $to memory_space_2 (ptr_deref_1538_word_address_0 ptr_deref_1538_data_0) 
    $delay ptr_deref_1538_store_0 4
    &/ [ptr_deref_1538_gather_scatter] (iNsTr_62_1536) (ptr_deref_1538_data_0) 
    $flowthrough 
    // 		indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 703
    // (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1545_inst] (indvarx_xi_1504 type_cast_1544_wire_constant) (indvarx_xnextx_xi_1546)   
    $buffering  $out ADD_u64_u64_1545_inst indvarx_xnextx_xi_1546 1
    $delay ADD_u64_u64_1545_inst 1
    // 		exitcond := (indvarx_xnextx_xi == tmp4x_xi)
    //  file prog.linked.opt.aa, line 704
    // (indvarx_xnextx_xi == tmp4x_xi)
    ==[EQ_u64_u1_1550_inst] (indvarx_xnextx_xi_1546 tmp4x_xi_1501) (exitcond_1551)   
    $buffering  $out EQ_u64_u1_1550_inst exitcond_1551 1
    $delay EQ_u64_u1_1550_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 705
    ==0? [if_stmt_1552_branch] (exitcond_1551)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 713
    // 			$phi iNsTr_5 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_1_initialize_aPriorix_xexit			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on readCodeBlockx_xexit_initialize_aPriorix_xexit			  ($cast ($uint<16>) xx_xlcssa ) $on initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 714
    // ($cast ($uint<16>) xx_xlcssa )
    # := [type_cast_1570_inst] (xx_xlcssa_1444) (type_cast_1570_wire)   
    $buffering  $out type_cast_1570_inst type_cast_1570_wire 1
    $delay type_cast_1570_inst 1
    $phi [phi_stmt_1561] (type_cast_1565_wire_constant type_cast_1568_wire_constant type_cast_1570_wire) ( iNsTr_5_1561 ) 
    // 		iNsTr_6 := ncol_ind
    //  file prog.linked.opt.aa, line 716
    // ncol_ind
    $load [LOAD_ncol_ind_1573_load_0] $from memory_space_10 (LOAD_ncol_ind_1573_word_address_0) (LOAD_ncol_ind_1573_data_0) 
    $delay LOAD_ncol_ind_1573_load_0 4
    &/ [LOAD_ncol_ind_1573_gather_scatter] (LOAD_ncol_ind_1573_data_0) (iNsTr_6_1574) 
    $flowthrough 
    // 		iNsTr_7 := (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 717
    // (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1579_inst] (iNsTr_6_1574 type_cast_1578_wire_constant) (iNsTr_7_1580)   
    $buffering  $out EQ_u16_u1_1579_inst iNsTr_7_1580 1
    $delay EQ_u16_u1_1579_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 718
    ==0? [if_stmt_1581_branch] (iNsTr_7_1580)
    // 		tmpx_xi2 := (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 725
    // (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1592_inst] (iNsTr_6_1574 type_cast_1591_wire_constant) (tmpx_xi2_1593)   
    $buffering  $out UGT_u16_u1_1592_inst tmpx_xi2_1593 1
    $delay UGT_u16_u1_1592_inst 1
    // 		xx_xopx_xi3 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 726
    // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1598_inst] (iNsTr_6_1574 type_cast_1597_wire_constant) (xx_xopx_xi3_1599)   
    $buffering  $out ADD_u16_u16_1598_inst xx_xopx_xi3_1599 1
    $delay ADD_u16_u16_1598_inst 1
    // 		iNsTr_11 := ($cast ($uint<64>) xx_xopx_xi3 )
    //  file prog.linked.opt.aa, line 727
    // ($cast ($uint<64>) xx_xopx_xi3 )
    # := [type_cast_1602_inst] (xx_xopx_xi3_1599) (iNsTr_11_1603)   
    $buffering  $out type_cast_1602_inst iNsTr_11_1603 1
    $delay type_cast_1602_inst 1
    // 		xx_xop7x_xi := (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 728
    // (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1608_inst] (iNsTr_11_1603 type_cast_1607_wire_constant) (xx_xop7x_xi_1609)   
    $buffering  $out ADD_u64_u64_1608_inst xx_xop7x_xi_1609 1
    $delay ADD_u64_u64_1608_inst 1
    // 		tmp4x_xi4 := ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 729
    // ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1615_inst] (tmpx_xi2_1593 xx_xop7x_xi_1609 type_cast_1614_wire_constant) (tmp4x_xi4_1616) 
    $buffering  $out MUX_1615_inst tmp4x_xi4_1616 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 731
    // 			$phi indvarx_xi6 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi5_bb_10			  ($cast ($uint<64>) indvarx_xnextx_xi8 ) $on bb_10_bb_10 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 732
    // ($cast ($uint<64>) indvarx_xnextx_xi8 )
    # := [type_cast_1625_inst] (indvarx_xnextx_xi8_1675) (type_cast_1625_wire)   
    $buffering  $out type_cast_1625_inst type_cast_1625_wire 1
    $delay type_cast_1625_inst 1
    $phi [phi_stmt_1619] (type_cast_1623_wire_constant type_cast_1625_wire) ( indvarx_xi6_1619 ) 
    // 		scevgepx_xi7 := @(message[indvarx_xi6])
    //  file prog.linked.opt.aa, line 734
    &/ [array_obj_ref_1629_index_0_resize] (indvarx_xi6_1619) (R_indvarx_xi6_1628_resized) 
    $flowthrough 
    &/ [array_obj_ref_1629_index_0_rename] (R_indvarx_xi6_1628_resized) (R_indvarx_xi6_1628_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1629_index_offset] (R_indvarx_xi6_1628_scaled) (array_obj_ref_1629_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1629_root_address_inst] (array_obj_ref_1629_final_offset) (array_obj_ref_1629_root_address) 
    $flowthrough 
    # := [addr_of_1630_final_reg] (array_obj_ref_1629_root_address) (scevgepx_xi7_1631)   
    $buffering  $out addr_of_1630_final_reg scevgepx_xi7_1631 1
    // 		tmp4 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 735
    // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_1636_inst] (indvarx_xi6_1619 type_cast_1635_wire_constant) (tmp4_1637)   
    $buffering  $out ADD_u64_u64_1636_inst tmp4_1637 1
    $delay ADD_u64_u64_1636_inst 1
    // 		scevgep6x_xi := @(mem[tmp4])
    //  file prog.linked.opt.aa, line 736
    &/ [array_obj_ref_1640_index_0_resize] (tmp4_1637) (R_tmp4_1639_resized) 
    $flowthrough 
    &/ [array_obj_ref_1640_index_0_rename] (R_tmp4_1639_resized) (R_tmp4_1639_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1640_index_offset] (R_tmp4_1639_scaled) (array_obj_ref_1640_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1640_root_address_inst] (array_obj_ref_1640_final_offset) (array_obj_ref_1640_root_address) 
    $flowthrough 
    # := [addr_of_1641_final_reg] (array_obj_ref_1640_root_address) (scevgep6x_xi_1642)   
    $buffering  $out addr_of_1641_final_reg scevgep6x_xi_1642 1
    // 		iNsTr_31 := ->(scevgep6x_xi)
    //  file prog.linked.opt.aa, line 737
    // ->(scevgep6x_xi)
    &/ [ptr_deref_1645_base_resize] (scevgep6x_xi_1642) (ptr_deref_1645_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1645_root_address_inst] (ptr_deref_1645_resized_base_address) (ptr_deref_1645_root_address) 
    $flowthrough 
    &/ [ptr_deref_1645_addr_0] (ptr_deref_1645_root_address) (ptr_deref_1645_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1645_load_0] $from memory_space_8 (ptr_deref_1645_word_address_0) (ptr_deref_1645_data_0) 
    $delay ptr_deref_1645_load_0 4
    &/ [ptr_deref_1645_gather_scatter] (ptr_deref_1645_data_0) (iNsTr_31_1646) 
    $flowthrough 
    // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 738
    // (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1651_inst] (iNsTr_31_1646 type_cast_1650_wire_constant) (iNsTr_32_1652)   
    $buffering  $out ADD_u16_u16_1651_inst iNsTr_32_1652 1
    $delay ADD_u16_u16_1651_inst 1
    // 		iNsTr_33 := ($cast ($uint<64>) iNsTr_32 )
    //  file prog.linked.opt.aa, line 739
    // ($cast ($uint<64>) iNsTr_32 )
    # := [type_cast_1655_inst] (iNsTr_32_1652) (iNsTr_33_1656)   
    $buffering  $out type_cast_1655_inst iNsTr_33_1656 1
    $delay type_cast_1655_inst 1
    // 		iNsTr_34 := @(aPriori[iNsTr_33])
    //  file prog.linked.opt.aa, line 740
    &/ [array_obj_ref_1659_index_0_resize] (iNsTr_33_1656) (R_iNsTr_33_1658_resized) 
    $flowthrough 
    &/ [array_obj_ref_1659_index_0_rename] (R_iNsTr_33_1658_resized) (R_iNsTr_33_1658_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1659_index_offset] (R_iNsTr_33_1658_scaled) (array_obj_ref_1659_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1659_root_address_inst] (array_obj_ref_1659_final_offset) (array_obj_ref_1659_root_address) 
    $flowthrough 
    # := [addr_of_1660_final_reg] (array_obj_ref_1659_root_address) (iNsTr_34_1661)   
    $buffering  $out addr_of_1660_final_reg iNsTr_34_1661 1
    // 		iNsTr_35 := ->(iNsTr_34)
    //  file prog.linked.opt.aa, line 741
    // ->(iNsTr_34)
    &/ [ptr_deref_1664_base_resize] (iNsTr_34_1661) (ptr_deref_1664_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1664_root_address_inst] (ptr_deref_1664_resized_base_address) (ptr_deref_1664_root_address) 
    $flowthrough 
    &/ [ptr_deref_1664_addr_0] (ptr_deref_1664_root_address) (ptr_deref_1664_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1664_load_0] $from memory_space_2 (ptr_deref_1664_word_address_0) (ptr_deref_1664_data_0) 
    $delay ptr_deref_1664_load_0 4
    &/ [ptr_deref_1664_gather_scatter] (ptr_deref_1664_data_0) (iNsTr_35_1665) 
    $flowthrough 
    // 		->(scevgepx_xi7) := iNsTr_35
    //  file prog.linked.opt.aa, line 742
    // ->(scevgepx_xi7)
    &/ [ptr_deref_1667_base_resize] (scevgepx_xi7_1631) (ptr_deref_1667_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1667_root_address_inst] (ptr_deref_1667_resized_base_address) (ptr_deref_1667_root_address) 
    $flowthrough 
    &/ [ptr_deref_1667_addr_0] (ptr_deref_1667_root_address) (ptr_deref_1667_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1667_store_0] $to memory_space_9 (ptr_deref_1667_word_address_0 ptr_deref_1667_data_0) 
    $delay ptr_deref_1667_store_0 4
    &/ [ptr_deref_1667_gather_scatter] (iNsTr_35_1665) (ptr_deref_1667_data_0) 
    $flowthrough 
    // 		indvarx_xnextx_xi8 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 743
    // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1674_inst] (indvarx_xi6_1619 type_cast_1673_wire_constant) (indvarx_xnextx_xi8_1675)   
    $buffering  $out ADD_u64_u64_1674_inst indvarx_xnextx_xi8_1675 1
    $delay ADD_u64_u64_1674_inst 1
    // 		exitcond3 := (indvarx_xnextx_xi8 == tmp4x_xi4)
    //  file prog.linked.opt.aa, line 744
    // (indvarx_xnextx_xi8 == tmp4x_xi4)
    ==[EQ_u64_u1_1679_inst] (indvarx_xnextx_xi8_1675 tmp4x_xi4_1616) (exitcond3_1680)   
    $buffering  $out EQ_u64_u1_1679_inst exitcond3_1680 1
    $delay EQ_u64_u1_1679_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 745
    ==0? [if_stmt_1681_branch] (exitcond3_1680)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 753
    // 			$phi xx_xph := 			  ($cast ($uint<16>) iNsTr_6 ) $on initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 754
    // ($cast ($uint<16>) iNsTr_6 )
    # := [type_cast_1693_inst] (iNsTr_6_1574) (type_cast_1693_wire)   
    $buffering  $out type_cast_1693_inst type_cast_1693_wire 1
    $delay type_cast_1693_inst 1
    $phi [phi_stmt_1690] (type_cast_1693_wire type_cast_1696_wire_constant) ( xx_xph_1690 ) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 757
    // 			$phi indvar18 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit			  ($cast ($uint<16>) indvarx_xnext ) $on updateMessagex_xexit_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 758
    // ($cast ($uint<16>) indvarx_xnext )
    # := [type_cast_1706_inst] (indvarx_xnext_2592) (type_cast_1706_wire)   
    $buffering  $out type_cast_1706_inst type_cast_1706_wire 1
    $delay type_cast_1706_inst 1
    $phi [phi_stmt_1700] (type_cast_1704_wire_constant type_cast_1706_wire) ( indvar18_1700 ) 
    // 			$phi iNsTr_26 := 			  ($cast ($uint<16>) iNsTr_66 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) xx_xph ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 759
    // ($cast ($uint<16>) iNsTr_66 )
    # := [type_cast_1710_inst] (iNsTr_66_1916) (type_cast_1710_wire)   
    $buffering  $out type_cast_1710_inst type_cast_1710_wire 1
    $delay type_cast_1710_inst 1
    // ($cast ($uint<16>) xx_xph )
    # := [type_cast_1712_inst] (xx_xph_1690) (type_cast_1712_wire)   
    $buffering  $out type_cast_1712_inst type_cast_1712_wire 1
    $delay type_cast_1712_inst 1
    $phi [phi_stmt_1707] (type_cast_1710_wire type_cast_1712_wire) ( iNsTr_26_1707 ) 
    // 			$phi iNsTr_27 := 			  ($cast ($uint<16>) iNsTr_83 ) $on updateMessagex_xexit_initializeMessagex_xexit			  ($cast ($uint<16>) iNsTr_5 ) $on initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 760
    // ($cast ($uint<16>) iNsTr_83 )
    # := [type_cast_1716_inst] (iNsTr_83_2047) (type_cast_1716_wire)   
    $buffering  $out type_cast_1716_inst type_cast_1716_wire 1
    $delay type_cast_1716_inst 1
    // ($cast ($uint<16>) iNsTr_5 )
    # := [type_cast_1718_inst] (iNsTr_5_1561) (type_cast_1718_wire)   
    $buffering  $out type_cast_1718_inst type_cast_1718_wire 1
    $delay type_cast_1718_inst 1
    $phi [phi_stmt_1713] (type_cast_1716_wire type_cast_1718_wire) ( iNsTr_27_1713 ) 
    // 		indvar := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 762
    // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_1724_inst] (indvar18_1700 type_cast_1723_wire_constant) (indvar_1725)   
    $buffering  $out ADD_u16_u16_1724_inst indvar_1725 1
    $delay ADD_u16_u16_1724_inst 1
    // 		iNsTr_28 := maxNitr
    //  file prog.linked.opt.aa, line 763
    // maxNitr
    $load [LOAD_maxNitr_1727_load_0] $from memory_space_7 (LOAD_maxNitr_1727_word_address_0) (LOAD_maxNitr_1727_data_0) 
    $delay LOAD_maxNitr_1727_load_0 4
    &/ [LOAD_maxNitr_1727_gather_scatter] (LOAD_maxNitr_1727_data_0) (iNsTr_28_1728) 
    $flowthrough 
    // 		iNsTr_29 := (indvar < iNsTr_28)
    //  file prog.linked.opt.aa, line 764
    // (indvar < iNsTr_28)
    <[ULT_u16_u1_1732_inst] (indvar_1725 iNsTr_28_1728) (iNsTr_29_1733)   
    $buffering  $out ULT_u16_u1_1732_inst iNsTr_29_1733 1
    $delay ULT_u16_u1_1732_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 765
    ==0? [if_stmt_1734_branch] (iNsTr_29_1733)
    // 		iNsTr_40 := (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 772
    // (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1745_inst] (iNsTr_27_1713 type_cast_1744_wire_constant) (iNsTr_40_1746)   
    $buffering  $out EQ_u16_u1_1745_inst iNsTr_40_1746 1
    $delay EQ_u16_u1_1745_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 773
    ==0? [if_stmt_1747_branch] (iNsTr_40_1746)
    // 		tmpx_xi14 := (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 780
    // (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1758_inst] (iNsTr_27_1713 type_cast_1757_wire_constant) (tmpx_xi14_1759)   
    $buffering  $out UGT_u16_u1_1758_inst tmpx_xi14_1759 1
    $delay UGT_u16_u1_1758_inst 1
    // 		xx_xopx_xi15 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 781
    // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1764_inst] (iNsTr_27_1713 type_cast_1763_wire_constant) (xx_xopx_xi15_1765)   
    $buffering  $out ADD_u16_u16_1764_inst xx_xopx_xi15_1765 1
    $delay ADD_u16_u16_1764_inst 1
    // 		iNsTr_53 := ($cast ($uint<64>) xx_xopx_xi15 )
    //  file prog.linked.opt.aa, line 782
    // ($cast ($uint<64>) xx_xopx_xi15 )
    # := [type_cast_1768_inst] (xx_xopx_xi15_1765) (iNsTr_53_1769)   
    $buffering  $out type_cast_1768_inst iNsTr_53_1769 1
    $delay type_cast_1768_inst 1
    // 		xx_xop6x_xi16 := (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 783
    // (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1774_inst] (iNsTr_53_1769 type_cast_1773_wire_constant) (xx_xop6x_xi16_1775)   
    $buffering  $out ADD_u64_u64_1774_inst xx_xop6x_xi16_1775 1
    $delay ADD_u64_u64_1774_inst 1
    // 		tmp4x_xi17 := ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 784
    // ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1781_inst] (tmpx_xi14_1759 xx_xop6x_xi16_1775 type_cast_1780_wire_constant) (tmp4x_xi17_1782) 
    $buffering  $out MUX_1781_inst tmp4x_xi17_1782 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 786
    // 			$phi indvarx_xi19 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi18_bb_16			  ($cast ($uint<64>) indvarx_xnextx_xi22 ) $on bb_16_bb_16 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 787
    // ($cast ($uint<64>) indvarx_xnextx_xi22 )
    # := [type_cast_1791_inst] (indvarx_xnextx_xi22_1816) (type_cast_1791_wire)   
    $buffering  $out type_cast_1791_inst type_cast_1791_wire 1
    $delay type_cast_1791_inst 1
    $phi [phi_stmt_1785] (type_cast_1789_wire_constant type_cast_1791_wire) ( indvarx_xi19_1785 ) 
    // 		scevgepx_xi20 := @(aPriori[indvarx_xi19])
    //  file prog.linked.opt.aa, line 789
    &/ [array_obj_ref_1795_index_0_resize] (indvarx_xi19_1785) (R_indvarx_xi19_1794_resized) 
    $flowthrough 
    &/ [array_obj_ref_1795_index_0_rename] (R_indvarx_xi19_1794_resized) (R_indvarx_xi19_1794_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1795_index_offset] (R_indvarx_xi19_1794_scaled) (array_obj_ref_1795_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1795_root_address_inst] (array_obj_ref_1795_final_offset) (array_obj_ref_1795_root_address) 
    $flowthrough 
    # := [addr_of_1796_final_reg] (array_obj_ref_1795_root_address) (scevgepx_xi20_1797)   
    $buffering  $out addr_of_1796_final_reg scevgepx_xi20_1797 1
    // 		scevgep5x_xi21 := @(aPosteriori[indvarx_xi19])
    //  file prog.linked.opt.aa, line 790
    &/ [array_obj_ref_1800_index_0_resize] (indvarx_xi19_1785) (R_indvarx_xi19_1799_resized) 
    $flowthrough 
    &/ [array_obj_ref_1800_index_0_rename] (R_indvarx_xi19_1799_resized) (R_indvarx_xi19_1799_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1800_index_offset] (R_indvarx_xi19_1799_scaled) (array_obj_ref_1800_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1800_root_address_inst] (array_obj_ref_1800_final_offset) (array_obj_ref_1800_root_address) 
    $flowthrough 
    # := [addr_of_1801_final_reg] (array_obj_ref_1800_root_address) (scevgep5x_xi21_1802)   
    $buffering  $out addr_of_1801_final_reg scevgep5x_xi21_1802 1
    // 		iNsTr_71 := ->(scevgepx_xi20)
    //  file prog.linked.opt.aa, line 791
    // ->(scevgepx_xi20)
    &/ [ptr_deref_1805_base_resize] (scevgepx_xi20_1797) (ptr_deref_1805_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1805_root_address_inst] (ptr_deref_1805_resized_base_address) (ptr_deref_1805_root_address) 
    $flowthrough 
    &/ [ptr_deref_1805_addr_0] (ptr_deref_1805_root_address) (ptr_deref_1805_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1805_load_0] $from memory_space_2 (ptr_deref_1805_word_address_0) (ptr_deref_1805_data_0) 
    $delay ptr_deref_1805_load_0 4
    &/ [ptr_deref_1805_gather_scatter] (ptr_deref_1805_data_0) (iNsTr_71_1806) 
    $flowthrough 
    // 		->(scevgep5x_xi21) := iNsTr_71
    //  file prog.linked.opt.aa, line 792
    // ->(scevgep5x_xi21)
    &/ [ptr_deref_1808_base_resize] (scevgep5x_xi21_1802) (ptr_deref_1808_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1808_root_address_inst] (ptr_deref_1808_resized_base_address) (ptr_deref_1808_root_address) 
    $flowthrough 
    &/ [ptr_deref_1808_addr_0] (ptr_deref_1808_root_address) (ptr_deref_1808_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1808_store_0] $to memory_space_1 (ptr_deref_1808_word_address_0 ptr_deref_1808_data_0) 
    $delay ptr_deref_1808_store_0 4
    &/ [ptr_deref_1808_gather_scatter] (iNsTr_71_1806) (ptr_deref_1808_data_0) 
    $flowthrough 
    // 		indvarx_xnextx_xi22 := (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 793
    // (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1815_inst] (indvarx_xi19_1785 type_cast_1814_wire_constant) (indvarx_xnextx_xi22_1816)   
    $buffering  $out ADD_u64_u64_1815_inst indvarx_xnextx_xi22_1816 1
    $delay ADD_u64_u64_1815_inst 1
    // 		exitcond15 := (indvarx_xnextx_xi22 == tmp4x_xi17)
    //  file prog.linked.opt.aa, line 794
    // (indvarx_xnextx_xi22 == tmp4x_xi17)
    ==[EQ_u64_u1_1820_inst] (indvarx_xnextx_xi22_1816 tmp4x_xi17_1782) (exitcond15_1821)   
    $buffering  $out EQ_u64_u1_1820_inst exitcond15_1821 1
    $delay EQ_u64_u1_1820_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 795
    ==0? [if_stmt_1822_branch] (exitcond15_1821)
    // 		iNsTr_51 := (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 805
    // (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1835_inst] (iNsTr_26_1707 type_cast_1834_wire_constant) (iNsTr_51_1836)   
    $buffering  $out EQ_u16_u1_1835_inst iNsTr_51_1836 1
    $delay EQ_u16_u1_1835_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 806
    ==0? [if_stmt_1837_branch] (iNsTr_51_1836)
    // 		tmpx_xi24 := (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 813
    // (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1848_inst] (iNsTr_26_1707 type_cast_1847_wire_constant) (tmpx_xi24_1849)   
    $buffering  $out UGT_u16_u1_1848_inst tmpx_xi24_1849 1
    $delay UGT_u16_u1_1848_inst 1
    // 		xx_xopx_xi25 := (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 814
    // (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1854_inst] (iNsTr_26_1707 type_cast_1853_wire_constant) (xx_xopx_xi25_1855)   
    $buffering  $out ADD_u16_u16_1854_inst xx_xopx_xi25_1855 1
    $delay ADD_u16_u16_1854_inst 1
    // 		iNsTr_69 := ($cast ($uint<64>) xx_xopx_xi25 )
    //  file prog.linked.opt.aa, line 815
    // ($cast ($uint<64>) xx_xopx_xi25 )
    # := [type_cast_1858_inst] (xx_xopx_xi25_1855) (iNsTr_69_1859)   
    $buffering  $out type_cast_1858_inst iNsTr_69_1859 1
    $delay type_cast_1858_inst 1
    // 		xx_xop5x_xi := (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 816
    // (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1864_inst] (iNsTr_69_1859 type_cast_1863_wire_constant) (xx_xop5x_xi_1865)   
    $buffering  $out ADD_u64_u64_1864_inst xx_xop5x_xi_1865 1
    $delay ADD_u64_u64_1864_inst 1
    // 		tmp4x_xi26 := ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 817
    // ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1871_inst] (tmpx_xi24_1849 xx_xop5x_xi_1865 type_cast_1870_wire_constant) (tmp4x_xi26_1872) 
    $buffering  $out MUX_1871_inst tmp4x_xi26_1872 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 819
    // 			$phi indvarx_xi28 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi27_bb_20			  ($cast ($uint<64>) indvarx_xnextx_xi30 ) $on bb_20_bb_20 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 820
    // ($cast ($uint<64>) indvarx_xnextx_xi30 )
    # := [type_cast_1881_inst] (indvarx_xnextx_xi30_1898) (type_cast_1881_wire)   
    $buffering  $out type_cast_1881_inst type_cast_1881_wire 1
    $delay type_cast_1881_inst 1
    $phi [phi_stmt_1875] (type_cast_1879_wire_constant type_cast_1881_wire) ( indvarx_xi28_1875 ) 
    // 		scevgepx_xi29 := @(ext_info[indvarx_xi28])
    //  file prog.linked.opt.aa, line 822
    &/ [array_obj_ref_1885_index_0_resize] (indvarx_xi28_1875) (R_indvarx_xi28_1884_resized) 
    $flowthrough 
    &/ [array_obj_ref_1885_index_0_rename] (R_indvarx_xi28_1884_resized) (R_indvarx_xi28_1884_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1885_index_offset] (R_indvarx_xi28_1884_scaled) (array_obj_ref_1885_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1885_root_address_inst] (array_obj_ref_1885_final_offset) (array_obj_ref_1885_root_address) 
    $flowthrough 
    # := [addr_of_1886_final_reg] (array_obj_ref_1885_root_address) (scevgepx_xi29_1887)   
    $buffering  $out addr_of_1886_final_reg scevgepx_xi29_1887 1
    // 		->(scevgepx_xi29) := ($bitcast ($float<8,23>) _h0  )
    //  file prog.linked.opt.aa, line 823
    // ->(scevgepx_xi29)
    &/ [ptr_deref_1889_base_resize] (scevgepx_xi29_1887) (ptr_deref_1889_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1889_root_address_inst] (ptr_deref_1889_resized_base_address) (ptr_deref_1889_root_address) 
    $flowthrough 
    &/ [ptr_deref_1889_addr_0] (ptr_deref_1889_root_address) (ptr_deref_1889_word_address_0) 
    $flowthrough 
    $store [ptr_deref_1889_store_0] $to memory_space_5 (ptr_deref_1889_word_address_0 ptr_deref_1889_data_0) 
    $delay ptr_deref_1889_store_0 4
    &/ [ptr_deref_1889_gather_scatter] (type_cast_1891_wire_constant) (ptr_deref_1889_data_0) 
    $flowthrough 
    // 		indvarx_xnextx_xi30 := (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 824
    // (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1897_inst] (indvarx_xi28_1875 type_cast_1896_wire_constant) (indvarx_xnextx_xi30_1898)   
    $buffering  $out ADD_u64_u64_1897_inst indvarx_xnextx_xi30_1898 1
    $delay ADD_u64_u64_1897_inst 1
    // 		exitcond14 := (indvarx_xnextx_xi30 == tmp4x_xi26)
    //  file prog.linked.opt.aa, line 825
    // (indvarx_xnextx_xi30 == tmp4x_xi26)
    ==[EQ_u64_u1_1902_inst] (indvarx_xnextx_xi30_1898 tmp4x_xi26_1872) (exitcond14_1903)   
    $buffering  $out EQ_u64_u1_1902_inst exitcond14_1903 1
    $delay EQ_u64_u1_1902_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 826
    ==0? [if_stmt_1904_branch] (exitcond14_1903)
    // 		$call checkNodeComputeEngine () () 
    //  file prog.linked.opt.aa, line 836
    $call [call_stmt_1913_call] $module checkNodeComputeEngine() ()  
    $delay call_stmt_1913_call 4
    // 		iNsTr_66 := ncol_ind
    //  file prog.linked.opt.aa, line 837
    // ncol_ind
    $load [LOAD_ncol_ind_1915_load_0] $from memory_space_10 (LOAD_ncol_ind_1915_word_address_0) (LOAD_ncol_ind_1915_data_0) 
    $delay LOAD_ncol_ind_1915_load_0 4
    &/ [LOAD_ncol_ind_1915_gather_scatter] (LOAD_ncol_ind_1915_data_0) (iNsTr_66_1916) 
    $flowthrough 
    // 		iNsTr_67 := (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 838
    // (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_1921_inst] (iNsTr_66_1916 type_cast_1920_wire_constant) (iNsTr_67_1922)   
    $buffering  $out EQ_u16_u1_1921_inst iNsTr_67_1922 1
    $delay EQ_u16_u1_1921_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 839
    ==0? [if_stmt_1923_branch] (iNsTr_67_1922)
    // 		tmpx_xi50 := (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 846
    // (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_1934_inst] (iNsTr_66_1916 type_cast_1933_wire_constant) (tmpx_xi50_1935)   
    $buffering  $out UGT_u16_u1_1934_inst tmpx_xi50_1935 1
    $delay UGT_u16_u1_1934_inst 1
    // 		xx_xopx_xi51 := (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 847
    // (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1940_inst] (iNsTr_66_1916 type_cast_1939_wire_constant) (xx_xopx_xi51_1941)   
    $buffering  $out ADD_u16_u16_1940_inst xx_xopx_xi51_1941 1
    $delay ADD_u16_u16_1940_inst 1
    // 		iNsTr_86 := ($cast ($uint<64>) xx_xopx_xi51 )
    //  file prog.linked.opt.aa, line 848
    // ($cast ($uint<64>) xx_xopx_xi51 )
    # := [type_cast_1944_inst] (xx_xopx_xi51_1941) (iNsTr_86_1945)   
    $buffering  $out type_cast_1944_inst iNsTr_86_1945 1
    $delay type_cast_1944_inst 1
    // 		xx_xop7x_xi52 := (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 849
    // (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_1950_inst] (iNsTr_86_1945 type_cast_1949_wire_constant) (xx_xop7x_xi52_1951)   
    $buffering  $out ADD_u64_u64_1950_inst xx_xop7x_xi52_1951 1
    $delay ADD_u64_u64_1950_inst 1
    // 		tmp4x_xi53 := ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 850
    // ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_1957_inst] (tmpx_xi50_1935 xx_xop7x_xi52_1951 type_cast_1956_wire_constant) (tmp4x_xi53_1958) 
    $buffering  $out MUX_1957_inst tmp4x_xi53_1958 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 852
    // 			$phi indvarx_xi55 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi54_bb_24			  ($cast ($uint<64>) indvarx_xnextx_xi59 ) $on bb_24_bb_24 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 853
    // ($cast ($uint<64>) indvarx_xnextx_xi59 )
    # := [type_cast_1967_inst] (indvarx_xnextx_xi59_2026) (type_cast_1967_wire)   
    $buffering  $out type_cast_1967_inst type_cast_1967_wire 1
    $delay type_cast_1967_inst 1
    $phi [phi_stmt_1961] (type_cast_1965_wire_constant type_cast_1967_wire) ( indvarx_xi55_1961 ) 
    // 		scevgepx_xi56 := @(ext_info[indvarx_xi55])
    //  file prog.linked.opt.aa, line 855
    &/ [array_obj_ref_1971_index_0_resize] (indvarx_xi55_1961) (R_indvarx_xi55_1970_resized) 
    $flowthrough 
    &/ [array_obj_ref_1971_index_0_rename] (R_indvarx_xi55_1970_resized) (R_indvarx_xi55_1970_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1971_index_offset] (R_indvarx_xi55_1970_scaled) (array_obj_ref_1971_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1971_root_address_inst] (array_obj_ref_1971_final_offset) (array_obj_ref_1971_root_address) 
    $flowthrough 
    # := [addr_of_1972_final_reg] (array_obj_ref_1971_root_address) (scevgepx_xi56_1973)   
    $buffering  $out addr_of_1972_final_reg scevgepx_xi56_1973 1
    // 		tmp13 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 856
    // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_1978_inst] (indvarx_xi55_1961 type_cast_1977_wire_constant) (tmp13_1979)   
    $buffering  $out ADD_u64_u64_1978_inst tmp13_1979 1
    $delay ADD_u64_u64_1978_inst 1
    // 		scevgep6x_xi58 := @(mem[tmp13])
    //  file prog.linked.opt.aa, line 857
    &/ [array_obj_ref_1982_index_0_resize] (tmp13_1979) (R_tmp13_1981_resized) 
    $flowthrough 
    &/ [array_obj_ref_1982_index_0_rename] (R_tmp13_1981_resized) (R_tmp13_1981_scaled) 
    $flowthrough 
    &/ [array_obj_ref_1982_index_offset] (R_tmp13_1981_scaled) (array_obj_ref_1982_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_1982_root_address_inst] (array_obj_ref_1982_final_offset) (array_obj_ref_1982_root_address) 
    $flowthrough 
    # := [addr_of_1983_final_reg] (array_obj_ref_1982_root_address) (scevgep6x_xi58_1984)   
    $buffering  $out addr_of_1983_final_reg scevgep6x_xi58_1984 1
    // 		iNsTr_96 := ->(scevgep6x_xi58)
    //  file prog.linked.opt.aa, line 858
    // ->(scevgep6x_xi58)
    &/ [ptr_deref_1987_base_resize] (scevgep6x_xi58_1984) (ptr_deref_1987_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1987_root_address_inst] (ptr_deref_1987_resized_base_address) (ptr_deref_1987_root_address) 
    $flowthrough 
    &/ [ptr_deref_1987_addr_0] (ptr_deref_1987_root_address) (ptr_deref_1987_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1987_load_0] $from memory_space_8 (ptr_deref_1987_word_address_0) (ptr_deref_1987_data_0) 
    $delay ptr_deref_1987_load_0 4
    &/ [ptr_deref_1987_gather_scatter] (ptr_deref_1987_data_0) (iNsTr_96_1988) 
    $flowthrough 
    // 		iNsTr_97 := (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 859
    // (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_1993_inst] (iNsTr_96_1988 type_cast_1992_wire_constant) (iNsTr_97_1994)   
    $buffering  $out ADD_u16_u16_1993_inst iNsTr_97_1994 1
    $delay ADD_u16_u16_1993_inst 1
    // 		iNsTr_98 := ->(scevgepx_xi56)
    //  file prog.linked.opt.aa, line 860
    // ->(scevgepx_xi56)
    &/ [ptr_deref_1997_base_resize] (scevgepx_xi56_1973) (ptr_deref_1997_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_1997_root_address_inst] (ptr_deref_1997_resized_base_address) (ptr_deref_1997_root_address) 
    $flowthrough 
    &/ [ptr_deref_1997_addr_0] (ptr_deref_1997_root_address) (ptr_deref_1997_word_address_0) 
    $flowthrough 
    $load [ptr_deref_1997_load_0] $from memory_space_5 (ptr_deref_1997_word_address_0) (ptr_deref_1997_data_0) 
    $delay ptr_deref_1997_load_0 4
    &/ [ptr_deref_1997_gather_scatter] (ptr_deref_1997_data_0) (iNsTr_98_1998) 
    $flowthrough 
    // 		iNsTr_99 := ($cast ($uint<64>) iNsTr_97 )
    //  file prog.linked.opt.aa, line 861
    // ($cast ($uint<64>) iNsTr_97 )
    # := [type_cast_2001_inst] (iNsTr_97_1994) (iNsTr_99_2002)   
    $buffering  $out type_cast_2001_inst iNsTr_99_2002 1
    $delay type_cast_2001_inst 1
    // 		iNsTr_100 := @(aPosteriori[iNsTr_99])
    //  file prog.linked.opt.aa, line 862
    &/ [array_obj_ref_2005_index_0_resize] (iNsTr_99_2002) (R_iNsTr_99_2004_resized) 
    $flowthrough 
    &/ [array_obj_ref_2005_index_0_rename] (R_iNsTr_99_2004_resized) (R_iNsTr_99_2004_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2005_index_offset] (R_iNsTr_99_2004_scaled) (array_obj_ref_2005_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2005_root_address_inst] (array_obj_ref_2005_final_offset) (array_obj_ref_2005_root_address) 
    $flowthrough 
    # := [addr_of_2006_final_reg] (array_obj_ref_2005_root_address) (iNsTr_100_2007)   
    $buffering  $out addr_of_2006_final_reg iNsTr_100_2007 1
    // 		iNsTr_101 := ->(iNsTr_100)
    //  file prog.linked.opt.aa, line 863
    // ->(iNsTr_100)
    &/ [ptr_deref_2010_base_resize] (iNsTr_100_2007) (ptr_deref_2010_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2010_root_address_inst] (ptr_deref_2010_resized_base_address) (ptr_deref_2010_root_address) 
    $flowthrough 
    &/ [ptr_deref_2010_addr_0] (ptr_deref_2010_root_address) (ptr_deref_2010_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2010_load_0] $from memory_space_1 (ptr_deref_2010_word_address_0) (ptr_deref_2010_data_0) 
    $delay ptr_deref_2010_load_0 4
    &/ [ptr_deref_2010_gather_scatter] (ptr_deref_2010_data_0) (iNsTr_101_2011) 
    $flowthrough 
    // 		iNsTr_102 := (iNsTr_101 + iNsTr_98)
    //  file prog.linked.opt.aa, line 864
    // (iNsTr_101 + iNsTr_98)
    +[ADD_f32_f32_2015_inst] (iNsTr_101_2011 iNsTr_98_1998) (iNsTr_102_2016)   
    $buffering  $out ADD_f32_f32_2015_inst iNsTr_102_2016 1
    $delay ADD_f32_f32_2015_inst 14
    // 		->(iNsTr_100) := iNsTr_102
    //  file prog.linked.opt.aa, line 865
    // ->(iNsTr_100)
    &/ [ptr_deref_2018_base_resize] (iNsTr_100_2007) (ptr_deref_2018_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2018_root_address_inst] (ptr_deref_2018_resized_base_address) (ptr_deref_2018_root_address) 
    $flowthrough 
    &/ [ptr_deref_2018_addr_0] (ptr_deref_2018_root_address) (ptr_deref_2018_word_address_0) 
    $flowthrough 
    $store [ptr_deref_2018_store_0] $to memory_space_1 (ptr_deref_2018_word_address_0 ptr_deref_2018_data_0) 
    $delay ptr_deref_2018_store_0 4
    &/ [ptr_deref_2018_gather_scatter] (iNsTr_102_2016) (ptr_deref_2018_data_0) 
    $flowthrough 
    // 		indvarx_xnextx_xi59 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 866
    // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2025_inst] (indvarx_xi55_1961 type_cast_2024_wire_constant) (indvarx_xnextx_xi59_2026)   
    $buffering  $out ADD_u64_u64_2025_inst indvarx_xnextx_xi59_2026 1
    $delay ADD_u64_u64_2025_inst 1
    // 		exitcond12 := (indvarx_xnextx_xi59 == tmp4x_xi53)
    //  file prog.linked.opt.aa, line 867
    // (indvarx_xnextx_xi59 == tmp4x_xi53)
    ==[EQ_u64_u1_2030_inst] (indvarx_xnextx_xi59_2026 tmp4x_xi53_1958) (exitcond12_2031)   
    $buffering  $out EQ_u64_u1_2030_inst exitcond12_2031 1
    $delay EQ_u64_u1_2030_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 868
    ==0? [if_stmt_2032_branch] (exitcond12_2031)
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
    //  file prog.linked.opt.aa, line 878
    // is_decoded
    $store [STORE_is_decoded_2041_store_0] $to memory_space_6 (STORE_is_decoded_2041_word_address_0 STORE_is_decoded_2041_data_0) 
    $delay STORE_is_decoded_2041_store_0 4
    &/ [STORE_is_decoded_2041_gather_scatter] (type_cast_2043_wire_constant) (STORE_is_decoded_2041_data_0) 
    $flowthrough 
    // 		iNsTr_83 := ncols
    //  file prog.linked.opt.aa, line 879
    // ncols
    $load [LOAD_ncols_2046_load_0] $from memory_space_11 (LOAD_ncols_2046_word_address_0) (LOAD_ncols_2046_data_0) 
    $delay LOAD_ncols_2046_load_0 4
    &/ [LOAD_ncols_2046_gather_scatter] (LOAD_ncols_2046_data_0) (iNsTr_83_2047) 
    $flowthrough 
    // 		iNsTr_84 := (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 880
    // (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2052_inst] (iNsTr_83_2047 type_cast_2051_wire_constant) (iNsTr_84_2053)   
    $buffering  $out EQ_u16_u1_2052_inst iNsTr_84_2053 1
    $delay EQ_u16_u1_2052_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 881
    ==0? [if_stmt_2054_branch] (iNsTr_84_2053)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 886
    // 			$phi indvarx_xlcssa17 := 			  ($cast ($uint<16>) indvar ) $on update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 887
    // ($cast ($uint<16>) indvar )
    # := [type_cast_2064_inst] (indvar_1725) (type_cast_2064_wire)   
    $buffering  $out type_cast_2064_inst type_cast_2064_wire 1
    $delay type_cast_2064_inst 1
    $phi [phi_stmt_2061] (type_cast_2064_wire) ( indvarx_xlcssa17_2061 ) 
    // 		Nitr_required := indvarx_xlcssa17
    //  file prog.linked.opt.aa, line 889
    // Nitr_required
    $store [STORE_Nitr_required_2066_store_0] $to memory_space_0 (STORE_Nitr_required_2066_word_address_0 STORE_Nitr_required_2066_data_0) 
    $delay STORE_Nitr_required_2066_store_0 4
    &/ [STORE_Nitr_required_2066_gather_scatter] (indvarx_xlcssa17_2061) (STORE_Nitr_required_2066_data_0) 
    $flowthrough 
    // 		tmpx_xi39 := (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 893
    // (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_2075_inst] (iNsTr_83_2047 type_cast_2074_wire_constant) (tmpx_xi39_2076)   
    $buffering  $out UGT_u16_u1_2075_inst tmpx_xi39_2076 1
    $delay UGT_u16_u1_2075_inst 1
    // 		xx_xopx_xi40 := (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 894
    // (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_2081_inst] (iNsTr_83_2047 type_cast_2080_wire_constant) (xx_xopx_xi40_2082)   
    $buffering  $out ADD_u16_u16_2081_inst xx_xopx_xi40_2082 1
    $delay ADD_u16_u16_2081_inst 1
    // 		iNsTr_94 := ($cast ($uint<64>) xx_xopx_xi40 )
    //  file prog.linked.opt.aa, line 895
    // ($cast ($uint<64>) xx_xopx_xi40 )
    # := [type_cast_2085_inst] (xx_xopx_xi40_2082) (iNsTr_94_2086)   
    $buffering  $out type_cast_2085_inst iNsTr_94_2086 1
    $delay type_cast_2085_inst 1
    // 		xx_xop6x_xi41 := (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 896
    // (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2091_inst] (iNsTr_94_2086 type_cast_2090_wire_constant) (xx_xop6x_xi41_2092)   
    $buffering  $out ADD_u64_u64_2091_inst xx_xop6x_xi41_2092 1
    $delay ADD_u64_u64_2091_inst 1
    // 		tmp4x_xi42 := ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 897
    // ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_2098_inst] (tmpx_xi39_2076 xx_xop6x_xi41_2092 type_cast_2097_wire_constant) (tmp4x_xi42_2099) 
    $buffering  $out MUX_2098_inst tmp4x_xi42_2099 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 899
    // 			$phi xx_xpr85 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000001  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<16>) xx_xpr ) $on bb_37_bb_29 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 900
    // ($cast ($uint<16>) xx_xpr )
    # := [type_cast_2108_inst] (xx_xpr_2245) (type_cast_2108_wire)   
    $buffering  $out type_cast_2108_inst type_cast_2108_wire 1
    $delay type_cast_2108_inst 1
    $phi [phi_stmt_2102] (type_cast_2106_wire_constant type_cast_2108_wire) ( xx_xpr85_2102 ) 
    // 			$phi indvarx_xi44 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi43_bb_29			  ($cast ($uint<64>) indvarx_xnextx_xi47 ) $on bb_37_bb_29 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 901
    // ($cast ($uint<64>) indvarx_xnextx_xi47 )
    # := [type_cast_2115_inst] (indvarx_xnextx_xi47_2259) (type_cast_2115_wire)   
    $buffering  $out type_cast_2115_inst type_cast_2115_wire 1
    $delay type_cast_2115_inst 1
    $phi [phi_stmt_2109] (type_cast_2113_wire_constant type_cast_2115_wire) ( indvarx_xi44_2109 ) 
    // 		scevgepx_xi45 := @(aPosteriori[indvarx_xi44])
    //  file prog.linked.opt.aa, line 903
    &/ [array_obj_ref_2119_index_0_resize] (indvarx_xi44_2109) (R_indvarx_xi44_2118_resized) 
    $flowthrough 
    &/ [array_obj_ref_2119_index_0_rename] (R_indvarx_xi44_2118_resized) (R_indvarx_xi44_2118_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2119_index_offset] (R_indvarx_xi44_2118_scaled) (array_obj_ref_2119_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2119_root_address_inst] (array_obj_ref_2119_final_offset) (array_obj_ref_2119_root_address) 
    $flowthrough 
    # := [addr_of_2120_final_reg] (array_obj_ref_2119_root_address) (scevgepx_xi45_2121)   
    $buffering  $out addr_of_2120_final_reg scevgepx_xi45_2121 1
    // 		scevgep5x_xi46 := @(code_block[indvarx_xi44])
    //  file prog.linked.opt.aa, line 904
    &/ [array_obj_ref_2124_index_0_resize] (indvarx_xi44_2109) (R_indvarx_xi44_2123_resized) 
    $flowthrough 
    &/ [array_obj_ref_2124_index_0_rename] (R_indvarx_xi44_2123_resized) (R_indvarx_xi44_2123_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2124_index_offset] (R_indvarx_xi44_2123_scaled) (array_obj_ref_2124_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2124_root_address_inst] (array_obj_ref_2124_final_offset) (array_obj_ref_2124_root_address) 
    $flowthrough 
    # := [addr_of_2125_final_reg] (array_obj_ref_2124_root_address) (scevgep5x_xi46_2126)   
    $buffering  $out addr_of_2125_final_reg scevgep5x_xi46_2126 1
    // 		iNsTr_106 := ->(scevgepx_xi45)
    //  file prog.linked.opt.aa, line 905
    // ->(scevgepx_xi45)
    &/ [ptr_deref_2129_base_resize] (scevgepx_xi45_2121) (ptr_deref_2129_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2129_root_address_inst] (ptr_deref_2129_resized_base_address) (ptr_deref_2129_root_address) 
    $flowthrough 
    &/ [ptr_deref_2129_addr_0] (ptr_deref_2129_root_address) (ptr_deref_2129_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2129_load_0] $from memory_space_1 (ptr_deref_2129_word_address_0) (ptr_deref_2129_data_0) 
    $delay ptr_deref_2129_load_0 4
    &/ [ptr_deref_2129_gather_scatter] (ptr_deref_2129_data_0) (iNsTr_106_2130) 
    $flowthrough 
    // 		iNsTr_107 := ($cast ($float<11,52>) iNsTr_106 )
    //  file prog.linked.opt.aa, line 906
    // ($cast ($float<11,52>) iNsTr_106 )
    $F:=$F [type_cast_2133_inst] (iNsTr_106_2130) (iNsTr_107_2134)  
    $buffering  $out type_cast_2133_inst iNsTr_107_2134 1
    $delay type_cast_2133_inst 10
    // 		iNsTr_108 := (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 907
    // (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
    $S>$S[SGT_f64_u1_2139_inst] (iNsTr_107_2134 type_cast_2138_wire_constant) (iNsTr_108_2140)   
    $buffering  $out SGT_f64_u1_2139_inst iNsTr_108_2140 1
    $delay SGT_f64_u1_2139_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 908
    ==0? [if_stmt_2141_branch] (iNsTr_108_2140)
    // 		iNsTr_111 := ->(scevgep5x_xi46)
    //  file prog.linked.opt.aa, line 915
    // ->(scevgep5x_xi46)
    &/ [ptr_deref_2150_base_resize] (scevgep5x_xi46_2126) (ptr_deref_2150_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2150_root_address_inst] (ptr_deref_2150_resized_base_address) (ptr_deref_2150_root_address) 
    $flowthrough 
    &/ [ptr_deref_2150_addr_0] (ptr_deref_2150_root_address) (ptr_deref_2150_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2150_load_0] $from memory_space_3 (ptr_deref_2150_word_address_0) (ptr_deref_2150_data_0) 
    $delay ptr_deref_2150_load_0 4
    &/ [ptr_deref_2150_gather_scatter] (ptr_deref_2150_data_0) (iNsTr_111_2151) 
    $flowthrough 
    // 		iNsTr_112 := ($cast ($float<11,52>) iNsTr_111 )
    //  file prog.linked.opt.aa, line 916
    // ($cast ($float<11,52>) iNsTr_111 )
    $F:=$F [type_cast_2154_inst] (iNsTr_111_2151) (iNsTr_112_2155)  
    $buffering  $out type_cast_2154_inst iNsTr_112_2155 1
    $delay type_cast_2154_inst 10
    // 		iNsTr_113 := (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 917
    // (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
    $S>$S[SGT_f64_u1_2160_inst] (iNsTr_112_2155 type_cast_2159_wire_constant) (iNsTr_113_2161)   
    $buffering  $out SGT_f64_u1_2160_inst iNsTr_113_2161 1
    $delay SGT_f64_u1_2160_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 918
    ==0? [if_stmt_2162_branch] (iNsTr_113_2161)
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 925
    // is_decoded
    $store [STORE_is_decoded_2169_store_0] $to memory_space_6 (STORE_is_decoded_2169_word_address_0 STORE_is_decoded_2169_data_0) 
    $delay STORE_is_decoded_2169_store_0 4
    &/ [STORE_is_decoded_2169_gather_scatter] (type_cast_2171_wire_constant) (STORE_is_decoded_2169_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 927
    // 			$phi xx_xpr87 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_31_bb_32			  ($cast ($uint<16>) xx_xpr85 ) $on bb_30_bb_32 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 928
    // ($cast ($uint<16>) xx_xpr85 )
    # := [type_cast_2181_inst] (xx_xpr85_2102) (type_cast_2181_wire)   
    $buffering  $out type_cast_2181_inst type_cast_2181_wire 1
    $delay type_cast_2181_inst 1
    $phi [phi_stmt_2175] (type_cast_2179_wire_constant type_cast_2181_wire) ( xx_xpr87_2175 ) 
    // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
    //  file prog.linked.opt.aa, line 930
    // ->(scevgep5x_xi46)
    &/ [ptr_deref_2184_base_resize] (scevgep5x_xi46_2126) (ptr_deref_2184_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2184_root_address_inst] (ptr_deref_2184_resized_base_address) (ptr_deref_2184_root_address) 
    $flowthrough 
    &/ [ptr_deref_2184_addr_0] (ptr_deref_2184_root_address) (ptr_deref_2184_word_address_0) 
    $flowthrough 
    $store [ptr_deref_2184_store_0] $to memory_space_3 (ptr_deref_2184_word_address_0 ptr_deref_2184_data_0) 
    $delay ptr_deref_2184_store_0 4
    &/ [ptr_deref_2184_gather_scatter] (type_cast_2186_wire_constant) (ptr_deref_2184_data_0) 
    $flowthrough 
    // 		iNsTr_115 := (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 934
    // (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_2194_inst] (iNsTr_107_2134 type_cast_2193_wire_constant) (iNsTr_115_2195)   
    $buffering  $out SLT_f64_u1_2194_inst iNsTr_115_2195 1
    $delay SLT_f64_u1_2194_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 935
    ==0? [if_stmt_2196_branch] (iNsTr_115_2195)
    // 		iNsTr_121 := ->(scevgep5x_xi46)
    //  file prog.linked.opt.aa, line 942
    // ->(scevgep5x_xi46)
    &/ [ptr_deref_2205_base_resize] (scevgep5x_xi46_2126) (ptr_deref_2205_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2205_root_address_inst] (ptr_deref_2205_resized_base_address) (ptr_deref_2205_root_address) 
    $flowthrough 
    &/ [ptr_deref_2205_addr_0] (ptr_deref_2205_root_address) (ptr_deref_2205_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2205_load_0] $from memory_space_3 (ptr_deref_2205_word_address_0) (ptr_deref_2205_data_0) 
    $delay ptr_deref_2205_load_0 4
    &/ [ptr_deref_2205_gather_scatter] (ptr_deref_2205_data_0) (iNsTr_121_2206) 
    $flowthrough 
    // 		iNsTr_122 := ($cast ($float<11,52>) iNsTr_121 )
    //  file prog.linked.opt.aa, line 943
    // ($cast ($float<11,52>) iNsTr_121 )
    $F:=$F [type_cast_2209_inst] (iNsTr_121_2206) (iNsTr_122_2210)  
    $buffering  $out type_cast_2209_inst iNsTr_122_2210 1
    $delay type_cast_2209_inst 10
    // 		iNsTr_123 := (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
    //  file prog.linked.opt.aa, line 944
    // (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
    $S<$S[SLT_f64_u1_2215_inst] (iNsTr_122_2210 type_cast_2214_wire_constant) (iNsTr_123_2216)   
    $buffering  $out SLT_f64_u1_2215_inst iNsTr_123_2216 1
    $delay SLT_f64_u1_2215_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 945
    ==0? [if_stmt_2217_branch] (iNsTr_123_2216)
    // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file prog.linked.opt.aa, line 952
    // is_decoded
    $store [STORE_is_decoded_2224_store_0] $to memory_space_6 (STORE_is_decoded_2224_word_address_0 STORE_is_decoded_2224_data_0) 
    $delay STORE_is_decoded_2224_store_0 4
    &/ [STORE_is_decoded_2224_gather_scatter] (type_cast_2226_wire_constant) (STORE_is_decoded_2224_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 954
    // 			$phi xx_xpr84 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bb_35_bb_36			  ($cast ($uint<16>) xx_xpr85 ) $on bb_34_bb_36 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 955
    // ($cast ($uint<16>) xx_xpr85 )
    # := [type_cast_2236_inst] (xx_xpr85_2102) (type_cast_2236_wire)   
    $buffering  $out type_cast_2236_inst type_cast_2236_wire 1
    $delay type_cast_2236_inst 1
    $phi [phi_stmt_2230] (type_cast_2234_wire_constant type_cast_2236_wire) ( xx_xpr84_2230 ) 
    // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f1.000000e+00 )
    //  file prog.linked.opt.aa, line 957
    // ->(scevgep5x_xi46)
    &/ [ptr_deref_2239_base_resize] (scevgep5x_xi46_2126) (ptr_deref_2239_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2239_root_address_inst] (ptr_deref_2239_resized_base_address) (ptr_deref_2239_root_address) 
    $flowthrough 
    &/ [ptr_deref_2239_addr_0] (ptr_deref_2239_root_address) (ptr_deref_2239_word_address_0) 
    $flowthrough 
    $store [ptr_deref_2239_store_0] $to memory_space_3 (ptr_deref_2239_word_address_0 ptr_deref_2239_data_0) 
    $delay ptr_deref_2239_store_0 4
    &/ [ptr_deref_2239_gather_scatter] (type_cast_2241_wire_constant) (ptr_deref_2239_data_0) 
    $flowthrough 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 959
    // 			$phi xx_xpr := 			  ($cast ($uint<16>) xx_xpr84 ) $on bb_36_bb_37			  ($cast ($uint<16>) xx_xpr85 ) $on bb_33_bb_37			  ($cast ($uint<16>) xx_xpr87 ) $on bb_32_bb_37 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 960
    // ($cast ($uint<16>) xx_xpr84 )
    # := [type_cast_2248_inst] (xx_xpr84_2230) (type_cast_2248_wire)   
    $buffering  $out type_cast_2248_inst type_cast_2248_wire 1
    $delay type_cast_2248_inst 1
    // ($cast ($uint<16>) xx_xpr85 )
    # := [type_cast_2250_inst] (xx_xpr85_2102) (type_cast_2250_wire)   
    $buffering  $out type_cast_2250_inst type_cast_2250_wire 1
    $delay type_cast_2250_inst 1
    // ($cast ($uint<16>) xx_xpr87 )
    # := [type_cast_2252_inst] (xx_xpr87_2175) (type_cast_2252_wire)   
    $buffering  $out type_cast_2252_inst type_cast_2252_wire 1
    $delay type_cast_2252_inst 1
    $phi [phi_stmt_2245] (type_cast_2248_wire type_cast_2250_wire type_cast_2252_wire) ( xx_xpr_2245 ) 
    // 		indvarx_xnextx_xi47 := (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 962
    // (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2258_inst] (indvarx_xi44_2109 type_cast_2257_wire_constant) (indvarx_xnextx_xi47_2259)   
    $buffering  $out ADD_u64_u64_2258_inst indvarx_xnextx_xi47_2259 1
    $delay ADD_u64_u64_2258_inst 1
    // 		exitcond16 := (indvarx_xnextx_xi47 == tmp4x_xi42)
    //  file prog.linked.opt.aa, line 963
    // (indvarx_xnextx_xi47 == tmp4x_xi42)
    ==[EQ_u64_u1_2263_inst] (indvarx_xnextx_xi47_2259 tmp4x_xi42_2099) (exitcond16_2264)   
    $buffering  $out EQ_u64_u1_2263_inst exitcond16_2264 1
    $delay EQ_u64_u1_2263_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 964
    ==0? [if_stmt_2265_branch] (exitcond16_2264)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 969
    // 			$phi xx_xprx_xlcssa := 			  ($cast ($uint<16>) xx_xpr ) $on bb_37_checkIsdecodedx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 970
    // ($cast ($uint<16>) xx_xpr )
    # := [type_cast_2275_inst] (xx_xpr_2245) (type_cast_2275_wire)   
    $buffering  $out type_cast_2275_inst type_cast_2275_wire 1
    $delay type_cast_2275_inst 1
    $phi [phi_stmt_2272] (type_cast_2275_wire) ( xx_xprx_xlcssa_2272 ) 
    // 		iNsTr_130 := (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 972
    // (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
    ==[EQ_u16_u1_2281_inst] (xx_xprx_xlcssa_2272 type_cast_2280_wire_constant) (iNsTr_130_2282)   
    $buffering  $out EQ_u16_u1_2281_inst iNsTr_130_2282 1
    $delay EQ_u16_u1_2281_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 973
    ==0? [if_stmt_2283_branch] (iNsTr_130_2282)
    // 		iNsTr_132 := nrows
    //  file prog.linked.opt.aa, line 980
    // nrows
    $load [LOAD_nrows_2291_load_0] $from memory_space_12 (LOAD_nrows_2291_word_address_0) (LOAD_nrows_2291_data_0) 
    $delay LOAD_nrows_2291_load_0 4
    &/ [LOAD_nrows_2291_gather_scatter] (LOAD_nrows_2291_data_0) (iNsTr_132_2292) 
    $flowthrough 
    // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 981
    // (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2297_inst] (iNsTr_132_2292 type_cast_2296_wire_constant) (iNsTr_133_2298)   
    $buffering  $out EQ_u16_u1_2297_inst iNsTr_133_2298 1
    $delay EQ_u16_u1_2297_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 982
    ==0? [if_stmt_2299_branch] (iNsTr_133_2298)
    // 		iNsTr_136 := ($cast ($uint<32>) iNsTr_132 )
    //  file prog.linked.opt.aa, line 989
    // ($cast ($uint<32>) iNsTr_132 )
    # := [type_cast_2308_inst] (iNsTr_132_2292) (iNsTr_136_2309)   
    $buffering  $out type_cast_2308_inst iNsTr_136_2309 1
    $delay type_cast_2308_inst 1
    // 		iNsTr_137 := (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 990
    // (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_2314_inst] (iNsTr_136_2309 type_cast_2313_wire_constant) (iNsTr_137_2315)   
    $buffering  $out ADD_u32_u32_2314_inst iNsTr_137_2315 1
    $delay ADD_u32_u32_2314_inst 1
    // 		tmp7x_xi := (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 991
    // (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_2320_inst] (iNsTr_132_2292 type_cast_2319_wire_constant) (tmp7x_xi_2321)   
    $buffering  $out UGT_u16_u1_2320_inst tmp7x_xi_2321 1
    $delay UGT_u16_u1_2320_inst 1
    // 		xx_xopx_xi32 := (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 992
    // (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_2326_inst] (iNsTr_132_2292 type_cast_2325_wire_constant) (xx_xopx_xi32_2327)   
    $buffering  $out ADD_u16_u16_2326_inst xx_xopx_xi32_2327 1
    $delay ADD_u16_u16_2326_inst 1
    // 		iNsTr_138 := ($cast ($uint<64>) xx_xopx_xi32 )
    //  file prog.linked.opt.aa, line 993
    // ($cast ($uint<64>) xx_xopx_xi32 )
    # := [type_cast_2330_inst] (xx_xopx_xi32_2327) (iNsTr_138_2331)   
    $buffering  $out type_cast_2330_inst iNsTr_138_2331 1
    $delay type_cast_2330_inst 1
    // 		xx_xop19x_xi := (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 994
    // (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2336_inst] (iNsTr_138_2331 type_cast_2335_wire_constant) (xx_xop19x_xi_2337)   
    $buffering  $out ADD_u64_u64_2336_inst xx_xop19x_xi_2337 1
    $delay ADD_u64_u64_2336_inst 1
    // 		tmp10x_xi := ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 995
    // ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_2343_inst] (tmp7x_xi_2321 xx_xop19x_xi_2337 type_cast_2342_wire_constant) (tmp10x_xi_2344) 
    $buffering  $out MUX_2343_inst tmp10x_xi_2344 1
    // 		xx_xneg1x_xi := (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 996
    // (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_2349_inst] (iNsTr_66_1916 type_cast_2348_wire_constant) (xx_xneg1x_xi_2350)   
    $buffering  $out ADD_u16_u16_2349_inst xx_xneg1x_xi_2350 1
    $delay ADD_u16_u16_2349_inst 1
    // 		tmp := ($cast ($uint<64>) iNsTr_66 )
    //  file prog.linked.opt.aa, line 997
    // ($cast ($uint<64>) iNsTr_66 )
    # := [type_cast_2353_inst] (iNsTr_66_1916) (tmp_2354)   
    $buffering  $out type_cast_2353_inst tmp_2354 1
    $delay type_cast_2353_inst 1
    // 		tmp7 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 998
    // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    +[ADD_u64_u64_2359_inst] (tmp_2354 type_cast_2358_wire_constant) (tmp7_2360)   
    $buffering  $out ADD_u64_u64_2359_inst tmp7_2360 1
    $delay ADD_u64_u64_2359_inst 1
    // 		tmp10 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 999
    // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_2365_inst] (tmp_2354 type_cast_2364_wire_constant) (tmp10_2366)   
    $buffering  $out ADD_u64_u64_2365_inst tmp10_2366 1
    $delay ADD_u64_u64_2365_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1001
    // 			$phi indvarx_xi33 := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4x_xi_bb_41			  ($cast ($uint<64>) indvarx_xnextx_xi38 ) $on xx_x_crit_edgex_xi_bb_41 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1002
    // ($cast ($uint<64>) indvarx_xnextx_xi38 )
    # := [type_cast_2375_inst] (indvarx_xnextx_xi38_2572) (type_cast_2375_wire)   
    $buffering  $out type_cast_2375_inst type_cast_2375_wire 1
    $delay type_cast_2375_inst 1
    $phi [phi_stmt_2369] (type_cast_2373_wire_constant type_cast_2375_wire) ( indvarx_xi33_2369 ) 
    // 		tmp8 := (tmp7 + indvarx_xi33)
    //  file prog.linked.opt.aa, line 1004
    // (tmp7 + indvarx_xi33)
    +[ADD_u64_u64_2380_inst] (tmp7_2360 indvarx_xi33_2369) (tmp8_2381)   
    $buffering  $out ADD_u64_u64_2380_inst tmp8_2381 1
    $delay ADD_u64_u64_2380_inst 1
    // 		scevgep18x_xi := @(mem[tmp8])
    //  file prog.linked.opt.aa, line 1005
    &/ [array_obj_ref_2384_index_0_resize] (tmp8_2381) (R_tmp8_2383_resized) 
    $flowthrough 
    &/ [array_obj_ref_2384_index_0_rename] (R_tmp8_2383_resized) (R_tmp8_2383_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2384_index_offset] (R_tmp8_2383_scaled) (array_obj_ref_2384_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2384_root_address_inst] (array_obj_ref_2384_final_offset) (array_obj_ref_2384_root_address) 
    $flowthrough 
    # := [addr_of_2385_final_reg] (array_obj_ref_2384_root_address) (scevgep18x_xi_2386)   
    $buffering  $out addr_of_2385_final_reg scevgep18x_xi_2386 1
    // 		tmp12x_xi := ($cast ($uint<32>) indvarx_xi33 )
    //  file prog.linked.opt.aa, line 1006
    // ($cast ($uint<32>) indvarx_xi33 )
    # := [type_cast_2389_inst] (indvarx_xi33_2369) (tmp12x_xi_2390)   
    $buffering  $out type_cast_2389_inst tmp12x_xi_2390 1
    $delay type_cast_2389_inst 1
    // 		tmp11 := (tmp10 + indvarx_xi33)
    //  file prog.linked.opt.aa, line 1007
    // (tmp10 + indvarx_xi33)
    +[ADD_u64_u64_2394_inst] (tmp10_2366 indvarx_xi33_2369) (tmp11_2395)   
    $buffering  $out ADD_u64_u64_2394_inst tmp11_2395 1
    $delay ADD_u64_u64_2394_inst 1
    // 		scevgepx_xi34 := @(mem[tmp11])
    //  file prog.linked.opt.aa, line 1008
    &/ [array_obj_ref_2398_index_0_resize] (tmp11_2395) (R_tmp11_2397_resized) 
    $flowthrough 
    &/ [array_obj_ref_2398_index_0_rename] (R_tmp11_2397_resized) (R_tmp11_2397_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2398_index_offset] (R_tmp11_2397_scaled) (array_obj_ref_2398_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2398_root_address_inst] (array_obj_ref_2398_final_offset) (array_obj_ref_2398_root_address) 
    $flowthrough 
    # := [addr_of_2399_final_reg] (array_obj_ref_2398_root_address) (scevgepx_xi34_2400)   
    $buffering  $out addr_of_2399_final_reg scevgepx_xi34_2400 1
    // 		iNsTr_140 := (tmp12x_xi == iNsTr_137)
    //  file prog.linked.opt.aa, line 1009
    // (tmp12x_xi == iNsTr_137)
    ==[EQ_u32_u1_2404_inst] (tmp12x_xi_2390 iNsTr_137_2315) (iNsTr_140_2405)   
    $buffering  $out EQ_u32_u1_2404_inst iNsTr_140_2405 1
    $delay EQ_u32_u1_2404_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1010
    ==0? [if_stmt_2406_branch] (iNsTr_140_2405)
    // 		iNsTr_142 := ->(scevgepx_xi34)
    //  file prog.linked.opt.aa, line 1017
    // ->(scevgepx_xi34)
    &/ [ptr_deref_2415_base_resize] (scevgepx_xi34_2400) (ptr_deref_2415_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2415_root_address_inst] (ptr_deref_2415_resized_base_address) (ptr_deref_2415_root_address) 
    $flowthrough 
    &/ [ptr_deref_2415_addr_0] (ptr_deref_2415_root_address) (ptr_deref_2415_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2415_load_0] $from memory_space_8 (ptr_deref_2415_word_address_0) (ptr_deref_2415_data_0) 
    $delay ptr_deref_2415_load_0 4
    &/ [ptr_deref_2415_gather_scatter] (ptr_deref_2415_data_0) (iNsTr_142_2416) 
    $flowthrough 
    // 		iNsTr_143 := (xx_xneg1x_xi - iNsTr_142)
    //  file prog.linked.opt.aa, line 1018
    // (xx_xneg1x_xi - iNsTr_142)
    -[SUB_u16_u16_2420_inst] (xx_xneg1x_xi_2350 iNsTr_142_2416) (iNsTr_143_2421)   
    $buffering  $out SUB_u16_u16_2420_inst iNsTr_143_2421 1
    $delay SUB_u16_u16_2420_inst 1
    // 		iNsTr_145 := ->(scevgepx_xi34)
    //  file prog.linked.opt.aa, line 1022
    // ->(scevgepx_xi34)
    &/ [ptr_deref_2426_base_resize] (scevgepx_xi34_2400) (ptr_deref_2426_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2426_root_address_inst] (ptr_deref_2426_resized_base_address) (ptr_deref_2426_root_address) 
    $flowthrough 
    &/ [ptr_deref_2426_addr_0] (ptr_deref_2426_root_address) (ptr_deref_2426_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2426_load_0] $from memory_space_8 (ptr_deref_2426_word_address_0) (ptr_deref_2426_data_0) 
    $delay ptr_deref_2426_load_0 4
    &/ [ptr_deref_2426_gather_scatter] (ptr_deref_2426_data_0) (iNsTr_145_2427) 
    $flowthrough 
    // 		iNsTr_146 := ->(scevgep18x_xi)
    //  file prog.linked.opt.aa, line 1023
    // ->(scevgep18x_xi)
    &/ [ptr_deref_2430_base_resize] (scevgep18x_xi_2386) (ptr_deref_2430_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2430_root_address_inst] (ptr_deref_2430_resized_base_address) (ptr_deref_2430_root_address) 
    $flowthrough 
    &/ [ptr_deref_2430_addr_0] (ptr_deref_2430_root_address) (ptr_deref_2430_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2430_load_0] $from memory_space_8 (ptr_deref_2430_word_address_0) (ptr_deref_2430_data_0) 
    $delay ptr_deref_2430_load_0 4
    &/ [ptr_deref_2430_gather_scatter] (ptr_deref_2430_data_0) (iNsTr_146_2431) 
    $flowthrough 
    // 		iNsTr_147 := (iNsTr_146 - iNsTr_145)
    //  file prog.linked.opt.aa, line 1024
    // (iNsTr_146 - iNsTr_145)
    -[SUB_u16_u16_2435_inst] (iNsTr_146_2431 iNsTr_145_2427) (iNsTr_147_2436)   
    $buffering  $out SUB_u16_u16_2435_inst iNsTr_147_2436 1
    $delay SUB_u16_u16_2435_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1026
    // 			$phi iNsTr_149 := 			  ($cast ($uint<16>) iNsTr_142 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_145 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1027
    // ($cast ($uint<16>) iNsTr_142 )
    # := [type_cast_2442_inst] (iNsTr_142_2416) (type_cast_2442_wire)   
    $buffering  $out type_cast_2442_inst type_cast_2442_wire 1
    $delay type_cast_2442_inst 1
    // ($cast ($uint<16>) iNsTr_145 )
    # := [type_cast_2444_inst] (iNsTr_145_2427) (type_cast_2444_wire)   
    $buffering  $out type_cast_2444_inst type_cast_2444_wire 1
    $delay type_cast_2444_inst 1
    $phi [phi_stmt_2439] (type_cast_2442_wire type_cast_2444_wire) ( iNsTr_149_2439 ) 
    // 			$phi rangex_x0x_xi := 			  ($cast ($uint<16>) iNsTr_143 ) $on bb_42_bb_44			  ($cast ($uint<16>) iNsTr_147 ) $on bb_43_bb_44 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1028
    // ($cast ($uint<16>) iNsTr_143 )
    # := [type_cast_2448_inst] (iNsTr_143_2421) (type_cast_2448_wire)   
    $buffering  $out type_cast_2448_inst type_cast_2448_wire 1
    $delay type_cast_2448_inst 1
    // ($cast ($uint<16>) iNsTr_147 )
    # := [type_cast_2450_inst] (iNsTr_147_2436) (type_cast_2450_wire)   
    $buffering  $out type_cast_2450_inst type_cast_2450_wire 1
    $delay type_cast_2450_inst 1
    $phi [phi_stmt_2445] (type_cast_2448_wire type_cast_2450_wire) ( rangex_x0x_xi_2445 ) 
    // 		iNsTr_150 := (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1030
    // (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2456_inst] (rangex_x0x_xi_2445 type_cast_2455_wire_constant) (iNsTr_150_2457)   
    $buffering  $out EQ_u16_u1_2456_inst iNsTr_150_2457 1
    $delay EQ_u16_u1_2456_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1031
    ==0? [if_stmt_2458_branch] (iNsTr_150_2457)
    // 		tmpx_xi35 := (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1038
    // (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_2469_inst] (iNsTr_149_2439 type_cast_2468_wire_constant) (tmpx_xi35_2470)   
    $buffering  $out ADD_u16_u16_2469_inst tmpx_xi35_2470 1
    $delay ADD_u16_u16_2469_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1040
    // 			$phi colx_x02x_xi := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnphx_xi36_bb_46			  ($cast ($uint<16>) iNsTr_168 ) $on bb_46_bb_46 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1041
    // ($cast ($uint<16>) iNsTr_168 )
    # := [type_cast_2479_inst] (iNsTr_168_2552) (type_cast_2479_wire)   
    $buffering  $out type_cast_2479_inst type_cast_2479_wire 1
    $delay type_cast_2479_inst 1
    $phi [phi_stmt_2473] (type_cast_2477_wire_constant type_cast_2479_wire) ( colx_x02x_xi_2473 ) 
    // 		tmp6x_xi := (tmpx_xi35 + colx_x02x_xi)
    //  file prog.linked.opt.aa, line 1043
    // (tmpx_xi35 + colx_x02x_xi)
    +[ADD_u16_u16_2484_inst] (tmpx_xi35_2470 colx_x02x_xi_2473) (tmp6x_xi_2485)   
    $buffering  $out ADD_u16_u16_2484_inst tmp6x_xi_2485 1
    $delay ADD_u16_u16_2484_inst 1
    // 		iNsTr_155 := ($cast ($uint<64>) tmp6x_xi )
    //  file prog.linked.opt.aa, line 1044
    // ($cast ($uint<64>) tmp6x_xi )
    # := [type_cast_2488_inst] (tmp6x_xi_2485) (iNsTr_155_2489)   
    $buffering  $out type_cast_2488_inst iNsTr_155_2489 1
    $delay type_cast_2488_inst 1
    // 		iNsTr_156 := (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1045
    // (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_2494_inst] (iNsTr_155_2489 type_cast_2493_wire_constant) (iNsTr_156_2495)   
    $buffering  $out ADD_u64_u64_2494_inst iNsTr_156_2495 1
    $delay ADD_u64_u64_2494_inst 1
    // 		iNsTr_157 := @(mem[iNsTr_156])
    //  file prog.linked.opt.aa, line 1046
    &/ [array_obj_ref_2498_index_0_resize] (iNsTr_156_2495) (R_iNsTr_156_2497_resized) 
    $flowthrough 
    &/ [array_obj_ref_2498_index_0_rename] (R_iNsTr_156_2497_resized) (R_iNsTr_156_2497_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2498_index_offset] (R_iNsTr_156_2497_scaled) (array_obj_ref_2498_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2498_root_address_inst] (array_obj_ref_2498_final_offset) (array_obj_ref_2498_root_address) 
    $flowthrough 
    # := [addr_of_2499_final_reg] (array_obj_ref_2498_root_address) (iNsTr_157_2500)   
    $buffering  $out addr_of_2499_final_reg iNsTr_157_2500 1
    // 		iNsTr_158 := ->(iNsTr_157)
    //  file prog.linked.opt.aa, line 1047
    // ->(iNsTr_157)
    &/ [ptr_deref_2503_base_resize] (iNsTr_157_2500) (ptr_deref_2503_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2503_root_address_inst] (ptr_deref_2503_resized_base_address) (ptr_deref_2503_root_address) 
    $flowthrough 
    &/ [ptr_deref_2503_addr_0] (ptr_deref_2503_root_address) (ptr_deref_2503_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2503_load_0] $from memory_space_8 (ptr_deref_2503_word_address_0) (ptr_deref_2503_data_0) 
    $delay ptr_deref_2503_load_0 4
    &/ [ptr_deref_2503_gather_scatter] (ptr_deref_2503_data_0) (iNsTr_158_2504) 
    $flowthrough 
    // 		iNsTr_159 := (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1048
    // (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_2509_inst] (iNsTr_158_2504 type_cast_2508_wire_constant) (iNsTr_159_2510)   
    $buffering  $out ADD_u16_u16_2509_inst iNsTr_159_2510 1
    $delay ADD_u16_u16_2509_inst 1
    // 		iNsTr_160 := ($cast ($uint<64>) iNsTr_159 )
    //  file prog.linked.opt.aa, line 1049
    // ($cast ($uint<64>) iNsTr_159 )
    # := [type_cast_2513_inst] (iNsTr_159_2510) (iNsTr_160_2514)   
    $buffering  $out type_cast_2513_inst iNsTr_160_2514 1
    $delay type_cast_2513_inst 1
    // 		iNsTr_161 := @(aPosteriori[iNsTr_160])
    //  file prog.linked.opt.aa, line 1050
    &/ [array_obj_ref_2517_index_0_resize] (iNsTr_160_2514) (R_iNsTr_160_2516_resized) 
    $flowthrough 
    &/ [array_obj_ref_2517_index_0_rename] (R_iNsTr_160_2516_resized) (R_iNsTr_160_2516_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2517_index_offset] (R_iNsTr_160_2516_scaled) (array_obj_ref_2517_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2517_root_address_inst] (array_obj_ref_2517_final_offset) (array_obj_ref_2517_root_address) 
    $flowthrough 
    # := [addr_of_2518_final_reg] (array_obj_ref_2517_root_address) (iNsTr_161_2519)   
    $buffering  $out addr_of_2518_final_reg iNsTr_161_2519 1
    // 		iNsTr_162 := ->(iNsTr_161)
    //  file prog.linked.opt.aa, line 1051
    // ->(iNsTr_161)
    &/ [ptr_deref_2522_base_resize] (iNsTr_161_2519) (ptr_deref_2522_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2522_root_address_inst] (ptr_deref_2522_resized_base_address) (ptr_deref_2522_root_address) 
    $flowthrough 
    &/ [ptr_deref_2522_addr_0] (ptr_deref_2522_root_address) (ptr_deref_2522_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2522_load_0] $from memory_space_1 (ptr_deref_2522_word_address_0) (ptr_deref_2522_data_0) 
    $delay ptr_deref_2522_load_0 4
    &/ [ptr_deref_2522_gather_scatter] (ptr_deref_2522_data_0) (iNsTr_162_2523) 
    $flowthrough 
    // 		iNsTr_163 := @(ext_info[iNsTr_155])
    //  file prog.linked.opt.aa, line 1052
    &/ [array_obj_ref_2526_index_0_resize] (iNsTr_155_2489) (R_iNsTr_155_2525_resized) 
    $flowthrough 
    &/ [array_obj_ref_2526_index_0_rename] (R_iNsTr_155_2525_resized) (R_iNsTr_155_2525_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2526_index_offset] (R_iNsTr_155_2525_scaled) (array_obj_ref_2526_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2526_root_address_inst] (array_obj_ref_2526_final_offset) (array_obj_ref_2526_root_address) 
    $flowthrough 
    # := [addr_of_2527_final_reg] (array_obj_ref_2526_root_address) (iNsTr_163_2528)   
    $buffering  $out addr_of_2527_final_reg iNsTr_163_2528 1
    // 		iNsTr_164 := ->(iNsTr_163)
    //  file prog.linked.opt.aa, line 1053
    // ->(iNsTr_163)
    &/ [ptr_deref_2531_base_resize] (iNsTr_163_2528) (ptr_deref_2531_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2531_root_address_inst] (ptr_deref_2531_resized_base_address) (ptr_deref_2531_root_address) 
    $flowthrough 
    &/ [ptr_deref_2531_addr_0] (ptr_deref_2531_root_address) (ptr_deref_2531_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2531_load_0] $from memory_space_5 (ptr_deref_2531_word_address_0) (ptr_deref_2531_data_0) 
    $delay ptr_deref_2531_load_0 4
    &/ [ptr_deref_2531_gather_scatter] (ptr_deref_2531_data_0) (iNsTr_164_2532) 
    $flowthrough 
    // 		iNsTr_165 := (iNsTr_162 - iNsTr_164)
    //  file prog.linked.opt.aa, line 1054
    // (iNsTr_162 - iNsTr_164)
    -[SUB_f32_f32_2536_inst] (iNsTr_162_2523 iNsTr_164_2532) (iNsTr_165_2537)   
    $buffering  $out SUB_f32_f32_2536_inst iNsTr_165_2537 1
    $delay SUB_f32_f32_2536_inst 14
    // 		iNsTr_166 := @(message[iNsTr_155])
    //  file prog.linked.opt.aa, line 1055
    &/ [array_obj_ref_2540_index_0_resize] (iNsTr_155_2489) (R_iNsTr_155_2539_resized) 
    $flowthrough 
    &/ [array_obj_ref_2540_index_0_rename] (R_iNsTr_155_2539_resized) (R_iNsTr_155_2539_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2540_index_offset] (R_iNsTr_155_2539_scaled) (array_obj_ref_2540_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2540_root_address_inst] (array_obj_ref_2540_final_offset) (array_obj_ref_2540_root_address) 
    $flowthrough 
    # := [addr_of_2541_final_reg] (array_obj_ref_2540_root_address) (iNsTr_166_2542)   
    $buffering  $out addr_of_2541_final_reg iNsTr_166_2542 1
    // 		->(iNsTr_166) := iNsTr_165
    //  file prog.linked.opt.aa, line 1056
    // ->(iNsTr_166)
    &/ [ptr_deref_2544_base_resize] (iNsTr_166_2542) (ptr_deref_2544_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2544_root_address_inst] (ptr_deref_2544_resized_base_address) (ptr_deref_2544_root_address) 
    $flowthrough 
    &/ [ptr_deref_2544_addr_0] (ptr_deref_2544_root_address) (ptr_deref_2544_word_address_0) 
    $flowthrough 
    $store [ptr_deref_2544_store_0] $to memory_space_9 (ptr_deref_2544_word_address_0 ptr_deref_2544_data_0) 
    $delay ptr_deref_2544_store_0 4
    &/ [ptr_deref_2544_gather_scatter] (iNsTr_165_2537) (ptr_deref_2544_data_0) 
    $flowthrough 
    // 		iNsTr_168 := (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1057
    // (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_2551_inst] (colx_x02x_xi_2473 type_cast_2550_wire_constant) (iNsTr_168_2552)   
    $buffering  $out ADD_u16_u16_2551_inst iNsTr_168_2552 1
    $delay ADD_u16_u16_2551_inst 1
    // 		exitcond5 := (iNsTr_168 == rangex_x0x_xi)
    //  file prog.linked.opt.aa, line 1058
    // (iNsTr_168 == rangex_x0x_xi)
    ==[EQ_u16_u1_2556_inst] (iNsTr_168_2552 rangex_x0x_xi_2445) (exitcond5_2557)   
    $buffering  $out EQ_u16_u1_2556_inst exitcond5_2557 1
    $delay EQ_u16_u1_2556_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1059
    ==0? [if_stmt_2558_branch] (exitcond5_2557)
    // 		indvarx_xnextx_xi38 := (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1069
    // (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2571_inst] (indvarx_xi33_2369 type_cast_2570_wire_constant) (indvarx_xnextx_xi38_2572)   
    $buffering  $out ADD_u64_u64_2571_inst indvarx_xnextx_xi38_2572 1
    $delay ADD_u64_u64_2571_inst 1
    // 		exitcond6 := (indvarx_xnextx_xi38 == tmp10x_xi)
    //  file prog.linked.opt.aa, line 1070
    // (indvarx_xnextx_xi38 == tmp10x_xi)
    ==[EQ_u64_u1_2576_inst] (indvarx_xnextx_xi38_2572 tmp10x_xi_2344) (exitcond6_2577)   
    $buffering  $out EQ_u64_u1_2576_inst exitcond6_2577 1
    $delay EQ_u64_u1_2576_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1071
    ==0? [if_stmt_2578_branch] (exitcond6_2577)
    // 		indvarx_xnext := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1081
    // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_2591_inst] (indvar18_1700 type_cast_2590_wire_constant) (indvarx_xnext_2592)   
    $buffering  $out ADD_u16_u16_2591_inst indvarx_xnext_2592 1
    $delay ADD_u16_u16_2591_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1083
    // 			$phi indvarx_xlcssa := 			  ($cast ($uint<16>) indvar ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) indvar ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1084
    // ($cast ($uint<16>) indvar )
    # := [type_cast_2598_inst] (indvar_1725) (type_cast_2598_wire)   
    $buffering  $out type_cast_2598_inst type_cast_2598_wire 1
    $delay type_cast_2598_inst 1
    // ($cast ($uint<16>) indvar )
    # := [type_cast_2600_inst] (indvar_1725) (type_cast_2600_wire)   
    $buffering  $out type_cast_2600_inst type_cast_2600_wire 1
    $delay type_cast_2600_inst 1
    $phi [phi_stmt_2595] (type_cast_2598_wire type_cast_2600_wire) ( indvarx_xlcssa_2595 ) 
    // 			$phi xx_xpr62 := 			  ($cast ($uint<16>) iNsTr_83 ) $on checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread			  ($cast ($uint<16>) iNsTr_27 ) $on initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1085
    // ($cast ($uint<16>) iNsTr_83 )
    # := [type_cast_2604_inst] (iNsTr_83_2047) (type_cast_2604_wire)   
    $buffering  $out type_cast_2604_inst type_cast_2604_wire 1
    $delay type_cast_2604_inst 1
    // ($cast ($uint<16>) iNsTr_27 )
    # := [type_cast_2606_inst] (iNsTr_27_1713) (type_cast_2606_wire)   
    $buffering  $out type_cast_2606_inst type_cast_2606_wire 1
    $delay type_cast_2606_inst 1
    $phi [phi_stmt_2601] (type_cast_2604_wire type_cast_2606_wire) ( xx_xpr62_2601 ) 
    // 		Nitr_required := indvarx_xlcssa
    //  file prog.linked.opt.aa, line 1087
    // Nitr_required
    $store [STORE_Nitr_required_2608_store_0] $to memory_space_0 (STORE_Nitr_required_2608_word_address_0 STORE_Nitr_required_2608_data_0) 
    $delay STORE_Nitr_required_2608_store_0 4
    &/ [STORE_Nitr_required_2608_gather_scatter] (indvarx_xlcssa_2595) (STORE_Nitr_required_2608_data_0) 
    $flowthrough 
    // 		iNsTr_43 := (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1088
    // (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2615_inst] (xx_xpr62_2601 type_cast_2614_wire_constant) (iNsTr_43_2616)   
    $buffering  $out EQ_u16_u1_2615_inst iNsTr_43_2616 1
    $delay EQ_u16_u1_2615_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1089
    ==0? [if_stmt_2617_branch] (iNsTr_43_2616)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1097
    // 			$phi indvarx_xi10 := 			  ($cast ($uint<64>) tmp82 ) $on bbx_xnphx_xi13_bbx_xnphx_xi13			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1098
    // ($cast ($uint<64>) tmp82 )
    # := [type_cast_2629_inst] (tmp82_2654) (type_cast_2629_wire)   
    $buffering  $out type_cast_2629_inst type_cast_2629_wire 1
    $delay type_cast_2629_inst 1
    $phi [phi_stmt_2626] (type_cast_2629_wire type_cast_2632_wire_constant) ( indvarx_xi10_2626 ) 
    // 		scevgepx_xi11 := @(code_block[indvarx_xi10])
    //  file prog.linked.opt.aa, line 1100
    &/ [array_obj_ref_2636_index_0_resize] (indvarx_xi10_2626) (R_indvarx_xi10_2635_resized) 
    $flowthrough 
    &/ [array_obj_ref_2636_index_0_rename] (R_indvarx_xi10_2635_resized) (R_indvarx_xi10_2635_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2636_index_offset] (R_indvarx_xi10_2635_scaled) (array_obj_ref_2636_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2636_root_address_inst] (array_obj_ref_2636_final_offset) (array_obj_ref_2636_root_address) 
    $flowthrough 
    # := [addr_of_2637_final_reg] (array_obj_ref_2636_root_address) (scevgepx_xi11_2638)   
    $buffering  $out addr_of_2637_final_reg scevgepx_xi11_2638 1
    // 		tmp1 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1101
    // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2643_inst] (indvarx_xi10_2626 type_cast_2642_wire_constant) (tmp1_2644)   
    $buffering  $out ADD_u64_u64_2643_inst tmp1_2644 1
    $delay ADD_u64_u64_2643_inst 1
    // 		tmp2x_xi := ($cast ($uint<32>) tmp1 )
    //  file prog.linked.opt.aa, line 1102
    // ($cast ($uint<32>) tmp1 )
    # := [type_cast_2647_inst] (tmp1_2644) (tmp2x_xi_2648)   
    $buffering  $out type_cast_2647_inst tmp2x_xi_2648 1
    $delay type_cast_2647_inst 1
    // 		tmp82 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1103
    // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2653_inst] (indvarx_xi10_2626 type_cast_2652_wire_constant) (tmp82_2654)   
    $buffering  $out ADD_u64_u64_2653_inst tmp82_2654 1
    $delay ADD_u64_u64_2653_inst 1
    // 		iNsTr_74 := ->(scevgepx_xi11)
    //  file prog.linked.opt.aa, line 1104
    // ->(scevgepx_xi11)
    &/ [ptr_deref_2657_base_resize] (scevgepx_xi11_2638) (ptr_deref_2657_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2657_root_address_inst] (ptr_deref_2657_resized_base_address) (ptr_deref_2657_root_address) 
    $flowthrough 
    &/ [ptr_deref_2657_addr_0] (ptr_deref_2657_root_address) (ptr_deref_2657_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2657_load_0] $from memory_space_3 (ptr_deref_2657_word_address_0) (ptr_deref_2657_data_0) 
    $delay ptr_deref_2657_load_0 4
    &/ [ptr_deref_2657_gather_scatter] (ptr_deref_2657_data_0) (iNsTr_74_2658) 
    $flowthrough 
    // 		code_block_decoded := iNsTr_74
    //  file prog.linked.opt.aa, line 1105
    // code_block_decoded
    $ioport $out [WPIPE_code_block_decoded_2659_inst]  (iNsTr_74_2658) (code_block_decoded) 
    // 		iNsTr_77 := ncols
    //  file prog.linked.opt.aa, line 1106
    // ncols
    $load [LOAD_ncols_2663_load_0] $from memory_space_11 (LOAD_ncols_2663_word_address_0) (LOAD_ncols_2663_data_0) 
    $delay LOAD_ncols_2663_load_0 4
    &/ [LOAD_ncols_2663_gather_scatter] (LOAD_ncols_2663_data_0) (iNsTr_77_2664) 
    $flowthrough 
    // 		iNsTr_78 := ($cast ($uint<32>) iNsTr_77 )
    //  file prog.linked.opt.aa, line 1107
    // ($cast ($uint<32>) iNsTr_77 )
    # := [type_cast_2667_inst] (iNsTr_77_2664) (iNsTr_78_2668)   
    $buffering  $out type_cast_2667_inst iNsTr_78_2668 1
    $delay type_cast_2667_inst 1
    // 		iNsTr_79 := (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
    //  file prog.linked.opt.aa, line 1108
    // ($bitcast ($int<32>) tmp2x_xi )
    # := [type_cast_2672_inst] (tmp2x_xi_2648) (type_cast_2672_wire)   $flowthrough
    $delay type_cast_2672_inst 0
    // ($bitcast ($int<32>) iNsTr_78 )
    # := [type_cast_2674_inst] (iNsTr_78_2668) (type_cast_2674_wire)   $flowthrough
    $delay type_cast_2674_inst 0
    // (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
    $S<$S[SLT_i32_u1_2675_inst] (type_cast_2672_wire type_cast_2674_wire) (iNsTr_79_2676)   
    $buffering  $out SLT_i32_u1_2675_inst iNsTr_79_2676 1
    $delay SLT_i32_u1_2675_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1109
    ==0? [if_stmt_2677_branch] (iNsTr_79_2676)
    // 		xx_xpre := Nitr_required
    //  file prog.linked.opt.aa, line 1116
    // Nitr_required
    $load [LOAD_Nitr_required_2685_load_0] $from memory_space_0 (LOAD_Nitr_required_2685_word_address_0) (LOAD_Nitr_required_2685_data_0) 
    $delay LOAD_Nitr_required_2685_load_0 4
    &/ [LOAD_Nitr_required_2685_gather_scatter] (LOAD_Nitr_required_2685_data_0) (xx_xpre_2686) 
    $flowthrough 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1118
    // 			$phi iNsTr_55 := 			  ($cast ($uint<16>) xx_xpre ) $on send_outputx_xexitx_xloopexit_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa17 ) $on checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit			  ($cast ($uint<16>) indvarx_xlcssa ) $on checkIsdecodedx_xexitx_xthread_send_outputx_xexit // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1119
    // ($cast ($uint<16>) xx_xpre )
    # := [type_cast_2692_inst] (xx_xpre_2686) (type_cast_2692_wire)   
    $buffering  $out type_cast_2692_inst type_cast_2692_wire 1
    $delay type_cast_2692_inst 1
    // ($cast ($uint<16>) indvarx_xlcssa17 )
    # := [type_cast_2694_inst] (indvarx_xlcssa17_2061) (type_cast_2694_wire)   
    $buffering  $out type_cast_2694_inst type_cast_2694_wire 1
    $delay type_cast_2694_inst 1
    // ($cast ($uint<16>) indvarx_xlcssa )
    # := [type_cast_2696_inst] (indvarx_xlcssa_2595) (type_cast_2696_wire)   
    $buffering  $out type_cast_2696_inst type_cast_2696_wire 1
    $delay type_cast_2696_inst 1
    $phi [phi_stmt_2689] (type_cast_2692_wire type_cast_2694_wire type_cast_2696_wire) ( iNsTr_55_2689 ) 
    // 		nitr_required := iNsTr_55
    //  file prog.linked.opt.aa, line 1121
    // nitr_required
    $ioport $out [WPIPE_nitr_required_2698_inst]  (iNsTr_55_2689) (nitr_required) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 638
  // 		$call initInputs () () 
  //  file prog.linked.opt.aa, line 640
  call_stmt_1356_call <=> (branch_block_stmt_1353/call_stmt_1356/call_stmt_1356_Sample/crr branch_block_stmt_1353/call_stmt_1356/call_stmt_1356_Update/ccr) (branch_block_stmt_1353/call_stmt_1356/call_stmt_1356_Sample/cra branch_block_stmt_1353/call_stmt_1356/call_stmt_1356_Update/cca)
  // 		iNsTr_2 := ncols
  //  file prog.linked.opt.aa, line 641
  // ncols
  LOAD_ncols_1358_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Update/LOAD_ncols_1358_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Update/LOAD_ncols_1358_Merge/merge_ack)
  LOAD_ncols_1358_load_0 <=> (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/LOAD_ncols_1358_Update/word_access_complete/word_0/ca)
  // 		iNsTr_3 := (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 642
  // (iNsTr_2 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_2
  EQ_u16_u1_1364_inst <=> (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/EQ_u16_u1_1364_Sample/rr branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/EQ_u16_u1_1364_Update/cr) (branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/EQ_u16_u1_1364_Sample/ra branch_block_stmt_1353/assign_stmt_1359_to_assign_stmt_1365/EQ_u16_u1_1364_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 643
  if_stmt_1366_branch <=> (branch_block_stmt_1353/if_stmt_1366_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1366_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1366_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 648
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 651
  phi_stmt_1375 <=> (branch_block_stmt_1353/bbx_xnphx_xix_xpreheader_bbx_xnphx_xi_PhiReq/phi_stmt_1375/phi_stmt_1375_req) (branch_block_stmt_1353/merge_stmt_1374_PhiAck/phi_stmt_1375_ack)
  // CP-DP links for do-while  do_while_stmt_1381
  //  file prog.linked.opt.aa, line 654
  phi_stmt_1383 <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/phi_stmt_1383_loopback_sample_req branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/phi_stmt_1383_entry_sample_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/phi_stmt_1383_phi_mux_ack)
  // iNsTr_14
  // ($cast ($uint<8>) iNsTr_14 )
  type_cast_1386_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1386_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1386_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1386_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1386_Update/ca)
  iNsTr_13_at_entry_1375_1387_buf <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/R_iNsTr_13_at_entry_1387_Sample/req branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/R_iNsTr_13_at_entry_1387_Update/req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/R_iNsTr_13_at_entry_1387_Sample/ack branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/R_iNsTr_13_at_entry_1387_Update/ack)
  // 			tmp64 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
  //  file prog.linked.opt.aa, line 659
  // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
  // iNsTr_13
  ADD_u8_u8_1393_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1393_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1393_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1393_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1393_Update/ca)
  // 			iNsTr_14 := (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
  //  file prog.linked.opt.aa, line 660
  // (iNsTr_13 + ($bitcast ($uint<8>) _b00000001  ))
  // iNsTr_13
  ADD_u8_u8_1399_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1399_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1399_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1399_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ADD_u8_u8_1399_Update/ca)
  // 			iNsTr_17 := code_block_in
  //  file prog.linked.opt.aa, line 661
  // code_block_in
  RPIPE_code_block_in_1402_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/RPIPE_code_block_in_1402_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/RPIPE_code_block_in_1402_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/RPIPE_code_block_in_1402_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/RPIPE_code_block_in_1402_Update/ca)
  // 			iNsTr_18 := ($cast ($uint<64>) iNsTr_13 )
  //  file prog.linked.opt.aa, line 662
  // iNsTr_13
  // ($cast ($uint<64>) iNsTr_13 )
  type_cast_1406_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1406_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1406_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1406_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1406_Update/ca)
  // 			iNsTr_19 := @(code_block[iNsTr_18])
  //  file prog.linked.opt.aa, line 663
  // iNsTr_18
  array_obj_ref_1410_index_0_resize <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_index_resize_0/index_resize_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_index_resize_0/index_resize_ack)
  array_obj_ref_1410_index_0_rename <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_index_scale_0/scale_rename_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_index_scale_0/scale_rename_ack)
  array_obj_ref_1410_index_offset <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_final_index_sum_regn/req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_final_index_sum_regn/ack)
  array_obj_ref_1410_root_address_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/array_obj_ref_1410_base_plus_offset/sum_rename_ack)
  addr_of_1411_final_reg <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/addr_of_1411_request/req branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/addr_of_1411_complete/req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/addr_of_1411_request/ack branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/addr_of_1411_complete/ack)
  // 			->(iNsTr_19) := iNsTr_17
  //  file prog.linked.opt.aa, line 664
  // iNsTr_17
  // iNsTr_19
  ptr_deref_1414_base_resize <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_base_addr_resize/base_resize_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_base_addr_resize/base_resize_ack)
  ptr_deref_1414_root_address_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_base_plus_offset/sum_rename_ack)
  ptr_deref_1414_addr_0 <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_word_addrgen/root_register_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_word_addrgen/root_register_ack)
  ptr_deref_1414_gather_scatter <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Sample/ptr_deref_1414_Split/split_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Sample/ptr_deref_1414_Split/split_ack)
  ptr_deref_1414_store_0 <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Sample/word_access_start/word_0/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Sample/word_access_start/word_0/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ptr_deref_1414_Update/word_access_complete/word_0/ca)
  // 			iNsTr_21 := ($cast ($uint<32>) tmp64 )
  //  file prog.linked.opt.aa, line 665
  // tmp64
  // ($cast ($uint<32>) tmp64 )
  type_cast_1419_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1419_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1419_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1419_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1419_Update/ca)
  // 			iNsTr_22 := ncols
  //  file prog.linked.opt.aa, line 666
  // ncols
  LOAD_ncols_1422_gather_scatter <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Update/LOAD_ncols_1422_Merge/merge_req) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Update/LOAD_ncols_1422_Merge/merge_ack)
  LOAD_ncols_1422_load_0 <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Sample/word_access_start/word_0/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Sample/word_access_start/word_0/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/LOAD_ncols_1422_Update/word_access_complete/word_0/ca)
  // 			iNsTr_23 := ($cast ($uint<32>) iNsTr_22 )
  //  file prog.linked.opt.aa, line 667
  // iNsTr_22
  // ($cast ($uint<32>) iNsTr_22 )
  type_cast_1426_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1426_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1426_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1426_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/type_cast_1426_Update/ca)
  // 			iNsTr_24 := (iNsTr_21 < iNsTr_23)
  //  file prog.linked.opt.aa, line 668
  // (iNsTr_21 < iNsTr_23)
  // iNsTr_21
  // iNsTr_23
  ULT_u32_u1_1431_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ULT_u32_u1_1431_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ULT_u32_u1_1431_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ULT_u32_u1_1431_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/ULT_u32_u1_1431_Update/ca)
  // 			bbx_xnphx_xi_readCodeBlockx_xexit_taken := ( ~ iNsTr_24 )
  //  file prog.linked.opt.aa, line 669
  // iNsTr_24
  // ( ~ iNsTr_24 )
  NOT_u1_u1_1435_inst <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/NOT_u1_u1_1435_Sample/rr branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/NOT_u1_u1_1435_Update/cr) (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/NOT_u1_u1_1435_Sample/ra branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/NOT_u1_u1_1435_Update/ca)
  // iNsTr_24
  do_while_stmt_1381_branch <=> (branch_block_stmt_1353/do_while_stmt_1381/do_while_stmt_1381_loop_body/condition_evaluated) (branch_block_stmt_1353/do_while_stmt_1381/loop_exit/ack branch_block_stmt_1353/do_while_stmt_1381/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 0
  if_stmt_1439_branch <=> (branch_block_stmt_1353/if_stmt_1439_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1439_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1439_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 674
  // ($cast ($uint<16>) iNsTr_22 )
  type_cast_1447_inst <=> (branch_block_stmt_1353/bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq/phi_stmt_1444/phi_stmt_1444_sources/type_cast_1447/SplitProtocol/Sample/rr branch_block_stmt_1353/bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq/phi_stmt_1444/phi_stmt_1444_sources/type_cast_1447/SplitProtocol/Update/cr) (branch_block_stmt_1353/bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq/phi_stmt_1444/phi_stmt_1444_sources/type_cast_1447/SplitProtocol/Sample/ra branch_block_stmt_1353/bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq/phi_stmt_1444/phi_stmt_1444_sources/type_cast_1447/SplitProtocol/Update/ca)
  phi_stmt_1444 <=> (branch_block_stmt_1353/bbx_xnphx_xi_readCodeBlockx_xexit_PhiReq/phi_stmt_1444/phi_stmt_1444_req) (branch_block_stmt_1353/merge_stmt_1443_PhiAck/phi_stmt_1444_ack)
  // 		iNsTr_38 := (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 677
  // (xx_xlcssa == ($bitcast ($uint<16>) _b0000000000000000  ))
  // xx_xlcssa
  EQ_u16_u1_1453_inst <=> (branch_block_stmt_1353/assign_stmt_1454/EQ_u16_u1_1453_Sample/rr branch_block_stmt_1353/assign_stmt_1454/EQ_u16_u1_1453_Update/cr) (branch_block_stmt_1353/assign_stmt_1454/EQ_u16_u1_1453_Sample/ra branch_block_stmt_1353/assign_stmt_1454/EQ_u16_u1_1453_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 678
  if_stmt_1455_branch <=> (branch_block_stmt_1353/if_stmt_1455_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1455_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1455_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 683
  // 		iNsTr_46 := ebbyNo
  //  file prog.linked.opt.aa, line 685
  // ebbyNo
  LOAD_ebbyNo_1463_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Update/LOAD_ebbyNo_1463_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Update/LOAD_ebbyNo_1463_Merge/merge_ack)
  LOAD_ebbyNo_1463_load_0 <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_ebbyNo_1463_Update/word_access_complete/word_0/ca)
  // 		iNsTr_47 := rate
  //  file prog.linked.opt.aa, line 686
  // rate
  LOAD_rate_1466_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Update/LOAD_rate_1466_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Update/LOAD_rate_1466_Merge/merge_ack)
  LOAD_rate_1466_load_0 <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/LOAD_rate_1466_Update/word_access_complete/word_0/ca)
  // 		iNsTr_48 := (iNsTr_47 * iNsTr_46)
  //  file prog.linked.opt.aa, line 687
  // (iNsTr_47 * iNsTr_46)
  // iNsTr_47
  // iNsTr_46
  MUL_f32_f32_1471_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUL_f32_f32_1471_Sample/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUL_f32_f32_1471_Update/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUL_f32_f32_1471_Sample/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUL_f32_f32_1471_Update/ca)
  // 		tmpx_xi := (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 688
  // (xx_xlcssa > ($bitcast ($uint<16>) _b0000000000000001  ))
  // xx_xlcssa
  UGT_u16_u1_1477_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/UGT_u16_u1_1477_Sample/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/UGT_u16_u1_1477_Update/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/UGT_u16_u1_1477_Sample/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/UGT_u16_u1_1477_Update/ca)
  // 		xx_xopx_xi := (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 689
  // (xx_xlcssa + ($bitcast ($uint<16>) _b1111111111111111  ))
  // xx_xlcssa
  ADD_u16_u16_1483_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u16_u16_1483_Sample/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u16_u16_1483_Update/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u16_u16_1483_Sample/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u16_u16_1483_Update/ca)
  // 		iNsTr_49 := ($cast ($uint<64>) xx_xopx_xi )
  //  file prog.linked.opt.aa, line 690
  // xx_xopx_xi
  // ($cast ($uint<64>) xx_xopx_xi )
  type_cast_1487_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/type_cast_1487_Sample/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/type_cast_1487_Update/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/type_cast_1487_Sample/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/type_cast_1487_Update/ca)
  // 		xx_xop6x_xi := (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 691
  // (iNsTr_49 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_49
  ADD_u64_u64_1493_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u64_u64_1493_Sample/rr branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u64_u64_1493_Update/cr) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u64_u64_1493_Sample/ra branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/ADD_u64_u64_1493_Update/ca)
  // 		tmp4x_xi := ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 692
  // tmpx_xi
  // xx_xop6x_xi
  // ( $mux tmpx_xi xx_xop6x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1500_inst <=> (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUX_1500_start/req branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUX_1500_complete/req) (branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUX_1500_start/ack branch_block_stmt_1353/assign_stmt_1464_to_assign_stmt_1501/MUX_1500_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 694
  // ($cast ($uint<64>) indvarx_xnextx_xi )
  type_cast_1510_inst <=> (branch_block_stmt_1353/bb_6_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_sources/type_cast_1510/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_6_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_sources/type_cast_1510/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_6_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_sources/type_cast_1510/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_6_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_sources/type_cast_1510/SplitProtocol/Update/ca)
  phi_stmt_1504 <=> (branch_block_stmt_1353/bbx_xnphx_xi1_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_req branch_block_stmt_1353/bb_6_bb_6_PhiReq/phi_stmt_1504/phi_stmt_1504_req) (branch_block_stmt_1353/merge_stmt_1503_PhiAck/phi_stmt_1504_ack)
  // 		scevgepx_xi := @(code_block[indvarx_xi])
  //  file prog.linked.opt.aa, line 697
  // indvarx_xi
  array_obj_ref_1514_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_index_resize_0/index_resize_ack)
  array_obj_ref_1514_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_index_scale_0/scale_rename_ack)
  array_obj_ref_1514_index_offset <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_final_index_sum_regn/ack)
  array_obj_ref_1514_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1514_base_plus_offset/sum_rename_ack)
  addr_of_1515_final_reg <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1515_request/req branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1515_complete/req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1515_request/ack branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1515_complete/ack)
  // 		scevgep5x_xi := @(aPriori[indvarx_xi])
  //  file prog.linked.opt.aa, line 698
  // indvarx_xi
  array_obj_ref_1519_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_index_resize_0/index_resize_ack)
  array_obj_ref_1519_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_index_scale_0/scale_rename_ack)
  array_obj_ref_1519_index_offset <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_final_index_sum_regn/ack)
  array_obj_ref_1519_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/array_obj_ref_1519_base_plus_offset/sum_rename_ack)
  addr_of_1520_final_reg <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1520_request/req branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1520_complete/req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1520_request/ack branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/addr_of_1520_complete/ack)
  // 		iNsTr_60 := ->(scevgepx_xi)
  //  file prog.linked.opt.aa, line 699
  // scevgepx_xi
  ptr_deref_1524_base_resize <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_base_addr_resize/base_resize_ack)
  ptr_deref_1524_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_base_plus_offset/sum_rename_ack)
  ptr_deref_1524_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_word_addrgen/root_register_ack)
  ptr_deref_1524_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Update/ptr_deref_1524_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Update/ptr_deref_1524_Merge/merge_ack)
  ptr_deref_1524_load_0 <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1524_Update/word_access_complete/word_0/ca)
  // 		iNsTr_61 := (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
  //  file prog.linked.opt.aa, line 700
  // (iNsTr_60 * ($bitcast ($float<8,23>) _f-4.000000e+00 ))
  // iNsTr_60
  MUL_f32_f32_1530_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1530_Sample/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1530_Update/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1530_Sample/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1530_Update/ca)
  // 		iNsTr_62 := (iNsTr_48 * iNsTr_61)
  //  file prog.linked.opt.aa, line 701
  // (iNsTr_48 * iNsTr_61)
  // iNsTr_48
  // iNsTr_61
  MUL_f32_f32_1535_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1535_Sample/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1535_Update/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1535_Sample/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/MUL_f32_f32_1535_Update/ca)
  // 		->(scevgep5x_xi) := iNsTr_62
  //  file prog.linked.opt.aa, line 702
  // iNsTr_62
  // scevgep5x_xi
  ptr_deref_1538_base_resize <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_base_addr_resize/base_resize_ack)
  ptr_deref_1538_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_base_plus_offset/sum_rename_ack)
  ptr_deref_1538_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_word_addrgen/root_register_ack)
  ptr_deref_1538_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Sample/ptr_deref_1538_Split/split_req) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Sample/ptr_deref_1538_Split/split_ack)
  ptr_deref_1538_store_0 <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ptr_deref_1538_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 703
  // (indvarx_xi + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi
  ADD_u64_u64_1545_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ADD_u64_u64_1545_Sample/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ADD_u64_u64_1545_Update/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ADD_u64_u64_1545_Sample/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/ADD_u64_u64_1545_Update/ca)
  // 		exitcond := (indvarx_xnextx_xi == tmp4x_xi)
  //  file prog.linked.opt.aa, line 704
  // (indvarx_xnextx_xi == tmp4x_xi)
  // indvarx_xnextx_xi
  // tmp4x_xi
  EQ_u64_u1_1550_inst <=> (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/EQ_u64_u1_1550_Sample/rr branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/EQ_u64_u1_1550_Update/cr) (branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/EQ_u64_u1_1550_Sample/ra branch_block_stmt_1353/assign_stmt_1516_to_assign_stmt_1551/EQ_u64_u1_1550_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 705
  if_stmt_1552_branch <=> (branch_block_stmt_1353/if_stmt_1552_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1552_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1552_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 710
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 713
  // ($cast ($uint<16>) xx_xlcssa )
  type_cast_1570_inst <=> (branch_block_stmt_1353/initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_sources/type_cast_1570/SplitProtocol/Sample/rr branch_block_stmt_1353/initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_sources/type_cast_1570/SplitProtocol/Update/cr) (branch_block_stmt_1353/initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_sources/type_cast_1570/SplitProtocol/Sample/ra branch_block_stmt_1353/initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_sources/type_cast_1570/SplitProtocol/Update/ca)
  phi_stmt_1561 <=> (branch_block_stmt_1353/bb_1_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_req branch_block_stmt_1353/readCodeBlockx_xexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_req branch_block_stmt_1353/initialize_aPriorix_xexitx_xloopexit_initialize_aPriorix_xexit_PhiReq/phi_stmt_1561/phi_stmt_1561_req) (branch_block_stmt_1353/merge_stmt_1560_PhiAck/phi_stmt_1561_ack)
  // 		iNsTr_6 := ncol_ind
  //  file prog.linked.opt.aa, line 716
  // ncol_ind
  LOAD_ncol_ind_1573_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Update/LOAD_ncol_ind_1573_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Update/LOAD_ncol_ind_1573_Merge/merge_ack)
  LOAD_ncol_ind_1573_load_0 <=> (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/LOAD_ncol_ind_1573_Update/word_access_complete/word_0/ca)
  // 		iNsTr_7 := (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 717
  // (iNsTr_6 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_6
  EQ_u16_u1_1579_inst <=> (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/EQ_u16_u1_1579_Sample/rr branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/EQ_u16_u1_1579_Update/cr) (branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/EQ_u16_u1_1579_Sample/ra branch_block_stmt_1353/assign_stmt_1574_to_assign_stmt_1580/EQ_u16_u1_1579_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 718
  if_stmt_1581_branch <=> (branch_block_stmt_1353/if_stmt_1581_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1581_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1581_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 723
  // 		tmpx_xi2 := (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 725
  // (iNsTr_6 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_6
  UGT_u16_u1_1592_inst <=> (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/UGT_u16_u1_1592_Sample/rr branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/UGT_u16_u1_1592_Update/cr) (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/UGT_u16_u1_1592_Sample/ra branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/UGT_u16_u1_1592_Update/ca)
  // 		xx_xopx_xi3 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 726
  // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_6
  ADD_u16_u16_1598_inst <=> (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u16_u16_1598_Sample/rr branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u16_u16_1598_Update/cr) (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u16_u16_1598_Sample/ra branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u16_u16_1598_Update/ca)
  // 		iNsTr_11 := ($cast ($uint<64>) xx_xopx_xi3 )
  //  file prog.linked.opt.aa, line 727
  // xx_xopx_xi3
  // ($cast ($uint<64>) xx_xopx_xi3 )
  type_cast_1602_inst <=> (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/type_cast_1602_Sample/rr branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/type_cast_1602_Update/cr) (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/type_cast_1602_Sample/ra branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/type_cast_1602_Update/ca)
  // 		xx_xop7x_xi := (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 728
  // (iNsTr_11 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_11
  ADD_u64_u64_1608_inst <=> (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u64_u64_1608_Sample/rr branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u64_u64_1608_Update/cr) (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u64_u64_1608_Sample/ra branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/ADD_u64_u64_1608_Update/ca)
  // 		tmp4x_xi4 := ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 729
  // tmpx_xi2
  // xx_xop7x_xi
  // ( $mux tmpx_xi2 xx_xop7x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1615_inst <=> (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/MUX_1615_start/req branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/MUX_1615_complete/req) (branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/MUX_1615_start/ack branch_block_stmt_1353/assign_stmt_1593_to_assign_stmt_1616/MUX_1615_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 731
  // ($cast ($uint<64>) indvarx_xnextx_xi8 )
  type_cast_1625_inst <=> (branch_block_stmt_1353/bb_10_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_sources/type_cast_1625/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_10_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_sources/type_cast_1625/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_10_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_sources/type_cast_1625/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_10_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_sources/type_cast_1625/SplitProtocol/Update/ca)
  phi_stmt_1619 <=> (branch_block_stmt_1353/bbx_xnphx_xi5_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_req branch_block_stmt_1353/bb_10_bb_10_PhiReq/phi_stmt_1619/phi_stmt_1619_req) (branch_block_stmt_1353/merge_stmt_1618_PhiAck/phi_stmt_1619_ack)
  // 		scevgepx_xi7 := @(message[indvarx_xi6])
  //  file prog.linked.opt.aa, line 734
  // indvarx_xi6
  array_obj_ref_1629_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_index_resize_0/index_resize_ack)
  array_obj_ref_1629_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_index_scale_0/scale_rename_ack)
  array_obj_ref_1629_index_offset <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_final_index_sum_regn/ack)
  array_obj_ref_1629_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1629_base_plus_offset/sum_rename_ack)
  addr_of_1630_final_reg <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1630_request/req branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1630_complete/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1630_request/ack branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1630_complete/ack)
  // 		tmp4 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 735
  // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvarx_xi6
  ADD_u64_u64_1636_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1636_Sample/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1636_Update/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1636_Sample/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1636_Update/ca)
  // 		scevgep6x_xi := @(mem[tmp4])
  //  file prog.linked.opt.aa, line 736
  // tmp4
  array_obj_ref_1640_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_index_resize_0/index_resize_ack)
  array_obj_ref_1640_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_index_scale_0/scale_rename_ack)
  array_obj_ref_1640_index_offset <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_final_index_sum_regn/ack)
  array_obj_ref_1640_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1640_base_plus_offset/sum_rename_ack)
  addr_of_1641_final_reg <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1641_request/req branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1641_complete/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1641_request/ack branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1641_complete/ack)
  // 		iNsTr_31 := ->(scevgep6x_xi)
  //  file prog.linked.opt.aa, line 737
  // scevgep6x_xi
  ptr_deref_1645_base_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_base_addr_resize/base_resize_ack)
  ptr_deref_1645_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_base_plus_offset/sum_rename_ack)
  ptr_deref_1645_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_word_addrgen/root_register_ack)
  ptr_deref_1645_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Update/ptr_deref_1645_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Update/ptr_deref_1645_Merge/merge_ack)
  ptr_deref_1645_load_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1645_Update/word_access_complete/word_0/ca)
  // 		iNsTr_32 := (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 738
  // (iNsTr_31 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_31
  ADD_u16_u16_1651_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u16_u16_1651_Sample/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u16_u16_1651_Update/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u16_u16_1651_Sample/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u16_u16_1651_Update/ca)
  // 		iNsTr_33 := ($cast ($uint<64>) iNsTr_32 )
  //  file prog.linked.opt.aa, line 739
  // iNsTr_32
  // ($cast ($uint<64>) iNsTr_32 )
  type_cast_1655_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/type_cast_1655_Sample/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/type_cast_1655_Update/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/type_cast_1655_Sample/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/type_cast_1655_Update/ca)
  // 		iNsTr_34 := @(aPriori[iNsTr_33])
  //  file prog.linked.opt.aa, line 740
  // iNsTr_33
  array_obj_ref_1659_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_index_resize_0/index_resize_ack)
  array_obj_ref_1659_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_index_scale_0/scale_rename_ack)
  array_obj_ref_1659_index_offset <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_final_index_sum_regn/ack)
  array_obj_ref_1659_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/array_obj_ref_1659_base_plus_offset/sum_rename_ack)
  addr_of_1660_final_reg <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1660_request/req branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1660_complete/req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1660_request/ack branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/addr_of_1660_complete/ack)
  // 		iNsTr_35 := ->(iNsTr_34)
  //  file prog.linked.opt.aa, line 741
  // iNsTr_34
  ptr_deref_1664_base_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_base_addr_resize/base_resize_ack)
  ptr_deref_1664_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_base_plus_offset/sum_rename_ack)
  ptr_deref_1664_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_word_addrgen/root_register_ack)
  ptr_deref_1664_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Update/ptr_deref_1664_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Update/ptr_deref_1664_Merge/merge_ack)
  ptr_deref_1664_load_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1664_Update/word_access_complete/word_0/ca)
  // 		->(scevgepx_xi7) := iNsTr_35
  //  file prog.linked.opt.aa, line 742
  // iNsTr_35
  // scevgepx_xi7
  ptr_deref_1667_base_resize <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_base_addr_resize/base_resize_ack)
  ptr_deref_1667_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_base_plus_offset/sum_rename_ack)
  ptr_deref_1667_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_word_addrgen/root_register_ack)
  ptr_deref_1667_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Sample/ptr_deref_1667_Split/split_req) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Sample/ptr_deref_1667_Split/split_ack)
  ptr_deref_1667_store_0 <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ptr_deref_1667_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnextx_xi8 := (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 743
  // (indvarx_xi6 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi6
  ADD_u64_u64_1674_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1674_Sample/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1674_Update/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1674_Sample/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/ADD_u64_u64_1674_Update/ca)
  // 		exitcond3 := (indvarx_xnextx_xi8 == tmp4x_xi4)
  //  file prog.linked.opt.aa, line 744
  // (indvarx_xnextx_xi8 == tmp4x_xi4)
  // indvarx_xnextx_xi8
  // tmp4x_xi4
  EQ_u64_u1_1679_inst <=> (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/EQ_u64_u1_1679_Sample/rr branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/EQ_u64_u1_1679_Update/cr) (branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/EQ_u64_u1_1679_Sample/ra branch_block_stmt_1353/assign_stmt_1631_to_assign_stmt_1680/EQ_u64_u1_1679_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 745
  if_stmt_1681_branch <=> (branch_block_stmt_1353/if_stmt_1681_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1681_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1681_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 750
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 753
  // ($cast ($uint<16>) iNsTr_6 )
  type_cast_1693_inst <=> (branch_block_stmt_1353/initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1693/SplitProtocol/Sample/rr branch_block_stmt_1353/initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1693/SplitProtocol/Update/cr) (branch_block_stmt_1353/initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1693/SplitProtocol/Sample/ra branch_block_stmt_1353/initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_sources/type_cast_1693/SplitProtocol/Update/ca)
  phi_stmt_1690 <=> (branch_block_stmt_1353/initializeMessagex_xexitx_xloopexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_req branch_block_stmt_1353/initialize_aPriorix_xexit_initializeMessagex_xexitx_xpreheader_PhiReq/phi_stmt_1690/phi_stmt_1690_req) (branch_block_stmt_1353/merge_stmt_1689_PhiAck/phi_stmt_1690_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 757
  // ($cast ($uint<16>) indvarx_xnext )
  type_cast_1706_inst <=> (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/type_cast_1706/SplitProtocol/Sample/rr branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/type_cast_1706/SplitProtocol/Update/cr) (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/type_cast_1706/SplitProtocol/Sample/ra branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_sources/type_cast_1706/SplitProtocol/Update/ca)
  phi_stmt_1700 <=> (branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_req branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1700/phi_stmt_1700_req) (branch_block_stmt_1353/merge_stmt_1699_PhiAck/phi_stmt_1700_ack)
  // ($cast ($uint<16>) iNsTr_66 )
  type_cast_1710_inst <=> (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1710/SplitProtocol/Sample/rr branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1710/SplitProtocol/Update/cr) (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1710/SplitProtocol/Sample/ra branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1710/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) xx_xph )
  type_cast_1712_inst <=> (branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1712/SplitProtocol/Sample/rr branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1712/SplitProtocol/Update/cr) (branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1712/SplitProtocol/Sample/ra branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_sources/type_cast_1712/SplitProtocol/Update/ca)
  phi_stmt_1707 <=> (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_req branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1707/phi_stmt_1707_req) (branch_block_stmt_1353/merge_stmt_1699_PhiAck/phi_stmt_1707_ack)
  // ($cast ($uint<16>) iNsTr_83 )
  type_cast_1716_inst <=> (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1716/SplitProtocol/Sample/rr branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1716/SplitProtocol/Update/cr) (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1716/SplitProtocol/Sample/ra branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1716/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_5 )
  type_cast_1718_inst <=> (branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1718/SplitProtocol/Sample/rr branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1718/SplitProtocol/Update/cr) (branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1718/SplitProtocol/Sample/ra branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_sources/type_cast_1718/SplitProtocol/Update/ca)
  phi_stmt_1713 <=> (branch_block_stmt_1353/updateMessagex_xexit_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_req branch_block_stmt_1353/initializeMessagex_xexitx_xpreheader_initializeMessagex_xexit_PhiReq/phi_stmt_1713/phi_stmt_1713_req) (branch_block_stmt_1353/merge_stmt_1699_PhiAck/phi_stmt_1713_ack)
  // 		indvar := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 762
  // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // indvar18
  ADD_u16_u16_1724_inst <=> (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ADD_u16_u16_1724_Sample/rr branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ADD_u16_u16_1724_Update/cr) (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ADD_u16_u16_1724_Sample/ra branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ADD_u16_u16_1724_Update/ca)
  // 		iNsTr_28 := maxNitr
  //  file prog.linked.opt.aa, line 763
  // maxNitr
  LOAD_maxNitr_1727_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Update/LOAD_maxNitr_1727_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Update/LOAD_maxNitr_1727_Merge/merge_ack)
  LOAD_maxNitr_1727_load_0 <=> (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/LOAD_maxNitr_1727_Update/word_access_complete/word_0/ca)
  // 		iNsTr_29 := (indvar < iNsTr_28)
  //  file prog.linked.opt.aa, line 764
  // (indvar < iNsTr_28)
  // indvar
  // iNsTr_28
  ULT_u16_u1_1732_inst <=> (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ULT_u16_u1_1732_Sample/rr branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ULT_u16_u1_1732_Update/cr) (branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ULT_u16_u1_1732_Sample/ra branch_block_stmt_1353/assign_stmt_1725_to_assign_stmt_1733/ULT_u16_u1_1732_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 765
  if_stmt_1734_branch <=> (branch_block_stmt_1353/if_stmt_1734_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1734_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1734_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 770
  // 		iNsTr_40 := (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 772
  // (iNsTr_27 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_27
  EQ_u16_u1_1745_inst <=> (branch_block_stmt_1353/assign_stmt_1746/EQ_u16_u1_1745_Sample/rr branch_block_stmt_1353/assign_stmt_1746/EQ_u16_u1_1745_Update/cr) (branch_block_stmt_1353/assign_stmt_1746/EQ_u16_u1_1745_Sample/ra branch_block_stmt_1353/assign_stmt_1746/EQ_u16_u1_1745_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 773
  if_stmt_1747_branch <=> (branch_block_stmt_1353/if_stmt_1747_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1747_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1747_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 778
  // 		tmpx_xi14 := (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 780
  // (iNsTr_27 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_27
  UGT_u16_u1_1758_inst <=> (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/UGT_u16_u1_1758_Sample/rr branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/UGT_u16_u1_1758_Update/cr) (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/UGT_u16_u1_1758_Sample/ra branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/UGT_u16_u1_1758_Update/ca)
  // 		xx_xopx_xi15 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 781
  // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_27
  ADD_u16_u16_1764_inst <=> (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u16_u16_1764_Sample/rr branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u16_u16_1764_Update/cr) (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u16_u16_1764_Sample/ra branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u16_u16_1764_Update/ca)
  // 		iNsTr_53 := ($cast ($uint<64>) xx_xopx_xi15 )
  //  file prog.linked.opt.aa, line 782
  // xx_xopx_xi15
  // ($cast ($uint<64>) xx_xopx_xi15 )
  type_cast_1768_inst <=> (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/type_cast_1768_Sample/rr branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/type_cast_1768_Update/cr) (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/type_cast_1768_Sample/ra branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/type_cast_1768_Update/ca)
  // 		xx_xop6x_xi16 := (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 783
  // (iNsTr_53 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_53
  ADD_u64_u64_1774_inst <=> (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u64_u64_1774_Sample/rr branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u64_u64_1774_Update/cr) (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u64_u64_1774_Sample/ra branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/ADD_u64_u64_1774_Update/ca)
  // 		tmp4x_xi17 := ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 784
  // tmpx_xi14
  // xx_xop6x_xi16
  // ( $mux tmpx_xi14 xx_xop6x_xi16  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1781_inst <=> (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/MUX_1781_start/req branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/MUX_1781_complete/req) (branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/MUX_1781_start/ack branch_block_stmt_1353/assign_stmt_1759_to_assign_stmt_1782/MUX_1781_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 786
  // ($cast ($uint<64>) indvarx_xnextx_xi22 )
  type_cast_1791_inst <=> (branch_block_stmt_1353/bb_16_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_sources/type_cast_1791/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_16_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_sources/type_cast_1791/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_16_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_sources/type_cast_1791/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_16_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_sources/type_cast_1791/SplitProtocol/Update/ca)
  phi_stmt_1785 <=> (branch_block_stmt_1353/bbx_xnphx_xi18_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_req branch_block_stmt_1353/bb_16_bb_16_PhiReq/phi_stmt_1785/phi_stmt_1785_req) (branch_block_stmt_1353/merge_stmt_1784_PhiAck/phi_stmt_1785_ack)
  // 		scevgepx_xi20 := @(aPriori[indvarx_xi19])
  //  file prog.linked.opt.aa, line 789
  // indvarx_xi19
  array_obj_ref_1795_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_index_resize_0/index_resize_ack)
  array_obj_ref_1795_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_index_scale_0/scale_rename_ack)
  array_obj_ref_1795_index_offset <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_final_index_sum_regn/ack)
  array_obj_ref_1795_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1795_base_plus_offset/sum_rename_ack)
  addr_of_1796_final_reg <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1796_request/req branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1796_complete/req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1796_request/ack branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1796_complete/ack)
  // 		scevgep5x_xi21 := @(aPosteriori[indvarx_xi19])
  //  file prog.linked.opt.aa, line 790
  // indvarx_xi19
  array_obj_ref_1800_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_index_resize_0/index_resize_ack)
  array_obj_ref_1800_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_index_scale_0/scale_rename_ack)
  array_obj_ref_1800_index_offset <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_final_index_sum_regn/ack)
  array_obj_ref_1800_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/array_obj_ref_1800_base_plus_offset/sum_rename_ack)
  addr_of_1801_final_reg <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1801_request/req branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1801_complete/req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1801_request/ack branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/addr_of_1801_complete/ack)
  // 		iNsTr_71 := ->(scevgepx_xi20)
  //  file prog.linked.opt.aa, line 791
  // scevgepx_xi20
  ptr_deref_1805_base_resize <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_base_addr_resize/base_resize_ack)
  ptr_deref_1805_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_base_plus_offset/sum_rename_ack)
  ptr_deref_1805_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_word_addrgen/root_register_ack)
  ptr_deref_1805_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Update/ptr_deref_1805_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Update/ptr_deref_1805_Merge/merge_ack)
  ptr_deref_1805_load_0 <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1805_Update/word_access_complete/word_0/ca)
  // 		->(scevgep5x_xi21) := iNsTr_71
  //  file prog.linked.opt.aa, line 792
  // iNsTr_71
  // scevgep5x_xi21
  ptr_deref_1808_base_resize <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_base_addr_resize/base_resize_ack)
  ptr_deref_1808_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_base_plus_offset/sum_rename_ack)
  ptr_deref_1808_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_word_addrgen/root_register_ack)
  ptr_deref_1808_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Sample/ptr_deref_1808_Split/split_req) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Sample/ptr_deref_1808_Split/split_ack)
  ptr_deref_1808_store_0 <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ptr_deref_1808_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnextx_xi22 := (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 793
  // (indvarx_xi19 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi19
  ADD_u64_u64_1815_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ADD_u64_u64_1815_Sample/rr branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ADD_u64_u64_1815_Update/cr) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ADD_u64_u64_1815_Sample/ra branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/ADD_u64_u64_1815_Update/ca)
  // 		exitcond15 := (indvarx_xnextx_xi22 == tmp4x_xi17)
  //  file prog.linked.opt.aa, line 794
  // (indvarx_xnextx_xi22 == tmp4x_xi17)
  // indvarx_xnextx_xi22
  // tmp4x_xi17
  EQ_u64_u1_1820_inst <=> (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/EQ_u64_u1_1820_Sample/rr branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/EQ_u64_u1_1820_Update/cr) (branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/EQ_u64_u1_1820_Sample/ra branch_block_stmt_1353/assign_stmt_1797_to_assign_stmt_1821/EQ_u64_u1_1820_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 795
  if_stmt_1822_branch <=> (branch_block_stmt_1353/if_stmt_1822_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1822_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1822_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 800
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 803
  // 		iNsTr_51 := (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 805
  // (iNsTr_26 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_26
  EQ_u16_u1_1835_inst <=> (branch_block_stmt_1353/assign_stmt_1836/EQ_u16_u1_1835_Sample/rr branch_block_stmt_1353/assign_stmt_1836/EQ_u16_u1_1835_Update/cr) (branch_block_stmt_1353/assign_stmt_1836/EQ_u16_u1_1835_Sample/ra branch_block_stmt_1353/assign_stmt_1836/EQ_u16_u1_1835_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 806
  if_stmt_1837_branch <=> (branch_block_stmt_1353/if_stmt_1837_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1837_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1837_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 811
  // 		tmpx_xi24 := (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 813
  // (iNsTr_26 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_26
  UGT_u16_u1_1848_inst <=> (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/UGT_u16_u1_1848_Sample/rr branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/UGT_u16_u1_1848_Update/cr) (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/UGT_u16_u1_1848_Sample/ra branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/UGT_u16_u1_1848_Update/ca)
  // 		xx_xopx_xi25 := (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 814
  // (iNsTr_26 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_26
  ADD_u16_u16_1854_inst <=> (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u16_u16_1854_Sample/rr branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u16_u16_1854_Update/cr) (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u16_u16_1854_Sample/ra branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u16_u16_1854_Update/ca)
  // 		iNsTr_69 := ($cast ($uint<64>) xx_xopx_xi25 )
  //  file prog.linked.opt.aa, line 815
  // xx_xopx_xi25
  // ($cast ($uint<64>) xx_xopx_xi25 )
  type_cast_1858_inst <=> (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/type_cast_1858_Sample/rr branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/type_cast_1858_Update/cr) (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/type_cast_1858_Sample/ra branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/type_cast_1858_Update/ca)
  // 		xx_xop5x_xi := (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 816
  // (iNsTr_69 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_69
  ADD_u64_u64_1864_inst <=> (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u64_u64_1864_Sample/rr branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u64_u64_1864_Update/cr) (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u64_u64_1864_Sample/ra branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/ADD_u64_u64_1864_Update/ca)
  // 		tmp4x_xi26 := ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 817
  // tmpx_xi24
  // xx_xop5x_xi
  // ( $mux tmpx_xi24 xx_xop5x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1871_inst <=> (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/MUX_1871_start/req branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/MUX_1871_complete/req) (branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/MUX_1871_start/ack branch_block_stmt_1353/assign_stmt_1849_to_assign_stmt_1872/MUX_1871_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 819
  // ($cast ($uint<64>) indvarx_xnextx_xi30 )
  type_cast_1881_inst <=> (branch_block_stmt_1353/bb_20_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_sources/type_cast_1881/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_20_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_sources/type_cast_1881/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_20_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_sources/type_cast_1881/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_20_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_sources/type_cast_1881/SplitProtocol/Update/ca)
  phi_stmt_1875 <=> (branch_block_stmt_1353/bbx_xnphx_xi27_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_req branch_block_stmt_1353/bb_20_bb_20_PhiReq/phi_stmt_1875/phi_stmt_1875_req) (branch_block_stmt_1353/merge_stmt_1874_PhiAck/phi_stmt_1875_ack)
  // 		scevgepx_xi29 := @(ext_info[indvarx_xi28])
  //  file prog.linked.opt.aa, line 822
  // indvarx_xi28
  array_obj_ref_1885_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_index_resize_0/index_resize_ack)
  array_obj_ref_1885_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_index_scale_0/scale_rename_ack)
  array_obj_ref_1885_index_offset <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_final_index_sum_regn/ack)
  array_obj_ref_1885_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/array_obj_ref_1885_base_plus_offset/sum_rename_ack)
  addr_of_1886_final_reg <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/addr_of_1886_request/req branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/addr_of_1886_complete/req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/addr_of_1886_request/ack branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/addr_of_1886_complete/ack)
  // 		->(scevgepx_xi29) := ($bitcast ($float<8,23>) _h0  )
  //  file prog.linked.opt.aa, line 823
  // scevgepx_xi29
  ptr_deref_1889_base_resize <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_base_addr_resize/base_resize_ack)
  ptr_deref_1889_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_base_plus_offset/sum_rename_ack)
  ptr_deref_1889_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_word_addrgen/root_register_ack)
  ptr_deref_1889_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Sample/ptr_deref_1889_Split/split_req) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Sample/ptr_deref_1889_Split/split_ack)
  ptr_deref_1889_store_0 <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ptr_deref_1889_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnextx_xi30 := (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 824
  // (indvarx_xi28 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi28
  ADD_u64_u64_1897_inst <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ADD_u64_u64_1897_Sample/rr branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ADD_u64_u64_1897_Update/cr) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ADD_u64_u64_1897_Sample/ra branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/ADD_u64_u64_1897_Update/ca)
  // 		exitcond14 := (indvarx_xnextx_xi30 == tmp4x_xi26)
  //  file prog.linked.opt.aa, line 825
  // (indvarx_xnextx_xi30 == tmp4x_xi26)
  // indvarx_xnextx_xi30
  // tmp4x_xi26
  EQ_u64_u1_1902_inst <=> (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/EQ_u64_u1_1902_Sample/rr branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/EQ_u64_u1_1902_Update/cr) (branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/EQ_u64_u1_1902_Sample/ra branch_block_stmt_1353/assign_stmt_1887_to_assign_stmt_1903/EQ_u64_u1_1902_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 826
  if_stmt_1904_branch <=> (branch_block_stmt_1353/if_stmt_1904_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1904_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1904_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 831
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 834
  // 		$call checkNodeComputeEngine () () 
  //  file prog.linked.opt.aa, line 836
  call_stmt_1913_call <=> (branch_block_stmt_1353/call_stmt_1913/call_stmt_1913_Sample/crr branch_block_stmt_1353/call_stmt_1913/call_stmt_1913_Update/ccr) (branch_block_stmt_1353/call_stmt_1913/call_stmt_1913_Sample/cra branch_block_stmt_1353/call_stmt_1913/call_stmt_1913_Update/cca)
  // 		iNsTr_66 := ncol_ind
  //  file prog.linked.opt.aa, line 837
  // ncol_ind
  LOAD_ncol_ind_1915_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Update/LOAD_ncol_ind_1915_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Update/LOAD_ncol_ind_1915_Merge/merge_ack)
  LOAD_ncol_ind_1915_load_0 <=> (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/LOAD_ncol_ind_1915_Update/word_access_complete/word_0/ca)
  // 		iNsTr_67 := (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 838
  // (iNsTr_66 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_66
  EQ_u16_u1_1921_inst <=> (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/EQ_u16_u1_1921_Sample/rr branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/EQ_u16_u1_1921_Update/cr) (branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/EQ_u16_u1_1921_Sample/ra branch_block_stmt_1353/assign_stmt_1916_to_assign_stmt_1922/EQ_u16_u1_1921_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 839
  if_stmt_1923_branch <=> (branch_block_stmt_1353/if_stmt_1923_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_1923_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_1923_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 844
  // 		tmpx_xi50 := (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 846
  // (iNsTr_66 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_66
  UGT_u16_u1_1934_inst <=> (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/UGT_u16_u1_1934_Sample/rr branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/UGT_u16_u1_1934_Update/cr) (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/UGT_u16_u1_1934_Sample/ra branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/UGT_u16_u1_1934_Update/ca)
  // 		xx_xopx_xi51 := (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 847
  // (iNsTr_66 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_66
  ADD_u16_u16_1940_inst <=> (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u16_u16_1940_Sample/rr branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u16_u16_1940_Update/cr) (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u16_u16_1940_Sample/ra branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u16_u16_1940_Update/ca)
  // 		iNsTr_86 := ($cast ($uint<64>) xx_xopx_xi51 )
  //  file prog.linked.opt.aa, line 848
  // xx_xopx_xi51
  // ($cast ($uint<64>) xx_xopx_xi51 )
  type_cast_1944_inst <=> (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/type_cast_1944_Sample/rr branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/type_cast_1944_Update/cr) (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/type_cast_1944_Sample/ra branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/type_cast_1944_Update/ca)
  // 		xx_xop7x_xi52 := (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 849
  // (iNsTr_86 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_86
  ADD_u64_u64_1950_inst <=> (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u64_u64_1950_Sample/rr branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u64_u64_1950_Update/cr) (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u64_u64_1950_Sample/ra branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/ADD_u64_u64_1950_Update/ca)
  // 		tmp4x_xi53 := ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 850
  // tmpx_xi50
  // xx_xop7x_xi52
  // ( $mux tmpx_xi50 xx_xop7x_xi52  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_1957_inst <=> (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/MUX_1957_start/req branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/MUX_1957_complete/req) (branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/MUX_1957_start/ack branch_block_stmt_1353/assign_stmt_1935_to_assign_stmt_1958/MUX_1957_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 852
  // ($cast ($uint<64>) indvarx_xnextx_xi59 )
  type_cast_1967_inst <=> (branch_block_stmt_1353/bb_24_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_sources/type_cast_1967/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_24_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_sources/type_cast_1967/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_24_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_sources/type_cast_1967/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_24_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_sources/type_cast_1967/SplitProtocol/Update/ca)
  phi_stmt_1961 <=> (branch_block_stmt_1353/bbx_xnphx_xi54_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_req branch_block_stmt_1353/bb_24_bb_24_PhiReq/phi_stmt_1961/phi_stmt_1961_req) (branch_block_stmt_1353/merge_stmt_1960_PhiAck/phi_stmt_1961_ack)
  // 		scevgepx_xi56 := @(ext_info[indvarx_xi55])
  //  file prog.linked.opt.aa, line 855
  // indvarx_xi55
  array_obj_ref_1971_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_index_resize_0/index_resize_ack)
  array_obj_ref_1971_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_index_scale_0/scale_rename_ack)
  array_obj_ref_1971_index_offset <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_final_index_sum_regn/ack)
  array_obj_ref_1971_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1971_base_plus_offset/sum_rename_ack)
  addr_of_1972_final_reg <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1972_request/req branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1972_complete/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1972_request/ack branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1972_complete/ack)
  // 		tmp13 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 856
  // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvarx_xi55
  ADD_u64_u64_1978_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_1978_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_1978_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_1978_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_1978_Update/ca)
  // 		scevgep6x_xi58 := @(mem[tmp13])
  //  file prog.linked.opt.aa, line 857
  // tmp13
  array_obj_ref_1982_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_index_resize_0/index_resize_ack)
  array_obj_ref_1982_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_index_scale_0/scale_rename_ack)
  array_obj_ref_1982_index_offset <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_final_index_sum_regn/ack)
  array_obj_ref_1982_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_1982_base_plus_offset/sum_rename_ack)
  addr_of_1983_final_reg <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1983_request/req branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1983_complete/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1983_request/ack branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_1983_complete/ack)
  // 		iNsTr_96 := ->(scevgep6x_xi58)
  //  file prog.linked.opt.aa, line 858
  // scevgep6x_xi58
  ptr_deref_1987_base_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_base_addr_resize/base_resize_ack)
  ptr_deref_1987_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_base_plus_offset/sum_rename_ack)
  ptr_deref_1987_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_word_addrgen/root_register_ack)
  ptr_deref_1987_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Update/ptr_deref_1987_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Update/ptr_deref_1987_Merge/merge_ack)
  ptr_deref_1987_load_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1987_Update/word_access_complete/word_0/ca)
  // 		iNsTr_97 := (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 859
  // (iNsTr_96 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_96
  ADD_u16_u16_1993_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u16_u16_1993_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u16_u16_1993_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u16_u16_1993_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u16_u16_1993_Update/ca)
  // 		iNsTr_98 := ->(scevgepx_xi56)
  //  file prog.linked.opt.aa, line 860
  // scevgepx_xi56
  ptr_deref_1997_base_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_base_addr_resize/base_resize_ack)
  ptr_deref_1997_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_base_plus_offset/sum_rename_ack)
  ptr_deref_1997_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_word_addrgen/root_register_ack)
  ptr_deref_1997_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Update/ptr_deref_1997_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Update/ptr_deref_1997_Merge/merge_ack)
  ptr_deref_1997_load_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_1997_Update/word_access_complete/word_0/ca)
  // 		iNsTr_99 := ($cast ($uint<64>) iNsTr_97 )
  //  file prog.linked.opt.aa, line 861
  // iNsTr_97
  // ($cast ($uint<64>) iNsTr_97 )
  type_cast_2001_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/type_cast_2001_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/type_cast_2001_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/type_cast_2001_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/type_cast_2001_Update/ca)
  // 		iNsTr_100 := @(aPosteriori[iNsTr_99])
  //  file prog.linked.opt.aa, line 862
  // iNsTr_99
  array_obj_ref_2005_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_index_resize_0/index_resize_ack)
  array_obj_ref_2005_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_index_scale_0/scale_rename_ack)
  array_obj_ref_2005_index_offset <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_final_index_sum_regn/ack)
  array_obj_ref_2005_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/array_obj_ref_2005_base_plus_offset/sum_rename_ack)
  addr_of_2006_final_reg <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_2006_request/req branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_2006_complete/req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_2006_request/ack branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/addr_of_2006_complete/ack)
  // 		iNsTr_101 := ->(iNsTr_100)
  //  file prog.linked.opt.aa, line 863
  // iNsTr_100
  ptr_deref_2010_base_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_base_addr_resize/base_resize_ack)
  ptr_deref_2010_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_base_plus_offset/sum_rename_ack)
  ptr_deref_2010_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_word_addrgen/root_register_ack)
  ptr_deref_2010_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Update/ptr_deref_2010_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Update/ptr_deref_2010_Merge/merge_ack)
  ptr_deref_2010_load_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2010_Update/word_access_complete/word_0/ca)
  // 		iNsTr_102 := (iNsTr_101 + iNsTr_98)
  //  file prog.linked.opt.aa, line 864
  // (iNsTr_101 + iNsTr_98)
  // iNsTr_101
  // iNsTr_98
  ADD_f32_f32_2015_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_f32_f32_2015_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_f32_f32_2015_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_f32_f32_2015_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_f32_f32_2015_Update/ca)
  // 		->(iNsTr_100) := iNsTr_102
  //  file prog.linked.opt.aa, line 865
  // iNsTr_102
  // iNsTr_100
  ptr_deref_2018_base_resize <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_base_addr_resize/base_resize_ack)
  ptr_deref_2018_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_base_plus_offset/sum_rename_ack)
  ptr_deref_2018_addr_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_word_addrgen/root_register_ack)
  ptr_deref_2018_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Sample/ptr_deref_2018_Split/split_req) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Sample/ptr_deref_2018_Split/split_ack)
  ptr_deref_2018_store_0 <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ptr_deref_2018_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnextx_xi59 := (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 866
  // (indvarx_xi55 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi55
  ADD_u64_u64_2025_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_2025_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_2025_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_2025_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/ADD_u64_u64_2025_Update/ca)
  // 		exitcond12 := (indvarx_xnextx_xi59 == tmp4x_xi53)
  //  file prog.linked.opt.aa, line 867
  // (indvarx_xnextx_xi59 == tmp4x_xi53)
  // indvarx_xnextx_xi59
  // tmp4x_xi53
  EQ_u64_u1_2030_inst <=> (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/EQ_u64_u1_2030_Sample/rr branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/EQ_u64_u1_2030_Update/cr) (branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/EQ_u64_u1_2030_Sample/ra branch_block_stmt_1353/assign_stmt_1973_to_assign_stmt_2031/EQ_u64_u1_2030_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 868
  if_stmt_2032_branch <=> (branch_block_stmt_1353/if_stmt_2032_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2032_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2032_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 873
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 876
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000001  )
  //  file prog.linked.opt.aa, line 878
  // is_decoded
  STORE_is_decoded_2041_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Sample/STORE_is_decoded_2041_Split/split_req) (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Sample/STORE_is_decoded_2041_Split/split_ack)
  STORE_is_decoded_2041_store_0 <=> (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/STORE_is_decoded_2041_Update/word_access_complete/word_0/ca)
  // 		iNsTr_83 := ncols
  //  file prog.linked.opt.aa, line 879
  // ncols
  LOAD_ncols_2046_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Update/LOAD_ncols_2046_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Update/LOAD_ncols_2046_Merge/merge_ack)
  LOAD_ncols_2046_load_0 <=> (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/LOAD_ncols_2046_Update/word_access_complete/word_0/ca)
  // 		iNsTr_84 := (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 880
  // (iNsTr_83 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_83
  EQ_u16_u1_2052_inst <=> (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/EQ_u16_u1_2052_Sample/rr branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/EQ_u16_u1_2052_Update/cr) (branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/EQ_u16_u1_2052_Sample/ra branch_block_stmt_1353/assign_stmt_2044_to_assign_stmt_2053/EQ_u16_u1_2052_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 881
  if_stmt_2054_branch <=> (branch_block_stmt_1353/if_stmt_2054_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2054_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2054_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 886
  // ($cast ($uint<16>) indvar )
  type_cast_2064_inst <=> (branch_block_stmt_1353/update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Sample/rr branch_block_stmt_1353/update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Update/cr) (branch_block_stmt_1353/update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Sample/ra branch_block_stmt_1353/update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq/phi_stmt_2061/phi_stmt_2061_sources/type_cast_2064/SplitProtocol/Update/ca)
  phi_stmt_2061 <=> (branch_block_stmt_1353/update_aPosteriorix_xexit_checkIsdecodedx_xexitx_xthreadx_xthread_PhiReq/phi_stmt_2061/phi_stmt_2061_req) (branch_block_stmt_1353/merge_stmt_2060_PhiAck/phi_stmt_2061_ack)
  // 		Nitr_required := indvarx_xlcssa17
  //  file prog.linked.opt.aa, line 889
  // indvarx_xlcssa17
  // Nitr_required
  STORE_Nitr_required_2066_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Sample/STORE_Nitr_required_2066_Split/split_req) (branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Sample/STORE_Nitr_required_2066_Split/split_ack)
  STORE_Nitr_required_2066_store_0 <=> (branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2068/STORE_Nitr_required_2066_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 891
  // 		tmpx_xi39 := (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 893
  // (iNsTr_83 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_83
  UGT_u16_u1_2075_inst <=> (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/UGT_u16_u1_2075_Sample/rr branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/UGT_u16_u1_2075_Update/cr) (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/UGT_u16_u1_2075_Sample/ra branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/UGT_u16_u1_2075_Update/ca)
  // 		xx_xopx_xi40 := (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 894
  // (iNsTr_83 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_83
  ADD_u16_u16_2081_inst <=> (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u16_u16_2081_Sample/rr branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u16_u16_2081_Update/cr) (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u16_u16_2081_Sample/ra branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u16_u16_2081_Update/ca)
  // 		iNsTr_94 := ($cast ($uint<64>) xx_xopx_xi40 )
  //  file prog.linked.opt.aa, line 895
  // xx_xopx_xi40
  // ($cast ($uint<64>) xx_xopx_xi40 )
  type_cast_2085_inst <=> (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/type_cast_2085_Sample/rr branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/type_cast_2085_Update/cr) (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/type_cast_2085_Sample/ra branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/type_cast_2085_Update/ca)
  // 		xx_xop6x_xi41 := (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 896
  // (iNsTr_94 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_94
  ADD_u64_u64_2091_inst <=> (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u64_u64_2091_Sample/rr branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u64_u64_2091_Update/cr) (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u64_u64_2091_Sample/ra branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/ADD_u64_u64_2091_Update/ca)
  // 		tmp4x_xi42 := ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 897
  // tmpx_xi39
  // xx_xop6x_xi41
  // ( $mux tmpx_xi39 xx_xop6x_xi41  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_2098_inst <=> (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/MUX_2098_start/req branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/MUX_2098_complete/req) (branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/MUX_2098_start/ack branch_block_stmt_1353/assign_stmt_2076_to_assign_stmt_2099/MUX_2098_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 899
  // ($cast ($uint<16>) xx_xpr )
  type_cast_2108_inst <=> (branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_sources/type_cast_2108/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_sources/type_cast_2108/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_sources/type_cast_2108/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_sources/type_cast_2108/SplitProtocol/Update/ca)
  phi_stmt_2102 <=> (branch_block_stmt_1353/bbx_xnphx_xi43_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_req branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2102/phi_stmt_2102_req) (branch_block_stmt_1353/merge_stmt_2101_PhiAck/phi_stmt_2102_ack)
  // ($cast ($uint<64>) indvarx_xnextx_xi47 )
  type_cast_2115_inst <=> (branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_sources/type_cast_2115/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_sources/type_cast_2115/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_sources/type_cast_2115/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_sources/type_cast_2115/SplitProtocol/Update/ca)
  phi_stmt_2109 <=> (branch_block_stmt_1353/bbx_xnphx_xi43_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_req branch_block_stmt_1353/bb_37_bb_29_PhiReq/phi_stmt_2109/phi_stmt_2109_req) (branch_block_stmt_1353/merge_stmt_2101_PhiAck/phi_stmt_2109_ack)
  // 		scevgepx_xi45 := @(aPosteriori[indvarx_xi44])
  //  file prog.linked.opt.aa, line 903
  // indvarx_xi44
  array_obj_ref_2119_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_index_resize_0/index_resize_ack)
  array_obj_ref_2119_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_index_scale_0/scale_rename_ack)
  array_obj_ref_2119_index_offset <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_final_index_sum_regn/ack)
  array_obj_ref_2119_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2119_base_plus_offset/sum_rename_ack)
  addr_of_2120_final_reg <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2120_request/req branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2120_complete/req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2120_request/ack branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2120_complete/ack)
  // 		scevgep5x_xi46 := @(code_block[indvarx_xi44])
  //  file prog.linked.opt.aa, line 904
  // indvarx_xi44
  array_obj_ref_2124_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_index_resize_0/index_resize_ack)
  array_obj_ref_2124_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_index_scale_0/scale_rename_ack)
  array_obj_ref_2124_index_offset <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_final_index_sum_regn/ack)
  array_obj_ref_2124_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/array_obj_ref_2124_base_plus_offset/sum_rename_ack)
  addr_of_2125_final_reg <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2125_request/req branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2125_complete/req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2125_request/ack branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/addr_of_2125_complete/ack)
  // 		iNsTr_106 := ->(scevgepx_xi45)
  //  file prog.linked.opt.aa, line 905
  // scevgepx_xi45
  ptr_deref_2129_base_resize <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_base_addr_resize/base_resize_ack)
  ptr_deref_2129_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_base_plus_offset/sum_rename_ack)
  ptr_deref_2129_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_word_addrgen/root_register_ack)
  ptr_deref_2129_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Update/ptr_deref_2129_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Update/ptr_deref_2129_Merge/merge_ack)
  ptr_deref_2129_load_0 <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/ptr_deref_2129_Update/word_access_complete/word_0/ca)
  // 		iNsTr_107 := ($cast ($float<11,52>) iNsTr_106 )
  //  file prog.linked.opt.aa, line 906
  // iNsTr_106
  // ($cast ($float<11,52>) iNsTr_106 )
  type_cast_2133_inst <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/type_cast_2133_Sample/rr branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/type_cast_2133_Update/cr) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/type_cast_2133_Sample/ra branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/type_cast_2133_Update/ca)
  // 		iNsTr_108 := (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 907
  // (iNsTr_107 > ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_107
  SGT_f64_u1_2139_inst <=> (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/SGT_f64_u1_2139_Sample/rr branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/SGT_f64_u1_2139_Update/cr) (branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/SGT_f64_u1_2139_Sample/ra branch_block_stmt_1353/assign_stmt_2121_to_assign_stmt_2140/SGT_f64_u1_2139_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 908
  if_stmt_2141_branch <=> (branch_block_stmt_1353/if_stmt_2141_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2141_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2141_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 913
  // 		iNsTr_111 := ->(scevgep5x_xi46)
  //  file prog.linked.opt.aa, line 915
  // scevgep5x_xi46
  ptr_deref_2150_base_resize <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_base_addr_resize/base_resize_ack)
  ptr_deref_2150_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_base_plus_offset/sum_rename_ack)
  ptr_deref_2150_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_word_addrgen/root_register_ack)
  ptr_deref_2150_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Update/ptr_deref_2150_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Update/ptr_deref_2150_Merge/merge_ack)
  ptr_deref_2150_load_0 <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/ptr_deref_2150_Update/word_access_complete/word_0/ca)
  // 		iNsTr_112 := ($cast ($float<11,52>) iNsTr_111 )
  //  file prog.linked.opt.aa, line 916
  // iNsTr_111
  // ($cast ($float<11,52>) iNsTr_111 )
  type_cast_2154_inst <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/type_cast_2154_Sample/rr branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/type_cast_2154_Update/cr) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/type_cast_2154_Sample/ra branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/type_cast_2154_Update/ca)
  // 		iNsTr_113 := (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 917
  // (iNsTr_112 > ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_112
  SGT_f64_u1_2160_inst <=> (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/SGT_f64_u1_2160_Sample/rr branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/SGT_f64_u1_2160_Update/cr) (branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/SGT_f64_u1_2160_Sample/ra branch_block_stmt_1353/assign_stmt_2151_to_assign_stmt_2161/SGT_f64_u1_2160_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 918
  if_stmt_2162_branch <=> (branch_block_stmt_1353/if_stmt_2162_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2162_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2162_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 923
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
  //  file prog.linked.opt.aa, line 925
  // is_decoded
  STORE_is_decoded_2169_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Sample/STORE_is_decoded_2169_Split/split_req) (branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Sample/STORE_is_decoded_2169_Split/split_ack)
  STORE_is_decoded_2169_store_0 <=> (branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2172/STORE_is_decoded_2169_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 927
  // ($cast ($uint<16>) xx_xpr85 )
  type_cast_2181_inst <=> (branch_block_stmt_1353/bb_30_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_sources/type_cast_2181/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_30_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_sources/type_cast_2181/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_30_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_sources/type_cast_2181/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_30_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_sources/type_cast_2181/SplitProtocol/Update/ca)
  phi_stmt_2175 <=> (branch_block_stmt_1353/bb_31_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_req branch_block_stmt_1353/bb_30_bb_32_PhiReq/phi_stmt_2175/phi_stmt_2175_req) (branch_block_stmt_1353/merge_stmt_2174_PhiAck/phi_stmt_2175_ack)
  // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f-1.000000e+00 )
  //  file prog.linked.opt.aa, line 930
  // scevgep5x_xi46
  ptr_deref_2184_base_resize <=> (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_base_addr_resize/base_resize_ack)
  ptr_deref_2184_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_base_plus_offset/sum_rename_ack)
  ptr_deref_2184_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_word_addrgen/root_register_ack)
  ptr_deref_2184_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Sample/ptr_deref_2184_Split/split_req) (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Sample/ptr_deref_2184_Split/split_ack)
  ptr_deref_2184_store_0 <=> (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2187/ptr_deref_2184_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 932
  // 		iNsTr_115 := (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 934
  // (iNsTr_107 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_107
  SLT_f64_u1_2194_inst <=> (branch_block_stmt_1353/assign_stmt_2195/SLT_f64_u1_2194_Sample/rr branch_block_stmt_1353/assign_stmt_2195/SLT_f64_u1_2194_Update/cr) (branch_block_stmt_1353/assign_stmt_2195/SLT_f64_u1_2194_Sample/ra branch_block_stmt_1353/assign_stmt_2195/SLT_f64_u1_2194_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 935
  if_stmt_2196_branch <=> (branch_block_stmt_1353/if_stmt_2196_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2196_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2196_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 940
  // 		iNsTr_121 := ->(scevgep5x_xi46)
  //  file prog.linked.opt.aa, line 942
  // scevgep5x_xi46
  ptr_deref_2205_base_resize <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_base_addr_resize/base_resize_ack)
  ptr_deref_2205_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_base_plus_offset/sum_rename_ack)
  ptr_deref_2205_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_word_addrgen/root_register_ack)
  ptr_deref_2205_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Update/ptr_deref_2205_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Update/ptr_deref_2205_Merge/merge_ack)
  ptr_deref_2205_load_0 <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/ptr_deref_2205_Update/word_access_complete/word_0/ca)
  // 		iNsTr_122 := ($cast ($float<11,52>) iNsTr_121 )
  //  file prog.linked.opt.aa, line 943
  // iNsTr_121
  // ($cast ($float<11,52>) iNsTr_121 )
  type_cast_2209_inst <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/type_cast_2209_Sample/rr branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/type_cast_2209_Update/cr) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/type_cast_2209_Sample/ra branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/type_cast_2209_Update/ca)
  // 		iNsTr_123 := (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
  //  file prog.linked.opt.aa, line 944
  // (iNsTr_122 < ($bitcast ($float<11,52>) _h0  ))
  // iNsTr_122
  SLT_f64_u1_2215_inst <=> (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/SLT_f64_u1_2215_Sample/rr branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/SLT_f64_u1_2215_Update/cr) (branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/SLT_f64_u1_2215_Sample/ra branch_block_stmt_1353/assign_stmt_2206_to_assign_stmt_2216/SLT_f64_u1_2215_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 945
  if_stmt_2217_branch <=> (branch_block_stmt_1353/if_stmt_2217_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2217_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2217_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 950
  // 		is_decoded := ($bitcast ($uint<16>) _b0000000000000000  )
  //  file prog.linked.opt.aa, line 952
  // is_decoded
  STORE_is_decoded_2224_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Sample/STORE_is_decoded_2224_Split/split_req) (branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Sample/STORE_is_decoded_2224_Split/split_ack)
  STORE_is_decoded_2224_store_0 <=> (branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2227/STORE_is_decoded_2224_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 954
  // ($cast ($uint<16>) xx_xpr85 )
  type_cast_2236_inst <=> (branch_block_stmt_1353/bb_34_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_sources/type_cast_2236/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_34_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_sources/type_cast_2236/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_34_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_sources/type_cast_2236/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_34_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_sources/type_cast_2236/SplitProtocol/Update/ca)
  phi_stmt_2230 <=> (branch_block_stmt_1353/bb_35_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_req branch_block_stmt_1353/bb_34_bb_36_PhiReq/phi_stmt_2230/phi_stmt_2230_req) (branch_block_stmt_1353/merge_stmt_2229_PhiAck/phi_stmt_2230_ack)
  // 		->(scevgep5x_xi46) := ($bitcast ($float<8,23>) _f1.000000e+00 )
  //  file prog.linked.opt.aa, line 957
  // scevgep5x_xi46
  ptr_deref_2239_base_resize <=> (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_base_addr_resize/base_resize_ack)
  ptr_deref_2239_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_base_plus_offset/sum_rename_ack)
  ptr_deref_2239_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_word_addrgen/root_register_ack)
  ptr_deref_2239_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Sample/ptr_deref_2239_Split/split_req) (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Sample/ptr_deref_2239_Split/split_ack)
  ptr_deref_2239_store_0 <=> (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2242/ptr_deref_2239_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 959
  // ($cast ($uint<16>) xx_xpr84 )
  type_cast_2248_inst <=> (branch_block_stmt_1353/bb_36_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2248/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_36_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2248/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_36_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2248/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_36_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2248/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) xx_xpr85 )
  type_cast_2250_inst <=> (branch_block_stmt_1353/bb_33_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2250/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_33_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2250/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_33_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2250/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_33_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2250/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) xx_xpr87 )
  type_cast_2252_inst <=> (branch_block_stmt_1353/bb_32_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2252/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_32_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2252/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_32_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2252/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_32_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_sources/type_cast_2252/SplitProtocol/Update/ca)
  phi_stmt_2245 <=> (branch_block_stmt_1353/bb_36_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_req branch_block_stmt_1353/bb_33_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_req branch_block_stmt_1353/bb_32_bb_37_PhiReq/phi_stmt_2245/phi_stmt_2245_req) (branch_block_stmt_1353/merge_stmt_2244_PhiAck/phi_stmt_2245_ack)
  // 		indvarx_xnextx_xi47 := (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 962
  // (indvarx_xi44 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi44
  ADD_u64_u64_2258_inst <=> (branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/ADD_u64_u64_2258_Sample/rr branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/ADD_u64_u64_2258_Update/cr) (branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/ADD_u64_u64_2258_Sample/ra branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/ADD_u64_u64_2258_Update/ca)
  // 		exitcond16 := (indvarx_xnextx_xi47 == tmp4x_xi42)
  //  file prog.linked.opt.aa, line 963
  // (indvarx_xnextx_xi47 == tmp4x_xi42)
  // indvarx_xnextx_xi47
  // tmp4x_xi42
  EQ_u64_u1_2263_inst <=> (branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/EQ_u64_u1_2263_Sample/rr branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/EQ_u64_u1_2263_Update/cr) (branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/EQ_u64_u1_2263_Sample/ra branch_block_stmt_1353/assign_stmt_2259_to_assign_stmt_2264/EQ_u64_u1_2263_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 964
  if_stmt_2265_branch <=> (branch_block_stmt_1353/if_stmt_2265_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2265_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2265_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 969
  // ($cast ($uint<16>) xx_xpr )
  type_cast_2275_inst <=> (branch_block_stmt_1353/bb_37_checkIsdecodedx_xexit_PhiReq/phi_stmt_2272/phi_stmt_2272_sources/type_cast_2275/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_37_checkIsdecodedx_xexit_PhiReq/phi_stmt_2272/phi_stmt_2272_sources/type_cast_2275/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_37_checkIsdecodedx_xexit_PhiReq/phi_stmt_2272/phi_stmt_2272_sources/type_cast_2275/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_37_checkIsdecodedx_xexit_PhiReq/phi_stmt_2272/phi_stmt_2272_sources/type_cast_2275/SplitProtocol/Update/ca)
  phi_stmt_2272 <=> (branch_block_stmt_1353/bb_37_checkIsdecodedx_xexit_PhiReq/phi_stmt_2272/phi_stmt_2272_req) (branch_block_stmt_1353/merge_stmt_2271_PhiAck/phi_stmt_2272_ack)
  // 		iNsTr_130 := (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 972
  // (xx_xprx_xlcssa == ($bitcast ($uint<16>) _b0000000000000001  ))
  // xx_xprx_xlcssa
  EQ_u16_u1_2281_inst <=> (branch_block_stmt_1353/assign_stmt_2282/EQ_u16_u1_2281_Sample/rr branch_block_stmt_1353/assign_stmt_2282/EQ_u16_u1_2281_Update/cr) (branch_block_stmt_1353/assign_stmt_2282/EQ_u16_u1_2281_Sample/ra branch_block_stmt_1353/assign_stmt_2282/EQ_u16_u1_2281_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 973
  if_stmt_2283_branch <=> (branch_block_stmt_1353/if_stmt_2283_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2283_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2283_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 978
  // 		iNsTr_132 := nrows
  //  file prog.linked.opt.aa, line 980
  // nrows
  LOAD_nrows_2291_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Update/LOAD_nrows_2291_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Update/LOAD_nrows_2291_Merge/merge_ack)
  LOAD_nrows_2291_load_0 <=> (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/LOAD_nrows_2291_Update/word_access_complete/word_0/ca)
  // 		iNsTr_133 := (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 981
  // (iNsTr_132 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_132
  EQ_u16_u1_2297_inst <=> (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/EQ_u16_u1_2297_Sample/rr branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/EQ_u16_u1_2297_Update/cr) (branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/EQ_u16_u1_2297_Sample/ra branch_block_stmt_1353/assign_stmt_2292_to_assign_stmt_2298/EQ_u16_u1_2297_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 982
  if_stmt_2299_branch <=> (branch_block_stmt_1353/if_stmt_2299_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2299_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2299_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 987
  // 		iNsTr_136 := ($cast ($uint<32>) iNsTr_132 )
  //  file prog.linked.opt.aa, line 989
  // iNsTr_132
  // ($cast ($uint<32>) iNsTr_132 )
  type_cast_2308_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2308_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2308_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2308_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2308_Update/ca)
  // 		iNsTr_137 := (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 990
  // (iNsTr_136 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // iNsTr_136
  ADD_u32_u32_2314_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u32_u32_2314_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u32_u32_2314_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u32_u32_2314_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u32_u32_2314_Update/ca)
  // 		tmp7x_xi := (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 991
  // (iNsTr_132 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_132
  UGT_u16_u1_2320_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/UGT_u16_u1_2320_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/UGT_u16_u1_2320_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/UGT_u16_u1_2320_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/UGT_u16_u1_2320_Update/ca)
  // 		xx_xopx_xi32 := (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 992
  // (iNsTr_132 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_132
  ADD_u16_u16_2326_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2326_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2326_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2326_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2326_Update/ca)
  // 		iNsTr_138 := ($cast ($uint<64>) xx_xopx_xi32 )
  //  file prog.linked.opt.aa, line 993
  // xx_xopx_xi32
  // ($cast ($uint<64>) xx_xopx_xi32 )
  type_cast_2330_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2330_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2330_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2330_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2330_Update/ca)
  // 		xx_xop19x_xi := (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 994
  // (iNsTr_138 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_138
  ADD_u64_u64_2336_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2336_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2336_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2336_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2336_Update/ca)
  // 		tmp10x_xi := ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 995
  // tmp7x_xi
  // xx_xop19x_xi
  // ( $mux tmp7x_xi xx_xop19x_xi  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_2343_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/MUX_2343_start/req branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/MUX_2343_complete/req) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/MUX_2343_start/ack branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/MUX_2343_complete/ack)
  // 		xx_xneg1x_xi := (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 996
  // (iNsTr_66 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_66
  ADD_u16_u16_2349_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2349_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2349_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2349_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u16_u16_2349_Update/ca)
  // 		tmp := ($cast ($uint<64>) iNsTr_66 )
  //  file prog.linked.opt.aa, line 997
  // iNsTr_66
  // ($cast ($uint<64>) iNsTr_66 )
  type_cast_2353_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2353_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2353_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2353_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/type_cast_2353_Update/ca)
  // 		tmp7 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  //  file prog.linked.opt.aa, line 998
  // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  // tmp
  ADD_u64_u64_2359_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2359_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2359_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2359_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2359_Update/ca)
  // 		tmp10 := (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 999
  // (tmp + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // tmp
  ADD_u64_u64_2365_inst <=> (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2365_Sample/rr branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2365_Update/cr) (branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2365_Sample/ra branch_block_stmt_1353/assign_stmt_2309_to_assign_stmt_2366/ADD_u64_u64_2365_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1001
  // ($cast ($uint<64>) indvarx_xnextx_xi38 )
  type_cast_2375_inst <=> (branch_block_stmt_1353/xx_x_crit_edgex_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_sources/type_cast_2375/SplitProtocol/Sample/rr branch_block_stmt_1353/xx_x_crit_edgex_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_sources/type_cast_2375/SplitProtocol/Update/cr) (branch_block_stmt_1353/xx_x_crit_edgex_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_sources/type_cast_2375/SplitProtocol/Sample/ra branch_block_stmt_1353/xx_x_crit_edgex_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_sources/type_cast_2375/SplitProtocol/Update/ca)
  phi_stmt_2369 <=> (branch_block_stmt_1353/bbx_xnph4x_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_req branch_block_stmt_1353/xx_x_crit_edgex_xi_bb_41_PhiReq/phi_stmt_2369/phi_stmt_2369_req) (branch_block_stmt_1353/merge_stmt_2368_PhiAck/phi_stmt_2369_ack)
  // 		tmp8 := (tmp7 + indvarx_xi33)
  //  file prog.linked.opt.aa, line 1004
  // (tmp7 + indvarx_xi33)
  // tmp7
  // indvarx_xi33
  ADD_u64_u64_2380_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2380_Sample/rr branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2380_Update/cr) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2380_Sample/ra branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2380_Update/ca)
  // 		scevgep18x_xi := @(mem[tmp8])
  //  file prog.linked.opt.aa, line 1005
  // tmp8
  array_obj_ref_2384_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_index_resize_0/index_resize_ack)
  array_obj_ref_2384_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_index_scale_0/scale_rename_ack)
  array_obj_ref_2384_index_offset <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_final_index_sum_regn/ack)
  array_obj_ref_2384_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2384_base_plus_offset/sum_rename_ack)
  addr_of_2385_final_reg <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2385_request/req branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2385_complete/req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2385_request/ack branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2385_complete/ack)
  // 		tmp12x_xi := ($cast ($uint<32>) indvarx_xi33 )
  //  file prog.linked.opt.aa, line 1006
  // indvarx_xi33
  // ($cast ($uint<32>) indvarx_xi33 )
  type_cast_2389_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/type_cast_2389_Sample/rr branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/type_cast_2389_Update/cr) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/type_cast_2389_Sample/ra branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/type_cast_2389_Update/ca)
  // 		tmp11 := (tmp10 + indvarx_xi33)
  //  file prog.linked.opt.aa, line 1007
  // (tmp10 + indvarx_xi33)
  // tmp10
  // indvarx_xi33
  ADD_u64_u64_2394_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2394_Sample/rr branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2394_Update/cr) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2394_Sample/ra branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/ADD_u64_u64_2394_Update/ca)
  // 		scevgepx_xi34 := @(mem[tmp11])
  //  file prog.linked.opt.aa, line 1008
  // tmp11
  array_obj_ref_2398_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_index_resize_0/index_resize_ack)
  array_obj_ref_2398_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_index_scale_0/scale_rename_ack)
  array_obj_ref_2398_index_offset <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_final_index_sum_regn/ack)
  array_obj_ref_2398_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/array_obj_ref_2398_base_plus_offset/sum_rename_ack)
  addr_of_2399_final_reg <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2399_request/req branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2399_complete/req) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2399_request/ack branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/addr_of_2399_complete/ack)
  // 		iNsTr_140 := (tmp12x_xi == iNsTr_137)
  //  file prog.linked.opt.aa, line 1009
  // (tmp12x_xi == iNsTr_137)
  // tmp12x_xi
  // iNsTr_137
  EQ_u32_u1_2404_inst <=> (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/EQ_u32_u1_2404_Sample/rr branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/EQ_u32_u1_2404_Update/cr) (branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/EQ_u32_u1_2404_Sample/ra branch_block_stmt_1353/assign_stmt_2381_to_assign_stmt_2405/EQ_u32_u1_2404_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1010
  if_stmt_2406_branch <=> (branch_block_stmt_1353/if_stmt_2406_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2406_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2406_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1015
  // 		iNsTr_142 := ->(scevgepx_xi34)
  //  file prog.linked.opt.aa, line 1017
  // scevgepx_xi34
  ptr_deref_2415_base_resize <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_base_addr_resize/base_resize_ack)
  ptr_deref_2415_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_base_plus_offset/sum_rename_ack)
  ptr_deref_2415_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_word_addrgen/root_register_ack)
  ptr_deref_2415_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Update/ptr_deref_2415_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Update/ptr_deref_2415_Merge/merge_ack)
  ptr_deref_2415_load_0 <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/ptr_deref_2415_Update/word_access_complete/word_0/ca)
  // 		iNsTr_143 := (xx_xneg1x_xi - iNsTr_142)
  //  file prog.linked.opt.aa, line 1018
  // (xx_xneg1x_xi - iNsTr_142)
  // xx_xneg1x_xi
  // iNsTr_142
  SUB_u16_u16_2420_inst <=> (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/SUB_u16_u16_2420_Sample/rr branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/SUB_u16_u16_2420_Update/cr) (branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/SUB_u16_u16_2420_Sample/ra branch_block_stmt_1353/assign_stmt_2416_to_assign_stmt_2421/SUB_u16_u16_2420_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1020
  // 		iNsTr_145 := ->(scevgepx_xi34)
  //  file prog.linked.opt.aa, line 1022
  // scevgepx_xi34
  ptr_deref_2426_base_resize <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_base_addr_resize/base_resize_ack)
  ptr_deref_2426_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_base_plus_offset/sum_rename_ack)
  ptr_deref_2426_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_word_addrgen/root_register_ack)
  ptr_deref_2426_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Update/ptr_deref_2426_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Update/ptr_deref_2426_Merge/merge_ack)
  ptr_deref_2426_load_0 <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2426_Update/word_access_complete/word_0/ca)
  // 		iNsTr_146 := ->(scevgep18x_xi)
  //  file prog.linked.opt.aa, line 1023
  // scevgep18x_xi
  ptr_deref_2430_base_resize <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_base_addr_resize/base_resize_ack)
  ptr_deref_2430_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_base_plus_offset/sum_rename_ack)
  ptr_deref_2430_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_word_addrgen/root_register_ack)
  ptr_deref_2430_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Update/ptr_deref_2430_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Update/ptr_deref_2430_Merge/merge_ack)
  ptr_deref_2430_load_0 <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/ptr_deref_2430_Update/word_access_complete/word_0/ca)
  // 		iNsTr_147 := (iNsTr_146 - iNsTr_145)
  //  file prog.linked.opt.aa, line 1024
  // (iNsTr_146 - iNsTr_145)
  // iNsTr_146
  // iNsTr_145
  SUB_u16_u16_2435_inst <=> (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/SUB_u16_u16_2435_Sample/rr branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/SUB_u16_u16_2435_Update/cr) (branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/SUB_u16_u16_2435_Sample/ra branch_block_stmt_1353/assign_stmt_2427_to_assign_stmt_2436/SUB_u16_u16_2435_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1026
  // ($cast ($uint<16>) iNsTr_142 )
  type_cast_2442_inst <=> (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2442/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2442/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2442/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2442/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_145 )
  type_cast_2444_inst <=> (branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2444/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2444/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2444/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_sources/type_cast_2444/SplitProtocol/Update/ca)
  phi_stmt_2439 <=> (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_req branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2439/phi_stmt_2439_req) (branch_block_stmt_1353/merge_stmt_2438_PhiAck/phi_stmt_2439_ack)
  // ($cast ($uint<16>) iNsTr_143 )
  type_cast_2448_inst <=> (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2448/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2448/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2448/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2448/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_147 )
  type_cast_2450_inst <=> (branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2450/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2450/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2450/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_sources/type_cast_2450/SplitProtocol/Update/ca)
  phi_stmt_2445 <=> (branch_block_stmt_1353/bb_42_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_req branch_block_stmt_1353/bb_43_bb_44_PhiReq/phi_stmt_2445/phi_stmt_2445_req) (branch_block_stmt_1353/merge_stmt_2438_PhiAck/phi_stmt_2445_ack)
  // 		iNsTr_150 := (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1030
  // (rangex_x0x_xi == ($bitcast ($uint<16>) _b0000000000000000  ))
  // rangex_x0x_xi
  EQ_u16_u1_2456_inst <=> (branch_block_stmt_1353/assign_stmt_2457/EQ_u16_u1_2456_Sample/rr branch_block_stmt_1353/assign_stmt_2457/EQ_u16_u1_2456_Update/cr) (branch_block_stmt_1353/assign_stmt_2457/EQ_u16_u1_2456_Sample/ra branch_block_stmt_1353/assign_stmt_2457/EQ_u16_u1_2456_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1031
  if_stmt_2458_branch <=> (branch_block_stmt_1353/if_stmt_2458_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2458_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2458_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1036
  // 		tmpx_xi35 := (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1038
  // (iNsTr_149 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_149
  ADD_u16_u16_2469_inst <=> (branch_block_stmt_1353/assign_stmt_2470/ADD_u16_u16_2469_Sample/rr branch_block_stmt_1353/assign_stmt_2470/ADD_u16_u16_2469_Update/cr) (branch_block_stmt_1353/assign_stmt_2470/ADD_u16_u16_2469_Sample/ra branch_block_stmt_1353/assign_stmt_2470/ADD_u16_u16_2469_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1040
  // ($cast ($uint<16>) iNsTr_168 )
  type_cast_2479_inst <=> (branch_block_stmt_1353/bb_46_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_sources/type_cast_2479/SplitProtocol/Sample/rr branch_block_stmt_1353/bb_46_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_sources/type_cast_2479/SplitProtocol/Update/cr) (branch_block_stmt_1353/bb_46_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_sources/type_cast_2479/SplitProtocol/Sample/ra branch_block_stmt_1353/bb_46_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_sources/type_cast_2479/SplitProtocol/Update/ca)
  phi_stmt_2473 <=> (branch_block_stmt_1353/bbx_xnphx_xi36_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_req branch_block_stmt_1353/bb_46_bb_46_PhiReq/phi_stmt_2473/phi_stmt_2473_req) (branch_block_stmt_1353/merge_stmt_2472_PhiAck/phi_stmt_2473_ack)
  // 		tmp6x_xi := (tmpx_xi35 + colx_x02x_xi)
  //  file prog.linked.opt.aa, line 1043
  // (tmpx_xi35 + colx_x02x_xi)
  // tmpx_xi35
  // colx_x02x_xi
  ADD_u16_u16_2484_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2484_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2484_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2484_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2484_Update/ca)
  // 		iNsTr_155 := ($cast ($uint<64>) tmp6x_xi )
  //  file prog.linked.opt.aa, line 1044
  // tmp6x_xi
  // ($cast ($uint<64>) tmp6x_xi )
  type_cast_2488_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2488_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2488_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2488_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2488_Update/ca)
  // 		iNsTr_156 := (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 1045
  // (iNsTr_155 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // iNsTr_155
  ADD_u64_u64_2494_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u64_u64_2494_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u64_u64_2494_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u64_u64_2494_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u64_u64_2494_Update/ca)
  // 		iNsTr_157 := @(mem[iNsTr_156])
  //  file prog.linked.opt.aa, line 1046
  // iNsTr_156
  array_obj_ref_2498_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_index_resize_0/index_resize_ack)
  array_obj_ref_2498_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_index_scale_0/scale_rename_ack)
  array_obj_ref_2498_index_offset <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_final_index_sum_regn/ack)
  array_obj_ref_2498_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2498_base_plus_offset/sum_rename_ack)
  addr_of_2499_final_reg <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2499_request/req branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2499_complete/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2499_request/ack branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2499_complete/ack)
  // 		iNsTr_158 := ->(iNsTr_157)
  //  file prog.linked.opt.aa, line 1047
  // iNsTr_157
  ptr_deref_2503_base_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_base_addr_resize/base_resize_ack)
  ptr_deref_2503_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_base_plus_offset/sum_rename_ack)
  ptr_deref_2503_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_word_addrgen/root_register_ack)
  ptr_deref_2503_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Update/ptr_deref_2503_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Update/ptr_deref_2503_Merge/merge_ack)
  ptr_deref_2503_load_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2503_Update/word_access_complete/word_0/ca)
  // 		iNsTr_159 := (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1048
  // (iNsTr_158 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_158
  ADD_u16_u16_2509_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2509_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2509_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2509_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2509_Update/ca)
  // 		iNsTr_160 := ($cast ($uint<64>) iNsTr_159 )
  //  file prog.linked.opt.aa, line 1049
  // iNsTr_159
  // ($cast ($uint<64>) iNsTr_159 )
  type_cast_2513_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2513_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2513_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2513_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/type_cast_2513_Update/ca)
  // 		iNsTr_161 := @(aPosteriori[iNsTr_160])
  //  file prog.linked.opt.aa, line 1050
  // iNsTr_160
  array_obj_ref_2517_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_index_resize_0/index_resize_ack)
  array_obj_ref_2517_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_index_scale_0/scale_rename_ack)
  array_obj_ref_2517_index_offset <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_final_index_sum_regn/ack)
  array_obj_ref_2517_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2517_base_plus_offset/sum_rename_ack)
  addr_of_2518_final_reg <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2518_request/req branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2518_complete/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2518_request/ack branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2518_complete/ack)
  // 		iNsTr_162 := ->(iNsTr_161)
  //  file prog.linked.opt.aa, line 1051
  // iNsTr_161
  ptr_deref_2522_base_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_base_addr_resize/base_resize_ack)
  ptr_deref_2522_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_base_plus_offset/sum_rename_ack)
  ptr_deref_2522_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_word_addrgen/root_register_ack)
  ptr_deref_2522_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Update/ptr_deref_2522_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Update/ptr_deref_2522_Merge/merge_ack)
  ptr_deref_2522_load_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2522_Update/word_access_complete/word_0/ca)
  // 		iNsTr_163 := @(ext_info[iNsTr_155])
  //  file prog.linked.opt.aa, line 1052
  // iNsTr_155
  array_obj_ref_2526_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_index_resize_0/index_resize_ack)
  array_obj_ref_2526_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_index_scale_0/scale_rename_ack)
  array_obj_ref_2526_index_offset <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_final_index_sum_regn/ack)
  array_obj_ref_2526_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2526_base_plus_offset/sum_rename_ack)
  addr_of_2527_final_reg <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2527_request/req branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2527_complete/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2527_request/ack branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2527_complete/ack)
  // 		iNsTr_164 := ->(iNsTr_163)
  //  file prog.linked.opt.aa, line 1053
  // iNsTr_163
  ptr_deref_2531_base_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_base_addr_resize/base_resize_ack)
  ptr_deref_2531_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_base_plus_offset/sum_rename_ack)
  ptr_deref_2531_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_word_addrgen/root_register_ack)
  ptr_deref_2531_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Update/ptr_deref_2531_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Update/ptr_deref_2531_Merge/merge_ack)
  ptr_deref_2531_load_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2531_Update/word_access_complete/word_0/ca)
  // 		iNsTr_165 := (iNsTr_162 - iNsTr_164)
  //  file prog.linked.opt.aa, line 1054
  // (iNsTr_162 - iNsTr_164)
  // iNsTr_162
  // iNsTr_164
  SUB_f32_f32_2536_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/SUB_f32_f32_2536_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/SUB_f32_f32_2536_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/SUB_f32_f32_2536_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/SUB_f32_f32_2536_Update/ca)
  // 		iNsTr_166 := @(message[iNsTr_155])
  //  file prog.linked.opt.aa, line 1055
  // iNsTr_155
  array_obj_ref_2540_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_index_resize_0/index_resize_ack)
  array_obj_ref_2540_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_index_scale_0/scale_rename_ack)
  array_obj_ref_2540_index_offset <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_final_index_sum_regn/ack)
  array_obj_ref_2540_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/array_obj_ref_2540_base_plus_offset/sum_rename_ack)
  addr_of_2541_final_reg <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2541_request/req branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2541_complete/req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2541_request/ack branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/addr_of_2541_complete/ack)
  // 		->(iNsTr_166) := iNsTr_165
  //  file prog.linked.opt.aa, line 1056
  // iNsTr_165
  // iNsTr_166
  ptr_deref_2544_base_resize <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_base_addr_resize/base_resize_ack)
  ptr_deref_2544_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_base_plus_offset/sum_rename_ack)
  ptr_deref_2544_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_word_addrgen/root_register_ack)
  ptr_deref_2544_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Sample/ptr_deref_2544_Split/split_req) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Sample/ptr_deref_2544_Split/split_ack)
  ptr_deref_2544_store_0 <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ptr_deref_2544_Update/word_access_complete/word_0/ca)
  // 		iNsTr_168 := (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1057
  // (colx_x02x_xi + ($bitcast ($uint<16>) _b0000000000000001  ))
  // colx_x02x_xi
  ADD_u16_u16_2551_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2551_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2551_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2551_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/ADD_u16_u16_2551_Update/ca)
  // 		exitcond5 := (iNsTr_168 == rangex_x0x_xi)
  //  file prog.linked.opt.aa, line 1058
  // (iNsTr_168 == rangex_x0x_xi)
  // iNsTr_168
  // rangex_x0x_xi
  EQ_u16_u1_2556_inst <=> (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/EQ_u16_u1_2556_Sample/rr branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/EQ_u16_u1_2556_Update/cr) (branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/EQ_u16_u1_2556_Sample/ra branch_block_stmt_1353/assign_stmt_2485_to_assign_stmt_2557/EQ_u16_u1_2556_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1059
  if_stmt_2558_branch <=> (branch_block_stmt_1353/if_stmt_2558_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2558_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2558_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1064
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1067
  // 		indvarx_xnextx_xi38 := (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1069
  // (indvarx_xi33 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi33
  ADD_u64_u64_2571_inst <=> (branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/ADD_u64_u64_2571_Sample/rr branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/ADD_u64_u64_2571_Update/cr) (branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/ADD_u64_u64_2571_Sample/ra branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/ADD_u64_u64_2571_Update/ca)
  // 		exitcond6 := (indvarx_xnextx_xi38 == tmp10x_xi)
  //  file prog.linked.opt.aa, line 1070
  // (indvarx_xnextx_xi38 == tmp10x_xi)
  // indvarx_xnextx_xi38
  // tmp10x_xi
  EQ_u64_u1_2576_inst <=> (branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/EQ_u64_u1_2576_Sample/rr branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/EQ_u64_u1_2576_Update/cr) (branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/EQ_u64_u1_2576_Sample/ra branch_block_stmt_1353/assign_stmt_2572_to_assign_stmt_2577/EQ_u64_u1_2576_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1071
  if_stmt_2578_branch <=> (branch_block_stmt_1353/if_stmt_2578_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2578_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2578_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1076
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1079
  // 		indvarx_xnext := (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1081
  // (indvar18 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // indvar18
  ADD_u16_u16_2591_inst <=> (branch_block_stmt_1353/assign_stmt_2592/ADD_u16_u16_2591_Sample/rr branch_block_stmt_1353/assign_stmt_2592/ADD_u16_u16_2591_Update/cr) (branch_block_stmt_1353/assign_stmt_2592/ADD_u16_u16_2591_Sample/ra branch_block_stmt_1353/assign_stmt_2592/ADD_u16_u16_2591_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1083
  // ($cast ($uint<16>) indvar )
  type_cast_2598_inst <=> (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2598/SplitProtocol/Sample/rr branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2598/SplitProtocol/Update/cr) (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2598/SplitProtocol/Sample/ra branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2598/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) indvar )
  type_cast_2600_inst <=> (branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2600/SplitProtocol/Sample/rr branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2600/SplitProtocol/Update/cr) (branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2600/SplitProtocol/Sample/ra branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_sources/type_cast_2600/SplitProtocol/Update/ca)
  phi_stmt_2595 <=> (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_req branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2595/phi_stmt_2595_req) (branch_block_stmt_1353/merge_stmt_2594_PhiAck/phi_stmt_2595_ack)
  // ($cast ($uint<16>) iNsTr_83 )
  type_cast_2604_inst <=> (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2604/SplitProtocol/Sample/rr branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2604/SplitProtocol/Update/cr) (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2604/SplitProtocol/Sample/ra branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2604/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_27 )
  type_cast_2606_inst <=> (branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2606/SplitProtocol/Sample/rr branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2606/SplitProtocol/Update/cr) (branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2606/SplitProtocol/Sample/ra branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_sources/type_cast_2606/SplitProtocol/Update/ca)
  phi_stmt_2601 <=> (branch_block_stmt_1353/checkIsdecodedx_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_req branch_block_stmt_1353/initializeMessagex_xexit_checkIsdecodedx_xexitx_xthread_PhiReq/phi_stmt_2601/phi_stmt_2601_req) (branch_block_stmt_1353/merge_stmt_2594_PhiAck/phi_stmt_2601_ack)
  // 		Nitr_required := indvarx_xlcssa
  //  file prog.linked.opt.aa, line 1087
  // indvarx_xlcssa
  // Nitr_required
  STORE_Nitr_required_2608_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Sample/STORE_Nitr_required_2608_Split/split_req) (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Sample/STORE_Nitr_required_2608_Split/split_ack)
  STORE_Nitr_required_2608_store_0 <=> (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/STORE_Nitr_required_2608_Update/word_access_complete/word_0/ca)
  // 		iNsTr_43 := (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1088
  // (xx_xpr62 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // xx_xpr62
  EQ_u16_u1_2615_inst <=> (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/EQ_u16_u1_2615_Sample/rr branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/EQ_u16_u1_2615_Update/cr) (branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/EQ_u16_u1_2615_Sample/ra branch_block_stmt_1353/assign_stmt_2610_to_assign_stmt_2616/EQ_u16_u1_2615_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1089
  if_stmt_2617_branch <=> (branch_block_stmt_1353/if_stmt_2617_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2617_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2617_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1094
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1097
  // ($cast ($uint<64>) tmp82 )
  type_cast_2629_inst <=> (branch_block_stmt_1353/bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_sources/type_cast_2629/SplitProtocol/Sample/rr branch_block_stmt_1353/bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_sources/type_cast_2629/SplitProtocol/Update/cr) (branch_block_stmt_1353/bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_sources/type_cast_2629/SplitProtocol/Sample/ra branch_block_stmt_1353/bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_sources/type_cast_2629/SplitProtocol/Update/ca)
  phi_stmt_2626 <=> (branch_block_stmt_1353/bbx_xnphx_xi13_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_req branch_block_stmt_1353/bbx_xnphx_xi13x_xpreheader_bbx_xnphx_xi13_PhiReq/phi_stmt_2626/phi_stmt_2626_req) (branch_block_stmt_1353/merge_stmt_2625_PhiAck/phi_stmt_2626_ack)
  // 		scevgepx_xi11 := @(code_block[indvarx_xi10])
  //  file prog.linked.opt.aa, line 1100
  // indvarx_xi10
  array_obj_ref_2636_index_0_resize <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_index_resize_0/index_resize_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_index_resize_0/index_resize_ack)
  array_obj_ref_2636_index_0_rename <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_index_scale_0/scale_rename_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_index_scale_0/scale_rename_ack)
  array_obj_ref_2636_index_offset <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_final_index_sum_regn/req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_final_index_sum_regn/ack)
  array_obj_ref_2636_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/array_obj_ref_2636_base_plus_offset/sum_rename_ack)
  addr_of_2637_final_reg <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/addr_of_2637_request/req branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/addr_of_2637_complete/req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/addr_of_2637_request/ack branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/addr_of_2637_complete/ack)
  // 		tmp1 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1101
  // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi10
  ADD_u64_u64_2643_inst <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2643_Sample/rr branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2643_Update/cr) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2643_Sample/ra branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2643_Update/ca)
  // 		tmp2x_xi := ($cast ($uint<32>) tmp1 )
  //  file prog.linked.opt.aa, line 1102
  // tmp1
  // ($cast ($uint<32>) tmp1 )
  type_cast_2647_inst <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/type_cast_2647_Sample/rr branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/type_cast_2647_Update/cr) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/type_cast_2647_Sample/ra branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/type_cast_2647_Update/ca)
  // 		tmp82 := (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1103
  // (indvarx_xi10 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvarx_xi10
  ADD_u64_u64_2653_inst <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2653_Sample/rr branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2653_Update/cr) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2653_Sample/ra branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ADD_u64_u64_2653_Update/ca)
  // 		iNsTr_74 := ->(scevgepx_xi11)
  //  file prog.linked.opt.aa, line 1104
  // scevgepx_xi11
  ptr_deref_2657_base_resize <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_base_addr_resize/base_resize_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_base_addr_resize/base_resize_ack)
  ptr_deref_2657_root_address_inst <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_base_plus_offset/sum_rename_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_base_plus_offset/sum_rename_ack)
  ptr_deref_2657_addr_0 <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_word_addrgen/root_register_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_word_addrgen/root_register_ack)
  ptr_deref_2657_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Update/ptr_deref_2657_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Update/ptr_deref_2657_Merge/merge_ack)
  ptr_deref_2657_load_0 <=> (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2638_to_assign_stmt_2658/ptr_deref_2657_Update/word_access_complete/word_0/ca)
  // 		code_block_decoded := iNsTr_74
  //  file prog.linked.opt.aa, line 1105
  // iNsTr_74
  // code_block_decoded
  WPIPE_code_block_decoded_2659_inst <=> (branch_block_stmt_1353/assign_stmt_2661/WPIPE_code_block_decoded_2659_Sample/req branch_block_stmt_1353/assign_stmt_2661/WPIPE_code_block_decoded_2659_Update/req) (branch_block_stmt_1353/assign_stmt_2661/WPIPE_code_block_decoded_2659_Sample/ack branch_block_stmt_1353/assign_stmt_2661/WPIPE_code_block_decoded_2659_Update/ack)
  // 		iNsTr_77 := ncols
  //  file prog.linked.opt.aa, line 1106
  // ncols
  LOAD_ncols_2663_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Update/LOAD_ncols_2663_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Update/LOAD_ncols_2663_Merge/merge_ack)
  LOAD_ncols_2663_load_0 <=> (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/LOAD_ncols_2663_Update/word_access_complete/word_0/ca)
  // 		iNsTr_78 := ($cast ($uint<32>) iNsTr_77 )
  //  file prog.linked.opt.aa, line 1107
  // iNsTr_77
  // ($cast ($uint<32>) iNsTr_77 )
  type_cast_2667_inst <=> (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/type_cast_2667_Sample/rr branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/type_cast_2667_Update/cr) (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/type_cast_2667_Sample/ra branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/type_cast_2667_Update/ca)
  // 		iNsTr_79 := (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
  //  file prog.linked.opt.aa, line 1108
  // (($bitcast ($int<32>) tmp2x_xi ) < ($bitcast ($int<32>) iNsTr_78 ))
  // tmp2x_xi
  // iNsTr_78
  SLT_i32_u1_2675_inst <=> (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/SLT_i32_u1_2675_Sample/rr branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/SLT_i32_u1_2675_Update/cr) (branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/SLT_i32_u1_2675_Sample/ra branch_block_stmt_1353/assign_stmt_2664_to_assign_stmt_2676/SLT_i32_u1_2675_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1109
  if_stmt_2677_branch <=> (branch_block_stmt_1353/if_stmt_2677_eval_test/branch_req) (branch_block_stmt_1353/if_stmt_2677_else_link/else_choice_transition branch_block_stmt_1353/if_stmt_2677_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1114
  // 		xx_xpre := Nitr_required
  //  file prog.linked.opt.aa, line 1116
  // Nitr_required
  LOAD_Nitr_required_2685_gather_scatter <=> (branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Update/LOAD_Nitr_required_2685_Merge/merge_req) (branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Update/LOAD_Nitr_required_2685_Merge/merge_ack)
  LOAD_Nitr_required_2685_load_0 <=> (branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Sample/word_access_start/word_0/rr branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Update/word_access_complete/word_0/cr) (branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Sample/word_access_start/word_0/ra branch_block_stmt_1353/assign_stmt_2686/LOAD_Nitr_required_2685_Update/word_access_complete/word_0/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1118
  // ($cast ($uint<16>) xx_xpre )
  type_cast_2692_inst <=> (branch_block_stmt_1353/send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2692/SplitProtocol/Sample/rr branch_block_stmt_1353/send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2692/SplitProtocol/Update/cr) (branch_block_stmt_1353/send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2692/SplitProtocol/Sample/ra branch_block_stmt_1353/send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2692/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) indvarx_xlcssa17 )
  type_cast_2694_inst <=> (branch_block_stmt_1353/checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2694/SplitProtocol/Sample/rr branch_block_stmt_1353/checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2694/SplitProtocol/Update/cr) (branch_block_stmt_1353/checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2694/SplitProtocol/Sample/ra branch_block_stmt_1353/checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2694/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) indvarx_xlcssa )
  type_cast_2696_inst <=> (branch_block_stmt_1353/checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2696/SplitProtocol/Sample/rr branch_block_stmt_1353/checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2696/SplitProtocol/Update/cr) (branch_block_stmt_1353/checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2696/SplitProtocol/Sample/ra branch_block_stmt_1353/checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_sources/type_cast_2696/SplitProtocol/Update/ca)
  phi_stmt_2689 <=> (branch_block_stmt_1353/send_outputx_xexitx_xloopexit_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_req branch_block_stmt_1353/checkIsdecodedx_xexitx_xthreadx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_req branch_block_stmt_1353/checkIsdecodedx_xexitx_xthread_send_outputx_xexit_PhiReq/phi_stmt_2689/phi_stmt_2689_req) (branch_block_stmt_1353/merge_stmt_2688_PhiAck/phi_stmt_2689_ack)
  // 		nitr_required := iNsTr_55
  //  file prog.linked.opt.aa, line 1121
  // iNsTr_55
  // nitr_required
  WPIPE_nitr_required_2698_inst <=> (branch_block_stmt_1353/assign_stmt_2700/WPIPE_nitr_required_2698_Sample/req branch_block_stmt_1353/assign_stmt_2700/WPIPE_nitr_required_2698_Update/req) (branch_block_stmt_1353/assign_stmt_2700/WPIPE_nitr_required_2698_Sample/ack branch_block_stmt_1353/assign_stmt_2700/WPIPE_nitr_required_2698_Update/ack)
}
$module [readCodeBlock] 
{
  // pipe-declarations for block %readCodeBlock
  //  file prog.linked.opt.aa, line 1125
  // pipe-declarations for block %readCodeBlock%body
  //  file prog.linked.opt.aa, line 1130
  // pipe-declarations for block %readCodeBlock%body%
  //  file prog.linked.opt.aa, line 1139
  // pipe-declarations for block %readCodeBlock%body%
  //  file prog.linked.opt.aa, line 1142
  // pipe-declarations for block %readCodeBlock%body%
  //  file prog.linked.opt.aa, line 1165
  // pipe-declarations for block %readCodeBlock%body%
  //  file prog.linked.opt.aa, line 1168
  // pipe-declarations for block %readCodeBlock%body%
  //  file prog.linked.opt.aa, line 1171
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2705] // Branch Block  file prog.linked.opt.aa, line 1130
    {
      $P [branch_block_stmt_2705__entry__]
      branch_block_stmt_2705__entry__ <-| ($entry)
      $P [branch_block_stmt_2705__exit__]
      branch_block_stmt_2705__exit__ |-> ($exit)
      $P [assign_stmt_2708_to_assign_stmt_2714__entry__] 
      $P [assign_stmt_2708_to_assign_stmt_2714__exit__] 
      $P [if_stmt_2715__entry__] 
      $P [if_stmt_2715__exit__] 
      $P [merge_stmt_2721__entry__] 
      $P [merge_stmt_2721__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_2723__exit__] 
      $P [do_while_stmt_2730__entry__] 
      $P [do_while_stmt_2730__exit__] 
      $P [if_stmt_2788__entry__] 
      $P [if_stmt_2788__exit__] 
      $P [merge_stmt_2792__entry__] 
      $P [merge_stmt_2792__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_2794__exit__] 
      $P [return__]
      $P [merge_stmt_2796__exit__] 
      ::[assign_stmt_2708_to_assign_stmt_2714] 
      {
        // start:  		iNsTr_0 := ncols
        //  file prog.linked.opt.aa, line 1132
        // Source expression
        // ncols
        $T[LOAD_ncols_2707_sample_start_] 
        $T[LOAD_ncols_2707_sample_completed_] 
        $T[LOAD_ncols_2707_update_start_] 
        $T[LOAD_ncols_2707_update_completed_] 
        $T[LOAD_ncols_2707_word_address_calculated] 
        $T[LOAD_ncols_2707_root_address_calculated] 
        LOAD_ncols_2707_word_address_calculated <-& (LOAD_ncols_2707_root_address_calculated)
        ;;[LOAD_ncols_2707_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_2707_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_2707_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_2707_sample_start_ <-& (LOAD_ncols_2707_word_address_calculated)
        LOAD_ncols_2707_sample_start_ &-> (LOAD_ncols_2707_Sample)
        LOAD_ncols_2707_sample_completed_ <-& (LOAD_ncols_2707_Sample)
        LOAD_ncols_2707_sample_completed_ &-> ($null)
        LOAD_ncols_2707_update_start_ &-> (LOAD_ncols_2707_Update)
        LOAD_ncols_2707_update_completed_ <-& (LOAD_ncols_2707_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncols
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1133
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2713_sample_start_] 
        $T[EQ_u16_u1_2713_sample_completed_] 
        $T[EQ_u16_u1_2713_update_start_] 
        $T[EQ_u16_u1_2713_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2713_sample_start_
        EQ_u16_u1_2713_sample_start_ <-& (LOAD_ncols_2707_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2713_sample_start_
        ;;[EQ_u16_u1_2713_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2713_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2713_sample_start_ &-> (EQ_u16_u1_2713_Sample)
        EQ_u16_u1_2713_sample_completed_ <-& (EQ_u16_u1_2713_Sample)
        EQ_u16_u1_2713_sample_completed_ &-> ($null)
        EQ_u16_u1_2713_update_start_ &-> (EQ_u16_u1_2713_Update)
        EQ_u16_u1_2713_update_completed_ <-& (EQ_u16_u1_2713_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2708_to_assign_stmt_2714__entry__ |-> (assign_stmt_2708_to_assign_stmt_2714)
      assign_stmt_2708_to_assign_stmt_2714__exit__ <-| (assign_stmt_2708_to_assign_stmt_2714)
      // if-statement  
      //  file prog.linked.opt.aa, line 1134
      ;;[if_stmt_2715_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2715__entry__ |-> (if_stmt_2715_dead_link)
      if_stmt_2715__exit__ <-| (if_stmt_2715_dead_link)
      ;;[if_stmt_2715_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2715__entry__ |-> (if_stmt_2715_eval_test)
      $P [R_iNsTr_1_2716_place]
      R_iNsTr_1_2716_place <-| (if_stmt_2715_eval_test)
      ;;[if_stmt_2715_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2715_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_2716_place |-> (if_stmt_2715_if_link if_stmt_2715_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_2715_if_link)
      $P [bb_0_bbx_xnphx_xpreheader]
      bb_0_bbx_xnphx_xpreheader <-| (if_stmt_2715_else_link)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 1145
      <o> [do_while_stmt_2730]  $depth 16 $buffering 2 
      {
        $P[do_while_stmt_2730__entry__] 
        $P[do_while_stmt_2730__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2730_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          aggregated_phi_update_req &-> (condition_evaluated)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  PHI statement phi_stmt_2732
          // 			$phi iNsTr_5 := 			  ($cast ($uint<8>) iNsTr_12 ) $on $loopback			  iNsTr_5_at_entry $on $entry // type of target is $uint<8>
          $T[phi_stmt_2732_sample_start_] 
          $T[phi_stmt_2732_sample_completed_] 
          $T[phi_stmt_2732_update_start_] 
          $T[phi_stmt_2732_update_completed_] 
          $T[phi_stmt_2732_sample_start__ps] 
          aggregated_phi_sample_req <-& (phi_stmt_2732_sample_start_)
          phi_stmt_2732_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2732_sample_completed__ps] 
          phi_stmt_2732_sample_completed__ps &-> (aggregated_phi_sample_ack)
          aggregated_phi_sample_ack &-> (phi_stmt_2732_sample_completed_)
          $T[phi_stmt_2732_update_start__ps] 
          aggregated_phi_update_req <-& (phi_stmt_2732_update_start_)
          phi_stmt_2732_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2732_update_completed__ps] 
          phi_stmt_2732_update_completed__ps &-> (aggregated_phi_update_ack)
          aggregated_phi_update_ack &-> (phi_stmt_2732_update_completed_)
          $T[phi_stmt_2732_loopback_trigger] 
          phi_stmt_2732_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2732_loopback_sample_req] 
          $T[phi_stmt_2732_entry_trigger] 
          phi_stmt_2732_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2732_entry_sample_req] 
          phi_stmt_2732_update_start_ o<-& (phi_stmt_2732_update_completed_ 0)
          phi_stmt_2732_sample_start_ o<-& (phi_stmt_2732_sample_completed_ 1)
          $T[phi_stmt_2732_merged_reqs] 
          $T[phi_stmt_2732_entry_sample_req__merge_in] 
          phi_stmt_2732_entry_sample_req__merge_in <-& (phi_stmt_2732_entry_sample_req)
          $T[phi_stmt_2732_loopback_sample_req__merge_in] 
          phi_stmt_2732_loopback_sample_req__merge_in <-& (phi_stmt_2732_loopback_sample_req)
          $transitionmerge [phi_stmt_2732_req_merge] (phi_stmt_2732_entry_sample_req__merge_in phi_stmt_2732_loopback_sample_req__merge_in) (phi_stmt_2732_merged_reqs)
          phi_stmt_2732_merged_reqs &-> ($null)
          $T[phi_stmt_2732_phi_mux_ack] 
          $T[phi_stmt_2732_phi_mux_ack_ps] 
          phi_stmt_2732_phi_mux_ack_ps <-& (phi_stmt_2732_phi_mux_ack)
          $T[type_cast_2735_sample_start__ps] 
          $T[type_cast_2735_sample_completed__ps] 
          $T[type_cast_2735_update_start__ps] 
          $T[type_cast_2735_update_completed__ps] 
          // source expression in Phi alternative 0
          // ($cast ($uint<8>) iNsTr_12 )
          $T[type_cast_2735_sample_start_] 
          $T[type_cast_2735_sample_completed_] 
          $T[type_cast_2735_update_start_] 
          $T[type_cast_2735_update_completed_] 
          // iNsTr_12
          // start: Forward dependencies from iNsTr_12 to transition type_cast_2735_sample_start_
          // done: Forward dependencies from iNsTr_12 to transition type_cast_2735_sample_start_
          ;;[type_cast_2735_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2735_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2735_sample_start_ &-> (type_cast_2735_Sample)
          type_cast_2735_sample_completed_ <-& (type_cast_2735_Sample)
          type_cast_2735_sample_completed_ &-> ($null)
          type_cast_2735_update_start_ &-> (type_cast_2735_Update)
          type_cast_2735_update_completed_ <-& (type_cast_2735_Update)
          // RAW reenables for iNsTr_12
          // self-release: 
          type_cast_2735_sample_start_ o<-& (type_cast_2735_sample_completed_ 1)
          type_cast_2735_update_start_ o<-& (type_cast_2735_update_completed_ 0)
          // Phi start dependency
          type_cast_2735_sample_start_ <-& (type_cast_2735_sample_start__ps)
          type_cast_2735_update_start_ <-& (type_cast_2735_update_start__ps)
          // RAW reenables for ($cast ($uint<8>) iNsTr_12 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          type_cast_2735_sample_completed__ps <-& (type_cast_2735_sample_completed_)
          type_cast_2735_update_completed__ps <-& (type_cast_2735_update_completed_)
          $T[R_iNsTr_5_at_entry_2736_sample_start__ps] 
          $T[R_iNsTr_5_at_entry_2736_sample_completed__ps] 
          $T[R_iNsTr_5_at_entry_2736_update_start__ps] 
          $T[R_iNsTr_5_at_entry_2736_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_iNsTr_5_at_entry_2736_sample_start_] 
          $T[R_iNsTr_5_at_entry_2736_sample_completed_] 
          $T[R_iNsTr_5_at_entry_2736_update_start_] 
          $T[R_iNsTr_5_at_entry_2736_update_completed_] 
          ;;[R_iNsTr_5_at_entry_2736_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_iNsTr_5_at_entry_2736_sample_start_ &-> (R_iNsTr_5_at_entry_2736_Sample)
          R_iNsTr_5_at_entry_2736_sample_completed_ <-& (R_iNsTr_5_at_entry_2736_Sample)
          ;;[R_iNsTr_5_at_entry_2736_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_iNsTr_5_at_entry_2736_update_start_ &-> (R_iNsTr_5_at_entry_2736_Update)
          R_iNsTr_5_at_entry_2736_update_completed_ <-& (R_iNsTr_5_at_entry_2736_Update)
          // RAW reenables for iNsTr_5_at_entry
          // Phi start dependency for implicit/constant alternative.
          R_iNsTr_5_at_entry_2736_sample_start_ <-& (R_iNsTr_5_at_entry_2736_sample_start__ps)
          R_iNsTr_5_at_entry_2736_update_start_ <-& (R_iNsTr_5_at_entry_2736_update_start__ps)
          // Phi complete dependency.
          R_iNsTr_5_at_entry_2736_sample_completed__ps <-& (R_iNsTr_5_at_entry_2736_sample_completed_)
          R_iNsTr_5_at_entry_2736_update_completed__ps <-& (R_iNsTr_5_at_entry_2736_update_completed_)
          $phisequencer [ phi_stmt_2732_phi_seq] : 
          phi_stmt_2732_loopback_trigger type_cast_2735_sample_start__ps type_cast_2735_sample_completed__ps type_cast_2735_update_start__ps type_cast_2735_update_completed__ps phi_stmt_2732_entry_trigger R_iNsTr_5_at_entry_2736_sample_start__ps R_iNsTr_5_at_entry_2736_sample_completed__ps R_iNsTr_5_at_entry_2736_update_start__ps R_iNsTr_5_at_entry_2736_update_completed__ps :
          phi_stmt_2732_sample_start__ps phi_stmt_2732_sample_completed__ps phi_stmt_2732_update_start__ps phi_stmt_2732_update_completed__ps :
          phi_stmt_2732_loopback_sample_req phi_stmt_2732_entry_sample_req : 
          phi_stmt_2732_phi_mux_ack
          // done: PHI Statement phi_stmt_2732
          // start:  			tmp := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          //  file prog.linked.opt.aa, line 1150
          // Source expression
          // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          $T[ADD_u8_u8_2742_sample_start_] 
          $T[ADD_u8_u8_2742_sample_completed_] 
          $T[ADD_u8_u8_2742_update_start_] 
          $T[ADD_u8_u8_2742_update_completed_] 
          // iNsTr_5
          // start: Forward dependencies from iNsTr_5 to transition ADD_u8_u8_2742_sample_start_
          ADD_u8_u8_2742_sample_start_ <-& (phi_stmt_2732_update_completed_)
          // done: Forward dependencies from iNsTr_5 to transition ADD_u8_u8_2742_sample_start_
          ;;[ADD_u8_u8_2742_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_2742_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_2742_sample_start_ &-> (ADD_u8_u8_2742_Sample)
          ADD_u8_u8_2742_sample_completed_ <-& (ADD_u8_u8_2742_Sample)
          ADD_u8_u8_2742_sample_completed_ &-> ($null)
          ADD_u8_u8_2742_update_start_ &-> (ADD_u8_u8_2742_Update)
          ADD_u8_u8_2742_update_completed_ <-& (ADD_u8_u8_2742_Update)
          // RAW reenables for iNsTr_5
          phi_stmt_2732_update_start_ o<-& (ADD_u8_u8_2742_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_2742_sample_start_ o<-& (ADD_u8_u8_2742_sample_completed_ 1)
          ADD_u8_u8_2742_update_start_ o<-& (ADD_u8_u8_2742_update_completed_ 0)
          // Target expression
          // (as target) tmp
          // start: WAR dependencies for tmp
          // done: WAR dependencies for tmp
          // end:  			tmp := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          // start:  			iNsTr_8 := code_block_in
          //  file prog.linked.opt.aa, line 1151
          // Source expression
          // code_block_in
          $T[RPIPE_code_block_in_2745_sample_start_] 
          $T[RPIPE_code_block_in_2745_sample_completed_] 
          $T[RPIPE_code_block_in_2745_update_start_] 
          $T[RPIPE_code_block_in_2745_update_completed_] 
          ;;[RPIPE_code_block_in_2745_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_code_block_in_2745_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_code_block_in_2745_sample_start_ &-> (RPIPE_code_block_in_2745_Sample)
          RPIPE_code_block_in_2745_sample_completed_ <-& (RPIPE_code_block_in_2745_Sample)
          RPIPE_code_block_in_2745_update_start_ <-& (RPIPE_code_block_in_2745_sample_completed_)
          RPIPE_code_block_in_2745_update_start_ &-> (RPIPE_code_block_in_2745_Update)
          RPIPE_code_block_in_2745_update_completed_ <-& (RPIPE_code_block_in_2745_Update)
          // self-release: 
          RPIPE_code_block_in_2745_sample_start_ o<-& (RPIPE_code_block_in_2745_sample_completed_ 1)
          RPIPE_code_block_in_2745_update_start_ o<-& (RPIPE_code_block_in_2745_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_8
          // start: WAR dependencies for iNsTr_8
          // done: WAR dependencies for iNsTr_8
          // end:  			iNsTr_8 := code_block_in
          // start:  			iNsTr_9 := ($cast ($uint<64>) iNsTr_5 )
          //  file prog.linked.opt.aa, line 1152
          // Source expression
          // ($cast ($uint<64>) iNsTr_5 )
          $T[type_cast_2749_sample_start_] 
          $T[type_cast_2749_sample_completed_] 
          $T[type_cast_2749_update_start_] 
          $T[type_cast_2749_update_completed_] 
          // iNsTr_5
          // start: Forward dependencies from iNsTr_5 to transition type_cast_2749_sample_start_
          type_cast_2749_sample_start_ <-& (phi_stmt_2732_update_completed_)
          // done: Forward dependencies from iNsTr_5 to transition type_cast_2749_sample_start_
          ;;[type_cast_2749_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2749_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2749_sample_start_ &-> (type_cast_2749_Sample)
          type_cast_2749_sample_completed_ <-& (type_cast_2749_Sample)
          type_cast_2749_sample_completed_ &-> ($null)
          type_cast_2749_update_start_ &-> (type_cast_2749_Update)
          type_cast_2749_update_completed_ <-& (type_cast_2749_Update)
          // RAW reenables for iNsTr_5
          phi_stmt_2732_update_start_ o<-& (type_cast_2749_sample_completed_ 0)
          // self-release: 
          type_cast_2749_sample_start_ o<-& (type_cast_2749_sample_completed_ 1)
          type_cast_2749_update_start_ o<-& (type_cast_2749_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_9
          // start: WAR dependencies for iNsTr_9
          // done: WAR dependencies for iNsTr_9
          // end:  			iNsTr_9 := ($cast ($uint<64>) iNsTr_5 )
          // start:  			iNsTr_10 := @(code_block[iNsTr_9])
          //  file prog.linked.opt.aa, line 1153
          // Source expression
          // @(code_block[iNsTr_9])
          $T[addr_of_2754_sample_start_] 
          $T[addr_of_2754_sample_completed_] 
          $T[addr_of_2754_update_start_] 
          $T[addr_of_2754_update_completed_] 
          $T[array_obj_ref_2753_root_address_calculated] 
          $T[array_obj_ref_2753_offset_calculated] 
          $T[array_obj_ref_2753_index_resized_0] 
          $T[array_obj_ref_2753_index_scaled_0] 
          $T[array_obj_ref_2753_index_computed_0] 
          // iNsTr_9
          // start: Forward dependencies from iNsTr_9 to transition array_obj_ref_2753_index_computed_0
          array_obj_ref_2753_index_computed_0 <-& (type_cast_2749_update_completed_)
          // done: Forward dependencies from iNsTr_9 to transition array_obj_ref_2753_index_computed_0
          ;;[array_obj_ref_2753_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_2753_index_computed_0 &-> (array_obj_ref_2753_index_resize_0)
          array_obj_ref_2753_index_resized_0 <-& (array_obj_ref_2753_index_resize_0)
          ;;[array_obj_ref_2753_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_2753_index_resized_0 &-> (array_obj_ref_2753_index_scale_0)
          array_obj_ref_2753_index_scaled_0 <-& (array_obj_ref_2753_index_scale_0)
          ;;[array_obj_ref_2753_final_index_sum_regn] 
          {
            $T [req] $T [ack] // rename
          }
          array_obj_ref_2753_index_scaled_0 &-> (array_obj_ref_2753_final_index_sum_regn)
          array_obj_ref_2753_offset_calculated <-& (array_obj_ref_2753_final_index_sum_regn)
          ;;[array_obj_ref_2753_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_2753_offset_calculated &-> (array_obj_ref_2753_base_plus_offset)
          array_obj_ref_2753_root_address_calculated <-& (array_obj_ref_2753_base_plus_offset)
          ;;[addr_of_2754_request] 
          {
            $T [req] $T [ack]
          }
          ;;[addr_of_2754_complete] 
          {
            $T [req] $T [ack]
          }
          addr_of_2754_sample_start_ <-& (array_obj_ref_2753_root_address_calculated)
          addr_of_2754_sample_start_ &-> (addr_of_2754_request)
          addr_of_2754_sample_completed_ <-& (addr_of_2754_request)
          addr_of_2754_update_start_ &-> (addr_of_2754_complete)
          addr_of_2754_update_completed_ <-& (addr_of_2754_complete)
          // reenables .
          // self-release 
          addr_of_2754_sample_start_ o<-& (addr_of_2754_sample_completed_ 1)
          addr_of_2754_update_start_ o<-& (addr_of_2754_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_10
          // start: WAR dependencies for iNsTr_10
          // done: WAR dependencies for iNsTr_10
          // end:  			iNsTr_10 := @(code_block[iNsTr_9])
          // start:  			->(iNsTr_10) := iNsTr_8
          //  file prog.linked.opt.aa, line 1154
          // Source expression
          // iNsTr_8
          // Target expression
          // ->(iNsTr_10)
          $T[ptr_deref_2757_sample_start_] 
          $T[ptr_deref_2757_sample_completed_] 
          $T[ptr_deref_2757_update_start_] 
          $T[ptr_deref_2757_update_completed_] 
          $T[ptr_deref_2757_base_address_calculated] 
          // iNsTr_10
          $T[ptr_deref_2757_word_address_calculated] 
          $T[ptr_deref_2757_root_address_calculated] 
          $T[ptr_deref_2757_base_address_resized] 
          ;;[ptr_deref_2757_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_2757_base_address_calculated &-> (ptr_deref_2757_base_addr_resize)
          ptr_deref_2757_base_address_resized <-& (ptr_deref_2757_base_addr_resize)
          ;;[ptr_deref_2757_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_2757_base_address_resized &-> (ptr_deref_2757_base_plus_offset)
          ptr_deref_2757_root_address_calculated <-& (ptr_deref_2757_base_plus_offset)
          ;;[ptr_deref_2757_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_2757_root_address_calculated &-> (ptr_deref_2757_word_addrgen)
          ptr_deref_2757_word_address_calculated <-& (ptr_deref_2757_word_addrgen)
          ;;[ptr_deref_2757_Sample] 
          {
            ;;[ptr_deref_2757_Split] 
            {
              $T [split_req] $T [split_ack]
            }
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_2757_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_2757_sample_start_ <-& (ptr_deref_2757_word_address_calculated)
          // reenable-joins
          addr_of_2754_update_start_ o<-& (ptr_deref_2757_sample_completed_ 0)
          ptr_deref_2757_sample_start_ &-> (ptr_deref_2757_Sample)
          ptr_deref_2757_sample_completed_ <-& (ptr_deref_2757_Sample)
          ptr_deref_2757_sample_completed_ &-> ($null)
          ptr_deref_2757_update_start_ &-> (ptr_deref_2757_Update)
          ptr_deref_2757_update_completed_ <-& (ptr_deref_2757_Update)
          // start: Forward dependencies from iNsTr_10 to transition ptr_deref_2757_base_address_calculated
          ptr_deref_2757_base_address_calculated <-& (addr_of_2754_update_completed_)
          // done: Forward dependencies from iNsTr_10 to transition ptr_deref_2757_base_address_calculated
          ptr_deref_2757_sample_start_ <-& (ptr_deref_2757_base_address_calculated)
          // RAW reenables for iNsTr_10
          addr_of_2754_update_start_ o<-& (ptr_deref_2757_sample_completed_ 0)
          // self-release: 
          ptr_deref_2757_sample_start_ o<-& (ptr_deref_2757_sample_completed_ 1)
          ptr_deref_2757_update_start_ o<-& (ptr_deref_2757_update_completed_ 0)
          // start: Forward dependencies from iNsTr_8 to transition ptr_deref_2757_sample_start_
          ptr_deref_2757_sample_start_ <-& (RPIPE_code_block_in_2745_update_completed_)
          // done: Forward dependencies from iNsTr_8 to transition ptr_deref_2757_sample_start_
          // RAW reenables for iNsTr_8
          RPIPE_code_block_in_2745_update_start_ o<-& (ptr_deref_2757_sample_completed_ 0)
          // end:  			->(iNsTr_10) := iNsTr_8
          // start:  			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          //  file prog.linked.opt.aa, line 1155
          // Source expression
          // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          $T[ADD_u8_u8_2764_sample_start_] 
          $T[ADD_u8_u8_2764_sample_completed_] 
          $T[ADD_u8_u8_2764_update_start_] 
          $T[ADD_u8_u8_2764_update_completed_] 
          // iNsTr_5
          // start: Forward dependencies from iNsTr_5 to transition ADD_u8_u8_2764_sample_start_
          ADD_u8_u8_2764_sample_start_ <-& (phi_stmt_2732_update_completed_)
          // done: Forward dependencies from iNsTr_5 to transition ADD_u8_u8_2764_sample_start_
          ;;[ADD_u8_u8_2764_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u8_u8_2764_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u8_u8_2764_sample_start_ &-> (ADD_u8_u8_2764_Sample)
          ADD_u8_u8_2764_sample_completed_ <-& (ADD_u8_u8_2764_Sample)
          ADD_u8_u8_2764_sample_completed_ &-> ($null)
          ADD_u8_u8_2764_update_start_ &-> (ADD_u8_u8_2764_Update)
          ADD_u8_u8_2764_update_completed_ <-& (ADD_u8_u8_2764_Update)
          // RAW reenables for iNsTr_5
          phi_stmt_2732_update_start_ o<-& (ADD_u8_u8_2764_sample_completed_ 0)
          // self-release: 
          ADD_u8_u8_2764_sample_start_ o<-& (ADD_u8_u8_2764_sample_completed_ 1)
          ADD_u8_u8_2764_update_start_ o<-& (ADD_u8_u8_2764_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_12
          // start: WAR dependencies for iNsTr_12
          // WAR dependency: Read: iNsTr_12 before Write: 			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          ADD_u8_u8_2764_update_start_ <-& (phi_stmt_2732_sample_completed_)
          // WAR dependency: release  Read: iNsTr_12 with Write: 			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
          phi_stmt_2732_sample_start_ o<-& (ADD_u8_u8_2764_update_completed_ 0)
          // done: WAR dependencies for iNsTr_12
          // end:  			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
          // start:  			iNsTr_13 := ($cast ($uint<32>) tmp )
          //  file prog.linked.opt.aa, line 1156
          // Source expression
          // ($cast ($uint<32>) tmp )
          $T[type_cast_2768_sample_start_] 
          $T[type_cast_2768_sample_completed_] 
          $T[type_cast_2768_update_start_] 
          $T[type_cast_2768_update_completed_] 
          // tmp
          // start: Forward dependencies from tmp to transition type_cast_2768_sample_start_
          type_cast_2768_sample_start_ <-& (ADD_u8_u8_2742_update_completed_)
          // done: Forward dependencies from tmp to transition type_cast_2768_sample_start_
          ;;[type_cast_2768_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2768_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2768_sample_start_ &-> (type_cast_2768_Sample)
          type_cast_2768_sample_completed_ <-& (type_cast_2768_Sample)
          type_cast_2768_sample_completed_ &-> ($null)
          type_cast_2768_update_start_ &-> (type_cast_2768_Update)
          type_cast_2768_update_completed_ <-& (type_cast_2768_Update)
          // RAW reenables for tmp
          ADD_u8_u8_2742_update_start_ o<-& (type_cast_2768_sample_completed_ 0)
          // self-release: 
          type_cast_2768_sample_start_ o<-& (type_cast_2768_sample_completed_ 1)
          type_cast_2768_update_start_ o<-& (type_cast_2768_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_13
          // start: WAR dependencies for iNsTr_13
          // done: WAR dependencies for iNsTr_13
          // end:  			iNsTr_13 := ($cast ($uint<32>) tmp )
          // start:  			iNsTr_14 := ncols
          //  file prog.linked.opt.aa, line 1157
          // Source expression
          // ncols
          $T[LOAD_ncols_2771_sample_start_] 
          $T[LOAD_ncols_2771_sample_completed_] 
          $T[LOAD_ncols_2771_update_start_] 
          $T[LOAD_ncols_2771_update_completed_] 
          $T[LOAD_ncols_2771_word_address_calculated] 
          $T[LOAD_ncols_2771_root_address_calculated] 
          LOAD_ncols_2771_word_address_calculated <-& (LOAD_ncols_2771_root_address_calculated)
          ;;[LOAD_ncols_2771_Sample] 
          {
            ||[word_access_start] 
            {
              ;;[word_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[LOAD_ncols_2771_Update] 
          {
            ||[word_access_complete] 
            {
              ;;[word_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            ;;[LOAD_ncols_2771_Merge] 
            {
              $T [merge_req] $T [merge_ack]
            }
          }
          LOAD_ncols_2771_sample_start_ <-& (LOAD_ncols_2771_word_address_calculated)
          // reenable-joins
          LOAD_ncols_2771_sample_start_ &-> (LOAD_ncols_2771_Sample)
          LOAD_ncols_2771_sample_completed_ <-& (LOAD_ncols_2771_Sample)
          LOAD_ncols_2771_sample_completed_ &-> ($null)
          LOAD_ncols_2771_update_start_ &-> (LOAD_ncols_2771_Update)
          LOAD_ncols_2771_update_completed_ <-& (LOAD_ncols_2771_Update)
          // self-release: 
          LOAD_ncols_2771_sample_start_ o<-& (LOAD_ncols_2771_sample_completed_ 1)
          LOAD_ncols_2771_update_start_ o<-& (LOAD_ncols_2771_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_14
          // start: WAR dependencies for iNsTr_14
          // done: WAR dependencies for iNsTr_14
          // end:  			iNsTr_14 := ncols
          // start:  			iNsTr_15 := ($cast ($uint<32>) iNsTr_14 )
          //  file prog.linked.opt.aa, line 1158
          // Source expression
          // ($cast ($uint<32>) iNsTr_14 )
          $T[type_cast_2775_sample_start_] 
          $T[type_cast_2775_sample_completed_] 
          $T[type_cast_2775_update_start_] 
          $T[type_cast_2775_update_completed_] 
          // iNsTr_14
          // start: Forward dependencies from iNsTr_14 to transition type_cast_2775_sample_start_
          type_cast_2775_sample_start_ <-& (LOAD_ncols_2771_update_completed_)
          // done: Forward dependencies from iNsTr_14 to transition type_cast_2775_sample_start_
          ;;[type_cast_2775_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_2775_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_2775_sample_start_ &-> (type_cast_2775_Sample)
          type_cast_2775_sample_completed_ <-& (type_cast_2775_Sample)
          type_cast_2775_sample_completed_ &-> ($null)
          type_cast_2775_update_start_ &-> (type_cast_2775_Update)
          type_cast_2775_update_completed_ <-& (type_cast_2775_Update)
          // RAW reenables for iNsTr_14
          LOAD_ncols_2771_update_start_ o<-& (type_cast_2775_sample_completed_ 0)
          // self-release: 
          type_cast_2775_sample_start_ o<-& (type_cast_2775_sample_completed_ 1)
          type_cast_2775_update_start_ o<-& (type_cast_2775_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_15
          // start: WAR dependencies for iNsTr_15
          // done: WAR dependencies for iNsTr_15
          // end:  			iNsTr_15 := ($cast ($uint<32>) iNsTr_14 )
          // start:  			iNsTr_16 := (iNsTr_13 < iNsTr_15)
          //  file prog.linked.opt.aa, line 1159
          // Source expression
          // (iNsTr_13 < iNsTr_15)
          $T[ULT_u32_u1_2780_sample_start_] 
          $T[ULT_u32_u1_2780_sample_completed_] 
          $T[ULT_u32_u1_2780_update_start_] 
          $T[ULT_u32_u1_2780_update_completed_] 
          // iNsTr_13
          // iNsTr_15
          // start: Forward dependencies from iNsTr_13 to transition ULT_u32_u1_2780_sample_start_
          ULT_u32_u1_2780_sample_start_ <-& (type_cast_2768_update_completed_)
          // done: Forward dependencies from iNsTr_13 to transition ULT_u32_u1_2780_sample_start_
          // start: Forward dependencies from iNsTr_15 to transition ULT_u32_u1_2780_sample_start_
          ULT_u32_u1_2780_sample_start_ <-& (type_cast_2775_update_completed_)
          // done: Forward dependencies from iNsTr_15 to transition ULT_u32_u1_2780_sample_start_
          ;;[ULT_u32_u1_2780_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ULT_u32_u1_2780_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ULT_u32_u1_2780_sample_start_ &-> (ULT_u32_u1_2780_Sample)
          ULT_u32_u1_2780_sample_completed_ <-& (ULT_u32_u1_2780_Sample)
          ULT_u32_u1_2780_sample_completed_ &-> ($null)
          ULT_u32_u1_2780_update_start_ &-> (ULT_u32_u1_2780_Update)
          ULT_u32_u1_2780_update_completed_ <-& (ULT_u32_u1_2780_Update)
          // RAW reenables for iNsTr_13
          type_cast_2768_update_start_ o<-& (ULT_u32_u1_2780_sample_completed_ 0)
          // RAW reenables for iNsTr_15
          type_cast_2775_update_start_ o<-& (ULT_u32_u1_2780_sample_completed_ 0)
          // self-release: 
          ULT_u32_u1_2780_sample_start_ o<-& (ULT_u32_u1_2780_sample_completed_ 1)
          ULT_u32_u1_2780_update_start_ o<-& (ULT_u32_u1_2780_update_completed_ 0)
          // Target expression
          // (as target) iNsTr_16
          // start: WAR dependencies for iNsTr_16
          // done: WAR dependencies for iNsTr_16
          // end:  			iNsTr_16 := (iNsTr_13 < iNsTr_15)
          // start:  			bbx_xnph_xx_x_crit_edgex_xloopexit_taken := ( ~ iNsTr_16 )
          //  file prog.linked.opt.aa, line 1160
          // Source expression
          // ( ~ iNsTr_16 )
          $T[NOT_u1_u1_2784_sample_start_] 
          $T[NOT_u1_u1_2784_sample_completed_] 
          $T[NOT_u1_u1_2784_update_start_] 
          $T[NOT_u1_u1_2784_update_completed_] 
          // iNsTr_16
          // start: Forward dependencies from iNsTr_16 to transition NOT_u1_u1_2784_sample_start_
          NOT_u1_u1_2784_sample_start_ <-& (ULT_u32_u1_2780_update_completed_)
          // done: Forward dependencies from iNsTr_16 to transition NOT_u1_u1_2784_sample_start_
          ;;[NOT_u1_u1_2784_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2784_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2784_sample_start_ &-> (NOT_u1_u1_2784_Sample)
          NOT_u1_u1_2784_sample_completed_ <-& (NOT_u1_u1_2784_Sample)
          NOT_u1_u1_2784_sample_completed_ &-> ($null)
          NOT_u1_u1_2784_update_start_ &-> (NOT_u1_u1_2784_Update)
          NOT_u1_u1_2784_update_completed_ <-& (NOT_u1_u1_2784_Update)
          // RAW reenables for iNsTr_16
          ULT_u32_u1_2780_update_start_ o<-& (NOT_u1_u1_2784_sample_completed_ 0)
          // self-release: 
          NOT_u1_u1_2784_sample_start_ o<-& (NOT_u1_u1_2784_sample_completed_ 1)
          NOT_u1_u1_2784_update_start_ o<-& (NOT_u1_u1_2784_update_completed_ 0)
          // Target expression
          // (as target) bbx_xnph_xx_x_crit_edgex_xloopexit_taken
          // start: WAR dependencies for bbx_xnph_xx_x_crit_edgex_xloopexit_taken
          // done: WAR dependencies for bbx_xnph_xx_x_crit_edgex_xloopexit_taken
          // end:  			bbx_xnph_xx_x_crit_edgex_xloopexit_taken := ( ~ iNsTr_16 )
          // iNsTr_16
          // start: Forward dependencies from iNsTr_16 to transition condition_evaluated
          condition_evaluated <-& (ULT_u32_u1_2780_update_completed_)
          // done: Forward dependencies from iNsTr_16 to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_11
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_3
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe code_block_in
          // read-dependencies for pipe code_block_in
          // write-dependencies for pipe code_block_in
          // signal dependencies for code_block_in
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2730__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2730_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2730__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2730_loop_body : condition_evaluated
        $bind do_while_stmt_2730__entry__  => do_while_stmt_2730_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2730_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2730__exit__)
      }
      do_while_stmt_2730__entry__ |-> (do_while_stmt_2730)
      do_while_stmt_2730__exit__ <-| (do_while_stmt_2730)
      // if-statement  
      //  file prog.linked.opt.aa, line 0
      ;;[if_stmt_2788_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2788__entry__ |-> (if_stmt_2788_dead_link)
      if_stmt_2788__exit__ <-| (if_stmt_2788_dead_link)
      ;;[if_stmt_2788_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2788__entry__ |-> (if_stmt_2788_eval_test)
      $P [R_bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2789_place]
      R_bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2789_place <-| (if_stmt_2788_eval_test)
      ;;[if_stmt_2788_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2788_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2789_place |-> (if_stmt_2788_if_link if_stmt_2788_else_link)
      $P [bbx_xnph_xx_x_crit_edgex_xloopexit]
      bbx_xnph_xx_x_crit_edgex_xloopexit <-| (if_stmt_2788_if_link)
      if_stmt_2788__exit__ <-| (if_stmt_2788_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1139
      ;;[merge_stmt_2721_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2721__entry__ |-> (merge_stmt_2721_dead_link)
      merge_stmt_2721__exit__ <-| (merge_stmt_2721_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1139  --------------------------
      ||[bb_0_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnphx_xpreheader |-> (bb_0_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_2721_PhiReqMerge] 
      merge_stmt_2721_PhiReqMerge <-| ( bb_0_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_2721_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2721_PhiReqMerge |-> (merge_stmt_2721_PhiAck)
      merge_stmt_2721__exit__  <-| (merge_stmt_2721_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1139  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1142
      //---------------------   merge statement  file prog.linked.opt.aa, line 1142  --------------------------
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_2724] 
        {
          ||[phi_stmt_2724_sources] 
          {
            // sources for 			$phi iNsTr_5_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<8>
            // constant source .... delay transition 
            $T [type_cast_2728_konst_delay_trans] $delay
          }
          $T [phi_stmt_2724_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_2723_PhiReqMerge] 
      merge_stmt_2723_PhiReqMerge <-| ( bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_2723_PhiAck] 
      {
        $T [phi_stmt_2724_ack] 
      }
      merge_stmt_2723_PhiReqMerge |-> (merge_stmt_2723_PhiAck)
      merge_stmt_2723__exit__  <-| (merge_stmt_2723_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1142  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1165
      ;;[merge_stmt_2792_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2792__entry__ |-> (merge_stmt_2792_dead_link)
      merge_stmt_2792__exit__ <-| (merge_stmt_2792_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1165  --------------------------
      ||[bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph_xx_x_crit_edgex_xloopexit |-> (bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_2792_PhiReqMerge] 
      merge_stmt_2792_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_2792_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2792_PhiReqMerge |-> (merge_stmt_2792_PhiAck)
      merge_stmt_2792__exit__  <-| (merge_stmt_2792_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1165  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1168
      //---------------------   merge statement  file prog.linked.opt.aa, line 1168  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_2794_PhiReqMerge] 
      merge_stmt_2794_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_2794_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2794_PhiReqMerge |-> (merge_stmt_2794_PhiAck)
      merge_stmt_2794__exit__  <-| (merge_stmt_2794_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1168  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1171
      //---------------------   merge statement  file prog.linked.opt.aa, line 1171  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2796_PhiReqMerge] 
      merge_stmt_2796_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2796_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2796_PhiReqMerge |-> (merge_stmt_2796_PhiAck)
      merge_stmt_2796__exit__  <-| (merge_stmt_2796_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1171  --------------------------
      assign_stmt_2708_to_assign_stmt_2714__entry__ <-| (branch_block_stmt_2705__entry__)
      if_stmt_2715__entry__ <-| (assign_stmt_2708_to_assign_stmt_2714__exit__)
      merge_stmt_2721__entry__ <-| (if_stmt_2715__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_2721__exit__)
      do_while_stmt_2730__entry__ <-| (merge_stmt_2723__exit__)
      if_stmt_2788__entry__ <-| (do_while_stmt_2730__exit__)
      merge_stmt_2792__entry__ <-| (if_stmt_2788__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_2792__exit__)
      return__ <-| (merge_stmt_2794__exit__)
      merge_stmt_2796__exit__ |-> (branch_block_stmt_2705__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1139
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1142
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1147
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1165
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1168
    // constant-object-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1171
    // constant-object-declarations for block %readCodeBlock%body
    //  file prog.linked.opt.aa, line 1130
    // constant-object-declarations for block %readCodeBlock
    //  file prog.linked.opt.aa, line 1125
    // constant-declarations for block %readCodeBlock%body
    //  file prog.linked.opt.aa, line 1130
    // ncols
    $constant $W[LOAD_ncols_2707_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2712_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1134
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1139
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1142
    // constant-declarations for phi:  			$phi iNsTr_5_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1143
    // ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) )
    $constant $W[type_cast_2728_wire_constant] : $int<8> := _b00000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 1145
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1147
    // constant-declarations for phi:  			$phi iNsTr_5 := 			  ($cast ($uint<8>) iNsTr_12 ) $on $loopback			  iNsTr_5_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1148
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_2741_wire_constant] : $int<8> := _b00000001// 1
    // @(code_block[iNsTr_9])
    $constant $W[array_obj_ref_2753_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2753_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_10)
    $constant $W[ptr_deref_2757_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<8>) _b00000001  )
    $constant $W[type_cast_2763_wire_constant] : $int<8> := _b00000001// 1
    // ncols
    $constant $W[LOAD_ncols_2771_word_address_0] : $pointer<memory_space_11> := _b0
    // if-statement  
    //  file prog.linked.opt.aa, line 0
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1165
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1168
    // constant-declarations for block %readCodeBlock%body%
    //  file prog.linked.opt.aa, line 1171
    // block %readCodeBlock%body
    //  file prog.linked.opt.aa, line 1130
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 1132
    // ncols
    $W[LOAD_ncols_2707_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_2708] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1133
    // iNsTr_1
    $W[iNsTr_1_2714] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1134
    // merge-statement  
    //  file prog.linked.opt.aa, line 1142
    // 			$phi iNsTr_5_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1143
    // iNsTr_5_at_entry
    $W[iNsTr_5_at_entry_2724] : $int<8>
    // do-while statement  
    //  file prog.linked.opt.aa, line 1145
    // merge-statement  
    //  file prog.linked.opt.aa, line 1147
    // 			$phi iNsTr_5 := 			  ($cast ($uint<8>) iNsTr_12 ) $on $loopback			  iNsTr_5_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1148
    // ($cast ($uint<8>) iNsTr_12 )
    $intermediate $W[type_cast_2735_wire] : $int<8>
    $W[iNsTr_5_at_entry_2724_2736_buffered] : $int<8>
    // iNsTr_5
    $W[iNsTr_5_2732] : $int<8>
    // 			tmp := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
    //  file prog.linked.opt.aa, line 1150
    // tmp
    $W[tmp_2743] : $int<8>
    // 			iNsTr_8 := code_block_in
    //  file prog.linked.opt.aa, line 1151
    // iNsTr_8
    $W[iNsTr_8_2746] : $float<8,23>
    // 			iNsTr_9 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 1152
    // iNsTr_9
    $W[iNsTr_9_2750] : $int<64>
    // 			iNsTr_10 := @(code_block[iNsTr_9])
    //  file prog.linked.opt.aa, line 1153
    // @(code_block[iNsTr_9])
    $intermediate $W[R_iNsTr_9_2752_resized] : $int<10>
    $intermediate $W[R_iNsTr_9_2752_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2753_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2753_root_address] : $int<10>
    // iNsTr_10
    $W[iNsTr_10_2755] : $int<32>
    // 			->(iNsTr_10) := iNsTr_8
    //  file prog.linked.opt.aa, line 1154
    // ->(iNsTr_10)
    $intermediate $W[ptr_deref_2757_wire] : $float<8,23>
    $intermediate $W[ptr_deref_2757_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2757_root_address] : $int<10>
    $W[ptr_deref_2757_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2757_data_0] : $int<32>
    // 			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 1155
    // iNsTr_12
    $W[iNsTr_12_2765] : $int<8>
    // 			iNsTr_13 := ($cast ($uint<32>) tmp )
    //  file prog.linked.opt.aa, line 1156
    // iNsTr_13
    $W[iNsTr_13_2769] : $int<32>
    // 			iNsTr_14 := ncols
    //  file prog.linked.opt.aa, line 1157
    // ncols
    $W[LOAD_ncols_2771_data_0] : $int<16>
    // iNsTr_14
    $W[iNsTr_14_2772] : $int<16>
    // 			iNsTr_15 := ($cast ($uint<32>) iNsTr_14 )
    //  file prog.linked.opt.aa, line 1158
    // iNsTr_15
    $W[iNsTr_15_2776] : $int<32>
    // 			iNsTr_16 := (iNsTr_13 < iNsTr_15)
    //  file prog.linked.opt.aa, line 1159
    // iNsTr_16
    $W[iNsTr_16_2781] : $int<1>
    // 			bbx_xnph_xx_x_crit_edgex_xloopexit_taken := ( ~ iNsTr_16 )
    //  file prog.linked.opt.aa, line 1160
    // bbx_xnph_xx_x_crit_edgex_xloopexit_taken
    $W[bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2785] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 0
    // datapath-instances for block %readCodeBlock%body
    //  file prog.linked.opt.aa, line 1130
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 1132
    // ncols
    $load [LOAD_ncols_2707_load_0] $from memory_space_11 (LOAD_ncols_2707_word_address_0) (LOAD_ncols_2707_data_0) 
    $delay LOAD_ncols_2707_load_0 4
    &/ [LOAD_ncols_2707_gather_scatter] (LOAD_ncols_2707_data_0) (iNsTr_0_2708) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1133
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2713_inst] (iNsTr_0_2708 type_cast_2712_wire_constant) (iNsTr_1_2714)   
    $buffering  $out EQ_u16_u1_2713_inst iNsTr_1_2714 1
    $delay EQ_u16_u1_2713_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1134
    ==0? [if_stmt_2715_branch] (iNsTr_1_2714)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1142
    // 			$phi iNsTr_5_at_entry := 			  ($cast ($uint<8>) ($bitcast ($uint<8>) _b00000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1143
    $phi [phi_stmt_2724] (type_cast_2728_wire_constant) ( iNsTr_5_at_entry_2724 ) 
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 1145
    ==0? [do_while_stmt_2730_branch] (iNsTr_16_2781)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1147
    // 			$phi iNsTr_5 := 			  ($cast ($uint<8>) iNsTr_12 ) $on $loopback			  iNsTr_5_at_entry $on $entry // type of target is $uint<8>
    //  file prog.linked.opt.aa, line 1148
    // ($cast ($uint<8>) iNsTr_12 )
    # := [type_cast_2735_inst] (iNsTr_12_2765) (type_cast_2735_wire)    $fullrate
    $buffering  $out type_cast_2735_inst type_cast_2735_wire 1
    $delay type_cast_2735_inst 1
    # := [iNsTr_5_at_entry_2724_2736_buf] (iNsTr_5_at_entry_2724) (iNsTr_5_at_entry_2724_2736_buffered)    $fullrate
    $buffering $out iNsTr_5_at_entry_2724_2736_buf iNsTr_5_at_entry_2724_2736_buffered  1
    # $phi [phi_stmt_2732] (type_cast_2735_wire iNsTr_5_at_entry_2724_2736_buffered) ( iNsTr_5_2732 ) $fullrate
    // $buffering  $out phi_stmt_2732 iNsTr_5_2732 2
    // 			tmp := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
    //  file prog.linked.opt.aa, line 1150
    // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
    +[ADD_u8_u8_2742_inst] (iNsTr_5_2732 type_cast_2741_wire_constant) (tmp_2743)    $fullrate
    $buffering  $out ADD_u8_u8_2742_inst tmp_2743 1
    $delay ADD_u8_u8_2742_inst 1
    // 			iNsTr_8 := code_block_in
    //  file prog.linked.opt.aa, line 1151
    // code_block_in
    $ioport $in [RPIPE_code_block_in_2745_inst] (code_block_in) (iNsTr_8_2746)  $fullrate 
    $buffering $out RPIPE_code_block_in_2745_inst iNsTr_8_2746 2
    // 			iNsTr_9 := ($cast ($uint<64>) iNsTr_5 )
    //  file prog.linked.opt.aa, line 1152
    // ($cast ($uint<64>) iNsTr_5 )
    # := [type_cast_2749_inst] (iNsTr_5_2732) (iNsTr_9_2750)    $fullrate
    $buffering  $out type_cast_2749_inst iNsTr_9_2750 1
    $delay type_cast_2749_inst 1
    // 			iNsTr_10 := @(code_block[iNsTr_9])
    //  file prog.linked.opt.aa, line 1153
    &/ [array_obj_ref_2753_index_0_resize] (iNsTr_9_2750) (R_iNsTr_9_2752_resized) 
    $flowthrough 
    &/ [array_obj_ref_2753_index_0_rename] (R_iNsTr_9_2752_resized) (R_iNsTr_9_2752_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2753_index_offset] (R_iNsTr_9_2752_scaled) (array_obj_ref_2753_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2753_root_address_inst] (array_obj_ref_2753_final_offset) (array_obj_ref_2753_root_address) 
    $flowthrough 
    # := [addr_of_2754_final_reg] (array_obj_ref_2753_root_address) (iNsTr_10_2755)    $fullrate
    $buffering  $out addr_of_2754_final_reg iNsTr_10_2755 1
    // 			->(iNsTr_10) := iNsTr_8
    //  file prog.linked.opt.aa, line 1154
    // ->(iNsTr_10)
    &/ [ptr_deref_2757_base_resize] (iNsTr_10_2755) (ptr_deref_2757_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2757_root_address_inst] (ptr_deref_2757_resized_base_address) (ptr_deref_2757_root_address) 
    $flowthrough 
    &/ [ptr_deref_2757_addr_0] (ptr_deref_2757_root_address) (ptr_deref_2757_word_address_0) 
    $flowthrough 
    $store [ptr_deref_2757_store_0] $to memory_space_3 (ptr_deref_2757_word_address_0 ptr_deref_2757_data_0) 
    $buffering  $in ptr_deref_2757_store_0 ptr_deref_2757_word_address_0 2
    $buffering  $in ptr_deref_2757_store_0 ptr_deref_2757_data_0 2
    $delay ptr_deref_2757_store_0 4
    &/ [ptr_deref_2757_gather_scatter] (iNsTr_8_2746) (ptr_deref_2757_data_0) 
    $flowthrough 
    // 			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
    //  file prog.linked.opt.aa, line 1155
    // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
    +[ADD_u8_u8_2764_inst] (iNsTr_5_2732 type_cast_2763_wire_constant) (iNsTr_12_2765)    $fullrate
    $buffering  $out ADD_u8_u8_2764_inst iNsTr_12_2765 2
    $delay ADD_u8_u8_2764_inst 1
    // 			iNsTr_13 := ($cast ($uint<32>) tmp )
    //  file prog.linked.opt.aa, line 1156
    // ($cast ($uint<32>) tmp )
    # := [type_cast_2768_inst] (tmp_2743) (iNsTr_13_2769)    $fullrate
    $buffering  $out type_cast_2768_inst iNsTr_13_2769 1
    $delay type_cast_2768_inst 1
    // 			iNsTr_14 := ncols
    //  file prog.linked.opt.aa, line 1157
    // ncols
    $load [LOAD_ncols_2771_load_0] $from memory_space_11 (LOAD_ncols_2771_word_address_0) (LOAD_ncols_2771_data_0) 
    $buffering  $in LOAD_ncols_2771_load_0 LOAD_ncols_2771_word_address_0 2
    $buffering  $out LOAD_ncols_2771_load_0 LOAD_ncols_2771_data_0 2
    $delay LOAD_ncols_2771_load_0 4
    &/ [LOAD_ncols_2771_gather_scatter] (LOAD_ncols_2771_data_0) (iNsTr_14_2772) 
    $flowthrough 
    // 			iNsTr_15 := ($cast ($uint<32>) iNsTr_14 )
    //  file prog.linked.opt.aa, line 1158
    // ($cast ($uint<32>) iNsTr_14 )
    # := [type_cast_2775_inst] (iNsTr_14_2772) (iNsTr_15_2776)    $fullrate
    $buffering  $out type_cast_2775_inst iNsTr_15_2776 1
    $delay type_cast_2775_inst 1
    // 			iNsTr_16 := (iNsTr_13 < iNsTr_15)
    //  file prog.linked.opt.aa, line 1159
    // (iNsTr_13 < iNsTr_15)
    <[ULT_u32_u1_2780_inst] (iNsTr_13_2769 iNsTr_15_2776) (iNsTr_16_2781)    $fullrate
    $buffering  $out ULT_u32_u1_2780_inst iNsTr_16_2781 1
    $delay ULT_u32_u1_2780_inst 1
    // 			bbx_xnph_xx_x_crit_edgex_xloopexit_taken := ( ~ iNsTr_16 )
    //  file prog.linked.opt.aa, line 1160
    // ( ~ iNsTr_16 )
    ~ [NOT_u1_u1_2784_inst] (iNsTr_16_2781) (bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2785)   $fullrate
    $buffering  $out NOT_u1_u1_2784_inst bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2785 1
    $delay NOT_u1_u1_2784_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 0
    ==0? [if_stmt_2788_branch] (bbx_xnph_xx_x_crit_edgex_xloopexit_taken_2785)
  }
  // end data-path
  // 		iNsTr_0 := ncols
  //  file prog.linked.opt.aa, line 1132
  // ncols
  LOAD_ncols_2707_gather_scatter <=> (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Update/LOAD_ncols_2707_Merge/merge_req) (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Update/LOAD_ncols_2707_Merge/merge_ack)
  LOAD_ncols_2707_load_0 <=> (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Sample/word_access_start/word_0/rr branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Update/word_access_complete/word_0/cr) (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Sample/word_access_start/word_0/ra branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/LOAD_ncols_2707_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1133
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_2713_inst <=> (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/EQ_u16_u1_2713_Sample/rr branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/EQ_u16_u1_2713_Update/cr) (branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/EQ_u16_u1_2713_Sample/ra branch_block_stmt_2705/assign_stmt_2708_to_assign_stmt_2714/EQ_u16_u1_2713_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1134
  if_stmt_2715_branch <=> (branch_block_stmt_2705/if_stmt_2715_eval_test/branch_req) (branch_block_stmt_2705/if_stmt_2715_else_link/else_choice_transition branch_block_stmt_2705/if_stmt_2715_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1139
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1142
  phi_stmt_2724 <=> (branch_block_stmt_2705/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_2724/phi_stmt_2724_req) (branch_block_stmt_2705/merge_stmt_2723_PhiAck/phi_stmt_2724_ack)
  // CP-DP links for do-while  do_while_stmt_2730
  //  file prog.linked.opt.aa, line 1145
  phi_stmt_2732 <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/phi_stmt_2732_loopback_sample_req branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/phi_stmt_2732_entry_sample_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/phi_stmt_2732_phi_mux_ack)
  // iNsTr_12
  // ($cast ($uint<8>) iNsTr_12 )
  type_cast_2735_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2735_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2735_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2735_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2735_Update/ca)
  iNsTr_5_at_entry_2724_2736_buf <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/R_iNsTr_5_at_entry_2736_Sample/req branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/R_iNsTr_5_at_entry_2736_Update/req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/R_iNsTr_5_at_entry_2736_Sample/ack branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/R_iNsTr_5_at_entry_2736_Update/ack)
  // 			tmp := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
  //  file prog.linked.opt.aa, line 1150
  // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
  // iNsTr_5
  ADD_u8_u8_2742_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2742_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2742_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2742_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2742_Update/ca)
  // 			iNsTr_8 := code_block_in
  //  file prog.linked.opt.aa, line 1151
  // code_block_in
  RPIPE_code_block_in_2745_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/RPIPE_code_block_in_2745_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/RPIPE_code_block_in_2745_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/RPIPE_code_block_in_2745_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/RPIPE_code_block_in_2745_Update/ca)
  // 			iNsTr_9 := ($cast ($uint<64>) iNsTr_5 )
  //  file prog.linked.opt.aa, line 1152
  // iNsTr_5
  // ($cast ($uint<64>) iNsTr_5 )
  type_cast_2749_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2749_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2749_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2749_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2749_Update/ca)
  // 			iNsTr_10 := @(code_block[iNsTr_9])
  //  file prog.linked.opt.aa, line 1153
  // iNsTr_9
  array_obj_ref_2753_index_0_resize <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_index_resize_0/index_resize_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_index_resize_0/index_resize_ack)
  array_obj_ref_2753_index_0_rename <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_index_scale_0/scale_rename_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_index_scale_0/scale_rename_ack)
  array_obj_ref_2753_index_offset <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_final_index_sum_regn/req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_final_index_sum_regn/ack)
  array_obj_ref_2753_root_address_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_base_plus_offset/sum_rename_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/array_obj_ref_2753_base_plus_offset/sum_rename_ack)
  addr_of_2754_final_reg <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/addr_of_2754_request/req branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/addr_of_2754_complete/req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/addr_of_2754_request/ack branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/addr_of_2754_complete/ack)
  // 			->(iNsTr_10) := iNsTr_8
  //  file prog.linked.opt.aa, line 1154
  // iNsTr_8
  // iNsTr_10
  ptr_deref_2757_base_resize <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_base_addr_resize/base_resize_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_base_addr_resize/base_resize_ack)
  ptr_deref_2757_root_address_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_base_plus_offset/sum_rename_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_base_plus_offset/sum_rename_ack)
  ptr_deref_2757_addr_0 <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_word_addrgen/root_register_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_word_addrgen/root_register_ack)
  ptr_deref_2757_gather_scatter <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Sample/ptr_deref_2757_Split/split_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Sample/ptr_deref_2757_Split/split_ack)
  ptr_deref_2757_store_0 <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Sample/word_access_start/word_0/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Update/word_access_complete/word_0/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Sample/word_access_start/word_0/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ptr_deref_2757_Update/word_access_complete/word_0/ca)
  // 			iNsTr_12 := (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  )) $buffering 2
  //  file prog.linked.opt.aa, line 1155
  // (iNsTr_5 + ($bitcast ($uint<8>) _b00000001  ))
  // iNsTr_5
  ADD_u8_u8_2764_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2764_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2764_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2764_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ADD_u8_u8_2764_Update/ca)
  // 			iNsTr_13 := ($cast ($uint<32>) tmp )
  //  file prog.linked.opt.aa, line 1156
  // tmp
  // ($cast ($uint<32>) tmp )
  type_cast_2768_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2768_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2768_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2768_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2768_Update/ca)
  // 			iNsTr_14 := ncols
  //  file prog.linked.opt.aa, line 1157
  // ncols
  LOAD_ncols_2771_gather_scatter <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Update/LOAD_ncols_2771_Merge/merge_req) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Update/LOAD_ncols_2771_Merge/merge_ack)
  LOAD_ncols_2771_load_0 <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Sample/word_access_start/word_0/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Update/word_access_complete/word_0/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Sample/word_access_start/word_0/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/LOAD_ncols_2771_Update/word_access_complete/word_0/ca)
  // 			iNsTr_15 := ($cast ($uint<32>) iNsTr_14 )
  //  file prog.linked.opt.aa, line 1158
  // iNsTr_14
  // ($cast ($uint<32>) iNsTr_14 )
  type_cast_2775_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2775_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2775_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2775_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/type_cast_2775_Update/ca)
  // 			iNsTr_16 := (iNsTr_13 < iNsTr_15)
  //  file prog.linked.opt.aa, line 1159
  // (iNsTr_13 < iNsTr_15)
  // iNsTr_13
  // iNsTr_15
  ULT_u32_u1_2780_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ULT_u32_u1_2780_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ULT_u32_u1_2780_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ULT_u32_u1_2780_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/ULT_u32_u1_2780_Update/ca)
  // 			bbx_xnph_xx_x_crit_edgex_xloopexit_taken := ( ~ iNsTr_16 )
  //  file prog.linked.opt.aa, line 1160
  // iNsTr_16
  // ( ~ iNsTr_16 )
  NOT_u1_u1_2784_inst <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/NOT_u1_u1_2784_Sample/rr branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/NOT_u1_u1_2784_Update/cr) (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/NOT_u1_u1_2784_Sample/ra branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/NOT_u1_u1_2784_Update/ca)
  // iNsTr_16
  do_while_stmt_2730_branch <=> (branch_block_stmt_2705/do_while_stmt_2730/do_while_stmt_2730_loop_body/condition_evaluated) (branch_block_stmt_2705/do_while_stmt_2730/loop_exit/ack branch_block_stmt_2705/do_while_stmt_2730/loop_taken/ack)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 0
  if_stmt_2788_branch <=> (branch_block_stmt_2705/if_stmt_2788_eval_test/branch_req) (branch_block_stmt_2705/if_stmt_2788_else_link/else_choice_transition branch_block_stmt_2705/if_stmt_2788_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1165
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1168
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1171
}
$module [send_output] 
{
  // pipe-declarations for block %send_output
  //  file prog.linked.opt.aa, line 1175
  // pipe-declarations for block %send_output%body
  //  file prog.linked.opt.aa, line 1180
  // pipe-declarations for block %send_output%body%
  //  file prog.linked.opt.aa, line 1189
  // pipe-declarations for block %send_output%body%
  //  file prog.linked.opt.aa, line 1192
  // pipe-declarations for block %send_output%body%
  //  file prog.linked.opt.aa, line 1209
  // pipe-declarations for block %send_output%body%
  //  file prog.linked.opt.aa, line 1212
  // pipe-declarations for block %send_output%body%
  //  file prog.linked.opt.aa, line 1217
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2800] // Branch Block  file prog.linked.opt.aa, line 1180
    {
      $P [branch_block_stmt_2800__entry__]
      branch_block_stmt_2800__entry__ <-| ($entry)
      $P [branch_block_stmt_2800__exit__]
      branch_block_stmt_2800__exit__ |-> ($exit)
      $P [assign_stmt_2803_to_assign_stmt_2809__entry__] 
      $P [assign_stmt_2803_to_assign_stmt_2809__exit__] 
      $P [if_stmt_2810__entry__] 
      $P [if_stmt_2810__exit__] 
      $P [merge_stmt_2816__entry__] 
      $P [merge_stmt_2816__exit__] 
      $P [bbx_xnphx_xpreheader_bbx_xnph]
      $P [merge_stmt_2818__exit__] 
      $P [assign_stmt_2832_to_assign_stmt_2845__entry__] 
      $P [assign_stmt_2832_to_assign_stmt_2845__exit__] 
      $P [assign_stmt_2848__entry__] 
      $P [assign_stmt_2848__exit__] 
      $P [assign_stmt_2854_to_assign_stmt_2868__entry__] 
      $P [assign_stmt_2854_to_assign_stmt_2868__exit__] 
      $P [if_stmt_2869__entry__] 
      $P [if_stmt_2869__exit__] 
      $P [merge_stmt_2875__entry__] 
      $P [merge_stmt_2875__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_2877__exit__] 
      $P [assign_stmt_2880__entry__] 
      $P [assign_stmt_2880__exit__] 
      $P [assign_stmt_2883__entry__] 
      $P [assign_stmt_2883__exit__] 
      $P [return__]
      $P [merge_stmt_2885__exit__] 
      ::[assign_stmt_2803_to_assign_stmt_2809] 
      {
        // start:  		iNsTr_0 := ncols
        //  file prog.linked.opt.aa, line 1182
        // Source expression
        // ncols
        $T[LOAD_ncols_2802_sample_start_] 
        $T[LOAD_ncols_2802_sample_completed_] 
        $T[LOAD_ncols_2802_update_start_] 
        $T[LOAD_ncols_2802_update_completed_] 
        $T[LOAD_ncols_2802_word_address_calculated] 
        $T[LOAD_ncols_2802_root_address_calculated] 
        LOAD_ncols_2802_word_address_calculated <-& (LOAD_ncols_2802_root_address_calculated)
        ;;[LOAD_ncols_2802_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_2802_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_2802_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_2802_sample_start_ <-& (LOAD_ncols_2802_word_address_calculated)
        LOAD_ncols_2802_sample_start_ &-> (LOAD_ncols_2802_Sample)
        LOAD_ncols_2802_sample_completed_ <-& (LOAD_ncols_2802_Sample)
        LOAD_ncols_2802_sample_completed_ &-> ($null)
        LOAD_ncols_2802_update_start_ &-> (LOAD_ncols_2802_Update)
        LOAD_ncols_2802_update_completed_ <-& (LOAD_ncols_2802_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncols
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1183
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2808_sample_start_] 
        $T[EQ_u16_u1_2808_sample_completed_] 
        $T[EQ_u16_u1_2808_update_start_] 
        $T[EQ_u16_u1_2808_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2808_sample_start_
        EQ_u16_u1_2808_sample_start_ <-& (LOAD_ncols_2802_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2808_sample_start_
        ;;[EQ_u16_u1_2808_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2808_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2808_sample_start_ &-> (EQ_u16_u1_2808_Sample)
        EQ_u16_u1_2808_sample_completed_ <-& (EQ_u16_u1_2808_Sample)
        EQ_u16_u1_2808_sample_completed_ &-> ($null)
        EQ_u16_u1_2808_update_start_ &-> (EQ_u16_u1_2808_Update)
        EQ_u16_u1_2808_update_completed_ <-& (EQ_u16_u1_2808_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2803_to_assign_stmt_2809__entry__ |-> (assign_stmt_2803_to_assign_stmt_2809)
      assign_stmt_2803_to_assign_stmt_2809__exit__ <-| (assign_stmt_2803_to_assign_stmt_2809)
      // if-statement  
      //  file prog.linked.opt.aa, line 1184
      ;;[if_stmt_2810_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2810__entry__ |-> (if_stmt_2810_dead_link)
      if_stmt_2810__exit__ <-| (if_stmt_2810_dead_link)
      ;;[if_stmt_2810_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2810__entry__ |-> (if_stmt_2810_eval_test)
      $P [R_iNsTr_1_2811_place]
      R_iNsTr_1_2811_place <-| (if_stmt_2810_eval_test)
      ;;[if_stmt_2810_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2810_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_2811_place |-> (if_stmt_2810_if_link if_stmt_2810_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_2810_if_link)
      $P [bb_0_bbx_xnphx_xpreheader]
      bb_0_bbx_xnphx_xpreheader <-| (if_stmt_2810_else_link)
      ::[assign_stmt_2832_to_assign_stmt_2845] 
      {
        // start:  		tmp1 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1195
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2831_sample_start_] 
        $T[ADD_u64_u64_2831_sample_completed_] 
        $T[ADD_u64_u64_2831_update_start_] 
        $T[ADD_u64_u64_2831_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_2831_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_2831_sample_start_
        ;;[ADD_u64_u64_2831_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2831_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2831_sample_start_ &-> (ADD_u64_u64_2831_Sample)
        ADD_u64_u64_2831_sample_completed_ <-& (ADD_u64_u64_2831_Sample)
        ADD_u64_u64_2831_sample_completed_ &-> ($null)
        ADD_u64_u64_2831_update_start_ &-> (ADD_u64_u64_2831_Update)
        ADD_u64_u64_2831_update_completed_ <-& (ADD_u64_u64_2831_Update)
        // Target expression
        // (as target) tmp1
        // start: WAR dependencies for tmp1
        // done: WAR dependencies for tmp1
        // end:  		tmp1 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp2 := ($cast ($uint<32>) tmp1 )
        //  file prog.linked.opt.aa, line 1196
        // Source expression
        // ($cast ($uint<32>) tmp1 )
        $T[type_cast_2835_sample_start_] 
        $T[type_cast_2835_sample_completed_] 
        $T[type_cast_2835_update_start_] 
        $T[type_cast_2835_update_completed_] 
        // tmp1
        // start: Forward dependencies from tmp1 to transition type_cast_2835_sample_start_
        type_cast_2835_sample_start_ <-& (ADD_u64_u64_2831_update_completed_)
        // done: Forward dependencies from tmp1 to transition type_cast_2835_sample_start_
        ;;[type_cast_2835_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2835_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2835_sample_start_ &-> (type_cast_2835_Sample)
        type_cast_2835_sample_completed_ <-& (type_cast_2835_Sample)
        type_cast_2835_sample_completed_ &-> ($null)
        type_cast_2835_update_start_ &-> (type_cast_2835_Update)
        type_cast_2835_update_completed_ <-& (type_cast_2835_Update)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := ($cast ($uint<32>) tmp1 )
        // start:  		scevgep := @(code_block[indvar])
        //  file prog.linked.opt.aa, line 1197
        // Source expression
        // @(code_block[indvar])
        $T[addr_of_2840_sample_start_] 
        $T[addr_of_2840_sample_completed_] 
        $T[addr_of_2840_update_start_] 
        $T[addr_of_2840_update_completed_] 
        $T[array_obj_ref_2839_root_address_calculated] 
        $T[array_obj_ref_2839_offset_calculated] 
        $T[array_obj_ref_2839_index_resized_0] 
        $T[array_obj_ref_2839_index_scaled_0] 
        $T[array_obj_ref_2839_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_2839_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_2839_index_computed_0
        ;;[array_obj_ref_2839_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2839_index_computed_0 &-> (array_obj_ref_2839_index_resize_0)
        array_obj_ref_2839_index_resized_0 <-& (array_obj_ref_2839_index_resize_0)
        ;;[array_obj_ref_2839_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2839_index_resized_0 &-> (array_obj_ref_2839_index_scale_0)
        array_obj_ref_2839_index_scaled_0 <-& (array_obj_ref_2839_index_scale_0)
        ;;[array_obj_ref_2839_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2839_index_scaled_0 &-> (array_obj_ref_2839_final_index_sum_regn)
        array_obj_ref_2839_offset_calculated <-& (array_obj_ref_2839_final_index_sum_regn)
        ;;[array_obj_ref_2839_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2839_offset_calculated &-> (array_obj_ref_2839_base_plus_offset)
        array_obj_ref_2839_root_address_calculated <-& (array_obj_ref_2839_base_plus_offset)
        ;;[addr_of_2840_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2840_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2840_sample_start_ <-& (array_obj_ref_2839_root_address_calculated)
        addr_of_2840_sample_start_ &-> (addr_of_2840_request)
        addr_of_2840_sample_completed_ <-& (addr_of_2840_request)
        addr_of_2840_update_start_ &-> (addr_of_2840_complete)
        addr_of_2840_update_completed_ <-& (addr_of_2840_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(code_block[indvar])
        // start:  		iNsTr_8 := ->(scevgep)
        //  file prog.linked.opt.aa, line 1198
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_2844_sample_start_] 
        $T[ptr_deref_2844_sample_completed_] 
        $T[ptr_deref_2844_update_start_] 
        $T[ptr_deref_2844_update_completed_] 
        $T[ptr_deref_2844_base_address_calculated] 
        // scevgep
        $T[ptr_deref_2844_word_address_calculated] 
        $T[ptr_deref_2844_root_address_calculated] 
        $T[ptr_deref_2844_base_address_resized] 
        ;;[ptr_deref_2844_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_2844_base_address_calculated &-> (ptr_deref_2844_base_addr_resize)
        ptr_deref_2844_base_address_resized <-& (ptr_deref_2844_base_addr_resize)
        ;;[ptr_deref_2844_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_2844_base_address_resized &-> (ptr_deref_2844_base_plus_offset)
        ptr_deref_2844_root_address_calculated <-& (ptr_deref_2844_base_plus_offset)
        ;;[ptr_deref_2844_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_2844_root_address_calculated &-> (ptr_deref_2844_word_addrgen)
        ptr_deref_2844_word_address_calculated <-& (ptr_deref_2844_word_addrgen)
        ;;[ptr_deref_2844_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_2844_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_2844_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_2844_sample_start_ <-& (ptr_deref_2844_word_address_calculated)
        ptr_deref_2844_sample_start_ &-> (ptr_deref_2844_Sample)
        ptr_deref_2844_sample_completed_ <-& (ptr_deref_2844_Sample)
        ptr_deref_2844_sample_completed_ &-> ($null)
        ptr_deref_2844_update_start_ &-> (ptr_deref_2844_Update)
        ptr_deref_2844_update_completed_ <-& (ptr_deref_2844_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_2844_base_address_calculated
        ptr_deref_2844_base_address_calculated <-& (addr_of_2840_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_2844_base_address_calculated
        ptr_deref_2844_sample_start_ <-& (ptr_deref_2844_base_address_calculated)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := ->(scevgep)
        // load-store dependencies..
      }
      assign_stmt_2832_to_assign_stmt_2845__entry__ |-> (assign_stmt_2832_to_assign_stmt_2845)
      assign_stmt_2832_to_assign_stmt_2845__exit__ <-| (assign_stmt_2832_to_assign_stmt_2845)
      ::[assign_stmt_2848] 
      {
        // start:  		code_block_decoded := iNsTr_8
        //  file prog.linked.opt.aa, line 1199
        // Source expression
        // iNsTr_8
        // Target expression
        // (as target) code_block_decoded
        $T[WPIPE_code_block_decoded_2846_sample_start_] 
        $T[WPIPE_code_block_decoded_2846_sample_completed_] 
        $T[WPIPE_code_block_decoded_2846_update_start_] 
        $T[WPIPE_code_block_decoded_2846_update_completed_] 
        ;;[WPIPE_code_block_decoded_2846_Sample] 
        {
          // pipe write sample-start code_block_decoded
          $T [req] $T [ack] 
        }
        ;;[WPIPE_code_block_decoded_2846_Update] 
        {
          // pipe write update (complete) code_block_decoded
          $T [req] $T [ack] 
        }
        WPIPE_code_block_decoded_2846_sample_start_ &-> (WPIPE_code_block_decoded_2846_Sample)
        WPIPE_code_block_decoded_2846_sample_completed_ <-& (WPIPE_code_block_decoded_2846_Sample)
        WPIPE_code_block_decoded_2846_update_start_ <-& (WPIPE_code_block_decoded_2846_sample_completed_)
        WPIPE_code_block_decoded_2846_update_start_ &-> (WPIPE_code_block_decoded_2846_Update)
        WPIPE_code_block_decoded_2846_update_completed_ <-& (WPIPE_code_block_decoded_2846_Update)
        // start: Forward dependencies from iNsTr_8 to transition WPIPE_code_block_decoded_2846_sample_start_
        // done: Forward dependencies from iNsTr_8 to transition WPIPE_code_block_decoded_2846_sample_start_
        // end:  		code_block_decoded := iNsTr_8
        // barrier: 		code_block_decoded := iNsTr_8
        // load-store dependencies..
        // pipe read/write dependencies for pipe code_block_decoded
        // read-dependencies for pipe code_block_decoded
        // write-dependencies for pipe code_block_decoded
        // signal dependencies for code_block_decoded
      }
      assign_stmt_2848__entry__ |-> (assign_stmt_2848)
      assign_stmt_2848__exit__ <-| (assign_stmt_2848)
      ::[assign_stmt_2854_to_assign_stmt_2868] 
      {
        // start:  		tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1200
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2853_sample_start_] 
        $T[ADD_u64_u64_2853_sample_completed_] 
        $T[ADD_u64_u64_2853_update_start_] 
        $T[ADD_u64_u64_2853_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_2853_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_2853_sample_start_
        ;;[ADD_u64_u64_2853_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2853_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2853_sample_start_ &-> (ADD_u64_u64_2853_Sample)
        ADD_u64_u64_2853_sample_completed_ <-& (ADD_u64_u64_2853_Sample)
        ADD_u64_u64_2853_sample_completed_ &-> ($null)
        ADD_u64_u64_2853_update_start_ &-> (ADD_u64_u64_2853_Update)
        ADD_u64_u64_2853_update_completed_ <-& (ADD_u64_u64_2853_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		iNsTr_11 := ncols
        //  file prog.linked.opt.aa, line 1201
        // Source expression
        // ncols
        $T[LOAD_ncols_2856_sample_start_] 
        $T[LOAD_ncols_2856_sample_completed_] 
        $T[LOAD_ncols_2856_update_start_] 
        $T[LOAD_ncols_2856_update_completed_] 
        $T[LOAD_ncols_2856_word_address_calculated] 
        $T[LOAD_ncols_2856_root_address_calculated] 
        LOAD_ncols_2856_word_address_calculated <-& (LOAD_ncols_2856_root_address_calculated)
        ;;[LOAD_ncols_2856_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncols_2856_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncols_2856_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncols_2856_sample_start_ <-& (LOAD_ncols_2856_word_address_calculated)
        LOAD_ncols_2856_sample_start_ &-> (LOAD_ncols_2856_Sample)
        LOAD_ncols_2856_sample_completed_ <-& (LOAD_ncols_2856_Sample)
        LOAD_ncols_2856_sample_completed_ &-> ($null)
        LOAD_ncols_2856_update_start_ &-> (LOAD_ncols_2856_Update)
        LOAD_ncols_2856_update_completed_ <-& (LOAD_ncols_2856_Update)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ncols
        // start:  		iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
        //  file prog.linked.opt.aa, line 1202
        // Source expression
        // ($cast ($uint<32>) iNsTr_11 )
        $T[type_cast_2860_sample_start_] 
        $T[type_cast_2860_sample_completed_] 
        $T[type_cast_2860_update_start_] 
        $T[type_cast_2860_update_completed_] 
        // iNsTr_11
        // start: Forward dependencies from iNsTr_11 to transition type_cast_2860_sample_start_
        type_cast_2860_sample_start_ <-& (LOAD_ncols_2856_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition type_cast_2860_sample_start_
        ;;[type_cast_2860_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2860_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2860_sample_start_ &-> (type_cast_2860_Sample)
        type_cast_2860_sample_completed_ <-& (type_cast_2860_Sample)
        type_cast_2860_sample_completed_ &-> ($null)
        type_cast_2860_update_start_ &-> (type_cast_2860_Update)
        type_cast_2860_update_completed_ <-& (type_cast_2860_Update)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
        // start:  		iNsTr_13 := (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
        //  file prog.linked.opt.aa, line 1203
        // Source expression
        // (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
        $T[SLT_i32_u1_2867_sample_start_] 
        $T[SLT_i32_u1_2867_sample_completed_] 
        $T[SLT_i32_u1_2867_update_start_] 
        $T[SLT_i32_u1_2867_update_completed_] 
        // ($bitcast ($int<32>) tmp2 )
        // tmp2
        // ($bitcast ($int<32>) iNsTr_12 )
        // iNsTr_12
        // start: Forward dependencies from ($bitcast ($int<32>) tmp2 ) to transition SLT_i32_u1_2867_sample_start_
        // done: Forward dependencies from ($bitcast ($int<32>) tmp2 ) to transition SLT_i32_u1_2867_sample_start_
        // start: Forward dependencies from ($bitcast ($int<32>) iNsTr_12 ) to transition SLT_i32_u1_2867_sample_start_
        SLT_i32_u1_2867_sample_start_ <-& (type_cast_2860_update_completed_)
        // done: Forward dependencies from ($bitcast ($int<32>) iNsTr_12 ) to transition SLT_i32_u1_2867_sample_start_
        ;;[SLT_i32_u1_2867_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SLT_i32_u1_2867_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SLT_i32_u1_2867_sample_start_ &-> (SLT_i32_u1_2867_Sample)
        SLT_i32_u1_2867_sample_completed_ <-& (SLT_i32_u1_2867_Sample)
        SLT_i32_u1_2867_sample_completed_ &-> ($null)
        SLT_i32_u1_2867_update_start_ &-> (SLT_i32_u1_2867_Update)
        SLT_i32_u1_2867_update_completed_ <-& (SLT_i32_u1_2867_Update)
        // Target expression
        // (as target) iNsTr_13
        // start: WAR dependencies for iNsTr_13
        // done: WAR dependencies for iNsTr_13
        // end:  		iNsTr_13 := (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
        // load-store dependencies..
      }
      assign_stmt_2854_to_assign_stmt_2868__entry__ |-> (assign_stmt_2854_to_assign_stmt_2868)
      assign_stmt_2854_to_assign_stmt_2868__exit__ <-| (assign_stmt_2854_to_assign_stmt_2868)
      // if-statement  
      //  file prog.linked.opt.aa, line 1204
      ;;[if_stmt_2869_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2869__entry__ |-> (if_stmt_2869_dead_link)
      if_stmt_2869__exit__ <-| (if_stmt_2869_dead_link)
      ;;[if_stmt_2869_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2869__entry__ |-> (if_stmt_2869_eval_test)
      $P [R_iNsTr_13_2870_place]
      R_iNsTr_13_2870_place <-| (if_stmt_2869_eval_test)
      ;;[if_stmt_2869_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2869_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_13_2870_place |-> (if_stmt_2869_if_link if_stmt_2869_else_link)
      $P [bbx_xnph_bbx_xnph]
      bbx_xnph_bbx_xnph <-| (if_stmt_2869_if_link)
      $P [bbx_xnph_xx_x_crit_edgex_xloopexit]
      bbx_xnph_xx_x_crit_edgex_xloopexit <-| (if_stmt_2869_else_link)
      ::[assign_stmt_2880] 
      {
        // start:  		iNsTr_3 := Nitr_required
        //  file prog.linked.opt.aa, line 1214
        // Source expression
        // Nitr_required
        $T[LOAD_Nitr_required_2879_sample_start_] 
        $T[LOAD_Nitr_required_2879_sample_completed_] 
        $T[LOAD_Nitr_required_2879_update_start_] 
        $T[LOAD_Nitr_required_2879_update_completed_] 
        $T[LOAD_Nitr_required_2879_word_address_calculated] 
        $T[LOAD_Nitr_required_2879_root_address_calculated] 
        LOAD_Nitr_required_2879_word_address_calculated <-& (LOAD_Nitr_required_2879_root_address_calculated)
        ;;[LOAD_Nitr_required_2879_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_Nitr_required_2879_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_Nitr_required_2879_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_Nitr_required_2879_sample_start_ <-& (LOAD_Nitr_required_2879_word_address_calculated)
        LOAD_Nitr_required_2879_sample_start_ &-> (LOAD_Nitr_required_2879_Sample)
        LOAD_Nitr_required_2879_sample_completed_ <-& (LOAD_Nitr_required_2879_Sample)
        LOAD_Nitr_required_2879_sample_completed_ &-> ($null)
        LOAD_Nitr_required_2879_update_start_ &-> (LOAD_Nitr_required_2879_Update)
        LOAD_Nitr_required_2879_update_completed_ <-& (LOAD_Nitr_required_2879_Update)
        // Target expression
        // (as target) iNsTr_3
        // start: WAR dependencies for iNsTr_3
        // done: WAR dependencies for iNsTr_3
        // end:  		iNsTr_3 := Nitr_required
        // load-store dependencies..
      }
      assign_stmt_2880__entry__ |-> (assign_stmt_2880)
      assign_stmt_2880__exit__ <-| (assign_stmt_2880)
      ::[assign_stmt_2883] 
      {
        // start:  		nitr_required := iNsTr_3
        //  file prog.linked.opt.aa, line 1215
        // Source expression
        // iNsTr_3
        // Target expression
        // (as target) nitr_required
        $T[WPIPE_nitr_required_2881_sample_start_] 
        $T[WPIPE_nitr_required_2881_sample_completed_] 
        $T[WPIPE_nitr_required_2881_update_start_] 
        $T[WPIPE_nitr_required_2881_update_completed_] 
        ;;[WPIPE_nitr_required_2881_Sample] 
        {
          // pipe write sample-start nitr_required
          $T [req] $T [ack] 
        }
        ;;[WPIPE_nitr_required_2881_Update] 
        {
          // pipe write update (complete) nitr_required
          $T [req] $T [ack] 
        }
        WPIPE_nitr_required_2881_sample_start_ &-> (WPIPE_nitr_required_2881_Sample)
        WPIPE_nitr_required_2881_sample_completed_ <-& (WPIPE_nitr_required_2881_Sample)
        WPIPE_nitr_required_2881_update_start_ <-& (WPIPE_nitr_required_2881_sample_completed_)
        WPIPE_nitr_required_2881_update_start_ &-> (WPIPE_nitr_required_2881_Update)
        WPIPE_nitr_required_2881_update_completed_ <-& (WPIPE_nitr_required_2881_Update)
        // start: Forward dependencies from iNsTr_3 to transition WPIPE_nitr_required_2881_sample_start_
        // done: Forward dependencies from iNsTr_3 to transition WPIPE_nitr_required_2881_sample_start_
        // end:  		nitr_required := iNsTr_3
        // barrier: 		nitr_required := iNsTr_3
        // load-store dependencies..
        // pipe read/write dependencies for pipe nitr_required
        // read-dependencies for pipe nitr_required
        // write-dependencies for pipe nitr_required
        // signal dependencies for nitr_required
      }
      assign_stmt_2883__entry__ |-> (assign_stmt_2883)
      assign_stmt_2883__exit__ <-| (assign_stmt_2883)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1189
      ;;[merge_stmt_2816_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2816__entry__ |-> (merge_stmt_2816_dead_link)
      merge_stmt_2816__exit__ <-| (merge_stmt_2816_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1189  --------------------------
      ||[bb_0_bbx_xnphx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnphx_xpreheader |-> (bb_0_bbx_xnphx_xpreheader_PhiReq)
      $P [merge_stmt_2816_PhiReqMerge] 
      merge_stmt_2816_PhiReqMerge <-| ( bb_0_bbx_xnphx_xpreheader_PhiReq )
      ||[merge_stmt_2816_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2816_PhiReqMerge |-> (merge_stmt_2816_PhiAck)
      merge_stmt_2816__exit__  <-| (merge_stmt_2816_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1189  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1192
      //---------------------   merge statement  file prog.linked.opt.aa, line 1192  --------------------------
      ||[bbx_xnph_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_2819] 
        {
          ||[phi_stmt_2819_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) tmp ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) tmp )
            ;;[type_cast_2822] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2819_req] 
        }
      }
      bbx_xnph_bbx_xnph |-> (bbx_xnph_bbx_xnph_PhiReq)
      ||[bbx_xnphx_xpreheader_bbx_xnph_PhiReq] 
      {
        ;;[phi_stmt_2819] 
        {
          ||[phi_stmt_2819_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) tmp ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_2825_konst_delay_trans] $delay
          }
          $T [phi_stmt_2819_req] 
        }
      }
      bbx_xnphx_xpreheader_bbx_xnph |-> (bbx_xnphx_xpreheader_bbx_xnph_PhiReq)
      $P [merge_stmt_2818_PhiReqMerge] 
      merge_stmt_2818_PhiReqMerge <-| ( bbx_xnph_bbx_xnph_PhiReq  bbx_xnphx_xpreheader_bbx_xnph_PhiReq )
      ||[merge_stmt_2818_PhiAck] 
      {
        $T [phi_stmt_2819_ack] 
      }
      merge_stmt_2818_PhiReqMerge |-> (merge_stmt_2818_PhiAck)
      merge_stmt_2818__exit__  <-| (merge_stmt_2818_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1192  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1209
      ;;[merge_stmt_2875_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2875__entry__ |-> (merge_stmt_2875_dead_link)
      merge_stmt_2875__exit__ <-| (merge_stmt_2875_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1209  --------------------------
      ||[bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bbx_xnph_xx_x_crit_edgex_xloopexit |-> (bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_2875_PhiReqMerge] 
      merge_stmt_2875_PhiReqMerge <-| ( bbx_xnph_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_2875_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2875_PhiReqMerge |-> (merge_stmt_2875_PhiAck)
      merge_stmt_2875__exit__  <-| (merge_stmt_2875_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1209  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1212
      //---------------------   merge statement  file prog.linked.opt.aa, line 1212  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_2877_PhiReqMerge] 
      merge_stmt_2877_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_2877_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2877_PhiReqMerge |-> (merge_stmt_2877_PhiAck)
      merge_stmt_2877__exit__  <-| (merge_stmt_2877_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1212  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1217
      //---------------------   merge statement  file prog.linked.opt.aa, line 1217  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_2885_PhiReqMerge] 
      merge_stmt_2885_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_2885_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2885_PhiReqMerge |-> (merge_stmt_2885_PhiAck)
      merge_stmt_2885__exit__  <-| (merge_stmt_2885_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1217  --------------------------
      assign_stmt_2803_to_assign_stmt_2809__entry__ <-| (branch_block_stmt_2800__entry__)
      if_stmt_2810__entry__ <-| (assign_stmt_2803_to_assign_stmt_2809__exit__)
      merge_stmt_2816__entry__ <-| (if_stmt_2810__exit__)
      bbx_xnphx_xpreheader_bbx_xnph <-| (merge_stmt_2816__exit__)
      assign_stmt_2832_to_assign_stmt_2845__entry__ <-| (merge_stmt_2818__exit__)
      assign_stmt_2848__entry__ <-| (assign_stmt_2832_to_assign_stmt_2845__exit__)
      assign_stmt_2854_to_assign_stmt_2868__entry__ <-| (assign_stmt_2848__exit__)
      if_stmt_2869__entry__ <-| (assign_stmt_2854_to_assign_stmt_2868__exit__)
      merge_stmt_2875__entry__ <-| (if_stmt_2869__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_2875__exit__)
      assign_stmt_2880__entry__ <-| (merge_stmt_2877__exit__)
      assign_stmt_2883__entry__ <-| (assign_stmt_2880__exit__)
      return__ <-| (assign_stmt_2883__exit__)
      merge_stmt_2885__exit__ |-> (branch_block_stmt_2800__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1189
    // constant-object-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1192
    // constant-object-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1209
    // constant-object-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1212
    // constant-object-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1217
    // constant-object-declarations for block %send_output%body
    //  file prog.linked.opt.aa, line 1180
    // constant-object-declarations for block %send_output
    //  file prog.linked.opt.aa, line 1175
    // constant-declarations for block %send_output%body
    //  file prog.linked.opt.aa, line 1180
    // ncols
    $constant $W[LOAD_ncols_2802_word_address_0] : $pointer<memory_space_11> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2807_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1184
    // constant-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1189
    // constant-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1192
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) tmp ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1193
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2825_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2830_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // @(code_block[indvar])
    $constant $W[array_obj_ref_2839_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2839_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_2844_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2852_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ncols
    $constant $W[LOAD_ncols_2856_word_address_0] : $pointer<memory_space_11> := _b0
    // if-statement  
    //  file prog.linked.opt.aa, line 1204
    // constant-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1209
    // constant-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1212
    // Nitr_required
    $constant $W[LOAD_Nitr_required_2879_word_address_0] : $pointer<memory_space_0> := _b0
    // constant-declarations for block %send_output%body%
    //  file prog.linked.opt.aa, line 1217
    // block %send_output%body
    //  file prog.linked.opt.aa, line 1180
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 1182
    // ncols
    $W[LOAD_ncols_2802_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_2803] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1183
    // iNsTr_1
    $W[iNsTr_1_2809] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1184
    // merge-statement  
    //  file prog.linked.opt.aa, line 1192
    // 			$phi indvar := 			  ($cast ($uint<64>) tmp ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1193
    // ($cast ($uint<64>) tmp )
    $intermediate $W[type_cast_2822_wire] : $int<64>
    // indvar
    $W[indvar_2819] : $int<64>
    // 		tmp1 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1195
    // tmp1
    $W[tmp1_2832] : $int<64>
    // 		tmp2 := ($cast ($uint<32>) tmp1 )
    //  file prog.linked.opt.aa, line 1196
    // tmp2
    $W[tmp2_2836] : $int<32>
    // 		scevgep := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 1197
    // @(code_block[indvar])
    $intermediate $W[R_indvar_2838_resized] : $int<10>
    $intermediate $W[R_indvar_2838_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2839_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2839_root_address] : $int<10>
    // scevgep
    $W[scevgep_2841] : $int<32>
    // 		iNsTr_8 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1198
    // ->(scevgep)
    $intermediate $W[ptr_deref_2844_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_2844_root_address] : $int<10>
    $W[ptr_deref_2844_word_address_0] : $pointer<memory_space_3>
    $W[ptr_deref_2844_data_0] : $int<32>
    // iNsTr_8
    $W[iNsTr_8_2845] : $float<8,23>
    // 		code_block_decoded := iNsTr_8
    //  file prog.linked.opt.aa, line 1199
    // code_block_decoded
    // 		tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1200
    // tmp
    $W[tmp_2854] : $int<64>
    // 		iNsTr_11 := ncols
    //  file prog.linked.opt.aa, line 1201
    // ncols
    $W[LOAD_ncols_2856_data_0] : $int<16>
    // iNsTr_11
    $W[iNsTr_11_2857] : $int<16>
    // 		iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
    //  file prog.linked.opt.aa, line 1202
    // iNsTr_12
    $W[iNsTr_12_2861] : $int<32>
    // 		iNsTr_13 := (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
    //  file prog.linked.opt.aa, line 1203
    // ($bitcast ($int<32>) tmp2 )
    $intermediate $W[type_cast_2864_wire] : $int<32>
    // ($bitcast ($int<32>) iNsTr_12 )
    $intermediate $W[type_cast_2866_wire] : $int<32>
    // iNsTr_13
    $W[iNsTr_13_2868] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1204
    // 		iNsTr_3 := Nitr_required
    //  file prog.linked.opt.aa, line 1214
    // Nitr_required
    $W[LOAD_Nitr_required_2879_data_0] : $int<16>
    // iNsTr_3
    $W[iNsTr_3_2880] : $int<16>
    // 		nitr_required := iNsTr_3
    //  file prog.linked.opt.aa, line 1215
    // nitr_required
    // datapath-instances for block %send_output%body
    //  file prog.linked.opt.aa, line 1180
    // 		iNsTr_0 := ncols
    //  file prog.linked.opt.aa, line 1182
    // ncols
    $load [LOAD_ncols_2802_load_0] $from memory_space_11 (LOAD_ncols_2802_word_address_0) (LOAD_ncols_2802_data_0) 
    $delay LOAD_ncols_2802_load_0 4
    &/ [LOAD_ncols_2802_gather_scatter] (LOAD_ncols_2802_data_0) (iNsTr_0_2803) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1183
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2808_inst] (iNsTr_0_2803 type_cast_2807_wire_constant) (iNsTr_1_2809)   
    $buffering  $out EQ_u16_u1_2808_inst iNsTr_1_2809 1
    $delay EQ_u16_u1_2808_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1184
    ==0? [if_stmt_2810_branch] (iNsTr_1_2809)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1192
    // 			$phi indvar := 			  ($cast ($uint<64>) tmp ) $on bbx_xnph_bbx_xnph			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnphx_xpreheader_bbx_xnph // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1193
    // ($cast ($uint<64>) tmp )
    # := [type_cast_2822_inst] (tmp_2854) (type_cast_2822_wire)   
    $buffering  $out type_cast_2822_inst type_cast_2822_wire 1
    $delay type_cast_2822_inst 1
    $phi [phi_stmt_2819] (type_cast_2822_wire type_cast_2825_wire_constant) ( indvar_2819 ) 
    // 		tmp1 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1195
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2831_inst] (indvar_2819 type_cast_2830_wire_constant) (tmp1_2832)   
    $buffering  $out ADD_u64_u64_2831_inst tmp1_2832 1
    $delay ADD_u64_u64_2831_inst 1
    // 		tmp2 := ($cast ($uint<32>) tmp1 )
    //  file prog.linked.opt.aa, line 1196
    // ($cast ($uint<32>) tmp1 )
    # := [type_cast_2835_inst] (tmp1_2832) (tmp2_2836)   
    $buffering  $out type_cast_2835_inst tmp2_2836 1
    $delay type_cast_2835_inst 1
    // 		scevgep := @(code_block[indvar])
    //  file prog.linked.opt.aa, line 1197
    &/ [array_obj_ref_2839_index_0_resize] (indvar_2819) (R_indvar_2838_resized) 
    $flowthrough 
    &/ [array_obj_ref_2839_index_0_rename] (R_indvar_2838_resized) (R_indvar_2838_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2839_index_offset] (R_indvar_2838_scaled) (array_obj_ref_2839_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2839_root_address_inst] (array_obj_ref_2839_final_offset) (array_obj_ref_2839_root_address) 
    $flowthrough 
    # := [addr_of_2840_final_reg] (array_obj_ref_2839_root_address) (scevgep_2841)   
    $buffering  $out addr_of_2840_final_reg scevgep_2841 1
    // 		iNsTr_8 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1198
    // ->(scevgep)
    &/ [ptr_deref_2844_base_resize] (scevgep_2841) (ptr_deref_2844_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_2844_root_address_inst] (ptr_deref_2844_resized_base_address) (ptr_deref_2844_root_address) 
    $flowthrough 
    &/ [ptr_deref_2844_addr_0] (ptr_deref_2844_root_address) (ptr_deref_2844_word_address_0) 
    $flowthrough 
    $load [ptr_deref_2844_load_0] $from memory_space_3 (ptr_deref_2844_word_address_0) (ptr_deref_2844_data_0) 
    $delay ptr_deref_2844_load_0 4
    &/ [ptr_deref_2844_gather_scatter] (ptr_deref_2844_data_0) (iNsTr_8_2845) 
    $flowthrough 
    // 		code_block_decoded := iNsTr_8
    //  file prog.linked.opt.aa, line 1199
    // code_block_decoded
    $ioport $out [WPIPE_code_block_decoded_2846_inst]  (iNsTr_8_2845) (code_block_decoded) 
    // 		tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1200
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2853_inst] (indvar_2819 type_cast_2852_wire_constant) (tmp_2854)   
    $buffering  $out ADD_u64_u64_2853_inst tmp_2854 1
    $delay ADD_u64_u64_2853_inst 1
    // 		iNsTr_11 := ncols
    //  file prog.linked.opt.aa, line 1201
    // ncols
    $load [LOAD_ncols_2856_load_0] $from memory_space_11 (LOAD_ncols_2856_word_address_0) (LOAD_ncols_2856_data_0) 
    $delay LOAD_ncols_2856_load_0 4
    &/ [LOAD_ncols_2856_gather_scatter] (LOAD_ncols_2856_data_0) (iNsTr_11_2857) 
    $flowthrough 
    // 		iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
    //  file prog.linked.opt.aa, line 1202
    // ($cast ($uint<32>) iNsTr_11 )
    # := [type_cast_2860_inst] (iNsTr_11_2857) (iNsTr_12_2861)   
    $buffering  $out type_cast_2860_inst iNsTr_12_2861 1
    $delay type_cast_2860_inst 1
    // 		iNsTr_13 := (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
    //  file prog.linked.opt.aa, line 1203
    // ($bitcast ($int<32>) tmp2 )
    # := [type_cast_2864_inst] (tmp2_2836) (type_cast_2864_wire)   $flowthrough
    $delay type_cast_2864_inst 0
    // ($bitcast ($int<32>) iNsTr_12 )
    # := [type_cast_2866_inst] (iNsTr_12_2861) (type_cast_2866_wire)   $flowthrough
    $delay type_cast_2866_inst 0
    // (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
    $S<$S[SLT_i32_u1_2867_inst] (type_cast_2864_wire type_cast_2866_wire) (iNsTr_13_2868)   
    $buffering  $out SLT_i32_u1_2867_inst iNsTr_13_2868 1
    $delay SLT_i32_u1_2867_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1204
    ==0? [if_stmt_2869_branch] (iNsTr_13_2868)
    // 		iNsTr_3 := Nitr_required
    //  file prog.linked.opt.aa, line 1214
    // Nitr_required
    $load [LOAD_Nitr_required_2879_load_0] $from memory_space_0 (LOAD_Nitr_required_2879_word_address_0) (LOAD_Nitr_required_2879_data_0) 
    $delay LOAD_Nitr_required_2879_load_0 4
    &/ [LOAD_Nitr_required_2879_gather_scatter] (LOAD_Nitr_required_2879_data_0) (iNsTr_3_2880) 
    $flowthrough 
    // 		nitr_required := iNsTr_3
    //  file prog.linked.opt.aa, line 1215
    // nitr_required
    $ioport $out [WPIPE_nitr_required_2881_inst]  (iNsTr_3_2880) (nitr_required) 
  }
  // end data-path
  // 		iNsTr_0 := ncols
  //  file prog.linked.opt.aa, line 1182
  // ncols
  LOAD_ncols_2802_gather_scatter <=> (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Update/LOAD_ncols_2802_Merge/merge_req) (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Update/LOAD_ncols_2802_Merge/merge_ack)
  LOAD_ncols_2802_load_0 <=> (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Sample/word_access_start/word_0/rr branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Update/word_access_complete/word_0/cr) (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Sample/word_access_start/word_0/ra branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/LOAD_ncols_2802_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1183
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_2808_inst <=> (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/EQ_u16_u1_2808_Sample/rr branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/EQ_u16_u1_2808_Update/cr) (branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/EQ_u16_u1_2808_Sample/ra branch_block_stmt_2800/assign_stmt_2803_to_assign_stmt_2809/EQ_u16_u1_2808_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1184
  if_stmt_2810_branch <=> (branch_block_stmt_2800/if_stmt_2810_eval_test/branch_req) (branch_block_stmt_2800/if_stmt_2810_else_link/else_choice_transition branch_block_stmt_2800/if_stmt_2810_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1189
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1192
  // ($cast ($uint<64>) tmp )
  type_cast_2822_inst <=> (branch_block_stmt_2800/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_sources/type_cast_2822/SplitProtocol/Sample/rr branch_block_stmt_2800/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_sources/type_cast_2822/SplitProtocol/Update/cr) (branch_block_stmt_2800/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_sources/type_cast_2822/SplitProtocol/Sample/ra branch_block_stmt_2800/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_sources/type_cast_2822/SplitProtocol/Update/ca)
  phi_stmt_2819 <=> (branch_block_stmt_2800/bbx_xnph_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_req branch_block_stmt_2800/bbx_xnphx_xpreheader_bbx_xnph_PhiReq/phi_stmt_2819/phi_stmt_2819_req) (branch_block_stmt_2800/merge_stmt_2818_PhiAck/phi_stmt_2819_ack)
  // 		tmp1 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1195
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_2831_inst <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ADD_u64_u64_2831_Sample/rr branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ADD_u64_u64_2831_Update/cr) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ADD_u64_u64_2831_Sample/ra branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ADD_u64_u64_2831_Update/ca)
  // 		tmp2 := ($cast ($uint<32>) tmp1 )
  //  file prog.linked.opt.aa, line 1196
  // tmp1
  // ($cast ($uint<32>) tmp1 )
  type_cast_2835_inst <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/type_cast_2835_Sample/rr branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/type_cast_2835_Update/cr) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/type_cast_2835_Sample/ra branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/type_cast_2835_Update/ca)
  // 		scevgep := @(code_block[indvar])
  //  file prog.linked.opt.aa, line 1197
  // indvar
  array_obj_ref_2839_index_0_resize <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_index_resize_0/index_resize_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_index_resize_0/index_resize_ack)
  array_obj_ref_2839_index_0_rename <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_index_scale_0/scale_rename_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_index_scale_0/scale_rename_ack)
  array_obj_ref_2839_index_offset <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_final_index_sum_regn/req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_final_index_sum_regn/ack)
  array_obj_ref_2839_root_address_inst <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_base_plus_offset/sum_rename_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/array_obj_ref_2839_base_plus_offset/sum_rename_ack)
  addr_of_2840_final_reg <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/addr_of_2840_request/req branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/addr_of_2840_complete/req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/addr_of_2840_request/ack branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/addr_of_2840_complete/ack)
  // 		iNsTr_8 := ->(scevgep)
  //  file prog.linked.opt.aa, line 1198
  // scevgep
  ptr_deref_2844_base_resize <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_base_addr_resize/base_resize_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_base_addr_resize/base_resize_ack)
  ptr_deref_2844_root_address_inst <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_base_plus_offset/sum_rename_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_base_plus_offset/sum_rename_ack)
  ptr_deref_2844_addr_0 <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_word_addrgen/root_register_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_word_addrgen/root_register_ack)
  ptr_deref_2844_gather_scatter <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Update/ptr_deref_2844_Merge/merge_req) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Update/ptr_deref_2844_Merge/merge_ack)
  ptr_deref_2844_load_0 <=> (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Sample/word_access_start/word_0/rr branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Update/word_access_complete/word_0/cr) (branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Sample/word_access_start/word_0/ra branch_block_stmt_2800/assign_stmt_2832_to_assign_stmt_2845/ptr_deref_2844_Update/word_access_complete/word_0/ca)
  // 		code_block_decoded := iNsTr_8
  //  file prog.linked.opt.aa, line 1199
  // iNsTr_8
  // code_block_decoded
  WPIPE_code_block_decoded_2846_inst <=> (branch_block_stmt_2800/assign_stmt_2848/WPIPE_code_block_decoded_2846_Sample/req branch_block_stmt_2800/assign_stmt_2848/WPIPE_code_block_decoded_2846_Update/req) (branch_block_stmt_2800/assign_stmt_2848/WPIPE_code_block_decoded_2846_Sample/ack branch_block_stmt_2800/assign_stmt_2848/WPIPE_code_block_decoded_2846_Update/ack)
  // 		tmp := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1200
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_2853_inst <=> (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/ADD_u64_u64_2853_Sample/rr branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/ADD_u64_u64_2853_Update/cr) (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/ADD_u64_u64_2853_Sample/ra branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/ADD_u64_u64_2853_Update/ca)
  // 		iNsTr_11 := ncols
  //  file prog.linked.opt.aa, line 1201
  // ncols
  LOAD_ncols_2856_gather_scatter <=> (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Update/LOAD_ncols_2856_Merge/merge_req) (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Update/LOAD_ncols_2856_Merge/merge_ack)
  LOAD_ncols_2856_load_0 <=> (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Sample/word_access_start/word_0/rr branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Update/word_access_complete/word_0/cr) (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Sample/word_access_start/word_0/ra branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/LOAD_ncols_2856_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := ($cast ($uint<32>) iNsTr_11 )
  //  file prog.linked.opt.aa, line 1202
  // iNsTr_11
  // ($cast ($uint<32>) iNsTr_11 )
  type_cast_2860_inst <=> (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/type_cast_2860_Sample/rr branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/type_cast_2860_Update/cr) (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/type_cast_2860_Sample/ra branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/type_cast_2860_Update/ca)
  // 		iNsTr_13 := (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
  //  file prog.linked.opt.aa, line 1203
  // (($bitcast ($int<32>) tmp2 ) < ($bitcast ($int<32>) iNsTr_12 ))
  // tmp2
  // iNsTr_12
  SLT_i32_u1_2867_inst <=> (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/SLT_i32_u1_2867_Sample/rr branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/SLT_i32_u1_2867_Update/cr) (branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/SLT_i32_u1_2867_Sample/ra branch_block_stmt_2800/assign_stmt_2854_to_assign_stmt_2868/SLT_i32_u1_2867_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1204
  if_stmt_2869_branch <=> (branch_block_stmt_2800/if_stmt_2869_eval_test/branch_req) (branch_block_stmt_2800/if_stmt_2869_else_link/else_choice_transition branch_block_stmt_2800/if_stmt_2869_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1209
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1212
  // 		iNsTr_3 := Nitr_required
  //  file prog.linked.opt.aa, line 1214
  // Nitr_required
  LOAD_Nitr_required_2879_gather_scatter <=> (branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Update/LOAD_Nitr_required_2879_Merge/merge_req) (branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Update/LOAD_Nitr_required_2879_Merge/merge_ack)
  LOAD_Nitr_required_2879_load_0 <=> (branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Sample/word_access_start/word_0/rr branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Update/word_access_complete/word_0/cr) (branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Sample/word_access_start/word_0/ra branch_block_stmt_2800/assign_stmt_2880/LOAD_Nitr_required_2879_Update/word_access_complete/word_0/ca)
  // 		nitr_required := iNsTr_3
  //  file prog.linked.opt.aa, line 1215
  // iNsTr_3
  // nitr_required
  WPIPE_nitr_required_2881_inst <=> (branch_block_stmt_2800/assign_stmt_2883/WPIPE_nitr_required_2881_Sample/req branch_block_stmt_2800/assign_stmt_2883/WPIPE_nitr_required_2881_Update/req) (branch_block_stmt_2800/assign_stmt_2883/WPIPE_nitr_required_2881_Sample/ack branch_block_stmt_2800/assign_stmt_2883/WPIPE_nitr_required_2881_Update/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1217
}
$module [updateMessage] 
{
  // pipe-declarations for block %updateMessage
  //  file prog.linked.opt.aa, line 1221
  // pipe-declarations for block %updateMessage%body
  //  file prog.linked.opt.aa, line 1226
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1235
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1250
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1264
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1269
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1275
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1285
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1289
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1313
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1316
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1325
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1328
  // pipe-declarations for block %updateMessage%body%
  //  file prog.linked.opt.aa, line 1331
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2889] // Branch Block  file prog.linked.opt.aa, line 1226
    {
      $P [branch_block_stmt_2889__entry__]
      branch_block_stmt_2889__entry__ <-| ($entry)
      $P [branch_block_stmt_2889__exit__]
      branch_block_stmt_2889__exit__ |-> ($exit)
      $P [assign_stmt_2892_to_assign_stmt_2898__entry__] 
      $P [assign_stmt_2892_to_assign_stmt_2898__exit__] 
      $P [if_stmt_2899__entry__] 
      $P [if_stmt_2899__exit__] 
      $P [merge_stmt_2905__entry__] 
      $P [merge_stmt_2905__exit__] 
      $P [assign_stmt_2908_to_assign_stmt_2969__entry__] 
      $P [assign_stmt_2908_to_assign_stmt_2969__exit__] 
      $P [bbx_xnph4_bb_2]
      $P [merge_stmt_2971__exit__] 
      $P [assign_stmt_2984_to_assign_stmt_3008__entry__] 
      $P [assign_stmt_2984_to_assign_stmt_3008__exit__] 
      $P [if_stmt_3009__entry__] 
      $P [if_stmt_3009__exit__] 
      $P [merge_stmt_3015__entry__] 
      $P [merge_stmt_3015__exit__] 
      $P [assign_stmt_3019_to_assign_stmt_3024__entry__] 
      $P [assign_stmt_3019_to_assign_stmt_3024__exit__] 
      $P [bb_3_bb_5]
      $P [merge_stmt_3026__exit__] 
      $P [assign_stmt_3030_to_assign_stmt_3039__entry__] 
      $P [assign_stmt_3030_to_assign_stmt_3039__exit__] 
      $P [bb_4_bb_5]
      $P [merge_stmt_3041__exit__] 
      $P [assign_stmt_3060__entry__] 
      $P [assign_stmt_3060__exit__] 
      $P [if_stmt_3061__entry__] 
      $P [if_stmt_3061__exit__] 
      $P [merge_stmt_3067__entry__] 
      $P [merge_stmt_3067__exit__] 
      $P [assign_stmt_3073__entry__] 
      $P [assign_stmt_3073__exit__] 
      $P [bbx_xnph_bb_7]
      $P [merge_stmt_3075__exit__] 
      $P [assign_stmt_3088_to_assign_stmt_3160__entry__] 
      $P [assign_stmt_3088_to_assign_stmt_3160__exit__] 
      $P [if_stmt_3161__entry__] 
      $P [if_stmt_3161__exit__] 
      $P [merge_stmt_3167__entry__] 
      $P [merge_stmt_3167__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_3169__exit__] 
      $P [assign_stmt_3175_to_assign_stmt_3180__entry__] 
      $P [assign_stmt_3175_to_assign_stmt_3180__exit__] 
      $P [if_stmt_3181__entry__] 
      $P [if_stmt_3181__exit__] 
      $P [merge_stmt_3187__entry__] 
      $P [merge_stmt_3187__exit__] 
      $P [xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5]
      $P [merge_stmt_3189__exit__] 
      $P [return__]
      $P [merge_stmt_3191__exit__] 
      ::[assign_stmt_2892_to_assign_stmt_2898] 
      {
        // start:  		iNsTr_0 := nrows
        //  file prog.linked.opt.aa, line 1228
        // Source expression
        // nrows
        $T[LOAD_nrows_2891_sample_start_] 
        $T[LOAD_nrows_2891_sample_completed_] 
        $T[LOAD_nrows_2891_update_start_] 
        $T[LOAD_nrows_2891_update_completed_] 
        $T[LOAD_nrows_2891_word_address_calculated] 
        $T[LOAD_nrows_2891_root_address_calculated] 
        LOAD_nrows_2891_word_address_calculated <-& (LOAD_nrows_2891_root_address_calculated)
        ;;[LOAD_nrows_2891_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_nrows_2891_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_nrows_2891_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_nrows_2891_sample_start_ <-& (LOAD_nrows_2891_word_address_calculated)
        LOAD_nrows_2891_sample_start_ &-> (LOAD_nrows_2891_Sample)
        LOAD_nrows_2891_sample_completed_ <-& (LOAD_nrows_2891_Sample)
        LOAD_nrows_2891_sample_completed_ &-> ($null)
        LOAD_nrows_2891_update_start_ &-> (LOAD_nrows_2891_Update)
        LOAD_nrows_2891_update_completed_ <-& (LOAD_nrows_2891_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := nrows
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1229
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_2897_sample_start_] 
        $T[EQ_u16_u1_2897_sample_completed_] 
        $T[EQ_u16_u1_2897_update_start_] 
        $T[EQ_u16_u1_2897_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2897_sample_start_
        EQ_u16_u1_2897_sample_start_ <-& (LOAD_nrows_2891_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_2897_sample_start_
        ;;[EQ_u16_u1_2897_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_2897_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_2897_sample_start_ &-> (EQ_u16_u1_2897_Sample)
        EQ_u16_u1_2897_sample_completed_ <-& (EQ_u16_u1_2897_Sample)
        EQ_u16_u1_2897_sample_completed_ &-> ($null)
        EQ_u16_u1_2897_update_start_ &-> (EQ_u16_u1_2897_Update)
        EQ_u16_u1_2897_update_completed_ <-& (EQ_u16_u1_2897_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_2892_to_assign_stmt_2898__entry__ |-> (assign_stmt_2892_to_assign_stmt_2898)
      assign_stmt_2892_to_assign_stmt_2898__exit__ <-| (assign_stmt_2892_to_assign_stmt_2898)
      // if-statement  
      //  file prog.linked.opt.aa, line 1230
      ;;[if_stmt_2899_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2899__entry__ |-> (if_stmt_2899_dead_link)
      if_stmt_2899__exit__ <-| (if_stmt_2899_dead_link)
      ;;[if_stmt_2899_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_2899__entry__ |-> (if_stmt_2899_eval_test)
      $P [R_iNsTr_1_2900_place]
      R_iNsTr_1_2900_place <-| (if_stmt_2899_eval_test)
      ;;[if_stmt_2899_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2899_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_2900_place |-> (if_stmt_2899_if_link if_stmt_2899_else_link)
      $P [bb_0_xx_x_crit_edge5]
      bb_0_xx_x_crit_edge5 <-| (if_stmt_2899_if_link)
      $P [bb_0_bbx_xnph4]
      bb_0_bbx_xnph4 <-| (if_stmt_2899_else_link)
      ::[assign_stmt_2908_to_assign_stmt_2969] 
      {
        // start:  		iNsTr_4 := ncol_ind
        //  file prog.linked.opt.aa, line 1237
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_2907_sample_start_] 
        $T[LOAD_ncol_ind_2907_sample_completed_] 
        $T[LOAD_ncol_ind_2907_update_start_] 
        $T[LOAD_ncol_ind_2907_update_completed_] 
        $T[LOAD_ncol_ind_2907_word_address_calculated] 
        $T[LOAD_ncol_ind_2907_root_address_calculated] 
        LOAD_ncol_ind_2907_word_address_calculated <-& (LOAD_ncol_ind_2907_root_address_calculated)
        ;;[LOAD_ncol_ind_2907_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_2907_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_2907_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_2907_sample_start_ <-& (LOAD_ncol_ind_2907_word_address_calculated)
        LOAD_ncol_ind_2907_sample_start_ &-> (LOAD_ncol_ind_2907_Sample)
        LOAD_ncol_ind_2907_sample_completed_ <-& (LOAD_ncol_ind_2907_Sample)
        LOAD_ncol_ind_2907_sample_completed_ &-> ($null)
        LOAD_ncol_ind_2907_update_start_ &-> (LOAD_ncol_ind_2907_Update)
        LOAD_ncol_ind_2907_update_completed_ <-& (LOAD_ncol_ind_2907_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ncol_ind
        // start:  		iNsTr_5 := ($cast ($uint<32>) iNsTr_0 )
        //  file prog.linked.opt.aa, line 1238
        // Source expression
        // ($cast ($uint<32>) iNsTr_0 )
        $T[type_cast_2911_sample_start_] 
        $T[type_cast_2911_sample_completed_] 
        $T[type_cast_2911_update_start_] 
        $T[type_cast_2911_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition type_cast_2911_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition type_cast_2911_sample_start_
        ;;[type_cast_2911_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2911_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2911_sample_start_ &-> (type_cast_2911_Sample)
        type_cast_2911_sample_completed_ <-& (type_cast_2911_Sample)
        type_cast_2911_sample_completed_ &-> ($null)
        type_cast_2911_update_start_ &-> (type_cast_2911_Update)
        type_cast_2911_update_completed_ <-& (type_cast_2911_Update)
        // Target expression
        // (as target) iNsTr_5
        // start: WAR dependencies for iNsTr_5
        // done: WAR dependencies for iNsTr_5
        // end:  		iNsTr_5 := ($cast ($uint<32>) iNsTr_0 )
        // start:  		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        //  file prog.linked.opt.aa, line 1239
        // Source expression
        // (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        $T[ADD_u32_u32_2917_sample_start_] 
        $T[ADD_u32_u32_2917_sample_completed_] 
        $T[ADD_u32_u32_2917_update_start_] 
        $T[ADD_u32_u32_2917_update_completed_] 
        // iNsTr_5
        // start: Forward dependencies from iNsTr_5 to transition ADD_u32_u32_2917_sample_start_
        ADD_u32_u32_2917_sample_start_ <-& (type_cast_2911_update_completed_)
        // done: Forward dependencies from iNsTr_5 to transition ADD_u32_u32_2917_sample_start_
        ;;[ADD_u32_u32_2917_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u32_u32_2917_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u32_u32_2917_sample_start_ &-> (ADD_u32_u32_2917_Sample)
        ADD_u32_u32_2917_sample_completed_ <-& (ADD_u32_u32_2917_Sample)
        ADD_u32_u32_2917_sample_completed_ &-> ($null)
        ADD_u32_u32_2917_update_start_ &-> (ADD_u32_u32_2917_Update)
        ADD_u32_u32_2917_update_completed_ <-& (ADD_u32_u32_2917_Update)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
        // start:  		xx_xneg1 := (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1240
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_2923_sample_start_] 
        $T[ADD_u16_u16_2923_sample_completed_] 
        $T[ADD_u16_u16_2923_update_start_] 
        $T[ADD_u16_u16_2923_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition ADD_u16_u16_2923_sample_start_
        ADD_u16_u16_2923_sample_start_ <-& (LOAD_ncol_ind_2907_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition ADD_u16_u16_2923_sample_start_
        ;;[ADD_u16_u16_2923_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2923_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2923_sample_start_ &-> (ADD_u16_u16_2923_Sample)
        ADD_u16_u16_2923_sample_completed_ <-& (ADD_u16_u16_2923_Sample)
        ADD_u16_u16_2923_sample_completed_ &-> ($null)
        ADD_u16_u16_2923_update_start_ &-> (ADD_u16_u16_2923_Update)
        ADD_u16_u16_2923_update_completed_ <-& (ADD_u16_u16_2923_Update)
        // Target expression
        // (as target) xx_xneg1
        // start: WAR dependencies for xx_xneg1
        // done: WAR dependencies for xx_xneg1
        // end:  		xx_xneg1 := (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		tmp7 := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1241
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_2929_sample_start_] 
        $T[UGT_u16_u1_2929_sample_completed_] 
        $T[UGT_u16_u1_2929_update_start_] 
        $T[UGT_u16_u1_2929_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_2929_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_2929_sample_start_
        ;;[UGT_u16_u1_2929_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_2929_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_2929_sample_start_ &-> (UGT_u16_u1_2929_Sample)
        UGT_u16_u1_2929_sample_completed_ <-& (UGT_u16_u1_2929_Sample)
        UGT_u16_u1_2929_sample_completed_ &-> ($null)
        UGT_u16_u1_2929_update_start_ &-> (UGT_u16_u1_2929_Update)
        UGT_u16_u1_2929_update_completed_ <-& (UGT_u16_u1_2929_Update)
        // Target expression
        // (as target) tmp7
        // start: WAR dependencies for tmp7
        // done: WAR dependencies for tmp7
        // end:  		tmp7 := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1242
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_2935_sample_start_] 
        $T[ADD_u16_u16_2935_sample_completed_] 
        $T[ADD_u16_u16_2935_update_start_] 
        $T[ADD_u16_u16_2935_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_2935_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_2935_sample_start_
        ;;[ADD_u16_u16_2935_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_2935_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_2935_sample_start_ &-> (ADD_u16_u16_2935_Sample)
        ADD_u16_u16_2935_sample_completed_ <-& (ADD_u16_u16_2935_Sample)
        ADD_u16_u16_2935_sample_completed_ &-> ($null)
        ADD_u16_u16_2935_update_start_ &-> (ADD_u16_u16_2935_Update)
        ADD_u16_u16_2935_update_completed_ <-& (ADD_u16_u16_2935_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_7 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 1243
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_2939_sample_start_] 
        $T[type_cast_2939_sample_completed_] 
        $T[type_cast_2939_update_start_] 
        $T[type_cast_2939_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_2939_sample_start_
        type_cast_2939_sample_start_ <-& (ADD_u16_u16_2935_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_2939_sample_start_
        ;;[type_cast_2939_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2939_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2939_sample_start_ &-> (type_cast_2939_Sample)
        type_cast_2939_sample_completed_ <-& (type_cast_2939_Sample)
        type_cast_2939_sample_completed_ &-> ($null)
        type_cast_2939_update_start_ &-> (type_cast_2939_Update)
        type_cast_2939_update_completed_ <-& (type_cast_2939_Update)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop19 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1244
        // Source expression
        // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_2945_sample_start_] 
        $T[ADD_u64_u64_2945_sample_completed_] 
        $T[ADD_u64_u64_2945_update_start_] 
        $T[ADD_u64_u64_2945_update_completed_] 
        // iNsTr_7
        // start: Forward dependencies from iNsTr_7 to transition ADD_u64_u64_2945_sample_start_
        ADD_u64_u64_2945_sample_start_ <-& (type_cast_2939_update_completed_)
        // done: Forward dependencies from iNsTr_7 to transition ADD_u64_u64_2945_sample_start_
        ;;[ADD_u64_u64_2945_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2945_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2945_sample_start_ &-> (ADD_u64_u64_2945_Sample)
        ADD_u64_u64_2945_sample_completed_ <-& (ADD_u64_u64_2945_Sample)
        ADD_u64_u64_2945_sample_completed_ &-> ($null)
        ADD_u64_u64_2945_update_start_ &-> (ADD_u64_u64_2945_Update)
        ADD_u64_u64_2945_update_completed_ <-& (ADD_u64_u64_2945_Update)
        // Target expression
        // (as target) xx_xop19
        // start: WAR dependencies for xx_xop19
        // done: WAR dependencies for xx_xop19
        // end:  		xx_xop19 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp10 := ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 1245
        // Source expression
        // ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_2952_sample_start_] 
        $T[MUX_2952_sample_completed_] 
        $T[MUX_2952_update_start_] 
        $T[MUX_2952_update_completed_] 
        // tmp7
        // xx_xop19
        // start: Forward dependencies from tmp7 to transition MUX_2952_sample_start_
        MUX_2952_sample_start_ <-& (UGT_u16_u1_2929_update_completed_)
        // done: Forward dependencies from tmp7 to transition MUX_2952_sample_start_
        // start: Forward dependencies from xx_xop19 to transition MUX_2952_sample_start_
        MUX_2952_sample_start_ <-& (ADD_u64_u64_2945_update_completed_)
        // done: Forward dependencies from xx_xop19 to transition MUX_2952_sample_start_
        ;;[MUX_2952_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_2952_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_2952_sample_start_ &-> (MUX_2952_start)
        MUX_2952_sample_completed_ <-& (MUX_2952_start)
        MUX_2952_update_start_ &-> (MUX_2952_complete)
        MUX_2952_update_completed_ <-& (MUX_2952_complete)
        // Target expression
        // (as target) tmp10
        // start: WAR dependencies for tmp10
        // done: WAR dependencies for tmp10
        // end:  		tmp10 := ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // start:  		tmp3 := ($cast ($uint<64>) iNsTr_4 )
        //  file prog.linked.opt.aa, line 1246
        // Source expression
        // ($cast ($uint<64>) iNsTr_4 )
        $T[type_cast_2956_sample_start_] 
        $T[type_cast_2956_sample_completed_] 
        $T[type_cast_2956_update_start_] 
        $T[type_cast_2956_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition type_cast_2956_sample_start_
        type_cast_2956_sample_start_ <-& (LOAD_ncol_ind_2907_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition type_cast_2956_sample_start_
        ;;[type_cast_2956_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_2956_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_2956_sample_start_ &-> (type_cast_2956_Sample)
        type_cast_2956_sample_completed_ <-& (type_cast_2956_Sample)
        type_cast_2956_sample_completed_ &-> ($null)
        type_cast_2956_update_start_ &-> (type_cast_2956_Update)
        type_cast_2956_update_completed_ <-& (type_cast_2956_Update)
        // Target expression
        // (as target) tmp3
        // start: WAR dependencies for tmp3
        // done: WAR dependencies for tmp3
        // end:  		tmp3 := ($cast ($uint<64>) iNsTr_4 )
        // start:  		tmp4 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        //  file prog.linked.opt.aa, line 1247
        // Source expression
        // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        $T[ADD_u64_u64_2962_sample_start_] 
        $T[ADD_u64_u64_2962_sample_completed_] 
        $T[ADD_u64_u64_2962_update_start_] 
        $T[ADD_u64_u64_2962_update_completed_] 
        // tmp3
        // start: Forward dependencies from tmp3 to transition ADD_u64_u64_2962_sample_start_
        ADD_u64_u64_2962_sample_start_ <-& (type_cast_2956_update_completed_)
        // done: Forward dependencies from tmp3 to transition ADD_u64_u64_2962_sample_start_
        ;;[ADD_u64_u64_2962_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2962_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2962_sample_start_ &-> (ADD_u64_u64_2962_Sample)
        ADD_u64_u64_2962_sample_completed_ <-& (ADD_u64_u64_2962_Sample)
        ADD_u64_u64_2962_sample_completed_ &-> ($null)
        ADD_u64_u64_2962_update_start_ &-> (ADD_u64_u64_2962_Update)
        ADD_u64_u64_2962_update_completed_ <-& (ADD_u64_u64_2962_Update)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
        // start:  		tmp8 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 1248
        // Source expression
        // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_2968_sample_start_] 
        $T[ADD_u64_u64_2968_sample_completed_] 
        $T[ADD_u64_u64_2968_update_start_] 
        $T[ADD_u64_u64_2968_update_completed_] 
        // tmp3
        // start: Forward dependencies from tmp3 to transition ADD_u64_u64_2968_sample_start_
        ADD_u64_u64_2968_sample_start_ <-& (type_cast_2956_update_completed_)
        // done: Forward dependencies from tmp3 to transition ADD_u64_u64_2968_sample_start_
        ;;[ADD_u64_u64_2968_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2968_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2968_sample_start_ &-> (ADD_u64_u64_2968_Sample)
        ADD_u64_u64_2968_sample_completed_ <-& (ADD_u64_u64_2968_Sample)
        ADD_u64_u64_2968_sample_completed_ &-> ($null)
        ADD_u64_u64_2968_update_start_ &-> (ADD_u64_u64_2968_Update)
        ADD_u64_u64_2968_update_completed_ <-& (ADD_u64_u64_2968_Update)
        // Target expression
        // (as target) tmp8
        // start: WAR dependencies for tmp8
        // done: WAR dependencies for tmp8
        // end:  		tmp8 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // load-store dependencies..
      }
      assign_stmt_2908_to_assign_stmt_2969__entry__ |-> (assign_stmt_2908_to_assign_stmt_2969)
      assign_stmt_2908_to_assign_stmt_2969__exit__ <-| (assign_stmt_2908_to_assign_stmt_2969)
      ::[assign_stmt_2984_to_assign_stmt_3008] 
      {
        // start:  		tmp5 := (tmp4 + indvar)
        //  file prog.linked.opt.aa, line 1253
        // Source expression
        // (tmp4 + indvar)
        $T[ADD_u64_u64_2983_sample_start_] 
        $T[ADD_u64_u64_2983_sample_completed_] 
        $T[ADD_u64_u64_2983_update_start_] 
        $T[ADD_u64_u64_2983_update_completed_] 
        // tmp4
        // indvar
        // start: Forward dependencies from tmp4 to transition ADD_u64_u64_2983_sample_start_
        // done: Forward dependencies from tmp4 to transition ADD_u64_u64_2983_sample_start_
        // start: Forward dependencies from indvar to transition ADD_u64_u64_2983_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_2983_sample_start_
        ;;[ADD_u64_u64_2983_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2983_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2983_sample_start_ &-> (ADD_u64_u64_2983_Sample)
        ADD_u64_u64_2983_sample_completed_ <-& (ADD_u64_u64_2983_Sample)
        ADD_u64_u64_2983_sample_completed_ &-> ($null)
        ADD_u64_u64_2983_update_start_ &-> (ADD_u64_u64_2983_Update)
        ADD_u64_u64_2983_update_completed_ <-& (ADD_u64_u64_2983_Update)
        // Target expression
        // (as target) tmp5
        // start: WAR dependencies for tmp5
        // done: WAR dependencies for tmp5
        // end:  		tmp5 := (tmp4 + indvar)
        // start:  		scevgep18 := @(mem[tmp5])
        //  file prog.linked.opt.aa, line 1254
        // Source expression
        // @(mem[tmp5])
        $T[addr_of_2988_sample_start_] 
        $T[addr_of_2988_sample_completed_] 
        $T[addr_of_2988_update_start_] 
        $T[addr_of_2988_update_completed_] 
        $T[array_obj_ref_2987_root_address_calculated] 
        $T[array_obj_ref_2987_offset_calculated] 
        $T[array_obj_ref_2987_index_resized_0] 
        $T[array_obj_ref_2987_index_scaled_0] 
        $T[array_obj_ref_2987_index_computed_0] 
        // tmp5
        // start: Forward dependencies from tmp5 to transition array_obj_ref_2987_index_computed_0
        array_obj_ref_2987_index_computed_0 <-& (ADD_u64_u64_2983_update_completed_)
        // done: Forward dependencies from tmp5 to transition array_obj_ref_2987_index_computed_0
        ;;[array_obj_ref_2987_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2987_index_computed_0 &-> (array_obj_ref_2987_index_resize_0)
        array_obj_ref_2987_index_resized_0 <-& (array_obj_ref_2987_index_resize_0)
        ;;[array_obj_ref_2987_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2987_index_resized_0 &-> (array_obj_ref_2987_index_scale_0)
        array_obj_ref_2987_index_scaled_0 <-& (array_obj_ref_2987_index_scale_0)
        ;;[array_obj_ref_2987_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2987_index_scaled_0 &-> (array_obj_ref_2987_final_index_sum_regn)
        array_obj_ref_2987_offset_calculated <-& (array_obj_ref_2987_final_index_sum_regn)
        ;;[array_obj_ref_2987_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2987_offset_calculated &-> (array_obj_ref_2987_base_plus_offset)
        array_obj_ref_2987_root_address_calculated <-& (array_obj_ref_2987_base_plus_offset)
        ;;[addr_of_2988_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2988_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2988_sample_start_ <-& (array_obj_ref_2987_root_address_calculated)
        addr_of_2988_sample_start_ &-> (addr_of_2988_request)
        addr_of_2988_sample_completed_ <-& (addr_of_2988_request)
        addr_of_2988_update_start_ &-> (addr_of_2988_complete)
        addr_of_2988_update_completed_ <-& (addr_of_2988_complete)
        // Target expression
        // (as target) scevgep18
        // start: WAR dependencies for scevgep18
        // done: WAR dependencies for scevgep18
        // end:  		scevgep18 := @(mem[tmp5])
        // start:  		tmp9 := (tmp8 + indvar)
        //  file prog.linked.opt.aa, line 1255
        // Source expression
        // (tmp8 + indvar)
        $T[ADD_u64_u64_2993_sample_start_] 
        $T[ADD_u64_u64_2993_sample_completed_] 
        $T[ADD_u64_u64_2993_update_start_] 
        $T[ADD_u64_u64_2993_update_completed_] 
        // tmp8
        // indvar
        // start: Forward dependencies from tmp8 to transition ADD_u64_u64_2993_sample_start_
        // done: Forward dependencies from tmp8 to transition ADD_u64_u64_2993_sample_start_
        // start: Forward dependencies from indvar to transition ADD_u64_u64_2993_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_2993_sample_start_
        ;;[ADD_u64_u64_2993_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_2993_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_2993_sample_start_ &-> (ADD_u64_u64_2993_Sample)
        ADD_u64_u64_2993_sample_completed_ <-& (ADD_u64_u64_2993_Sample)
        ADD_u64_u64_2993_sample_completed_ &-> ($null)
        ADD_u64_u64_2993_update_start_ &-> (ADD_u64_u64_2993_Update)
        ADD_u64_u64_2993_update_completed_ <-& (ADD_u64_u64_2993_Update)
        // Target expression
        // (as target) tmp9
        // start: WAR dependencies for tmp9
        // done: WAR dependencies for tmp9
        // end:  		tmp9 := (tmp8 + indvar)
        // start:  		scevgep := @(mem[tmp9])
        //  file prog.linked.opt.aa, line 1256
        // Source expression
        // @(mem[tmp9])
        $T[addr_of_2998_sample_start_] 
        $T[addr_of_2998_sample_completed_] 
        $T[addr_of_2998_update_start_] 
        $T[addr_of_2998_update_completed_] 
        $T[array_obj_ref_2997_root_address_calculated] 
        $T[array_obj_ref_2997_offset_calculated] 
        $T[array_obj_ref_2997_index_resized_0] 
        $T[array_obj_ref_2997_index_scaled_0] 
        $T[array_obj_ref_2997_index_computed_0] 
        // tmp9
        // start: Forward dependencies from tmp9 to transition array_obj_ref_2997_index_computed_0
        array_obj_ref_2997_index_computed_0 <-& (ADD_u64_u64_2993_update_completed_)
        // done: Forward dependencies from tmp9 to transition array_obj_ref_2997_index_computed_0
        ;;[array_obj_ref_2997_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_2997_index_computed_0 &-> (array_obj_ref_2997_index_resize_0)
        array_obj_ref_2997_index_resized_0 <-& (array_obj_ref_2997_index_resize_0)
        ;;[array_obj_ref_2997_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_2997_index_resized_0 &-> (array_obj_ref_2997_index_scale_0)
        array_obj_ref_2997_index_scaled_0 <-& (array_obj_ref_2997_index_scale_0)
        ;;[array_obj_ref_2997_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_2997_index_scaled_0 &-> (array_obj_ref_2997_final_index_sum_regn)
        array_obj_ref_2997_offset_calculated <-& (array_obj_ref_2997_final_index_sum_regn)
        ;;[array_obj_ref_2997_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_2997_offset_calculated &-> (array_obj_ref_2997_base_plus_offset)
        array_obj_ref_2997_root_address_calculated <-& (array_obj_ref_2997_base_plus_offset)
        ;;[addr_of_2998_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_2998_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_2998_sample_start_ <-& (array_obj_ref_2997_root_address_calculated)
        addr_of_2998_sample_start_ &-> (addr_of_2998_request)
        addr_of_2998_sample_completed_ <-& (addr_of_2998_request)
        addr_of_2998_update_start_ &-> (addr_of_2998_complete)
        addr_of_2998_update_completed_ <-& (addr_of_2998_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(mem[tmp9])
        // start:  		tmp12 := ($cast ($uint<32>) indvar )
        //  file prog.linked.opt.aa, line 1257
        // Source expression
        // ($cast ($uint<32>) indvar )
        $T[type_cast_3002_sample_start_] 
        $T[type_cast_3002_sample_completed_] 
        $T[type_cast_3002_update_start_] 
        $T[type_cast_3002_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition type_cast_3002_sample_start_
        // done: Forward dependencies from indvar to transition type_cast_3002_sample_start_
        ;;[type_cast_3002_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3002_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3002_sample_start_ &-> (type_cast_3002_Sample)
        type_cast_3002_sample_completed_ <-& (type_cast_3002_Sample)
        type_cast_3002_sample_completed_ &-> ($null)
        type_cast_3002_update_start_ &-> (type_cast_3002_Update)
        type_cast_3002_update_completed_ <-& (type_cast_3002_Update)
        // Target expression
        // (as target) tmp12
        // start: WAR dependencies for tmp12
        // done: WAR dependencies for tmp12
        // end:  		tmp12 := ($cast ($uint<32>) indvar )
        // start:  		iNsTr_9 := (tmp12 == iNsTr_6)
        //  file prog.linked.opt.aa, line 1258
        // Source expression
        // (tmp12 == iNsTr_6)
        $T[EQ_u32_u1_3007_sample_start_] 
        $T[EQ_u32_u1_3007_sample_completed_] 
        $T[EQ_u32_u1_3007_update_start_] 
        $T[EQ_u32_u1_3007_update_completed_] 
        // tmp12
        // iNsTr_6
        // start: Forward dependencies from tmp12 to transition EQ_u32_u1_3007_sample_start_
        EQ_u32_u1_3007_sample_start_ <-& (type_cast_3002_update_completed_)
        // done: Forward dependencies from tmp12 to transition EQ_u32_u1_3007_sample_start_
        // start: Forward dependencies from iNsTr_6 to transition EQ_u32_u1_3007_sample_start_
        // done: Forward dependencies from iNsTr_6 to transition EQ_u32_u1_3007_sample_start_
        ;;[EQ_u32_u1_3007_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u32_u1_3007_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u32_u1_3007_sample_start_ &-> (EQ_u32_u1_3007_Sample)
        EQ_u32_u1_3007_sample_completed_ <-& (EQ_u32_u1_3007_Sample)
        EQ_u32_u1_3007_sample_completed_ &-> ($null)
        EQ_u32_u1_3007_update_start_ &-> (EQ_u32_u1_3007_Update)
        EQ_u32_u1_3007_update_completed_ <-& (EQ_u32_u1_3007_Update)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := (tmp12 == iNsTr_6)
        // load-store dependencies..
      }
      assign_stmt_2984_to_assign_stmt_3008__entry__ |-> (assign_stmt_2984_to_assign_stmt_3008)
      assign_stmt_2984_to_assign_stmt_3008__exit__ <-| (assign_stmt_2984_to_assign_stmt_3008)
      // if-statement  
      //  file prog.linked.opt.aa, line 1259
      ;;[if_stmt_3009_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3009__entry__ |-> (if_stmt_3009_dead_link)
      if_stmt_3009__exit__ <-| (if_stmt_3009_dead_link)
      ;;[if_stmt_3009_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3009__entry__ |-> (if_stmt_3009_eval_test)
      $P [R_iNsTr_9_3010_place]
      R_iNsTr_9_3010_place <-| (if_stmt_3009_eval_test)
      ;;[if_stmt_3009_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3009_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_9_3010_place |-> (if_stmt_3009_if_link if_stmt_3009_else_link)
      $P [bb_2_bb_3]
      bb_2_bb_3 <-| (if_stmt_3009_if_link)
      $P [bb_2_bb_4]
      bb_2_bb_4 <-| (if_stmt_3009_else_link)
      ::[assign_stmt_3019_to_assign_stmt_3024] 
      {
        // start:  		iNsTr_11 := ->(scevgep)
        //  file prog.linked.opt.aa, line 1266
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_3018_sample_start_] 
        $T[ptr_deref_3018_sample_completed_] 
        $T[ptr_deref_3018_update_start_] 
        $T[ptr_deref_3018_update_completed_] 
        $T[ptr_deref_3018_base_address_calculated] 
        // scevgep
        $T[ptr_deref_3018_word_address_calculated] 
        $T[ptr_deref_3018_root_address_calculated] 
        $T[ptr_deref_3018_base_address_resized] 
        ;;[ptr_deref_3018_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3018_base_address_calculated &-> (ptr_deref_3018_base_addr_resize)
        ptr_deref_3018_base_address_resized <-& (ptr_deref_3018_base_addr_resize)
        ;;[ptr_deref_3018_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3018_base_address_resized &-> (ptr_deref_3018_base_plus_offset)
        ptr_deref_3018_root_address_calculated <-& (ptr_deref_3018_base_plus_offset)
        ;;[ptr_deref_3018_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3018_root_address_calculated &-> (ptr_deref_3018_word_addrgen)
        ptr_deref_3018_word_address_calculated <-& (ptr_deref_3018_word_addrgen)
        ;;[ptr_deref_3018_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3018_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3018_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3018_sample_start_ <-& (ptr_deref_3018_word_address_calculated)
        ptr_deref_3018_sample_start_ &-> (ptr_deref_3018_Sample)
        ptr_deref_3018_sample_completed_ <-& (ptr_deref_3018_Sample)
        ptr_deref_3018_sample_completed_ &-> ($null)
        ptr_deref_3018_update_start_ &-> (ptr_deref_3018_Update)
        ptr_deref_3018_update_completed_ <-& (ptr_deref_3018_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_3018_base_address_calculated
        // done: Forward dependencies from scevgep to transition ptr_deref_3018_base_address_calculated
        ptr_deref_3018_sample_start_ <-& (ptr_deref_3018_base_address_calculated)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ->(scevgep)
        // start:  		iNsTr_12 := (xx_xneg1 - iNsTr_11)
        //  file prog.linked.opt.aa, line 1267
        // Source expression
        // (xx_xneg1 - iNsTr_11)
        $T[SUB_u16_u16_3023_sample_start_] 
        $T[SUB_u16_u16_3023_sample_completed_] 
        $T[SUB_u16_u16_3023_update_start_] 
        $T[SUB_u16_u16_3023_update_completed_] 
        // xx_xneg1
        // iNsTr_11
        // start: Forward dependencies from xx_xneg1 to transition SUB_u16_u16_3023_sample_start_
        // done: Forward dependencies from xx_xneg1 to transition SUB_u16_u16_3023_sample_start_
        // start: Forward dependencies from iNsTr_11 to transition SUB_u16_u16_3023_sample_start_
        SUB_u16_u16_3023_sample_start_ <-& (ptr_deref_3018_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition SUB_u16_u16_3023_sample_start_
        ;;[SUB_u16_u16_3023_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_3023_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_3023_sample_start_ &-> (SUB_u16_u16_3023_Sample)
        SUB_u16_u16_3023_sample_completed_ <-& (SUB_u16_u16_3023_Sample)
        SUB_u16_u16_3023_sample_completed_ &-> ($null)
        SUB_u16_u16_3023_update_start_ &-> (SUB_u16_u16_3023_Update)
        SUB_u16_u16_3023_update_completed_ <-& (SUB_u16_u16_3023_Update)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := (xx_xneg1 - iNsTr_11)
        // load-store dependencies..
      }
      assign_stmt_3019_to_assign_stmt_3024__entry__ |-> (assign_stmt_3019_to_assign_stmt_3024)
      assign_stmt_3019_to_assign_stmt_3024__exit__ <-| (assign_stmt_3019_to_assign_stmt_3024)
      ::[assign_stmt_3030_to_assign_stmt_3039] 
      {
        // start:  		iNsTr_14 := ->(scevgep)
        //  file prog.linked.opt.aa, line 1271
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_3029_sample_start_] 
        $T[ptr_deref_3029_sample_completed_] 
        $T[ptr_deref_3029_update_start_] 
        $T[ptr_deref_3029_update_completed_] 
        $T[ptr_deref_3029_base_address_calculated] 
        // scevgep
        $T[ptr_deref_3029_word_address_calculated] 
        $T[ptr_deref_3029_root_address_calculated] 
        $T[ptr_deref_3029_base_address_resized] 
        ;;[ptr_deref_3029_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3029_base_address_calculated &-> (ptr_deref_3029_base_addr_resize)
        ptr_deref_3029_base_address_resized <-& (ptr_deref_3029_base_addr_resize)
        ;;[ptr_deref_3029_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3029_base_address_resized &-> (ptr_deref_3029_base_plus_offset)
        ptr_deref_3029_root_address_calculated <-& (ptr_deref_3029_base_plus_offset)
        ;;[ptr_deref_3029_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3029_root_address_calculated &-> (ptr_deref_3029_word_addrgen)
        ptr_deref_3029_word_address_calculated <-& (ptr_deref_3029_word_addrgen)
        ;;[ptr_deref_3029_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3029_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3029_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3029_sample_start_ <-& (ptr_deref_3029_word_address_calculated)
        ptr_deref_3029_sample_start_ &-> (ptr_deref_3029_Sample)
        ptr_deref_3029_sample_completed_ <-& (ptr_deref_3029_Sample)
        ptr_deref_3029_sample_completed_ &-> ($null)
        ptr_deref_3029_update_start_ &-> (ptr_deref_3029_Update)
        ptr_deref_3029_update_completed_ <-& (ptr_deref_3029_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_3029_base_address_calculated
        // done: Forward dependencies from scevgep to transition ptr_deref_3029_base_address_calculated
        ptr_deref_3029_sample_start_ <-& (ptr_deref_3029_base_address_calculated)
        // Target expression
        // (as target) iNsTr_14
        // start: WAR dependencies for iNsTr_14
        // done: WAR dependencies for iNsTr_14
        // end:  		iNsTr_14 := ->(scevgep)
        // start:  		iNsTr_15 := ->(scevgep18)
        //  file prog.linked.opt.aa, line 1272
        // Source expression
        // ->(scevgep18)
        $T[ptr_deref_3033_sample_start_] 
        $T[ptr_deref_3033_sample_completed_] 
        $T[ptr_deref_3033_update_start_] 
        $T[ptr_deref_3033_update_completed_] 
        $T[ptr_deref_3033_base_address_calculated] 
        // scevgep18
        $T[ptr_deref_3033_word_address_calculated] 
        $T[ptr_deref_3033_root_address_calculated] 
        $T[ptr_deref_3033_base_address_resized] 
        ;;[ptr_deref_3033_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3033_base_address_calculated &-> (ptr_deref_3033_base_addr_resize)
        ptr_deref_3033_base_address_resized <-& (ptr_deref_3033_base_addr_resize)
        ;;[ptr_deref_3033_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3033_base_address_resized &-> (ptr_deref_3033_base_plus_offset)
        ptr_deref_3033_root_address_calculated <-& (ptr_deref_3033_base_plus_offset)
        ;;[ptr_deref_3033_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3033_root_address_calculated &-> (ptr_deref_3033_word_addrgen)
        ptr_deref_3033_word_address_calculated <-& (ptr_deref_3033_word_addrgen)
        ;;[ptr_deref_3033_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3033_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3033_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3033_sample_start_ <-& (ptr_deref_3033_word_address_calculated)
        ptr_deref_3033_sample_start_ &-> (ptr_deref_3033_Sample)
        ptr_deref_3033_sample_completed_ <-& (ptr_deref_3033_Sample)
        ptr_deref_3033_sample_completed_ &-> ($null)
        ptr_deref_3033_update_start_ &-> (ptr_deref_3033_Update)
        ptr_deref_3033_update_completed_ <-& (ptr_deref_3033_Update)
        // start: Forward dependencies from scevgep18 to transition ptr_deref_3033_base_address_calculated
        // done: Forward dependencies from scevgep18 to transition ptr_deref_3033_base_address_calculated
        ptr_deref_3033_sample_start_ <-& (ptr_deref_3033_base_address_calculated)
        // Target expression
        // (as target) iNsTr_15
        // start: WAR dependencies for iNsTr_15
        // done: WAR dependencies for iNsTr_15
        // end:  		iNsTr_15 := ->(scevgep18)
        // start:  		iNsTr_16 := (iNsTr_15 - iNsTr_14)
        //  file prog.linked.opt.aa, line 1273
        // Source expression
        // (iNsTr_15 - iNsTr_14)
        $T[SUB_u16_u16_3038_sample_start_] 
        $T[SUB_u16_u16_3038_sample_completed_] 
        $T[SUB_u16_u16_3038_update_start_] 
        $T[SUB_u16_u16_3038_update_completed_] 
        // iNsTr_15
        // iNsTr_14
        // start: Forward dependencies from iNsTr_15 to transition SUB_u16_u16_3038_sample_start_
        SUB_u16_u16_3038_sample_start_ <-& (ptr_deref_3033_update_completed_)
        // done: Forward dependencies from iNsTr_15 to transition SUB_u16_u16_3038_sample_start_
        // start: Forward dependencies from iNsTr_14 to transition SUB_u16_u16_3038_sample_start_
        SUB_u16_u16_3038_sample_start_ <-& (ptr_deref_3029_update_completed_)
        // done: Forward dependencies from iNsTr_14 to transition SUB_u16_u16_3038_sample_start_
        ;;[SUB_u16_u16_3038_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_u16_u16_3038_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_u16_u16_3038_sample_start_ &-> (SUB_u16_u16_3038_Sample)
        SUB_u16_u16_3038_sample_completed_ <-& (SUB_u16_u16_3038_Sample)
        SUB_u16_u16_3038_sample_completed_ &-> ($null)
        SUB_u16_u16_3038_update_start_ &-> (SUB_u16_u16_3038_Update)
        SUB_u16_u16_3038_update_completed_ <-& (SUB_u16_u16_3038_Update)
        // Target expression
        // (as target) iNsTr_16
        // start: WAR dependencies for iNsTr_16
        // done: WAR dependencies for iNsTr_16
        // end:  		iNsTr_16 := (iNsTr_15 - iNsTr_14)
        // load-store dependencies..
      }
      assign_stmt_3030_to_assign_stmt_3039__entry__ |-> (assign_stmt_3030_to_assign_stmt_3039)
      assign_stmt_3030_to_assign_stmt_3039__exit__ <-| (assign_stmt_3030_to_assign_stmt_3039)
      ::[assign_stmt_3060] 
      {
        // start:  		iNsTr_19 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1279
        // Source expression
        // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_3059_sample_start_] 
        $T[EQ_u16_u1_3059_sample_completed_] 
        $T[EQ_u16_u1_3059_update_start_] 
        $T[EQ_u16_u1_3059_update_completed_] 
        // rangex_x0
        // start: Forward dependencies from rangex_x0 to transition EQ_u16_u1_3059_sample_start_
        // done: Forward dependencies from rangex_x0 to transition EQ_u16_u1_3059_sample_start_
        ;;[EQ_u16_u1_3059_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_3059_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_3059_sample_start_ &-> (EQ_u16_u1_3059_Sample)
        EQ_u16_u1_3059_sample_completed_ <-& (EQ_u16_u1_3059_Sample)
        EQ_u16_u1_3059_sample_completed_ &-> ($null)
        EQ_u16_u1_3059_update_start_ &-> (EQ_u16_u1_3059_Update)
        EQ_u16_u1_3059_update_completed_ <-& (EQ_u16_u1_3059_Update)
        // Target expression
        // (as target) iNsTr_19
        // start: WAR dependencies for iNsTr_19
        // done: WAR dependencies for iNsTr_19
        // end:  		iNsTr_19 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_3060__entry__ |-> (assign_stmt_3060)
      assign_stmt_3060__exit__ <-| (assign_stmt_3060)
      // if-statement  
      //  file prog.linked.opt.aa, line 1280
      ;;[if_stmt_3061_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3061__entry__ |-> (if_stmt_3061_dead_link)
      if_stmt_3061__exit__ <-| (if_stmt_3061_dead_link)
      ;;[if_stmt_3061_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3061__entry__ |-> (if_stmt_3061_eval_test)
      $P [R_iNsTr_19_3062_place]
      R_iNsTr_19_3062_place <-| (if_stmt_3061_eval_test)
      ;;[if_stmt_3061_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3061_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_19_3062_place |-> (if_stmt_3061_if_link if_stmt_3061_else_link)
      $P [bb_5_xx_x_crit_edge]
      bb_5_xx_x_crit_edge <-| (if_stmt_3061_if_link)
      $P [bb_5_bbx_xnph]
      bb_5_bbx_xnph <-| (if_stmt_3061_else_link)
      ::[assign_stmt_3073] 
      {
        // start:  		tmp := (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1287
        // Source expression
        // (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_3072_sample_start_] 
        $T[ADD_u16_u16_3072_sample_completed_] 
        $T[ADD_u16_u16_3072_update_start_] 
        $T[ADD_u16_u16_3072_update_completed_] 
        // iNsTr_18
        // start: Forward dependencies from iNsTr_18 to transition ADD_u16_u16_3072_sample_start_
        // done: Forward dependencies from iNsTr_18 to transition ADD_u16_u16_3072_sample_start_
        ;;[ADD_u16_u16_3072_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3072_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3072_sample_start_ &-> (ADD_u16_u16_3072_Sample)
        ADD_u16_u16_3072_sample_completed_ <-& (ADD_u16_u16_3072_Sample)
        ADD_u16_u16_3072_sample_completed_ &-> ($null)
        ADD_u16_u16_3072_update_start_ &-> (ADD_u16_u16_3072_Update)
        ADD_u16_u16_3072_update_completed_ <-& (ADD_u16_u16_3072_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // load-store dependencies..
      }
      assign_stmt_3073__entry__ |-> (assign_stmt_3073)
      assign_stmt_3073__exit__ <-| (assign_stmt_3073)
      ::[assign_stmt_3088_to_assign_stmt_3160] 
      {
        // start:  		tmp6 := (tmp + colx_x02)
        //  file prog.linked.opt.aa, line 1292
        // Source expression
        // (tmp + colx_x02)
        $T[ADD_u16_u16_3087_sample_start_] 
        $T[ADD_u16_u16_3087_sample_completed_] 
        $T[ADD_u16_u16_3087_update_start_] 
        $T[ADD_u16_u16_3087_update_completed_] 
        // tmp
        // colx_x02
        // start: Forward dependencies from tmp to transition ADD_u16_u16_3087_sample_start_
        // done: Forward dependencies from tmp to transition ADD_u16_u16_3087_sample_start_
        // start: Forward dependencies from colx_x02 to transition ADD_u16_u16_3087_sample_start_
        // done: Forward dependencies from colx_x02 to transition ADD_u16_u16_3087_sample_start_
        ;;[ADD_u16_u16_3087_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3087_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3087_sample_start_ &-> (ADD_u16_u16_3087_Sample)
        ADD_u16_u16_3087_sample_completed_ <-& (ADD_u16_u16_3087_Sample)
        ADD_u16_u16_3087_sample_completed_ &-> ($null)
        ADD_u16_u16_3087_update_start_ &-> (ADD_u16_u16_3087_Update)
        ADD_u16_u16_3087_update_completed_ <-& (ADD_u16_u16_3087_Update)
        // Target expression
        // (as target) tmp6
        // start: WAR dependencies for tmp6
        // done: WAR dependencies for tmp6
        // end:  		tmp6 := (tmp + colx_x02)
        // start:  		iNsTr_24 := ($cast ($uint<64>) tmp6 )
        //  file prog.linked.opt.aa, line 1293
        // Source expression
        // ($cast ($uint<64>) tmp6 )
        $T[type_cast_3091_sample_start_] 
        $T[type_cast_3091_sample_completed_] 
        $T[type_cast_3091_update_start_] 
        $T[type_cast_3091_update_completed_] 
        // tmp6
        // start: Forward dependencies from tmp6 to transition type_cast_3091_sample_start_
        type_cast_3091_sample_start_ <-& (ADD_u16_u16_3087_update_completed_)
        // done: Forward dependencies from tmp6 to transition type_cast_3091_sample_start_
        ;;[type_cast_3091_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3091_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3091_sample_start_ &-> (type_cast_3091_Sample)
        type_cast_3091_sample_completed_ <-& (type_cast_3091_Sample)
        type_cast_3091_sample_completed_ &-> ($null)
        type_cast_3091_update_start_ &-> (type_cast_3091_Update)
        type_cast_3091_update_completed_ <-& (type_cast_3091_Update)
        // Target expression
        // (as target) iNsTr_24
        // start: WAR dependencies for iNsTr_24
        // done: WAR dependencies for iNsTr_24
        // end:  		iNsTr_24 := ($cast ($uint<64>) tmp6 )
        // start:  		iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 1294
        // Source expression
        // (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_3097_sample_start_] 
        $T[ADD_u64_u64_3097_sample_completed_] 
        $T[ADD_u64_u64_3097_update_start_] 
        $T[ADD_u64_u64_3097_update_completed_] 
        // iNsTr_24
        // start: Forward dependencies from iNsTr_24 to transition ADD_u64_u64_3097_sample_start_
        ADD_u64_u64_3097_sample_start_ <-& (type_cast_3091_update_completed_)
        // done: Forward dependencies from iNsTr_24 to transition ADD_u64_u64_3097_sample_start_
        ;;[ADD_u64_u64_3097_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_3097_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_3097_sample_start_ &-> (ADD_u64_u64_3097_Sample)
        ADD_u64_u64_3097_sample_completed_ <-& (ADD_u64_u64_3097_Sample)
        ADD_u64_u64_3097_sample_completed_ &-> ($null)
        ADD_u64_u64_3097_update_start_ &-> (ADD_u64_u64_3097_Update)
        ADD_u64_u64_3097_update_completed_ <-& (ADD_u64_u64_3097_Update)
        // Target expression
        // (as target) iNsTr_25
        // start: WAR dependencies for iNsTr_25
        // done: WAR dependencies for iNsTr_25
        // end:  		iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		iNsTr_26 := @(mem[iNsTr_25])
        //  file prog.linked.opt.aa, line 1295
        // Source expression
        // @(mem[iNsTr_25])
        $T[addr_of_3102_sample_start_] 
        $T[addr_of_3102_sample_completed_] 
        $T[addr_of_3102_update_start_] 
        $T[addr_of_3102_update_completed_] 
        $T[array_obj_ref_3101_root_address_calculated] 
        $T[array_obj_ref_3101_offset_calculated] 
        $T[array_obj_ref_3101_index_resized_0] 
        $T[array_obj_ref_3101_index_scaled_0] 
        $T[array_obj_ref_3101_index_computed_0] 
        // iNsTr_25
        // start: Forward dependencies from iNsTr_25 to transition array_obj_ref_3101_index_computed_0
        array_obj_ref_3101_index_computed_0 <-& (ADD_u64_u64_3097_update_completed_)
        // done: Forward dependencies from iNsTr_25 to transition array_obj_ref_3101_index_computed_0
        ;;[array_obj_ref_3101_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3101_index_computed_0 &-> (array_obj_ref_3101_index_resize_0)
        array_obj_ref_3101_index_resized_0 <-& (array_obj_ref_3101_index_resize_0)
        ;;[array_obj_ref_3101_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3101_index_resized_0 &-> (array_obj_ref_3101_index_scale_0)
        array_obj_ref_3101_index_scaled_0 <-& (array_obj_ref_3101_index_scale_0)
        ;;[array_obj_ref_3101_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3101_index_scaled_0 &-> (array_obj_ref_3101_final_index_sum_regn)
        array_obj_ref_3101_offset_calculated <-& (array_obj_ref_3101_final_index_sum_regn)
        ;;[array_obj_ref_3101_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3101_offset_calculated &-> (array_obj_ref_3101_base_plus_offset)
        array_obj_ref_3101_root_address_calculated <-& (array_obj_ref_3101_base_plus_offset)
        ;;[addr_of_3102_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3102_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3102_sample_start_ <-& (array_obj_ref_3101_root_address_calculated)
        addr_of_3102_sample_start_ &-> (addr_of_3102_request)
        addr_of_3102_sample_completed_ <-& (addr_of_3102_request)
        addr_of_3102_update_start_ &-> (addr_of_3102_complete)
        addr_of_3102_update_completed_ <-& (addr_of_3102_complete)
        // Target expression
        // (as target) iNsTr_26
        // start: WAR dependencies for iNsTr_26
        // done: WAR dependencies for iNsTr_26
        // end:  		iNsTr_26 := @(mem[iNsTr_25])
        // start:  		iNsTr_27 := ->(iNsTr_26)
        //  file prog.linked.opt.aa, line 1296
        // Source expression
        // ->(iNsTr_26)
        $T[ptr_deref_3106_sample_start_] 
        $T[ptr_deref_3106_sample_completed_] 
        $T[ptr_deref_3106_update_start_] 
        $T[ptr_deref_3106_update_completed_] 
        $T[ptr_deref_3106_base_address_calculated] 
        // iNsTr_26
        $T[ptr_deref_3106_word_address_calculated] 
        $T[ptr_deref_3106_root_address_calculated] 
        $T[ptr_deref_3106_base_address_resized] 
        ;;[ptr_deref_3106_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3106_base_address_calculated &-> (ptr_deref_3106_base_addr_resize)
        ptr_deref_3106_base_address_resized <-& (ptr_deref_3106_base_addr_resize)
        ;;[ptr_deref_3106_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3106_base_address_resized &-> (ptr_deref_3106_base_plus_offset)
        ptr_deref_3106_root_address_calculated <-& (ptr_deref_3106_base_plus_offset)
        ;;[ptr_deref_3106_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3106_root_address_calculated &-> (ptr_deref_3106_word_addrgen)
        ptr_deref_3106_word_address_calculated <-& (ptr_deref_3106_word_addrgen)
        ;;[ptr_deref_3106_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3106_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3106_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3106_sample_start_ <-& (ptr_deref_3106_word_address_calculated)
        ptr_deref_3106_sample_start_ &-> (ptr_deref_3106_Sample)
        ptr_deref_3106_sample_completed_ <-& (ptr_deref_3106_Sample)
        ptr_deref_3106_sample_completed_ &-> ($null)
        ptr_deref_3106_update_start_ &-> (ptr_deref_3106_Update)
        ptr_deref_3106_update_completed_ <-& (ptr_deref_3106_Update)
        // start: Forward dependencies from iNsTr_26 to transition ptr_deref_3106_base_address_calculated
        ptr_deref_3106_base_address_calculated <-& (addr_of_3102_update_completed_)
        // done: Forward dependencies from iNsTr_26 to transition ptr_deref_3106_base_address_calculated
        ptr_deref_3106_sample_start_ <-& (ptr_deref_3106_base_address_calculated)
        // Target expression
        // (as target) iNsTr_27
        // start: WAR dependencies for iNsTr_27
        // done: WAR dependencies for iNsTr_27
        // end:  		iNsTr_27 := ->(iNsTr_26)
        // start:  		iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1297
        // Source expression
        // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_3112_sample_start_] 
        $T[ADD_u16_u16_3112_sample_completed_] 
        $T[ADD_u16_u16_3112_update_start_] 
        $T[ADD_u16_u16_3112_update_completed_] 
        // iNsTr_27
        // start: Forward dependencies from iNsTr_27 to transition ADD_u16_u16_3112_sample_start_
        ADD_u16_u16_3112_sample_start_ <-& (ptr_deref_3106_update_completed_)
        // done: Forward dependencies from iNsTr_27 to transition ADD_u16_u16_3112_sample_start_
        ;;[ADD_u16_u16_3112_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3112_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3112_sample_start_ &-> (ADD_u16_u16_3112_Sample)
        ADD_u16_u16_3112_sample_completed_ <-& (ADD_u16_u16_3112_Sample)
        ADD_u16_u16_3112_sample_completed_ &-> ($null)
        ADD_u16_u16_3112_update_start_ &-> (ADD_u16_u16_3112_Update)
        ADD_u16_u16_3112_update_completed_ <-& (ADD_u16_u16_3112_Update)
        // Target expression
        // (as target) iNsTr_28
        // start: WAR dependencies for iNsTr_28
        // done: WAR dependencies for iNsTr_28
        // end:  		iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_29 := ($cast ($uint<64>) iNsTr_28 )
        //  file prog.linked.opt.aa, line 1298
        // Source expression
        // ($cast ($uint<64>) iNsTr_28 )
        $T[type_cast_3116_sample_start_] 
        $T[type_cast_3116_sample_completed_] 
        $T[type_cast_3116_update_start_] 
        $T[type_cast_3116_update_completed_] 
        // iNsTr_28
        // start: Forward dependencies from iNsTr_28 to transition type_cast_3116_sample_start_
        type_cast_3116_sample_start_ <-& (ADD_u16_u16_3112_update_completed_)
        // done: Forward dependencies from iNsTr_28 to transition type_cast_3116_sample_start_
        ;;[type_cast_3116_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3116_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3116_sample_start_ &-> (type_cast_3116_Sample)
        type_cast_3116_sample_completed_ <-& (type_cast_3116_Sample)
        type_cast_3116_sample_completed_ &-> ($null)
        type_cast_3116_update_start_ &-> (type_cast_3116_Update)
        type_cast_3116_update_completed_ <-& (type_cast_3116_Update)
        // Target expression
        // (as target) iNsTr_29
        // start: WAR dependencies for iNsTr_29
        // done: WAR dependencies for iNsTr_29
        // end:  		iNsTr_29 := ($cast ($uint<64>) iNsTr_28 )
        // start:  		iNsTr_30 := @(aPosteriori[iNsTr_29])
        //  file prog.linked.opt.aa, line 1299
        // Source expression
        // @(aPosteriori[iNsTr_29])
        $T[addr_of_3121_sample_start_] 
        $T[addr_of_3121_sample_completed_] 
        $T[addr_of_3121_update_start_] 
        $T[addr_of_3121_update_completed_] 
        $T[array_obj_ref_3120_root_address_calculated] 
        $T[array_obj_ref_3120_offset_calculated] 
        $T[array_obj_ref_3120_index_resized_0] 
        $T[array_obj_ref_3120_index_scaled_0] 
        $T[array_obj_ref_3120_index_computed_0] 
        // iNsTr_29
        // start: Forward dependencies from iNsTr_29 to transition array_obj_ref_3120_index_computed_0
        array_obj_ref_3120_index_computed_0 <-& (type_cast_3116_update_completed_)
        // done: Forward dependencies from iNsTr_29 to transition array_obj_ref_3120_index_computed_0
        ;;[array_obj_ref_3120_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3120_index_computed_0 &-> (array_obj_ref_3120_index_resize_0)
        array_obj_ref_3120_index_resized_0 <-& (array_obj_ref_3120_index_resize_0)
        ;;[array_obj_ref_3120_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3120_index_resized_0 &-> (array_obj_ref_3120_index_scale_0)
        array_obj_ref_3120_index_scaled_0 <-& (array_obj_ref_3120_index_scale_0)
        ;;[array_obj_ref_3120_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3120_index_scaled_0 &-> (array_obj_ref_3120_final_index_sum_regn)
        array_obj_ref_3120_offset_calculated <-& (array_obj_ref_3120_final_index_sum_regn)
        ;;[array_obj_ref_3120_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3120_offset_calculated &-> (array_obj_ref_3120_base_plus_offset)
        array_obj_ref_3120_root_address_calculated <-& (array_obj_ref_3120_base_plus_offset)
        ;;[addr_of_3121_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3121_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3121_sample_start_ <-& (array_obj_ref_3120_root_address_calculated)
        addr_of_3121_sample_start_ &-> (addr_of_3121_request)
        addr_of_3121_sample_completed_ <-& (addr_of_3121_request)
        addr_of_3121_update_start_ &-> (addr_of_3121_complete)
        addr_of_3121_update_completed_ <-& (addr_of_3121_complete)
        // Target expression
        // (as target) iNsTr_30
        // start: WAR dependencies for iNsTr_30
        // done: WAR dependencies for iNsTr_30
        // end:  		iNsTr_30 := @(aPosteriori[iNsTr_29])
        // start:  		iNsTr_31 := ->(iNsTr_30)
        //  file prog.linked.opt.aa, line 1300
        // Source expression
        // ->(iNsTr_30)
        $T[ptr_deref_3125_sample_start_] 
        $T[ptr_deref_3125_sample_completed_] 
        $T[ptr_deref_3125_update_start_] 
        $T[ptr_deref_3125_update_completed_] 
        $T[ptr_deref_3125_base_address_calculated] 
        // iNsTr_30
        $T[ptr_deref_3125_word_address_calculated] 
        $T[ptr_deref_3125_root_address_calculated] 
        $T[ptr_deref_3125_base_address_resized] 
        ;;[ptr_deref_3125_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3125_base_address_calculated &-> (ptr_deref_3125_base_addr_resize)
        ptr_deref_3125_base_address_resized <-& (ptr_deref_3125_base_addr_resize)
        ;;[ptr_deref_3125_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3125_base_address_resized &-> (ptr_deref_3125_base_plus_offset)
        ptr_deref_3125_root_address_calculated <-& (ptr_deref_3125_base_plus_offset)
        ;;[ptr_deref_3125_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3125_root_address_calculated &-> (ptr_deref_3125_word_addrgen)
        ptr_deref_3125_word_address_calculated <-& (ptr_deref_3125_word_addrgen)
        ;;[ptr_deref_3125_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3125_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3125_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3125_sample_start_ <-& (ptr_deref_3125_word_address_calculated)
        ptr_deref_3125_sample_start_ &-> (ptr_deref_3125_Sample)
        ptr_deref_3125_sample_completed_ <-& (ptr_deref_3125_Sample)
        ptr_deref_3125_sample_completed_ &-> ($null)
        ptr_deref_3125_update_start_ &-> (ptr_deref_3125_Update)
        ptr_deref_3125_update_completed_ <-& (ptr_deref_3125_Update)
        // start: Forward dependencies from iNsTr_30 to transition ptr_deref_3125_base_address_calculated
        ptr_deref_3125_base_address_calculated <-& (addr_of_3121_update_completed_)
        // done: Forward dependencies from iNsTr_30 to transition ptr_deref_3125_base_address_calculated
        ptr_deref_3125_sample_start_ <-& (ptr_deref_3125_base_address_calculated)
        // Target expression
        // (as target) iNsTr_31
        // start: WAR dependencies for iNsTr_31
        // done: WAR dependencies for iNsTr_31
        // end:  		iNsTr_31 := ->(iNsTr_30)
        // start:  		iNsTr_32 := @(ext_info[iNsTr_24])
        //  file prog.linked.opt.aa, line 1301
        // Source expression
        // @(ext_info[iNsTr_24])
        $T[addr_of_3130_sample_start_] 
        $T[addr_of_3130_sample_completed_] 
        $T[addr_of_3130_update_start_] 
        $T[addr_of_3130_update_completed_] 
        $T[array_obj_ref_3129_root_address_calculated] 
        $T[array_obj_ref_3129_offset_calculated] 
        $T[array_obj_ref_3129_index_resized_0] 
        $T[array_obj_ref_3129_index_scaled_0] 
        $T[array_obj_ref_3129_index_computed_0] 
        // iNsTr_24
        // start: Forward dependencies from iNsTr_24 to transition array_obj_ref_3129_index_computed_0
        array_obj_ref_3129_index_computed_0 <-& (type_cast_3091_update_completed_)
        // done: Forward dependencies from iNsTr_24 to transition array_obj_ref_3129_index_computed_0
        ;;[array_obj_ref_3129_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3129_index_computed_0 &-> (array_obj_ref_3129_index_resize_0)
        array_obj_ref_3129_index_resized_0 <-& (array_obj_ref_3129_index_resize_0)
        ;;[array_obj_ref_3129_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3129_index_resized_0 &-> (array_obj_ref_3129_index_scale_0)
        array_obj_ref_3129_index_scaled_0 <-& (array_obj_ref_3129_index_scale_0)
        ;;[array_obj_ref_3129_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3129_index_scaled_0 &-> (array_obj_ref_3129_final_index_sum_regn)
        array_obj_ref_3129_offset_calculated <-& (array_obj_ref_3129_final_index_sum_regn)
        ;;[array_obj_ref_3129_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3129_offset_calculated &-> (array_obj_ref_3129_base_plus_offset)
        array_obj_ref_3129_root_address_calculated <-& (array_obj_ref_3129_base_plus_offset)
        ;;[addr_of_3130_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3130_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3130_sample_start_ <-& (array_obj_ref_3129_root_address_calculated)
        addr_of_3130_sample_start_ &-> (addr_of_3130_request)
        addr_of_3130_sample_completed_ <-& (addr_of_3130_request)
        addr_of_3130_update_start_ &-> (addr_of_3130_complete)
        addr_of_3130_update_completed_ <-& (addr_of_3130_complete)
        // Target expression
        // (as target) iNsTr_32
        // start: WAR dependencies for iNsTr_32
        // done: WAR dependencies for iNsTr_32
        // end:  		iNsTr_32 := @(ext_info[iNsTr_24])
        // start:  		iNsTr_33 := ->(iNsTr_32)
        //  file prog.linked.opt.aa, line 1302
        // Source expression
        // ->(iNsTr_32)
        $T[ptr_deref_3134_sample_start_] 
        $T[ptr_deref_3134_sample_completed_] 
        $T[ptr_deref_3134_update_start_] 
        $T[ptr_deref_3134_update_completed_] 
        $T[ptr_deref_3134_base_address_calculated] 
        // iNsTr_32
        $T[ptr_deref_3134_word_address_calculated] 
        $T[ptr_deref_3134_root_address_calculated] 
        $T[ptr_deref_3134_base_address_resized] 
        ;;[ptr_deref_3134_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3134_base_address_calculated &-> (ptr_deref_3134_base_addr_resize)
        ptr_deref_3134_base_address_resized <-& (ptr_deref_3134_base_addr_resize)
        ;;[ptr_deref_3134_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3134_base_address_resized &-> (ptr_deref_3134_base_plus_offset)
        ptr_deref_3134_root_address_calculated <-& (ptr_deref_3134_base_plus_offset)
        ;;[ptr_deref_3134_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3134_root_address_calculated &-> (ptr_deref_3134_word_addrgen)
        ptr_deref_3134_word_address_calculated <-& (ptr_deref_3134_word_addrgen)
        ;;[ptr_deref_3134_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3134_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3134_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3134_sample_start_ <-& (ptr_deref_3134_word_address_calculated)
        ptr_deref_3134_sample_start_ &-> (ptr_deref_3134_Sample)
        ptr_deref_3134_sample_completed_ <-& (ptr_deref_3134_Sample)
        ptr_deref_3134_sample_completed_ &-> ($null)
        ptr_deref_3134_update_start_ &-> (ptr_deref_3134_Update)
        ptr_deref_3134_update_completed_ <-& (ptr_deref_3134_Update)
        // start: Forward dependencies from iNsTr_32 to transition ptr_deref_3134_base_address_calculated
        ptr_deref_3134_base_address_calculated <-& (addr_of_3130_update_completed_)
        // done: Forward dependencies from iNsTr_32 to transition ptr_deref_3134_base_address_calculated
        ptr_deref_3134_sample_start_ <-& (ptr_deref_3134_base_address_calculated)
        // Target expression
        // (as target) iNsTr_33
        // start: WAR dependencies for iNsTr_33
        // done: WAR dependencies for iNsTr_33
        // end:  		iNsTr_33 := ->(iNsTr_32)
        // start:  		iNsTr_34 := (iNsTr_31 - iNsTr_33)
        //  file prog.linked.opt.aa, line 1303
        // Source expression
        // (iNsTr_31 - iNsTr_33)
        $T[SUB_f32_f32_3139_sample_start_] 
        $T[SUB_f32_f32_3139_sample_completed_] 
        $T[SUB_f32_f32_3139_update_start_] 
        $T[SUB_f32_f32_3139_update_completed_] 
        // iNsTr_31
        // iNsTr_33
        // start: Forward dependencies from iNsTr_31 to transition SUB_f32_f32_3139_sample_start_
        SUB_f32_f32_3139_sample_start_ <-& (ptr_deref_3125_update_completed_)
        // done: Forward dependencies from iNsTr_31 to transition SUB_f32_f32_3139_sample_start_
        // start: Forward dependencies from iNsTr_33 to transition SUB_f32_f32_3139_sample_start_
        SUB_f32_f32_3139_sample_start_ <-& (ptr_deref_3134_update_completed_)
        // done: Forward dependencies from iNsTr_33 to transition SUB_f32_f32_3139_sample_start_
        ;;[SUB_f32_f32_3139_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[SUB_f32_f32_3139_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        SUB_f32_f32_3139_sample_start_ &-> (SUB_f32_f32_3139_Sample)
        SUB_f32_f32_3139_sample_completed_ <-& (SUB_f32_f32_3139_Sample)
        SUB_f32_f32_3139_sample_completed_ &-> ($null)
        SUB_f32_f32_3139_update_start_ &-> (SUB_f32_f32_3139_Update)
        SUB_f32_f32_3139_update_completed_ <-& (SUB_f32_f32_3139_Update)
        // Target expression
        // (as target) iNsTr_34
        // start: WAR dependencies for iNsTr_34
        // done: WAR dependencies for iNsTr_34
        // end:  		iNsTr_34 := (iNsTr_31 - iNsTr_33)
        // start:  		iNsTr_35 := @(message[iNsTr_24])
        //  file prog.linked.opt.aa, line 1304
        // Source expression
        // @(message[iNsTr_24])
        $T[addr_of_3144_sample_start_] 
        $T[addr_of_3144_sample_completed_] 
        $T[addr_of_3144_update_start_] 
        $T[addr_of_3144_update_completed_] 
        $T[array_obj_ref_3143_root_address_calculated] 
        $T[array_obj_ref_3143_offset_calculated] 
        $T[array_obj_ref_3143_index_resized_0] 
        $T[array_obj_ref_3143_index_scaled_0] 
        $T[array_obj_ref_3143_index_computed_0] 
        // iNsTr_24
        // start: Forward dependencies from iNsTr_24 to transition array_obj_ref_3143_index_computed_0
        array_obj_ref_3143_index_computed_0 <-& (type_cast_3091_update_completed_)
        // done: Forward dependencies from iNsTr_24 to transition array_obj_ref_3143_index_computed_0
        ;;[array_obj_ref_3143_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3143_index_computed_0 &-> (array_obj_ref_3143_index_resize_0)
        array_obj_ref_3143_index_resized_0 <-& (array_obj_ref_3143_index_resize_0)
        ;;[array_obj_ref_3143_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3143_index_resized_0 &-> (array_obj_ref_3143_index_scale_0)
        array_obj_ref_3143_index_scaled_0 <-& (array_obj_ref_3143_index_scale_0)
        ;;[array_obj_ref_3143_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3143_index_scaled_0 &-> (array_obj_ref_3143_final_index_sum_regn)
        array_obj_ref_3143_offset_calculated <-& (array_obj_ref_3143_final_index_sum_regn)
        ;;[array_obj_ref_3143_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3143_offset_calculated &-> (array_obj_ref_3143_base_plus_offset)
        array_obj_ref_3143_root_address_calculated <-& (array_obj_ref_3143_base_plus_offset)
        ;;[addr_of_3144_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3144_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3144_sample_start_ <-& (array_obj_ref_3143_root_address_calculated)
        addr_of_3144_sample_start_ &-> (addr_of_3144_request)
        addr_of_3144_sample_completed_ <-& (addr_of_3144_request)
        addr_of_3144_update_start_ &-> (addr_of_3144_complete)
        addr_of_3144_update_completed_ <-& (addr_of_3144_complete)
        // Target expression
        // (as target) iNsTr_35
        // start: WAR dependencies for iNsTr_35
        // done: WAR dependencies for iNsTr_35
        // end:  		iNsTr_35 := @(message[iNsTr_24])
        // start:  		->(iNsTr_35) := iNsTr_34
        //  file prog.linked.opt.aa, line 1305
        // Source expression
        // iNsTr_34
        // Target expression
        // ->(iNsTr_35)
        $T[ptr_deref_3147_sample_start_] 
        $T[ptr_deref_3147_sample_completed_] 
        $T[ptr_deref_3147_update_start_] 
        $T[ptr_deref_3147_update_completed_] 
        $T[ptr_deref_3147_base_address_calculated] 
        // iNsTr_35
        $T[ptr_deref_3147_word_address_calculated] 
        $T[ptr_deref_3147_root_address_calculated] 
        $T[ptr_deref_3147_base_address_resized] 
        ;;[ptr_deref_3147_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3147_base_address_calculated &-> (ptr_deref_3147_base_addr_resize)
        ptr_deref_3147_base_address_resized <-& (ptr_deref_3147_base_addr_resize)
        ;;[ptr_deref_3147_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3147_base_address_resized &-> (ptr_deref_3147_base_plus_offset)
        ptr_deref_3147_root_address_calculated <-& (ptr_deref_3147_base_plus_offset)
        ;;[ptr_deref_3147_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3147_root_address_calculated &-> (ptr_deref_3147_word_addrgen)
        ptr_deref_3147_word_address_calculated <-& (ptr_deref_3147_word_addrgen)
        ;;[ptr_deref_3147_Sample] 
        {
          ;;[ptr_deref_3147_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3147_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_3147_sample_start_ <-& (ptr_deref_3147_word_address_calculated)
        ptr_deref_3147_sample_start_ &-> (ptr_deref_3147_Sample)
        ptr_deref_3147_sample_completed_ <-& (ptr_deref_3147_Sample)
        ptr_deref_3147_sample_completed_ &-> ($null)
        ptr_deref_3147_update_start_ &-> (ptr_deref_3147_Update)
        ptr_deref_3147_update_completed_ <-& (ptr_deref_3147_Update)
        // start: Forward dependencies from iNsTr_35 to transition ptr_deref_3147_base_address_calculated
        ptr_deref_3147_base_address_calculated <-& (addr_of_3144_update_completed_)
        // done: Forward dependencies from iNsTr_35 to transition ptr_deref_3147_base_address_calculated
        ptr_deref_3147_sample_start_ <-& (ptr_deref_3147_base_address_calculated)
        // start: Forward dependencies from iNsTr_34 to transition ptr_deref_3147_sample_start_
        ptr_deref_3147_sample_start_ <-& (SUB_f32_f32_3139_update_completed_)
        // done: Forward dependencies from iNsTr_34 to transition ptr_deref_3147_sample_start_
        // end:  		->(iNsTr_35) := iNsTr_34
        // start:  		iNsTr_37 := (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1306
        // Source expression
        // (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[ADD_u16_u16_3154_sample_start_] 
        $T[ADD_u16_u16_3154_sample_completed_] 
        $T[ADD_u16_u16_3154_update_start_] 
        $T[ADD_u16_u16_3154_update_completed_] 
        // colx_x02
        // start: Forward dependencies from colx_x02 to transition ADD_u16_u16_3154_sample_start_
        // done: Forward dependencies from colx_x02 to transition ADD_u16_u16_3154_sample_start_
        ;;[ADD_u16_u16_3154_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3154_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3154_sample_start_ &-> (ADD_u16_u16_3154_Sample)
        ADD_u16_u16_3154_sample_completed_ <-& (ADD_u16_u16_3154_Sample)
        ADD_u16_u16_3154_sample_completed_ &-> ($null)
        ADD_u16_u16_3154_update_start_ &-> (ADD_u16_u16_3154_Update)
        ADD_u16_u16_3154_update_completed_ <-& (ADD_u16_u16_3154_Update)
        // Target expression
        // (as target) iNsTr_37
        // start: WAR dependencies for iNsTr_37
        // done: WAR dependencies for iNsTr_37
        // end:  		iNsTr_37 := (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		exitcond1 := (iNsTr_37 == rangex_x0)
        //  file prog.linked.opt.aa, line 1307
        // Source expression
        // (iNsTr_37 == rangex_x0)
        $T[EQ_u16_u1_3159_sample_start_] 
        $T[EQ_u16_u1_3159_sample_completed_] 
        $T[EQ_u16_u1_3159_update_start_] 
        $T[EQ_u16_u1_3159_update_completed_] 
        // iNsTr_37
        // rangex_x0
        // start: Forward dependencies from iNsTr_37 to transition EQ_u16_u1_3159_sample_start_
        EQ_u16_u1_3159_sample_start_ <-& (ADD_u16_u16_3154_update_completed_)
        // done: Forward dependencies from iNsTr_37 to transition EQ_u16_u1_3159_sample_start_
        // start: Forward dependencies from rangex_x0 to transition EQ_u16_u1_3159_sample_start_
        // done: Forward dependencies from rangex_x0 to transition EQ_u16_u1_3159_sample_start_
        ;;[EQ_u16_u1_3159_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_3159_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_3159_sample_start_ &-> (EQ_u16_u1_3159_Sample)
        EQ_u16_u1_3159_sample_completed_ <-& (EQ_u16_u1_3159_Sample)
        EQ_u16_u1_3159_sample_completed_ &-> ($null)
        EQ_u16_u1_3159_update_start_ &-> (EQ_u16_u1_3159_Update)
        EQ_u16_u1_3159_update_completed_ <-& (EQ_u16_u1_3159_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (iNsTr_37 == rangex_x0)
        // load-store dependencies..
      }
      assign_stmt_3088_to_assign_stmt_3160__entry__ |-> (assign_stmt_3088_to_assign_stmt_3160)
      assign_stmt_3088_to_assign_stmt_3160__exit__ <-| (assign_stmt_3088_to_assign_stmt_3160)
      // if-statement  
      //  file prog.linked.opt.aa, line 1308
      ;;[if_stmt_3161_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_dead_link)
      if_stmt_3161__exit__ <-| (if_stmt_3161_dead_link)
      ;;[if_stmt_3161_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3161__entry__ |-> (if_stmt_3161_eval_test)
      $P [R_exitcond1_3162_place]
      R_exitcond1_3162_place <-| (if_stmt_3161_eval_test)
      ;;[if_stmt_3161_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3161_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_3162_place |-> (if_stmt_3161_if_link if_stmt_3161_else_link)
      $P [bb_7_xx_x_crit_edgex_xloopexit]
      bb_7_xx_x_crit_edgex_xloopexit <-| (if_stmt_3161_if_link)
      $P [bb_7_bb_7]
      bb_7_bb_7 <-| (if_stmt_3161_else_link)
      ::[assign_stmt_3175_to_assign_stmt_3180] 
      {
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1318
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_3174_sample_start_] 
        $T[ADD_u64_u64_3174_sample_completed_] 
        $T[ADD_u64_u64_3174_update_start_] 
        $T[ADD_u64_u64_3174_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_3174_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_3174_sample_start_
        ;;[ADD_u64_u64_3174_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_3174_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_3174_sample_start_ &-> (ADD_u64_u64_3174_Sample)
        ADD_u64_u64_3174_sample_completed_ <-& (ADD_u64_u64_3174_Sample)
        ADD_u64_u64_3174_sample_completed_ &-> ($null)
        ADD_u64_u64_3174_update_start_ &-> (ADD_u64_u64_3174_Update)
        ADD_u64_u64_3174_update_completed_ <-& (ADD_u64_u64_3174_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond := (indvarx_xnext == tmp10)
        //  file prog.linked.opt.aa, line 1319
        // Source expression
        // (indvarx_xnext == tmp10)
        $T[EQ_u64_u1_3179_sample_start_] 
        $T[EQ_u64_u1_3179_sample_completed_] 
        $T[EQ_u64_u1_3179_update_start_] 
        $T[EQ_u64_u1_3179_update_completed_] 
        // indvarx_xnext
        // tmp10
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_3179_sample_start_
        EQ_u64_u1_3179_sample_start_ <-& (ADD_u64_u64_3174_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_3179_sample_start_
        // start: Forward dependencies from tmp10 to transition EQ_u64_u1_3179_sample_start_
        // done: Forward dependencies from tmp10 to transition EQ_u64_u1_3179_sample_start_
        ;;[EQ_u64_u1_3179_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_3179_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_3179_sample_start_ &-> (EQ_u64_u1_3179_Sample)
        EQ_u64_u1_3179_sample_completed_ <-& (EQ_u64_u1_3179_Sample)
        EQ_u64_u1_3179_sample_completed_ &-> ($null)
        EQ_u64_u1_3179_update_start_ &-> (EQ_u64_u1_3179_Update)
        EQ_u64_u1_3179_update_completed_ <-& (EQ_u64_u1_3179_Update)
        // Target expression
        // (as target) exitcond
        // start: WAR dependencies for exitcond
        // done: WAR dependencies for exitcond
        // end:  		exitcond := (indvarx_xnext == tmp10)
        // load-store dependencies..
      }
      assign_stmt_3175_to_assign_stmt_3180__entry__ |-> (assign_stmt_3175_to_assign_stmt_3180)
      assign_stmt_3175_to_assign_stmt_3180__exit__ <-| (assign_stmt_3175_to_assign_stmt_3180)
      // if-statement  
      //  file prog.linked.opt.aa, line 1320
      ;;[if_stmt_3181_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3181__entry__ |-> (if_stmt_3181_dead_link)
      if_stmt_3181__exit__ <-| (if_stmt_3181_dead_link)
      ;;[if_stmt_3181_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3181__entry__ |-> (if_stmt_3181_eval_test)
      $P [R_exitcond_3182_place]
      R_exitcond_3182_place <-| (if_stmt_3181_eval_test)
      ;;[if_stmt_3181_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3181_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond_3182_place |-> (if_stmt_3181_if_link if_stmt_3181_else_link)
      $P [xx_x_crit_edge_xx_x_crit_edge5x_xloopexit]
      xx_x_crit_edge_xx_x_crit_edge5x_xloopexit <-| (if_stmt_3181_if_link)
      $P [xx_x_crit_edge_bb_2]
      xx_x_crit_edge_bb_2 <-| (if_stmt_3181_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1235
      ;;[merge_stmt_2905_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2905__entry__ |-> (merge_stmt_2905_dead_link)
      merge_stmt_2905__exit__ <-| (merge_stmt_2905_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1235  --------------------------
      ||[bb_0_bbx_xnph4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph4 |-> (bb_0_bbx_xnph4_PhiReq)
      $P [merge_stmt_2905_PhiReqMerge] 
      merge_stmt_2905_PhiReqMerge <-| ( bb_0_bbx_xnph4_PhiReq )
      ||[merge_stmt_2905_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2905_PhiReqMerge |-> (merge_stmt_2905_PhiAck)
      merge_stmt_2905__exit__  <-| (merge_stmt_2905_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1235  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1250
      //---------------------   merge statement  file prog.linked.opt.aa, line 1250  --------------------------
      ||[bbx_xnph4_bb_2_PhiReq] 
      {
        ;;[phi_stmt_2972] 
        {
          ||[phi_stmt_2972_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on xx_x_crit_edge_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_2976_konst_delay_trans] $delay
          }
          $T [phi_stmt_2972_req] 
        }
      }
      bbx_xnph4_bb_2 |-> (bbx_xnph4_bb_2_PhiReq)
      ||[xx_x_crit_edge_bb_2_PhiReq] 
      {
        ;;[phi_stmt_2972] 
        {
          ||[phi_stmt_2972_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on xx_x_crit_edge_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_2978] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_2972_req] 
        }
      }
      xx_x_crit_edge_bb_2 |-> (xx_x_crit_edge_bb_2_PhiReq)
      $P [merge_stmt_2971_PhiReqMerge] 
      merge_stmt_2971_PhiReqMerge <-| ( bbx_xnph4_bb_2_PhiReq  xx_x_crit_edge_bb_2_PhiReq )
      ||[merge_stmt_2971_PhiAck] 
      {
        $T [phi_stmt_2972_ack] 
      }
      merge_stmt_2971_PhiReqMerge |-> (merge_stmt_2971_PhiAck)
      merge_stmt_2971__exit__  <-| (merge_stmt_2971_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1250  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1264
      ;;[merge_stmt_3015_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3015__entry__ |-> (merge_stmt_3015_dead_link)
      merge_stmt_3015__exit__ <-| (merge_stmt_3015_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1264  --------------------------
      ||[bb_2_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_3 |-> (bb_2_bb_3_PhiReq)
      $P [merge_stmt_3015_PhiReqMerge] 
      merge_stmt_3015_PhiReqMerge <-| ( bb_2_bb_3_PhiReq )
      ||[merge_stmt_3015_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3015_PhiReqMerge |-> (merge_stmt_3015_PhiAck)
      merge_stmt_3015__exit__  <-| (merge_stmt_3015_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1264  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1269
      //---------------------   merge statement  file prog.linked.opt.aa, line 1269  --------------------------
      ||[bb_2_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_bb_4 |-> (bb_2_bb_4_PhiReq)
      $P [merge_stmt_3026_PhiReqMerge] 
      merge_stmt_3026_PhiReqMerge <-| ( bb_2_bb_4_PhiReq )
      ||[merge_stmt_3026_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3026_PhiReqMerge |-> (merge_stmt_3026_PhiAck)
      merge_stmt_3026__exit__  <-| (merge_stmt_3026_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1269  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1275
      //---------------------   merge statement  file prog.linked.opt.aa, line 1275  --------------------------
      ||[bb_3_bb_5_PhiReq] 
      {
        ;;[phi_stmt_3042] 
        {
          ||[phi_stmt_3042_sources] 
          {
            // sources for 			$phi iNsTr_18 := 			  ($cast ($uint<16>) iNsTr_11 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_14 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_11 )
            ;;[type_cast_3045] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3042_req] 
        }
        ;;[phi_stmt_3048] 
        {
          ||[phi_stmt_3048_sources] 
          {
            // sources for 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_12 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_16 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_12 )
            ;;[type_cast_3051] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3048_req] 
        }
      }
      bb_3_bb_5 |-> (bb_3_bb_5_PhiReq)
      ||[bb_4_bb_5_PhiReq] 
      {
        ;;[phi_stmt_3042] 
        {
          ||[phi_stmt_3042_sources] 
          {
            // sources for 			$phi iNsTr_18 := 			  ($cast ($uint<16>) iNsTr_11 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_14 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_14 )
            ;;[type_cast_3047] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3042_req] 
        }
        ;;[phi_stmt_3048] 
        {
          ||[phi_stmt_3048_sources] 
          {
            // sources for 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_12 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_16 ) $on bb_4_bb_5 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_16 )
            ;;[type_cast_3053] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3048_req] 
        }
      }
      bb_4_bb_5 |-> (bb_4_bb_5_PhiReq)
      $P [merge_stmt_3041_PhiReqMerge] 
      merge_stmt_3041_PhiReqMerge <-| ( bb_3_bb_5_PhiReq  bb_4_bb_5_PhiReq )
      ||[merge_stmt_3041_PhiAck] 
      {
        $T [phi_stmt_3042_ack] 
        $T [phi_stmt_3048_ack] 
      }
      merge_stmt_3041_PhiReqMerge |-> (merge_stmt_3041_PhiAck)
      merge_stmt_3041__exit__  <-| (merge_stmt_3041_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1275  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1285
      ;;[merge_stmt_3067_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3067__entry__ |-> (merge_stmt_3067_dead_link)
      merge_stmt_3067__exit__ <-| (merge_stmt_3067_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1285  --------------------------
      ||[bb_5_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_bbx_xnph |-> (bb_5_bbx_xnph_PhiReq)
      $P [merge_stmt_3067_PhiReqMerge] 
      merge_stmt_3067_PhiReqMerge <-| ( bb_5_bbx_xnph_PhiReq )
      ||[merge_stmt_3067_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3067_PhiReqMerge |-> (merge_stmt_3067_PhiAck)
      merge_stmt_3067__exit__  <-| (merge_stmt_3067_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1285  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1289
      //---------------------   merge statement  file prog.linked.opt.aa, line 1289  --------------------------
      ||[bb_7_bb_7_PhiReq] 
      {
        ;;[phi_stmt_3076] 
        {
          ||[phi_stmt_3076_sources] 
          {
            // sources for 			$phi colx_x02 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_7			  ($cast ($uint<16>) iNsTr_37 ) $on bb_7_bb_7 // type of target is $uint<16>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<16>) iNsTr_37 )
            ;;[type_cast_3082] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3076_req] 
        }
      }
      bb_7_bb_7 |-> (bb_7_bb_7_PhiReq)
      ||[bbx_xnph_bb_7_PhiReq] 
      {
        ;;[phi_stmt_3076] 
        {
          ||[phi_stmt_3076_sources] 
          {
            // sources for 			$phi colx_x02 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_7			  ($cast ($uint<16>) iNsTr_37 ) $on bb_7_bb_7 // type of target is $uint<16>
            // constant source .... delay transition 
            $T [type_cast_3080_konst_delay_trans] $delay
          }
          $T [phi_stmt_3076_req] 
        }
      }
      bbx_xnph_bb_7 |-> (bbx_xnph_bb_7_PhiReq)
      $P [merge_stmt_3075_PhiReqMerge] 
      merge_stmt_3075_PhiReqMerge <-| ( bb_7_bb_7_PhiReq  bbx_xnph_bb_7_PhiReq )
      ||[merge_stmt_3075_PhiAck] 
      {
        $T [phi_stmt_3076_ack] 
      }
      merge_stmt_3075_PhiReqMerge |-> (merge_stmt_3075_PhiAck)
      merge_stmt_3075__exit__  <-| (merge_stmt_3075_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1289  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1313
      ;;[merge_stmt_3167_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3167__entry__ |-> (merge_stmt_3167_dead_link)
      merge_stmt_3167__exit__ <-| (merge_stmt_3167_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1313  --------------------------
      ||[bb_7_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_xx_x_crit_edgex_xloopexit |-> (bb_7_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_3167_PhiReqMerge] 
      merge_stmt_3167_PhiReqMerge <-| ( bb_7_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_3167_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3167_PhiReqMerge |-> (merge_stmt_3167_PhiAck)
      merge_stmt_3167__exit__  <-| (merge_stmt_3167_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1313  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1316
      //---------------------   merge statement  file prog.linked.opt.aa, line 1316  --------------------------
      ||[bb_5_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_xx_x_crit_edge |-> (bb_5_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_3169_PhiReqMerge] 
      merge_stmt_3169_PhiReqMerge <-| ( bb_5_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_3169_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3169_PhiReqMerge |-> (merge_stmt_3169_PhiAck)
      merge_stmt_3169__exit__  <-| (merge_stmt_3169_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1316  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1325
      ;;[merge_stmt_3187_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3187__entry__ |-> (merge_stmt_3187_dead_link)
      merge_stmt_3187__exit__ <-| (merge_stmt_3187_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1325  --------------------------
      ||[xx_x_crit_edge_xx_x_crit_edge5x_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge_xx_x_crit_edge5x_xloopexit |-> (xx_x_crit_edge_xx_x_crit_edge5x_xloopexit_PhiReq)
      $P [merge_stmt_3187_PhiReqMerge] 
      merge_stmt_3187_PhiReqMerge <-| ( xx_x_crit_edge_xx_x_crit_edge5x_xloopexit_PhiReq )
      ||[merge_stmt_3187_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3187_PhiReqMerge |-> (merge_stmt_3187_PhiAck)
      merge_stmt_3187__exit__  <-| (merge_stmt_3187_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1325  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1328
      //---------------------   merge statement  file prog.linked.opt.aa, line 1328  --------------------------
      ||[bb_0_xx_x_crit_edge5_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge5 |-> (bb_0_xx_x_crit_edge5_PhiReq)
      ||[xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5 |-> (xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5_PhiReq)
      $P [merge_stmt_3189_PhiReqMerge] 
      merge_stmt_3189_PhiReqMerge <-| ( bb_0_xx_x_crit_edge5_PhiReq  xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5_PhiReq )
      ||[merge_stmt_3189_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3189_PhiReqMerge |-> (merge_stmt_3189_PhiAck)
      merge_stmt_3189__exit__  <-| (merge_stmt_3189_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1328  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1331
      //---------------------   merge statement  file prog.linked.opt.aa, line 1331  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_3191_PhiReqMerge] 
      merge_stmt_3191_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_3191_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3191_PhiReqMerge |-> (merge_stmt_3191_PhiAck)
      merge_stmt_3191__exit__  <-| (merge_stmt_3191_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1331  --------------------------
      assign_stmt_2892_to_assign_stmt_2898__entry__ <-| (branch_block_stmt_2889__entry__)
      if_stmt_2899__entry__ <-| (assign_stmt_2892_to_assign_stmt_2898__exit__)
      merge_stmt_2905__entry__ <-| (if_stmt_2899__exit__)
      assign_stmt_2908_to_assign_stmt_2969__entry__ <-| (merge_stmt_2905__exit__)
      bbx_xnph4_bb_2 <-| (assign_stmt_2908_to_assign_stmt_2969__exit__)
      assign_stmt_2984_to_assign_stmt_3008__entry__ <-| (merge_stmt_2971__exit__)
      if_stmt_3009__entry__ <-| (assign_stmt_2984_to_assign_stmt_3008__exit__)
      merge_stmt_3015__entry__ <-| (if_stmt_3009__exit__)
      assign_stmt_3019_to_assign_stmt_3024__entry__ <-| (merge_stmt_3015__exit__)
      bb_3_bb_5 <-| (assign_stmt_3019_to_assign_stmt_3024__exit__)
      assign_stmt_3030_to_assign_stmt_3039__entry__ <-| (merge_stmt_3026__exit__)
      bb_4_bb_5 <-| (assign_stmt_3030_to_assign_stmt_3039__exit__)
      assign_stmt_3060__entry__ <-| (merge_stmt_3041__exit__)
      if_stmt_3061__entry__ <-| (assign_stmt_3060__exit__)
      merge_stmt_3067__entry__ <-| (if_stmt_3061__exit__)
      assign_stmt_3073__entry__ <-| (merge_stmt_3067__exit__)
      bbx_xnph_bb_7 <-| (assign_stmt_3073__exit__)
      assign_stmt_3088_to_assign_stmt_3160__entry__ <-| (merge_stmt_3075__exit__)
      if_stmt_3161__entry__ <-| (assign_stmt_3088_to_assign_stmt_3160__exit__)
      merge_stmt_3167__entry__ <-| (if_stmt_3161__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_3167__exit__)
      assign_stmt_3175_to_assign_stmt_3180__entry__ <-| (merge_stmt_3169__exit__)
      if_stmt_3181__entry__ <-| (assign_stmt_3175_to_assign_stmt_3180__exit__)
      merge_stmt_3187__entry__ <-| (if_stmt_3181__exit__)
      xx_x_crit_edge5x_xloopexit_xx_x_crit_edge5 <-| (merge_stmt_3187__exit__)
      return__ <-| (merge_stmt_3189__exit__)
      merge_stmt_3191__exit__ |-> (branch_block_stmt_2889__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1235
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1250
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1264
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1269
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1275
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1285
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1289
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1313
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1316
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1325
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1328
    // constant-object-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1331
    // constant-object-declarations for block %updateMessage%body
    //  file prog.linked.opt.aa, line 1226
    // constant-object-declarations for block %updateMessage
    //  file prog.linked.opt.aa, line 1221
    // constant-declarations for block %updateMessage%body
    //  file prog.linked.opt.aa, line 1226
    // nrows
    $constant $W[LOAD_nrows_2891_word_address_0] : $pointer<memory_space_12> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_2896_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1230
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1235
    // ncol_ind
    $constant $W[LOAD_ncol_ind_2907_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<32>) _b11111111111111111111111111111111  )
    $constant $W[type_cast_2916_wire_constant] : $int<32> := _b11111111111111111111111111111111// -1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2922_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_2928_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_2934_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2944_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_2951_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  )
    $constant $W[type_cast_2961_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000100// 4
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_2967_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1250
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on xx_x_crit_edge_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_2976_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // @(mem[tmp5])
    $constant $W[array_obj_ref_2987_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2987_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(mem[tmp9])
    $constant $W[array_obj_ref_2997_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_2997_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1259
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1264
    // ->(scevgep)
    $constant $W[ptr_deref_3018_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1269
    // ->(scevgep)
    $constant $W[ptr_deref_3029_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(scevgep18)
    $constant $W[ptr_deref_3033_word_offset_0] : $int<10> := _b0000000000// 0
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1275
    // constant-declarations for phi:  			$phi iNsTr_18 := 			  ($cast ($uint<16>) iNsTr_11 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_14 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1276
    // constant-declarations for phi:  			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_12 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_16 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1277
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_3058_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1280
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1285
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_3071_wire_constant] : $int<16> := _b1111111111111111// 65535
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1289
    // constant-declarations for phi:  			$phi colx_x02 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_7			  ($cast ($uint<16>) iNsTr_37 ) $on bb_7_bb_7 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1290
    // ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) )
    $constant $W[type_cast_3080_wire_constant] : $int<16> := _b0000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_3096_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[iNsTr_25])
    $constant $W[array_obj_ref_3101_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3101_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_26)
    $constant $W[ptr_deref_3106_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_3111_wire_constant] : $int<16> := _b1111111111111111// 65535
    // @(aPosteriori[iNsTr_29])
    $constant $W[array_obj_ref_3120_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3120_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_30)
    $constant $W[ptr_deref_3125_word_offset_0] : $int<10> := _b0000000000// 0
    // @(ext_info[iNsTr_24])
    $constant $W[array_obj_ref_3129_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3129_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_32)
    $constant $W[ptr_deref_3134_word_offset_0] : $int<10> := _b0000000000// 0
    // @(message[iNsTr_24])
    $constant $W[array_obj_ref_3143_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3143_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_35)
    $constant $W[ptr_deref_3147_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_3153_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1308
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1313
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1316
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_3173_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1320
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1325
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1328
    // constant-declarations for block %updateMessage%body%
    //  file prog.linked.opt.aa, line 1331
    // block %updateMessage%body
    //  file prog.linked.opt.aa, line 1226
    // 		iNsTr_0 := nrows
    //  file prog.linked.opt.aa, line 1228
    // nrows
    $W[LOAD_nrows_2891_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_2892] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1229
    // iNsTr_1
    $W[iNsTr_1_2898] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1230
    // 		iNsTr_4 := ncol_ind
    //  file prog.linked.opt.aa, line 1237
    // ncol_ind
    $W[LOAD_ncol_ind_2907_data_0] : $int<16>
    // iNsTr_4
    $W[iNsTr_4_2908] : $int<16>
    // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_0 )
    //  file prog.linked.opt.aa, line 1238
    // iNsTr_5
    $W[iNsTr_5_2912] : $int<32>
    // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1239
    // iNsTr_6
    $W[iNsTr_6_2918] : $int<32>
    // 		xx_xneg1 := (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1240
    // xx_xneg1
    $W[xx_xneg1_2924] : $int<16>
    // 		tmp7 := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1241
    // tmp7
    $W[tmp7_2930] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1242
    // xx_xop
    $W[xx_xop_2936] : $int<16>
    // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 1243
    // iNsTr_7
    $W[iNsTr_7_2940] : $int<64>
    // 		xx_xop19 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1244
    // xx_xop19
    $W[xx_xop19_2946] : $int<64>
    // 		tmp10 := ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 1245
    // tmp10
    $W[tmp10_2953] : $int<64>
    // 		tmp3 := ($cast ($uint<64>) iNsTr_4 )
    //  file prog.linked.opt.aa, line 1246
    // tmp3
    $W[tmp3_2957] : $int<64>
    // 		tmp4 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 1247
    // tmp4
    $W[tmp4_2963] : $int<64>
    // 		tmp8 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1248
    // tmp8
    $W[tmp8_2969] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1250
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on xx_x_crit_edge_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_2978_wire] : $int<64>
    // indvar
    $W[indvar_2972] : $int<64>
    // 		tmp5 := (tmp4 + indvar)
    //  file prog.linked.opt.aa, line 1253
    // tmp5
    $W[tmp5_2984] : $int<64>
    // 		scevgep18 := @(mem[tmp5])
    //  file prog.linked.opt.aa, line 1254
    // @(mem[tmp5])
    $intermediate $W[R_tmp5_2986_resized] : $int<10>
    $intermediate $W[R_tmp5_2986_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2987_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2987_root_address] : $int<10>
    // scevgep18
    $W[scevgep18_2989] : $int<32>
    // 		tmp9 := (tmp8 + indvar)
    //  file prog.linked.opt.aa, line 1255
    // tmp9
    $W[tmp9_2994] : $int<64>
    // 		scevgep := @(mem[tmp9])
    //  file prog.linked.opt.aa, line 1256
    // @(mem[tmp9])
    $intermediate $W[R_tmp9_2996_resized] : $int<10>
    $intermediate $W[R_tmp9_2996_scaled] : $int<10>
    $intermediate $W[array_obj_ref_2997_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_2997_root_address] : $int<10>
    // scevgep
    $W[scevgep_2999] : $int<32>
    // 		tmp12 := ($cast ($uint<32>) indvar )
    //  file prog.linked.opt.aa, line 1257
    // tmp12
    $W[tmp12_3003] : $int<32>
    // 		iNsTr_9 := (tmp12 == iNsTr_6)
    //  file prog.linked.opt.aa, line 1258
    // iNsTr_9
    $W[iNsTr_9_3008] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1259
    // 		iNsTr_11 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1266
    // ->(scevgep)
    $intermediate $W[ptr_deref_3018_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3018_root_address] : $int<10>
    $W[ptr_deref_3018_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_3018_data_0] : $int<16>
    // iNsTr_11
    $W[iNsTr_11_3019] : $int<16>
    // 		iNsTr_12 := (xx_xneg1 - iNsTr_11)
    //  file prog.linked.opt.aa, line 1267
    // iNsTr_12
    $W[iNsTr_12_3024] : $int<16>
    // 		iNsTr_14 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1271
    // ->(scevgep)
    $intermediate $W[ptr_deref_3029_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3029_root_address] : $int<10>
    $W[ptr_deref_3029_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_3029_data_0] : $int<16>
    // iNsTr_14
    $W[iNsTr_14_3030] : $int<16>
    // 		iNsTr_15 := ->(scevgep18)
    //  file prog.linked.opt.aa, line 1272
    // ->(scevgep18)
    $intermediate $W[ptr_deref_3033_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3033_root_address] : $int<10>
    $W[ptr_deref_3033_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_3033_data_0] : $int<16>
    // iNsTr_15
    $W[iNsTr_15_3034] : $int<16>
    // 		iNsTr_16 := (iNsTr_15 - iNsTr_14)
    //  file prog.linked.opt.aa, line 1273
    // iNsTr_16
    $W[iNsTr_16_3039] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1275
    // 			$phi iNsTr_18 := 			  ($cast ($uint<16>) iNsTr_11 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_14 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1276
    // ($cast ($uint<16>) iNsTr_11 )
    $intermediate $W[type_cast_3045_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_14 )
    $intermediate $W[type_cast_3047_wire] : $int<16>
    // iNsTr_18
    $W[iNsTr_18_3042] : $int<16>
    // 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_12 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_16 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1277
    // ($cast ($uint<16>) iNsTr_12 )
    $intermediate $W[type_cast_3051_wire] : $int<16>
    // ($cast ($uint<16>) iNsTr_16 )
    $intermediate $W[type_cast_3053_wire] : $int<16>
    // rangex_x0
    $W[rangex_x0_3048] : $int<16>
    // 		iNsTr_19 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1279
    // iNsTr_19
    $W[iNsTr_19_3060] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1280
    // 		tmp := (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1287
    // tmp
    $W[tmp_3073] : $int<16>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1289
    // 			$phi colx_x02 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_7			  ($cast ($uint<16>) iNsTr_37 ) $on bb_7_bb_7 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1290
    // ($cast ($uint<16>) iNsTr_37 )
    $intermediate $W[type_cast_3082_wire] : $int<16>
    // colx_x02
    $W[colx_x02_3076] : $int<16>
    // 		tmp6 := (tmp + colx_x02)
    //  file prog.linked.opt.aa, line 1292
    // tmp6
    $W[tmp6_3088] : $int<16>
    // 		iNsTr_24 := ($cast ($uint<64>) tmp6 )
    //  file prog.linked.opt.aa, line 1293
    // iNsTr_24
    $W[iNsTr_24_3092] : $int<64>
    // 		iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1294
    // iNsTr_25
    $W[iNsTr_25_3098] : $int<64>
    // 		iNsTr_26 := @(mem[iNsTr_25])
    //  file prog.linked.opt.aa, line 1295
    // @(mem[iNsTr_25])
    $intermediate $W[R_iNsTr_25_3100_resized] : $int<10>
    $intermediate $W[R_iNsTr_25_3100_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3101_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3101_root_address] : $int<10>
    // iNsTr_26
    $W[iNsTr_26_3103] : $int<32>
    // 		iNsTr_27 := ->(iNsTr_26)
    //  file prog.linked.opt.aa, line 1296
    // ->(iNsTr_26)
    $intermediate $W[ptr_deref_3106_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3106_root_address] : $int<10>
    $W[ptr_deref_3106_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_3106_data_0] : $int<16>
    // iNsTr_27
    $W[iNsTr_27_3107] : $int<16>
    // 		iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1297
    // iNsTr_28
    $W[iNsTr_28_3113] : $int<16>
    // 		iNsTr_29 := ($cast ($uint<64>) iNsTr_28 )
    //  file prog.linked.opt.aa, line 1298
    // iNsTr_29
    $W[iNsTr_29_3117] : $int<64>
    // 		iNsTr_30 := @(aPosteriori[iNsTr_29])
    //  file prog.linked.opt.aa, line 1299
    // @(aPosteriori[iNsTr_29])
    $intermediate $W[R_iNsTr_29_3119_resized] : $int<10>
    $intermediate $W[R_iNsTr_29_3119_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3120_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3120_root_address] : $int<10>
    // iNsTr_30
    $W[iNsTr_30_3122] : $int<32>
    // 		iNsTr_31 := ->(iNsTr_30)
    //  file prog.linked.opt.aa, line 1300
    // ->(iNsTr_30)
    $intermediate $W[ptr_deref_3125_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3125_root_address] : $int<10>
    $W[ptr_deref_3125_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_3125_data_0] : $int<32>
    // iNsTr_31
    $W[iNsTr_31_3126] : $float<8,23>
    // 		iNsTr_32 := @(ext_info[iNsTr_24])
    //  file prog.linked.opt.aa, line 1301
    // @(ext_info[iNsTr_24])
    $intermediate $W[R_iNsTr_24_3128_resized] : $int<10>
    $intermediate $W[R_iNsTr_24_3128_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3129_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3129_root_address] : $int<10>
    // iNsTr_32
    $W[iNsTr_32_3131] : $int<32>
    // 		iNsTr_33 := ->(iNsTr_32)
    //  file prog.linked.opt.aa, line 1302
    // ->(iNsTr_32)
    $intermediate $W[ptr_deref_3134_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3134_root_address] : $int<10>
    $W[ptr_deref_3134_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_3134_data_0] : $int<32>
    // iNsTr_33
    $W[iNsTr_33_3135] : $float<8,23>
    // 		iNsTr_34 := (iNsTr_31 - iNsTr_33)
    //  file prog.linked.opt.aa, line 1303
    // iNsTr_34
    $W[iNsTr_34_3140] : $float<8,23>
    // 		iNsTr_35 := @(message[iNsTr_24])
    //  file prog.linked.opt.aa, line 1304
    // @(message[iNsTr_24])
    $intermediate $W[R_iNsTr_24_3142_resized] : $int<10>
    $intermediate $W[R_iNsTr_24_3142_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3143_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3143_root_address] : $int<10>
    // iNsTr_35
    $W[iNsTr_35_3145] : $int<32>
    // 		->(iNsTr_35) := iNsTr_34
    //  file prog.linked.opt.aa, line 1305
    // ->(iNsTr_35)
    $intermediate $W[ptr_deref_3147_wire] : $float<8,23>
    $intermediate $W[ptr_deref_3147_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3147_root_address] : $int<10>
    $W[ptr_deref_3147_word_address_0] : $pointer<memory_space_9>
    $W[ptr_deref_3147_data_0] : $int<32>
    // 		iNsTr_37 := (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1306
    // iNsTr_37
    $W[iNsTr_37_3155] : $int<16>
    // 		exitcond1 := (iNsTr_37 == rangex_x0)
    //  file prog.linked.opt.aa, line 1307
    // exitcond1
    $W[exitcond1_3160] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1308
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1318
    // indvarx_xnext
    $W[indvarx_xnext_3175] : $int<64>
    // 		exitcond := (indvarx_xnext == tmp10)
    //  file prog.linked.opt.aa, line 1319
    // exitcond
    $W[exitcond_3180] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1320
    // datapath-instances for block %updateMessage%body
    //  file prog.linked.opt.aa, line 1226
    // 		iNsTr_0 := nrows
    //  file prog.linked.opt.aa, line 1228
    // nrows
    $load [LOAD_nrows_2891_load_0] $from memory_space_12 (LOAD_nrows_2891_word_address_0) (LOAD_nrows_2891_data_0) 
    $delay LOAD_nrows_2891_load_0 4
    &/ [LOAD_nrows_2891_gather_scatter] (LOAD_nrows_2891_data_0) (iNsTr_0_2892) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1229
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_2897_inst] (iNsTr_0_2892 type_cast_2896_wire_constant) (iNsTr_1_2898)   
    $buffering  $out EQ_u16_u1_2897_inst iNsTr_1_2898 1
    $delay EQ_u16_u1_2897_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1230
    ==0? [if_stmt_2899_branch] (iNsTr_1_2898)
    // 		iNsTr_4 := ncol_ind
    //  file prog.linked.opt.aa, line 1237
    // ncol_ind
    $load [LOAD_ncol_ind_2907_load_0] $from memory_space_10 (LOAD_ncol_ind_2907_word_address_0) (LOAD_ncol_ind_2907_data_0) 
    $delay LOAD_ncol_ind_2907_load_0 4
    &/ [LOAD_ncol_ind_2907_gather_scatter] (LOAD_ncol_ind_2907_data_0) (iNsTr_4_2908) 
    $flowthrough 
    // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_0 )
    //  file prog.linked.opt.aa, line 1238
    // ($cast ($uint<32>) iNsTr_0 )
    # := [type_cast_2911_inst] (iNsTr_0_2892) (iNsTr_5_2912)   
    $buffering  $out type_cast_2911_inst iNsTr_5_2912 1
    $delay type_cast_2911_inst 1
    // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    //  file prog.linked.opt.aa, line 1239
    // (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
    +[ADD_u32_u32_2917_inst] (iNsTr_5_2912 type_cast_2916_wire_constant) (iNsTr_6_2918)   
    $buffering  $out ADD_u32_u32_2917_inst iNsTr_6_2918 1
    $delay ADD_u32_u32_2917_inst 1
    // 		xx_xneg1 := (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1240
    // (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_2923_inst] (iNsTr_4_2908 type_cast_2922_wire_constant) (xx_xneg1_2924)   
    $buffering  $out ADD_u16_u16_2923_inst xx_xneg1_2924 1
    $delay ADD_u16_u16_2923_inst 1
    // 		tmp7 := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1241
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_2929_inst] (iNsTr_0_2892 type_cast_2928_wire_constant) (tmp7_2930)   
    $buffering  $out UGT_u16_u1_2929_inst tmp7_2930 1
    $delay UGT_u16_u1_2929_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1242
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_2935_inst] (iNsTr_0_2892 type_cast_2934_wire_constant) (xx_xop_2936)   
    $buffering  $out ADD_u16_u16_2935_inst xx_xop_2936 1
    $delay ADD_u16_u16_2935_inst 1
    // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 1243
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_2939_inst] (xx_xop_2936) (iNsTr_7_2940)   
    $buffering  $out type_cast_2939_inst iNsTr_7_2940 1
    $delay type_cast_2939_inst 1
    // 		xx_xop19 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1244
    // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_2945_inst] (iNsTr_7_2940 type_cast_2944_wire_constant) (xx_xop19_2946)   
    $buffering  $out ADD_u64_u64_2945_inst xx_xop19_2946 1
    $delay ADD_u64_u64_2945_inst 1
    // 		tmp10 := ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 1245
    // ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_2952_inst] (tmp7_2930 xx_xop19_2946 type_cast_2951_wire_constant) (tmp10_2953) 
    $buffering  $out MUX_2952_inst tmp10_2953 1
    // 		tmp3 := ($cast ($uint<64>) iNsTr_4 )
    //  file prog.linked.opt.aa, line 1246
    // ($cast ($uint<64>) iNsTr_4 )
    # := [type_cast_2956_inst] (iNsTr_4_2908) (tmp3_2957)   
    $buffering  $out type_cast_2956_inst tmp3_2957 1
    $delay type_cast_2956_inst 1
    // 		tmp4 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    //  file prog.linked.opt.aa, line 1247
    // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
    +[ADD_u64_u64_2962_inst] (tmp3_2957 type_cast_2961_wire_constant) (tmp4_2963)   
    $buffering  $out ADD_u64_u64_2962_inst tmp4_2963 1
    $delay ADD_u64_u64_2962_inst 1
    // 		tmp8 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1248
    // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_2968_inst] (tmp3_2957 type_cast_2967_wire_constant) (tmp8_2969)   
    $buffering  $out ADD_u64_u64_2968_inst tmp8_2969 1
    $delay ADD_u64_u64_2968_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1250
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph4_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on xx_x_crit_edge_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1251
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_2978_inst] (indvarx_xnext_3175) (type_cast_2978_wire)   
    $buffering  $out type_cast_2978_inst type_cast_2978_wire 1
    $delay type_cast_2978_inst 1
    $phi [phi_stmt_2972] (type_cast_2976_wire_constant type_cast_2978_wire) ( indvar_2972 ) 
    // 		tmp5 := (tmp4 + indvar)
    //  file prog.linked.opt.aa, line 1253
    // (tmp4 + indvar)
    +[ADD_u64_u64_2983_inst] (tmp4_2963 indvar_2972) (tmp5_2984)   
    $buffering  $out ADD_u64_u64_2983_inst tmp5_2984 1
    $delay ADD_u64_u64_2983_inst 1
    // 		scevgep18 := @(mem[tmp5])
    //  file prog.linked.opt.aa, line 1254
    &/ [array_obj_ref_2987_index_0_resize] (tmp5_2984) (R_tmp5_2986_resized) 
    $flowthrough 
    &/ [array_obj_ref_2987_index_0_rename] (R_tmp5_2986_resized) (R_tmp5_2986_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2987_index_offset] (R_tmp5_2986_scaled) (array_obj_ref_2987_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2987_root_address_inst] (array_obj_ref_2987_final_offset) (array_obj_ref_2987_root_address) 
    $flowthrough 
    # := [addr_of_2988_final_reg] (array_obj_ref_2987_root_address) (scevgep18_2989)   
    $buffering  $out addr_of_2988_final_reg scevgep18_2989 1
    // 		tmp9 := (tmp8 + indvar)
    //  file prog.linked.opt.aa, line 1255
    // (tmp8 + indvar)
    +[ADD_u64_u64_2993_inst] (tmp8_2969 indvar_2972) (tmp9_2994)   
    $buffering  $out ADD_u64_u64_2993_inst tmp9_2994 1
    $delay ADD_u64_u64_2993_inst 1
    // 		scevgep := @(mem[tmp9])
    //  file prog.linked.opt.aa, line 1256
    &/ [array_obj_ref_2997_index_0_resize] (tmp9_2994) (R_tmp9_2996_resized) 
    $flowthrough 
    &/ [array_obj_ref_2997_index_0_rename] (R_tmp9_2996_resized) (R_tmp9_2996_scaled) 
    $flowthrough 
    &/ [array_obj_ref_2997_index_offset] (R_tmp9_2996_scaled) (array_obj_ref_2997_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_2997_root_address_inst] (array_obj_ref_2997_final_offset) (array_obj_ref_2997_root_address) 
    $flowthrough 
    # := [addr_of_2998_final_reg] (array_obj_ref_2997_root_address) (scevgep_2999)   
    $buffering  $out addr_of_2998_final_reg scevgep_2999 1
    // 		tmp12 := ($cast ($uint<32>) indvar )
    //  file prog.linked.opt.aa, line 1257
    // ($cast ($uint<32>) indvar )
    # := [type_cast_3002_inst] (indvar_2972) (tmp12_3003)   
    $buffering  $out type_cast_3002_inst tmp12_3003 1
    $delay type_cast_3002_inst 1
    // 		iNsTr_9 := (tmp12 == iNsTr_6)
    //  file prog.linked.opt.aa, line 1258
    // (tmp12 == iNsTr_6)
    ==[EQ_u32_u1_3007_inst] (tmp12_3003 iNsTr_6_2918) (iNsTr_9_3008)   
    $buffering  $out EQ_u32_u1_3007_inst iNsTr_9_3008 1
    $delay EQ_u32_u1_3007_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1259
    ==0? [if_stmt_3009_branch] (iNsTr_9_3008)
    // 		iNsTr_11 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1266
    // ->(scevgep)
    &/ [ptr_deref_3018_base_resize] (scevgep_2999) (ptr_deref_3018_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3018_root_address_inst] (ptr_deref_3018_resized_base_address) (ptr_deref_3018_root_address) 
    $flowthrough 
    &/ [ptr_deref_3018_addr_0] (ptr_deref_3018_root_address) (ptr_deref_3018_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3018_load_0] $from memory_space_8 (ptr_deref_3018_word_address_0) (ptr_deref_3018_data_0) 
    $delay ptr_deref_3018_load_0 4
    &/ [ptr_deref_3018_gather_scatter] (ptr_deref_3018_data_0) (iNsTr_11_3019) 
    $flowthrough 
    // 		iNsTr_12 := (xx_xneg1 - iNsTr_11)
    //  file prog.linked.opt.aa, line 1267
    // (xx_xneg1 - iNsTr_11)
    -[SUB_u16_u16_3023_inst] (xx_xneg1_2924 iNsTr_11_3019) (iNsTr_12_3024)   
    $buffering  $out SUB_u16_u16_3023_inst iNsTr_12_3024 1
    $delay SUB_u16_u16_3023_inst 1
    // 		iNsTr_14 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1271
    // ->(scevgep)
    &/ [ptr_deref_3029_base_resize] (scevgep_2999) (ptr_deref_3029_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3029_root_address_inst] (ptr_deref_3029_resized_base_address) (ptr_deref_3029_root_address) 
    $flowthrough 
    &/ [ptr_deref_3029_addr_0] (ptr_deref_3029_root_address) (ptr_deref_3029_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3029_load_0] $from memory_space_8 (ptr_deref_3029_word_address_0) (ptr_deref_3029_data_0) 
    $delay ptr_deref_3029_load_0 4
    &/ [ptr_deref_3029_gather_scatter] (ptr_deref_3029_data_0) (iNsTr_14_3030) 
    $flowthrough 
    // 		iNsTr_15 := ->(scevgep18)
    //  file prog.linked.opt.aa, line 1272
    // ->(scevgep18)
    &/ [ptr_deref_3033_base_resize] (scevgep18_2989) (ptr_deref_3033_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3033_root_address_inst] (ptr_deref_3033_resized_base_address) (ptr_deref_3033_root_address) 
    $flowthrough 
    &/ [ptr_deref_3033_addr_0] (ptr_deref_3033_root_address) (ptr_deref_3033_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3033_load_0] $from memory_space_8 (ptr_deref_3033_word_address_0) (ptr_deref_3033_data_0) 
    $delay ptr_deref_3033_load_0 4
    &/ [ptr_deref_3033_gather_scatter] (ptr_deref_3033_data_0) (iNsTr_15_3034) 
    $flowthrough 
    // 		iNsTr_16 := (iNsTr_15 - iNsTr_14)
    //  file prog.linked.opt.aa, line 1273
    // (iNsTr_15 - iNsTr_14)
    -[SUB_u16_u16_3038_inst] (iNsTr_15_3034 iNsTr_14_3030) (iNsTr_16_3039)   
    $buffering  $out SUB_u16_u16_3038_inst iNsTr_16_3039 1
    $delay SUB_u16_u16_3038_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1275
    // 			$phi iNsTr_18 := 			  ($cast ($uint<16>) iNsTr_11 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_14 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1276
    // ($cast ($uint<16>) iNsTr_11 )
    # := [type_cast_3045_inst] (iNsTr_11_3019) (type_cast_3045_wire)   
    $buffering  $out type_cast_3045_inst type_cast_3045_wire 1
    $delay type_cast_3045_inst 1
    // ($cast ($uint<16>) iNsTr_14 )
    # := [type_cast_3047_inst] (iNsTr_14_3030) (type_cast_3047_wire)   
    $buffering  $out type_cast_3047_inst type_cast_3047_wire 1
    $delay type_cast_3047_inst 1
    $phi [phi_stmt_3042] (type_cast_3045_wire type_cast_3047_wire) ( iNsTr_18_3042 ) 
    // 			$phi rangex_x0 := 			  ($cast ($uint<16>) iNsTr_12 ) $on bb_3_bb_5			  ($cast ($uint<16>) iNsTr_16 ) $on bb_4_bb_5 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1277
    // ($cast ($uint<16>) iNsTr_12 )
    # := [type_cast_3051_inst] (iNsTr_12_3024) (type_cast_3051_wire)   
    $buffering  $out type_cast_3051_inst type_cast_3051_wire 1
    $delay type_cast_3051_inst 1
    // ($cast ($uint<16>) iNsTr_16 )
    # := [type_cast_3053_inst] (iNsTr_16_3039) (type_cast_3053_wire)   
    $buffering  $out type_cast_3053_inst type_cast_3053_wire 1
    $delay type_cast_3053_inst 1
    $phi [phi_stmt_3048] (type_cast_3051_wire type_cast_3053_wire) ( rangex_x0_3048 ) 
    // 		iNsTr_19 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1279
    // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_3059_inst] (rangex_x0_3048 type_cast_3058_wire_constant) (iNsTr_19_3060)   
    $buffering  $out EQ_u16_u1_3059_inst iNsTr_19_3060 1
    $delay EQ_u16_u1_3059_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1280
    ==0? [if_stmt_3061_branch] (iNsTr_19_3060)
    // 		tmp := (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1287
    // (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_3072_inst] (iNsTr_18_3042 type_cast_3071_wire_constant) (tmp_3073)   
    $buffering  $out ADD_u16_u16_3072_inst tmp_3073 1
    $delay ADD_u16_u16_3072_inst 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1289
    // 			$phi colx_x02 := 			  ($cast ($uint<16>) ($bitcast ($uint<16>) _b0000000000000000  ) ) $on bbx_xnph_bb_7			  ($cast ($uint<16>) iNsTr_37 ) $on bb_7_bb_7 // type of target is $uint<16>
    //  file prog.linked.opt.aa, line 1290
    // ($cast ($uint<16>) iNsTr_37 )
    # := [type_cast_3082_inst] (iNsTr_37_3155) (type_cast_3082_wire)   
    $buffering  $out type_cast_3082_inst type_cast_3082_wire 1
    $delay type_cast_3082_inst 1
    $phi [phi_stmt_3076] (type_cast_3080_wire_constant type_cast_3082_wire) ( colx_x02_3076 ) 
    // 		tmp6 := (tmp + colx_x02)
    //  file prog.linked.opt.aa, line 1292
    // (tmp + colx_x02)
    +[ADD_u16_u16_3087_inst] (tmp_3073 colx_x02_3076) (tmp6_3088)   
    $buffering  $out ADD_u16_u16_3087_inst tmp6_3088 1
    $delay ADD_u16_u16_3087_inst 1
    // 		iNsTr_24 := ($cast ($uint<64>) tmp6 )
    //  file prog.linked.opt.aa, line 1293
    // ($cast ($uint<64>) tmp6 )
    # := [type_cast_3091_inst] (tmp6_3088) (iNsTr_24_3092)   
    $buffering  $out type_cast_3091_inst iNsTr_24_3092 1
    $delay type_cast_3091_inst 1
    // 		iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1294
    // (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_3097_inst] (iNsTr_24_3092 type_cast_3096_wire_constant) (iNsTr_25_3098)   
    $buffering  $out ADD_u64_u64_3097_inst iNsTr_25_3098 1
    $delay ADD_u64_u64_3097_inst 1
    // 		iNsTr_26 := @(mem[iNsTr_25])
    //  file prog.linked.opt.aa, line 1295
    &/ [array_obj_ref_3101_index_0_resize] (iNsTr_25_3098) (R_iNsTr_25_3100_resized) 
    $flowthrough 
    &/ [array_obj_ref_3101_index_0_rename] (R_iNsTr_25_3100_resized) (R_iNsTr_25_3100_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3101_index_offset] (R_iNsTr_25_3100_scaled) (array_obj_ref_3101_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3101_root_address_inst] (array_obj_ref_3101_final_offset) (array_obj_ref_3101_root_address) 
    $flowthrough 
    # := [addr_of_3102_final_reg] (array_obj_ref_3101_root_address) (iNsTr_26_3103)   
    $buffering  $out addr_of_3102_final_reg iNsTr_26_3103 1
    // 		iNsTr_27 := ->(iNsTr_26)
    //  file prog.linked.opt.aa, line 1296
    // ->(iNsTr_26)
    &/ [ptr_deref_3106_base_resize] (iNsTr_26_3103) (ptr_deref_3106_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3106_root_address_inst] (ptr_deref_3106_resized_base_address) (ptr_deref_3106_root_address) 
    $flowthrough 
    &/ [ptr_deref_3106_addr_0] (ptr_deref_3106_root_address) (ptr_deref_3106_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3106_load_0] $from memory_space_8 (ptr_deref_3106_word_address_0) (ptr_deref_3106_data_0) 
    $delay ptr_deref_3106_load_0 4
    &/ [ptr_deref_3106_gather_scatter] (ptr_deref_3106_data_0) (iNsTr_27_3107) 
    $flowthrough 
    // 		iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1297
    // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_3112_inst] (iNsTr_27_3107 type_cast_3111_wire_constant) (iNsTr_28_3113)   
    $buffering  $out ADD_u16_u16_3112_inst iNsTr_28_3113 1
    $delay ADD_u16_u16_3112_inst 1
    // 		iNsTr_29 := ($cast ($uint<64>) iNsTr_28 )
    //  file prog.linked.opt.aa, line 1298
    // ($cast ($uint<64>) iNsTr_28 )
    # := [type_cast_3116_inst] (iNsTr_28_3113) (iNsTr_29_3117)   
    $buffering  $out type_cast_3116_inst iNsTr_29_3117 1
    $delay type_cast_3116_inst 1
    // 		iNsTr_30 := @(aPosteriori[iNsTr_29])
    //  file prog.linked.opt.aa, line 1299
    &/ [array_obj_ref_3120_index_0_resize] (iNsTr_29_3117) (R_iNsTr_29_3119_resized) 
    $flowthrough 
    &/ [array_obj_ref_3120_index_0_rename] (R_iNsTr_29_3119_resized) (R_iNsTr_29_3119_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3120_index_offset] (R_iNsTr_29_3119_scaled) (array_obj_ref_3120_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3120_root_address_inst] (array_obj_ref_3120_final_offset) (array_obj_ref_3120_root_address) 
    $flowthrough 
    # := [addr_of_3121_final_reg] (array_obj_ref_3120_root_address) (iNsTr_30_3122)   
    $buffering  $out addr_of_3121_final_reg iNsTr_30_3122 1
    // 		iNsTr_31 := ->(iNsTr_30)
    //  file prog.linked.opt.aa, line 1300
    // ->(iNsTr_30)
    &/ [ptr_deref_3125_base_resize] (iNsTr_30_3122) (ptr_deref_3125_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3125_root_address_inst] (ptr_deref_3125_resized_base_address) (ptr_deref_3125_root_address) 
    $flowthrough 
    &/ [ptr_deref_3125_addr_0] (ptr_deref_3125_root_address) (ptr_deref_3125_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3125_load_0] $from memory_space_1 (ptr_deref_3125_word_address_0) (ptr_deref_3125_data_0) 
    $delay ptr_deref_3125_load_0 4
    &/ [ptr_deref_3125_gather_scatter] (ptr_deref_3125_data_0) (iNsTr_31_3126) 
    $flowthrough 
    // 		iNsTr_32 := @(ext_info[iNsTr_24])
    //  file prog.linked.opt.aa, line 1301
    &/ [array_obj_ref_3129_index_0_resize] (iNsTr_24_3092) (R_iNsTr_24_3128_resized) 
    $flowthrough 
    &/ [array_obj_ref_3129_index_0_rename] (R_iNsTr_24_3128_resized) (R_iNsTr_24_3128_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3129_index_offset] (R_iNsTr_24_3128_scaled) (array_obj_ref_3129_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3129_root_address_inst] (array_obj_ref_3129_final_offset) (array_obj_ref_3129_root_address) 
    $flowthrough 
    # := [addr_of_3130_final_reg] (array_obj_ref_3129_root_address) (iNsTr_32_3131)   
    $buffering  $out addr_of_3130_final_reg iNsTr_32_3131 1
    // 		iNsTr_33 := ->(iNsTr_32)
    //  file prog.linked.opt.aa, line 1302
    // ->(iNsTr_32)
    &/ [ptr_deref_3134_base_resize] (iNsTr_32_3131) (ptr_deref_3134_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3134_root_address_inst] (ptr_deref_3134_resized_base_address) (ptr_deref_3134_root_address) 
    $flowthrough 
    &/ [ptr_deref_3134_addr_0] (ptr_deref_3134_root_address) (ptr_deref_3134_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3134_load_0] $from memory_space_5 (ptr_deref_3134_word_address_0) (ptr_deref_3134_data_0) 
    $delay ptr_deref_3134_load_0 4
    &/ [ptr_deref_3134_gather_scatter] (ptr_deref_3134_data_0) (iNsTr_33_3135) 
    $flowthrough 
    // 		iNsTr_34 := (iNsTr_31 - iNsTr_33)
    //  file prog.linked.opt.aa, line 1303
    // (iNsTr_31 - iNsTr_33)
    -[SUB_f32_f32_3139_inst] (iNsTr_31_3126 iNsTr_33_3135) (iNsTr_34_3140)   
    $buffering  $out SUB_f32_f32_3139_inst iNsTr_34_3140 1
    $delay SUB_f32_f32_3139_inst 14
    // 		iNsTr_35 := @(message[iNsTr_24])
    //  file prog.linked.opt.aa, line 1304
    &/ [array_obj_ref_3143_index_0_resize] (iNsTr_24_3092) (R_iNsTr_24_3142_resized) 
    $flowthrough 
    &/ [array_obj_ref_3143_index_0_rename] (R_iNsTr_24_3142_resized) (R_iNsTr_24_3142_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3143_index_offset] (R_iNsTr_24_3142_scaled) (array_obj_ref_3143_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3143_root_address_inst] (array_obj_ref_3143_final_offset) (array_obj_ref_3143_root_address) 
    $flowthrough 
    # := [addr_of_3144_final_reg] (array_obj_ref_3143_root_address) (iNsTr_35_3145)   
    $buffering  $out addr_of_3144_final_reg iNsTr_35_3145 1
    // 		->(iNsTr_35) := iNsTr_34
    //  file prog.linked.opt.aa, line 1305
    // ->(iNsTr_35)
    &/ [ptr_deref_3147_base_resize] (iNsTr_35_3145) (ptr_deref_3147_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3147_root_address_inst] (ptr_deref_3147_resized_base_address) (ptr_deref_3147_root_address) 
    $flowthrough 
    &/ [ptr_deref_3147_addr_0] (ptr_deref_3147_root_address) (ptr_deref_3147_word_address_0) 
    $flowthrough 
    $store [ptr_deref_3147_store_0] $to memory_space_9 (ptr_deref_3147_word_address_0 ptr_deref_3147_data_0) 
    $delay ptr_deref_3147_store_0 4
    &/ [ptr_deref_3147_gather_scatter] (iNsTr_34_3140) (ptr_deref_3147_data_0) 
    $flowthrough 
    // 		iNsTr_37 := (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1306
    // (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
    +[ADD_u16_u16_3154_inst] (colx_x02_3076 type_cast_3153_wire_constant) (iNsTr_37_3155)   
    $buffering  $out ADD_u16_u16_3154_inst iNsTr_37_3155 1
    $delay ADD_u16_u16_3154_inst 1
    // 		exitcond1 := (iNsTr_37 == rangex_x0)
    //  file prog.linked.opt.aa, line 1307
    // (iNsTr_37 == rangex_x0)
    ==[EQ_u16_u1_3159_inst] (iNsTr_37_3155 rangex_x0_3048) (exitcond1_3160)   
    $buffering  $out EQ_u16_u1_3159_inst exitcond1_3160 1
    $delay EQ_u16_u1_3159_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1308
    ==0? [if_stmt_3161_branch] (exitcond1_3160)
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1318
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_3174_inst] (indvar_2972 type_cast_3173_wire_constant) (indvarx_xnext_3175)   
    $buffering  $out ADD_u64_u64_3174_inst indvarx_xnext_3175 1
    $delay ADD_u64_u64_3174_inst 1
    // 		exitcond := (indvarx_xnext == tmp10)
    //  file prog.linked.opt.aa, line 1319
    // (indvarx_xnext == tmp10)
    ==[EQ_u64_u1_3179_inst] (indvarx_xnext_3175 tmp10_2953) (exitcond_3180)   
    $buffering  $out EQ_u64_u1_3179_inst exitcond_3180 1
    $delay EQ_u64_u1_3179_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1320
    ==0? [if_stmt_3181_branch] (exitcond_3180)
  }
  // end data-path
  // 		iNsTr_0 := nrows
  //  file prog.linked.opt.aa, line 1228
  // nrows
  LOAD_nrows_2891_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Update/LOAD_nrows_2891_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Update/LOAD_nrows_2891_Merge/merge_ack)
  LOAD_nrows_2891_load_0 <=> (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/LOAD_nrows_2891_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1229
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_2897_inst <=> (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/EQ_u16_u1_2897_Sample/rr branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/EQ_u16_u1_2897_Update/cr) (branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/EQ_u16_u1_2897_Sample/ra branch_block_stmt_2889/assign_stmt_2892_to_assign_stmt_2898/EQ_u16_u1_2897_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1230
  if_stmt_2899_branch <=> (branch_block_stmt_2889/if_stmt_2899_eval_test/branch_req) (branch_block_stmt_2889/if_stmt_2899_else_link/else_choice_transition branch_block_stmt_2889/if_stmt_2899_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1235
  // 		iNsTr_4 := ncol_ind
  //  file prog.linked.opt.aa, line 1237
  // ncol_ind
  LOAD_ncol_ind_2907_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Update/LOAD_ncol_ind_2907_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Update/LOAD_ncol_ind_2907_Merge/merge_ack)
  LOAD_ncol_ind_2907_load_0 <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/LOAD_ncol_ind_2907_Update/word_access_complete/word_0/ca)
  // 		iNsTr_5 := ($cast ($uint<32>) iNsTr_0 )
  //  file prog.linked.opt.aa, line 1238
  // iNsTr_0
  // ($cast ($uint<32>) iNsTr_0 )
  type_cast_2911_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2911_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2911_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2911_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2911_Update/ca)
  // 		iNsTr_6 := (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  //  file prog.linked.opt.aa, line 1239
  // (iNsTr_5 + ($bitcast ($uint<32>) _b11111111111111111111111111111111  ))
  // iNsTr_5
  ADD_u32_u32_2917_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u32_u32_2917_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u32_u32_2917_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u32_u32_2917_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u32_u32_2917_Update/ca)
  // 		xx_xneg1 := (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1240
  // (iNsTr_4 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_4
  ADD_u16_u16_2923_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2923_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2923_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2923_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2923_Update/ca)
  // 		tmp7 := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1241
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_2929_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/UGT_u16_u1_2929_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/UGT_u16_u1_2929_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/UGT_u16_u1_2929_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/UGT_u16_u1_2929_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1242
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_2935_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2935_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2935_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2935_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u16_u16_2935_Update/ca)
  // 		iNsTr_7 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 1243
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_2939_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2939_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2939_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2939_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2939_Update/ca)
  // 		xx_xop19 := (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1244
  // (iNsTr_7 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_7
  ADD_u64_u64_2945_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2945_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2945_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2945_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2945_Update/ca)
  // 		tmp10 := ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 1245
  // tmp7
  // xx_xop19
  // ( $mux tmp7 xx_xop19  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_2952_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/MUX_2952_start/req branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/MUX_2952_complete/req) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/MUX_2952_start/ack branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/MUX_2952_complete/ack)
  // 		tmp3 := ($cast ($uint<64>) iNsTr_4 )
  //  file prog.linked.opt.aa, line 1246
  // iNsTr_4
  // ($cast ($uint<64>) iNsTr_4 )
  type_cast_2956_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2956_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2956_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2956_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/type_cast_2956_Update/ca)
  // 		tmp4 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  //  file prog.linked.opt.aa, line 1247
  // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000100  ))
  // tmp3
  ADD_u64_u64_2962_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2962_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2962_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2962_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2962_Update/ca)
  // 		tmp8 := (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 1248
  // (tmp3 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // tmp3
  ADD_u64_u64_2968_inst <=> (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2968_Sample/rr branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2968_Update/cr) (branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2968_Sample/ra branch_block_stmt_2889/assign_stmt_2908_to_assign_stmt_2969/ADD_u64_u64_2968_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1250
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_2978_inst <=> (branch_block_stmt_2889/xx_x_crit_edge_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_sources/type_cast_2978/SplitProtocol/Sample/rr branch_block_stmt_2889/xx_x_crit_edge_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_sources/type_cast_2978/SplitProtocol/Update/cr) (branch_block_stmt_2889/xx_x_crit_edge_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_sources/type_cast_2978/SplitProtocol/Sample/ra branch_block_stmt_2889/xx_x_crit_edge_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_sources/type_cast_2978/SplitProtocol/Update/ca)
  phi_stmt_2972 <=> (branch_block_stmt_2889/bbx_xnph4_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_req branch_block_stmt_2889/xx_x_crit_edge_bb_2_PhiReq/phi_stmt_2972/phi_stmt_2972_req) (branch_block_stmt_2889/merge_stmt_2971_PhiAck/phi_stmt_2972_ack)
  // 		tmp5 := (tmp4 + indvar)
  //  file prog.linked.opt.aa, line 1253
  // (tmp4 + indvar)
  // tmp4
  // indvar
  ADD_u64_u64_2983_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2983_Sample/rr branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2983_Update/cr) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2983_Sample/ra branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2983_Update/ca)
  // 		scevgep18 := @(mem[tmp5])
  //  file prog.linked.opt.aa, line 1254
  // tmp5
  array_obj_ref_2987_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_index_resize_0/index_resize_ack)
  array_obj_ref_2987_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_index_scale_0/scale_rename_ack)
  array_obj_ref_2987_index_offset <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_final_index_sum_regn/ack)
  array_obj_ref_2987_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2987_base_plus_offset/sum_rename_ack)
  addr_of_2988_final_reg <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2988_request/req branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2988_complete/req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2988_request/ack branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2988_complete/ack)
  // 		tmp9 := (tmp8 + indvar)
  //  file prog.linked.opt.aa, line 1255
  // (tmp8 + indvar)
  // tmp8
  // indvar
  ADD_u64_u64_2993_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2993_Sample/rr branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2993_Update/cr) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2993_Sample/ra branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/ADD_u64_u64_2993_Update/ca)
  // 		scevgep := @(mem[tmp9])
  //  file prog.linked.opt.aa, line 1256
  // tmp9
  array_obj_ref_2997_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_index_resize_0/index_resize_ack)
  array_obj_ref_2997_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_index_scale_0/scale_rename_ack)
  array_obj_ref_2997_index_offset <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_final_index_sum_regn/ack)
  array_obj_ref_2997_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/array_obj_ref_2997_base_plus_offset/sum_rename_ack)
  addr_of_2998_final_reg <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2998_request/req branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2998_complete/req) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2998_request/ack branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/addr_of_2998_complete/ack)
  // 		tmp12 := ($cast ($uint<32>) indvar )
  //  file prog.linked.opt.aa, line 1257
  // indvar
  // ($cast ($uint<32>) indvar )
  type_cast_3002_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/type_cast_3002_Sample/rr branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/type_cast_3002_Update/cr) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/type_cast_3002_Sample/ra branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/type_cast_3002_Update/ca)
  // 		iNsTr_9 := (tmp12 == iNsTr_6)
  //  file prog.linked.opt.aa, line 1258
  // (tmp12 == iNsTr_6)
  // tmp12
  // iNsTr_6
  EQ_u32_u1_3007_inst <=> (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/EQ_u32_u1_3007_Sample/rr branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/EQ_u32_u1_3007_Update/cr) (branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/EQ_u32_u1_3007_Sample/ra branch_block_stmt_2889/assign_stmt_2984_to_assign_stmt_3008/EQ_u32_u1_3007_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1259
  if_stmt_3009_branch <=> (branch_block_stmt_2889/if_stmt_3009_eval_test/branch_req) (branch_block_stmt_2889/if_stmt_3009_else_link/else_choice_transition branch_block_stmt_2889/if_stmt_3009_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1264
  // 		iNsTr_11 := ->(scevgep)
  //  file prog.linked.opt.aa, line 1266
  // scevgep
  ptr_deref_3018_base_resize <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_base_addr_resize/base_resize_ack)
  ptr_deref_3018_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_base_plus_offset/sum_rename_ack)
  ptr_deref_3018_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_word_addrgen/root_register_ack)
  ptr_deref_3018_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Update/ptr_deref_3018_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Update/ptr_deref_3018_Merge/merge_ack)
  ptr_deref_3018_load_0 <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/ptr_deref_3018_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := (xx_xneg1 - iNsTr_11)
  //  file prog.linked.opt.aa, line 1267
  // (xx_xneg1 - iNsTr_11)
  // xx_xneg1
  // iNsTr_11
  SUB_u16_u16_3023_inst <=> (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/SUB_u16_u16_3023_Sample/rr branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/SUB_u16_u16_3023_Update/cr) (branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/SUB_u16_u16_3023_Sample/ra branch_block_stmt_2889/assign_stmt_3019_to_assign_stmt_3024/SUB_u16_u16_3023_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1269
  // 		iNsTr_14 := ->(scevgep)
  //  file prog.linked.opt.aa, line 1271
  // scevgep
  ptr_deref_3029_base_resize <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_base_addr_resize/base_resize_ack)
  ptr_deref_3029_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_base_plus_offset/sum_rename_ack)
  ptr_deref_3029_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_word_addrgen/root_register_ack)
  ptr_deref_3029_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Update/ptr_deref_3029_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Update/ptr_deref_3029_Merge/merge_ack)
  ptr_deref_3029_load_0 <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3029_Update/word_access_complete/word_0/ca)
  // 		iNsTr_15 := ->(scevgep18)
  //  file prog.linked.opt.aa, line 1272
  // scevgep18
  ptr_deref_3033_base_resize <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_base_addr_resize/base_resize_ack)
  ptr_deref_3033_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_base_plus_offset/sum_rename_ack)
  ptr_deref_3033_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_word_addrgen/root_register_ack)
  ptr_deref_3033_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Update/ptr_deref_3033_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Update/ptr_deref_3033_Merge/merge_ack)
  ptr_deref_3033_load_0 <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/ptr_deref_3033_Update/word_access_complete/word_0/ca)
  // 		iNsTr_16 := (iNsTr_15 - iNsTr_14)
  //  file prog.linked.opt.aa, line 1273
  // (iNsTr_15 - iNsTr_14)
  // iNsTr_15
  // iNsTr_14
  SUB_u16_u16_3038_inst <=> (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/SUB_u16_u16_3038_Sample/rr branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/SUB_u16_u16_3038_Update/cr) (branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/SUB_u16_u16_3038_Sample/ra branch_block_stmt_2889/assign_stmt_3030_to_assign_stmt_3039/SUB_u16_u16_3038_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1275
  // ($cast ($uint<16>) iNsTr_11 )
  type_cast_3045_inst <=> (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3045/SplitProtocol/Sample/rr branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3045/SplitProtocol/Update/cr) (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3045/SplitProtocol/Sample/ra branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3045/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_14 )
  type_cast_3047_inst <=> (branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3047/SplitProtocol/Sample/rr branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3047/SplitProtocol/Update/cr) (branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3047/SplitProtocol/Sample/ra branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_sources/type_cast_3047/SplitProtocol/Update/ca)
  phi_stmt_3042 <=> (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_req branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3042/phi_stmt_3042_req) (branch_block_stmt_2889/merge_stmt_3041_PhiAck/phi_stmt_3042_ack)
  // ($cast ($uint<16>) iNsTr_12 )
  type_cast_3051_inst <=> (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3051/SplitProtocol/Sample/rr branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3051/SplitProtocol/Update/cr) (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3051/SplitProtocol/Sample/ra branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3051/SplitProtocol/Update/ca)
  // ($cast ($uint<16>) iNsTr_16 )
  type_cast_3053_inst <=> (branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3053/SplitProtocol/Sample/rr branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3053/SplitProtocol/Update/cr) (branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3053/SplitProtocol/Sample/ra branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_sources/type_cast_3053/SplitProtocol/Update/ca)
  phi_stmt_3048 <=> (branch_block_stmt_2889/bb_3_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_req branch_block_stmt_2889/bb_4_bb_5_PhiReq/phi_stmt_3048/phi_stmt_3048_req) (branch_block_stmt_2889/merge_stmt_3041_PhiAck/phi_stmt_3048_ack)
  // 		iNsTr_19 := (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1279
  // (rangex_x0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // rangex_x0
  EQ_u16_u1_3059_inst <=> (branch_block_stmt_2889/assign_stmt_3060/EQ_u16_u1_3059_Sample/rr branch_block_stmt_2889/assign_stmt_3060/EQ_u16_u1_3059_Update/cr) (branch_block_stmt_2889/assign_stmt_3060/EQ_u16_u1_3059_Sample/ra branch_block_stmt_2889/assign_stmt_3060/EQ_u16_u1_3059_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1280
  if_stmt_3061_branch <=> (branch_block_stmt_2889/if_stmt_3061_eval_test/branch_req) (branch_block_stmt_2889/if_stmt_3061_else_link/else_choice_transition branch_block_stmt_2889/if_stmt_3061_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1285
  // 		tmp := (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1287
  // (iNsTr_18 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_18
  ADD_u16_u16_3072_inst <=> (branch_block_stmt_2889/assign_stmt_3073/ADD_u16_u16_3072_Sample/rr branch_block_stmt_2889/assign_stmt_3073/ADD_u16_u16_3072_Update/cr) (branch_block_stmt_2889/assign_stmt_3073/ADD_u16_u16_3072_Sample/ra branch_block_stmt_2889/assign_stmt_3073/ADD_u16_u16_3072_Update/ca)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1289
  // ($cast ($uint<16>) iNsTr_37 )
  type_cast_3082_inst <=> (branch_block_stmt_2889/bb_7_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Sample/rr branch_block_stmt_2889/bb_7_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Update/cr) (branch_block_stmt_2889/bb_7_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Sample/ra branch_block_stmt_2889/bb_7_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_sources/type_cast_3082/SplitProtocol/Update/ca)
  phi_stmt_3076 <=> (branch_block_stmt_2889/bbx_xnph_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_req branch_block_stmt_2889/bb_7_bb_7_PhiReq/phi_stmt_3076/phi_stmt_3076_req) (branch_block_stmt_2889/merge_stmt_3075_PhiAck/phi_stmt_3076_ack)
  // 		tmp6 := (tmp + colx_x02)
  //  file prog.linked.opt.aa, line 1292
  // (tmp + colx_x02)
  // tmp
  // colx_x02
  ADD_u16_u16_3087_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3087_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3087_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3087_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3087_Update/ca)
  // 		iNsTr_24 := ($cast ($uint<64>) tmp6 )
  //  file prog.linked.opt.aa, line 1293
  // tmp6
  // ($cast ($uint<64>) tmp6 )
  type_cast_3091_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3091_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3091_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3091_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3091_Update/ca)
  // 		iNsTr_25 := (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 1294
  // (iNsTr_24 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // iNsTr_24
  ADD_u64_u64_3097_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u64_u64_3097_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u64_u64_3097_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u64_u64_3097_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u64_u64_3097_Update/ca)
  // 		iNsTr_26 := @(mem[iNsTr_25])
  //  file prog.linked.opt.aa, line 1295
  // iNsTr_25
  array_obj_ref_3101_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_index_resize_0/index_resize_ack)
  array_obj_ref_3101_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_index_scale_0/scale_rename_ack)
  array_obj_ref_3101_index_offset <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_final_index_sum_regn/ack)
  array_obj_ref_3101_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3101_base_plus_offset/sum_rename_ack)
  addr_of_3102_final_reg <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3102_request/req branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3102_complete/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3102_request/ack branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3102_complete/ack)
  // 		iNsTr_27 := ->(iNsTr_26)
  //  file prog.linked.opt.aa, line 1296
  // iNsTr_26
  ptr_deref_3106_base_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_base_addr_resize/base_resize_ack)
  ptr_deref_3106_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_base_plus_offset/sum_rename_ack)
  ptr_deref_3106_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_word_addrgen/root_register_ack)
  ptr_deref_3106_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Update/ptr_deref_3106_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Update/ptr_deref_3106_Merge/merge_ack)
  ptr_deref_3106_load_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3106_Update/word_access_complete/word_0/ca)
  // 		iNsTr_28 := (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1297
  // (iNsTr_27 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_27
  ADD_u16_u16_3112_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3112_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3112_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3112_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3112_Update/ca)
  // 		iNsTr_29 := ($cast ($uint<64>) iNsTr_28 )
  //  file prog.linked.opt.aa, line 1298
  // iNsTr_28
  // ($cast ($uint<64>) iNsTr_28 )
  type_cast_3116_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3116_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3116_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3116_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/type_cast_3116_Update/ca)
  // 		iNsTr_30 := @(aPosteriori[iNsTr_29])
  //  file prog.linked.opt.aa, line 1299
  // iNsTr_29
  array_obj_ref_3120_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_index_resize_0/index_resize_ack)
  array_obj_ref_3120_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_index_scale_0/scale_rename_ack)
  array_obj_ref_3120_index_offset <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_final_index_sum_regn/ack)
  array_obj_ref_3120_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3120_base_plus_offset/sum_rename_ack)
  addr_of_3121_final_reg <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3121_request/req branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3121_complete/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3121_request/ack branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3121_complete/ack)
  // 		iNsTr_31 := ->(iNsTr_30)
  //  file prog.linked.opt.aa, line 1300
  // iNsTr_30
  ptr_deref_3125_base_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_base_addr_resize/base_resize_ack)
  ptr_deref_3125_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_base_plus_offset/sum_rename_ack)
  ptr_deref_3125_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_word_addrgen/root_register_ack)
  ptr_deref_3125_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Update/ptr_deref_3125_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Update/ptr_deref_3125_Merge/merge_ack)
  ptr_deref_3125_load_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3125_Update/word_access_complete/word_0/ca)
  // 		iNsTr_32 := @(ext_info[iNsTr_24])
  //  file prog.linked.opt.aa, line 1301
  // iNsTr_24
  array_obj_ref_3129_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_index_resize_0/index_resize_ack)
  array_obj_ref_3129_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_index_scale_0/scale_rename_ack)
  array_obj_ref_3129_index_offset <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_final_index_sum_regn/ack)
  array_obj_ref_3129_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3129_base_plus_offset/sum_rename_ack)
  addr_of_3130_final_reg <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3130_request/req branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3130_complete/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3130_request/ack branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3130_complete/ack)
  // 		iNsTr_33 := ->(iNsTr_32)
  //  file prog.linked.opt.aa, line 1302
  // iNsTr_32
  ptr_deref_3134_base_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_base_addr_resize/base_resize_ack)
  ptr_deref_3134_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_base_plus_offset/sum_rename_ack)
  ptr_deref_3134_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_word_addrgen/root_register_ack)
  ptr_deref_3134_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Update/ptr_deref_3134_Merge/merge_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Update/ptr_deref_3134_Merge/merge_ack)
  ptr_deref_3134_load_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3134_Update/word_access_complete/word_0/ca)
  // 		iNsTr_34 := (iNsTr_31 - iNsTr_33)
  //  file prog.linked.opt.aa, line 1303
  // (iNsTr_31 - iNsTr_33)
  // iNsTr_31
  // iNsTr_33
  SUB_f32_f32_3139_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/SUB_f32_f32_3139_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/SUB_f32_f32_3139_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/SUB_f32_f32_3139_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/SUB_f32_f32_3139_Update/ca)
  // 		iNsTr_35 := @(message[iNsTr_24])
  //  file prog.linked.opt.aa, line 1304
  // iNsTr_24
  array_obj_ref_3143_index_0_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_index_resize_0/index_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_index_resize_0/index_resize_ack)
  array_obj_ref_3143_index_0_rename <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_index_scale_0/scale_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_index_scale_0/scale_rename_ack)
  array_obj_ref_3143_index_offset <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_final_index_sum_regn/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_final_index_sum_regn/ack)
  array_obj_ref_3143_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/array_obj_ref_3143_base_plus_offset/sum_rename_ack)
  addr_of_3144_final_reg <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3144_request/req branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3144_complete/req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3144_request/ack branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/addr_of_3144_complete/ack)
  // 		->(iNsTr_35) := iNsTr_34
  //  file prog.linked.opt.aa, line 1305
  // iNsTr_34
  // iNsTr_35
  ptr_deref_3147_base_resize <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_base_addr_resize/base_resize_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_base_addr_resize/base_resize_ack)
  ptr_deref_3147_root_address_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_base_plus_offset/sum_rename_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_base_plus_offset/sum_rename_ack)
  ptr_deref_3147_addr_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_word_addrgen/root_register_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_word_addrgen/root_register_ack)
  ptr_deref_3147_gather_scatter <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Sample/ptr_deref_3147_Split/split_req) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Sample/ptr_deref_3147_Split/split_ack)
  ptr_deref_3147_store_0 <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Sample/word_access_start/word_0/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Update/word_access_complete/word_0/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Sample/word_access_start/word_0/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ptr_deref_3147_Update/word_access_complete/word_0/ca)
  // 		iNsTr_37 := (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1306
  // (colx_x02 + ($bitcast ($uint<16>) _b0000000000000001  ))
  // colx_x02
  ADD_u16_u16_3154_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3154_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3154_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3154_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/ADD_u16_u16_3154_Update/ca)
  // 		exitcond1 := (iNsTr_37 == rangex_x0)
  //  file prog.linked.opt.aa, line 1307
  // (iNsTr_37 == rangex_x0)
  // iNsTr_37
  // rangex_x0
  EQ_u16_u1_3159_inst <=> (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/EQ_u16_u1_3159_Sample/rr branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/EQ_u16_u1_3159_Update/cr) (branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/EQ_u16_u1_3159_Sample/ra branch_block_stmt_2889/assign_stmt_3088_to_assign_stmt_3160/EQ_u16_u1_3159_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1308
  if_stmt_3161_branch <=> (branch_block_stmt_2889/if_stmt_3161_eval_test/branch_req) (branch_block_stmt_2889/if_stmt_3161_else_link/else_choice_transition branch_block_stmt_2889/if_stmt_3161_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1313
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1316
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1318
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_3174_inst <=> (branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/ADD_u64_u64_3174_Sample/rr branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/ADD_u64_u64_3174_Update/cr) (branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/ADD_u64_u64_3174_Sample/ra branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/ADD_u64_u64_3174_Update/ca)
  // 		exitcond := (indvarx_xnext == tmp10)
  //  file prog.linked.opt.aa, line 1319
  // (indvarx_xnext == tmp10)
  // indvarx_xnext
  // tmp10
  EQ_u64_u1_3179_inst <=> (branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/EQ_u64_u1_3179_Sample/rr branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/EQ_u64_u1_3179_Update/cr) (branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/EQ_u64_u1_3179_Sample/ra branch_block_stmt_2889/assign_stmt_3175_to_assign_stmt_3180/EQ_u64_u1_3179_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1320
  if_stmt_3181_branch <=> (branch_block_stmt_2889/if_stmt_3181_eval_test/branch_req) (branch_block_stmt_2889/if_stmt_3181_else_link/else_choice_transition branch_block_stmt_2889/if_stmt_3181_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1325
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1328
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1331
}
$module [update_aPosteriori] 
{
  // pipe-declarations for block %update_aPosteriori
  //  file prog.linked.opt.aa, line 1335
  // pipe-declarations for block %update_aPosteriori%body
  //  file prog.linked.opt.aa, line 1340
  // pipe-declarations for block %update_aPosteriori%body%
  //  file prog.linked.opt.aa, line 1349
  // pipe-declarations for block %update_aPosteriori%body%
  //  file prog.linked.opt.aa, line 1357
  // pipe-declarations for block %update_aPosteriori%body%
  //  file prog.linked.opt.aa, line 1378
  // pipe-declarations for block %update_aPosteriori%body%
  //  file prog.linked.opt.aa, line 1381
  // pipe-declarations for block %update_aPosteriori%body%
  //  file prog.linked.opt.aa, line 1384
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_3195] // Branch Block  file prog.linked.opt.aa, line 1340
    {
      $P [branch_block_stmt_3195__entry__]
      branch_block_stmt_3195__entry__ <-| ($entry)
      $P [branch_block_stmt_3195__exit__]
      branch_block_stmt_3195__exit__ |-> ($exit)
      $P [assign_stmt_3198_to_assign_stmt_3204__entry__] 
      $P [assign_stmt_3198_to_assign_stmt_3204__exit__] 
      $P [if_stmt_3205__entry__] 
      $P [if_stmt_3205__exit__] 
      $P [merge_stmt_3211__entry__] 
      $P [merge_stmt_3211__exit__] 
      $P [assign_stmt_3217_to_assign_stmt_3240__entry__] 
      $P [assign_stmt_3217_to_assign_stmt_3240__exit__] 
      $P [bbx_xnph_bb_2]
      $P [merge_stmt_3242__exit__] 
      $P [assign_stmt_3256_to_assign_stmt_3313__entry__] 
      $P [assign_stmt_3256_to_assign_stmt_3313__exit__] 
      $P [if_stmt_3314__entry__] 
      $P [if_stmt_3314__exit__] 
      $P [merge_stmt_3320__entry__] 
      $P [merge_stmt_3320__exit__] 
      $P [xx_x_crit_edgex_xloopexit_xx_x_crit_edge]
      $P [merge_stmt_3322__exit__] 
      $P [return__]
      $P [merge_stmt_3324__exit__] 
      ::[assign_stmt_3198_to_assign_stmt_3204] 
      {
        // start:  		iNsTr_0 := ncol_ind
        //  file prog.linked.opt.aa, line 1342
        // Source expression
        // ncol_ind
        $T[LOAD_ncol_ind_3197_sample_start_] 
        $T[LOAD_ncol_ind_3197_sample_completed_] 
        $T[LOAD_ncol_ind_3197_update_start_] 
        $T[LOAD_ncol_ind_3197_update_completed_] 
        $T[LOAD_ncol_ind_3197_word_address_calculated] 
        $T[LOAD_ncol_ind_3197_root_address_calculated] 
        LOAD_ncol_ind_3197_word_address_calculated <-& (LOAD_ncol_ind_3197_root_address_calculated)
        ;;[LOAD_ncol_ind_3197_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[LOAD_ncol_ind_3197_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[LOAD_ncol_ind_3197_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        LOAD_ncol_ind_3197_sample_start_ <-& (LOAD_ncol_ind_3197_word_address_calculated)
        LOAD_ncol_ind_3197_sample_start_ &-> (LOAD_ncol_ind_3197_Sample)
        LOAD_ncol_ind_3197_sample_completed_ <-& (LOAD_ncol_ind_3197_Sample)
        LOAD_ncol_ind_3197_sample_completed_ &-> ($null)
        LOAD_ncol_ind_3197_update_start_ &-> (LOAD_ncol_ind_3197_Update)
        LOAD_ncol_ind_3197_update_completed_ <-& (LOAD_ncol_ind_3197_Update)
        // Target expression
        // (as target) iNsTr_0
        // start: WAR dependencies for iNsTr_0
        // done: WAR dependencies for iNsTr_0
        // end:  		iNsTr_0 := ncol_ind
        // start:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        //  file prog.linked.opt.aa, line 1343
        // Source expression
        // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        $T[EQ_u16_u1_3203_sample_start_] 
        $T[EQ_u16_u1_3203_sample_completed_] 
        $T[EQ_u16_u1_3203_update_start_] 
        $T[EQ_u16_u1_3203_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_3203_sample_start_
        EQ_u16_u1_3203_sample_start_ <-& (LOAD_ncol_ind_3197_update_completed_)
        // done: Forward dependencies from iNsTr_0 to transition EQ_u16_u1_3203_sample_start_
        ;;[EQ_u16_u1_3203_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u16_u1_3203_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u16_u1_3203_sample_start_ &-> (EQ_u16_u1_3203_Sample)
        EQ_u16_u1_3203_sample_completed_ <-& (EQ_u16_u1_3203_Sample)
        EQ_u16_u1_3203_sample_completed_ &-> ($null)
        EQ_u16_u1_3203_update_start_ &-> (EQ_u16_u1_3203_Update)
        EQ_u16_u1_3203_update_completed_ <-& (EQ_u16_u1_3203_Update)
        // Target expression
        // (as target) iNsTr_1
        // start: WAR dependencies for iNsTr_1
        // done: WAR dependencies for iNsTr_1
        // end:  		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
        // load-store dependencies..
      }
      assign_stmt_3198_to_assign_stmt_3204__entry__ |-> (assign_stmt_3198_to_assign_stmt_3204)
      assign_stmt_3198_to_assign_stmt_3204__exit__ <-| (assign_stmt_3198_to_assign_stmt_3204)
      // if-statement  
      //  file prog.linked.opt.aa, line 1344
      ;;[if_stmt_3205_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3205__entry__ |-> (if_stmt_3205_dead_link)
      if_stmt_3205__exit__ <-| (if_stmt_3205_dead_link)
      ;;[if_stmt_3205_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3205__entry__ |-> (if_stmt_3205_eval_test)
      $P [R_iNsTr_1_3206_place]
      R_iNsTr_1_3206_place <-| (if_stmt_3205_eval_test)
      ;;[if_stmt_3205_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3205_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_iNsTr_1_3206_place |-> (if_stmt_3205_if_link if_stmt_3205_else_link)
      $P [bb_0_xx_x_crit_edge]
      bb_0_xx_x_crit_edge <-| (if_stmt_3205_if_link)
      $P [bb_0_bbx_xnph]
      bb_0_bbx_xnph <-| (if_stmt_3205_else_link)
      ::[assign_stmt_3217_to_assign_stmt_3240] 
      {
        // start:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        //  file prog.linked.opt.aa, line 1351
        // Source expression
        // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        $T[UGT_u16_u1_3216_sample_start_] 
        $T[UGT_u16_u1_3216_sample_completed_] 
        $T[UGT_u16_u1_3216_update_start_] 
        $T[UGT_u16_u1_3216_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_3216_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition UGT_u16_u1_3216_sample_start_
        ;;[UGT_u16_u1_3216_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u16_u1_3216_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u16_u1_3216_sample_start_ &-> (UGT_u16_u1_3216_Sample)
        UGT_u16_u1_3216_sample_completed_ <-& (UGT_u16_u1_3216_Sample)
        UGT_u16_u1_3216_sample_completed_ &-> ($null)
        UGT_u16_u1_3216_update_start_ &-> (UGT_u16_u1_3216_Update)
        UGT_u16_u1_3216_update_completed_ <-& (UGT_u16_u1_3216_Update)
        // Target expression
        // (as target) tmp
        // start: WAR dependencies for tmp
        // done: WAR dependencies for tmp
        // end:  		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
        // start:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1352
        // Source expression
        // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_3222_sample_start_] 
        $T[ADD_u16_u16_3222_sample_completed_] 
        $T[ADD_u16_u16_3222_update_start_] 
        $T[ADD_u16_u16_3222_update_completed_] 
        // iNsTr_0
        // start: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_3222_sample_start_
        // done: Forward dependencies from iNsTr_0 to transition ADD_u16_u16_3222_sample_start_
        ;;[ADD_u16_u16_3222_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3222_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3222_sample_start_ &-> (ADD_u16_u16_3222_Sample)
        ADD_u16_u16_3222_sample_completed_ <-& (ADD_u16_u16_3222_Sample)
        ADD_u16_u16_3222_sample_completed_ &-> ($null)
        ADD_u16_u16_3222_update_start_ &-> (ADD_u16_u16_3222_Update)
        ADD_u16_u16_3222_update_completed_ <-& (ADD_u16_u16_3222_Update)
        // Target expression
        // (as target) xx_xop
        // start: WAR dependencies for xx_xop
        // done: WAR dependencies for xx_xop
        // end:  		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        //  file prog.linked.opt.aa, line 1353
        // Source expression
        // ($cast ($uint<64>) xx_xop )
        $T[type_cast_3226_sample_start_] 
        $T[type_cast_3226_sample_completed_] 
        $T[type_cast_3226_update_start_] 
        $T[type_cast_3226_update_completed_] 
        // xx_xop
        // start: Forward dependencies from xx_xop to transition type_cast_3226_sample_start_
        type_cast_3226_sample_start_ <-& (ADD_u16_u16_3222_update_completed_)
        // done: Forward dependencies from xx_xop to transition type_cast_3226_sample_start_
        ;;[type_cast_3226_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3226_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3226_sample_start_ &-> (type_cast_3226_Sample)
        type_cast_3226_sample_completed_ <-& (type_cast_3226_Sample)
        type_cast_3226_sample_completed_ &-> ($null)
        type_cast_3226_update_start_ &-> (type_cast_3226_Update)
        type_cast_3226_update_completed_ <-& (type_cast_3226_Update)
        // Target expression
        // (as target) iNsTr_4
        // start: WAR dependencies for iNsTr_4
        // done: WAR dependencies for iNsTr_4
        // end:  		iNsTr_4 := ($cast ($uint<64>) xx_xop )
        // start:  		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1354
        // Source expression
        // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_3232_sample_start_] 
        $T[ADD_u64_u64_3232_sample_completed_] 
        $T[ADD_u64_u64_3232_update_start_] 
        $T[ADD_u64_u64_3232_update_completed_] 
        // iNsTr_4
        // start: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_3232_sample_start_
        ADD_u64_u64_3232_sample_start_ <-& (type_cast_3226_update_completed_)
        // done: Forward dependencies from iNsTr_4 to transition ADD_u64_u64_3232_sample_start_
        ;;[ADD_u64_u64_3232_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_3232_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_3232_sample_start_ &-> (ADD_u64_u64_3232_Sample)
        ADD_u64_u64_3232_sample_completed_ <-& (ADD_u64_u64_3232_Sample)
        ADD_u64_u64_3232_sample_completed_ &-> ($null)
        ADD_u64_u64_3232_update_start_ &-> (ADD_u64_u64_3232_Update)
        ADD_u64_u64_3232_update_completed_ <-& (ADD_u64_u64_3232_Update)
        // Target expression
        // (as target) xx_xop7
        // start: WAR dependencies for xx_xop7
        // done: WAR dependencies for xx_xop7
        // end:  		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        //  file prog.linked.opt.aa, line 1355
        // Source expression
        // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        $T[MUX_3239_sample_start_] 
        $T[MUX_3239_sample_completed_] 
        $T[MUX_3239_update_start_] 
        $T[MUX_3239_update_completed_] 
        // tmp
        // xx_xop7
        // start: Forward dependencies from tmp to transition MUX_3239_sample_start_
        MUX_3239_sample_start_ <-& (UGT_u16_u1_3216_update_completed_)
        // done: Forward dependencies from tmp to transition MUX_3239_sample_start_
        // start: Forward dependencies from xx_xop7 to transition MUX_3239_sample_start_
        MUX_3239_sample_start_ <-& (ADD_u64_u64_3232_update_completed_)
        // done: Forward dependencies from xx_xop7 to transition MUX_3239_sample_start_
        ;;[MUX_3239_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_3239_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_3239_sample_start_ &-> (MUX_3239_start)
        MUX_3239_sample_completed_ <-& (MUX_3239_start)
        MUX_3239_update_start_ &-> (MUX_3239_complete)
        MUX_3239_update_completed_ <-& (MUX_3239_complete)
        // Target expression
        // (as target) tmp4
        // start: WAR dependencies for tmp4
        // done: WAR dependencies for tmp4
        // end:  		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
        // load-store dependencies..
      }
      assign_stmt_3217_to_assign_stmt_3240__entry__ |-> (assign_stmt_3217_to_assign_stmt_3240)
      assign_stmt_3217_to_assign_stmt_3240__exit__ <-| (assign_stmt_3217_to_assign_stmt_3240)
      ::[assign_stmt_3256_to_assign_stmt_3313] 
      {
        // start:  		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        //  file prog.linked.opt.aa, line 1360
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        $T[ADD_u64_u64_3255_sample_start_] 
        $T[ADD_u64_u64_3255_sample_completed_] 
        $T[ADD_u64_u64_3255_update_start_] 
        $T[ADD_u64_u64_3255_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_3255_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_3255_sample_start_
        ;;[ADD_u64_u64_3255_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_3255_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_3255_sample_start_ &-> (ADD_u64_u64_3255_Sample)
        ADD_u64_u64_3255_sample_completed_ <-& (ADD_u64_u64_3255_Sample)
        ADD_u64_u64_3255_sample_completed_ &-> ($null)
        ADD_u64_u64_3255_update_start_ &-> (ADD_u64_u64_3255_Update)
        ADD_u64_u64_3255_update_completed_ <-& (ADD_u64_u64_3255_Update)
        // Target expression
        // (as target) tmp2
        // start: WAR dependencies for tmp2
        // done: WAR dependencies for tmp2
        // end:  		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
        // start:  		scevgep6 := @(mem[tmp2])
        //  file prog.linked.opt.aa, line 1361
        // Source expression
        // @(mem[tmp2])
        $T[addr_of_3260_sample_start_] 
        $T[addr_of_3260_sample_completed_] 
        $T[addr_of_3260_update_start_] 
        $T[addr_of_3260_update_completed_] 
        $T[array_obj_ref_3259_root_address_calculated] 
        $T[array_obj_ref_3259_offset_calculated] 
        $T[array_obj_ref_3259_index_resized_0] 
        $T[array_obj_ref_3259_index_scaled_0] 
        $T[array_obj_ref_3259_index_computed_0] 
        // tmp2
        // start: Forward dependencies from tmp2 to transition array_obj_ref_3259_index_computed_0
        array_obj_ref_3259_index_computed_0 <-& (ADD_u64_u64_3255_update_completed_)
        // done: Forward dependencies from tmp2 to transition array_obj_ref_3259_index_computed_0
        ;;[array_obj_ref_3259_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3259_index_computed_0 &-> (array_obj_ref_3259_index_resize_0)
        array_obj_ref_3259_index_resized_0 <-& (array_obj_ref_3259_index_resize_0)
        ;;[array_obj_ref_3259_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3259_index_resized_0 &-> (array_obj_ref_3259_index_scale_0)
        array_obj_ref_3259_index_scaled_0 <-& (array_obj_ref_3259_index_scale_0)
        ;;[array_obj_ref_3259_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3259_index_scaled_0 &-> (array_obj_ref_3259_final_index_sum_regn)
        array_obj_ref_3259_offset_calculated <-& (array_obj_ref_3259_final_index_sum_regn)
        ;;[array_obj_ref_3259_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3259_offset_calculated &-> (array_obj_ref_3259_base_plus_offset)
        array_obj_ref_3259_root_address_calculated <-& (array_obj_ref_3259_base_plus_offset)
        ;;[addr_of_3260_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3260_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3260_sample_start_ <-& (array_obj_ref_3259_root_address_calculated)
        addr_of_3260_sample_start_ &-> (addr_of_3260_request)
        addr_of_3260_sample_completed_ <-& (addr_of_3260_request)
        addr_of_3260_update_start_ &-> (addr_of_3260_complete)
        addr_of_3260_update_completed_ <-& (addr_of_3260_complete)
        // Target expression
        // (as target) scevgep6
        // start: WAR dependencies for scevgep6
        // done: WAR dependencies for scevgep6
        // end:  		scevgep6 := @(mem[tmp2])
        // start:  		scevgep := @(ext_info[indvar])
        //  file prog.linked.opt.aa, line 1362
        // Source expression
        // @(ext_info[indvar])
        $T[addr_of_3265_sample_start_] 
        $T[addr_of_3265_sample_completed_] 
        $T[addr_of_3265_update_start_] 
        $T[addr_of_3265_update_completed_] 
        $T[array_obj_ref_3264_root_address_calculated] 
        $T[array_obj_ref_3264_offset_calculated] 
        $T[array_obj_ref_3264_index_resized_0] 
        $T[array_obj_ref_3264_index_scaled_0] 
        $T[array_obj_ref_3264_index_computed_0] 
        // indvar
        // start: Forward dependencies from indvar to transition array_obj_ref_3264_index_computed_0
        // done: Forward dependencies from indvar to transition array_obj_ref_3264_index_computed_0
        ;;[array_obj_ref_3264_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3264_index_computed_0 &-> (array_obj_ref_3264_index_resize_0)
        array_obj_ref_3264_index_resized_0 <-& (array_obj_ref_3264_index_resize_0)
        ;;[array_obj_ref_3264_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3264_index_resized_0 &-> (array_obj_ref_3264_index_scale_0)
        array_obj_ref_3264_index_scaled_0 <-& (array_obj_ref_3264_index_scale_0)
        ;;[array_obj_ref_3264_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3264_index_scaled_0 &-> (array_obj_ref_3264_final_index_sum_regn)
        array_obj_ref_3264_offset_calculated <-& (array_obj_ref_3264_final_index_sum_regn)
        ;;[array_obj_ref_3264_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3264_offset_calculated &-> (array_obj_ref_3264_base_plus_offset)
        array_obj_ref_3264_root_address_calculated <-& (array_obj_ref_3264_base_plus_offset)
        ;;[addr_of_3265_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3265_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3265_sample_start_ <-& (array_obj_ref_3264_root_address_calculated)
        addr_of_3265_sample_start_ &-> (addr_of_3265_request)
        addr_of_3265_sample_completed_ <-& (addr_of_3265_request)
        addr_of_3265_update_start_ &-> (addr_of_3265_complete)
        addr_of_3265_update_completed_ <-& (addr_of_3265_complete)
        // Target expression
        // (as target) scevgep
        // start: WAR dependencies for scevgep
        // done: WAR dependencies for scevgep
        // end:  		scevgep := @(ext_info[indvar])
        // start:  		iNsTr_6 := ->(scevgep6)
        //  file prog.linked.opt.aa, line 1363
        // Source expression
        // ->(scevgep6)
        $T[ptr_deref_3269_sample_start_] 
        $T[ptr_deref_3269_sample_completed_] 
        $T[ptr_deref_3269_update_start_] 
        $T[ptr_deref_3269_update_completed_] 
        $T[ptr_deref_3269_base_address_calculated] 
        // scevgep6
        $T[ptr_deref_3269_word_address_calculated] 
        $T[ptr_deref_3269_root_address_calculated] 
        $T[ptr_deref_3269_base_address_resized] 
        ;;[ptr_deref_3269_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3269_base_address_calculated &-> (ptr_deref_3269_base_addr_resize)
        ptr_deref_3269_base_address_resized <-& (ptr_deref_3269_base_addr_resize)
        ;;[ptr_deref_3269_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3269_base_address_resized &-> (ptr_deref_3269_base_plus_offset)
        ptr_deref_3269_root_address_calculated <-& (ptr_deref_3269_base_plus_offset)
        ;;[ptr_deref_3269_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3269_root_address_calculated &-> (ptr_deref_3269_word_addrgen)
        ptr_deref_3269_word_address_calculated <-& (ptr_deref_3269_word_addrgen)
        ;;[ptr_deref_3269_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3269_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3269_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3269_sample_start_ <-& (ptr_deref_3269_word_address_calculated)
        ptr_deref_3269_sample_start_ &-> (ptr_deref_3269_Sample)
        ptr_deref_3269_sample_completed_ <-& (ptr_deref_3269_Sample)
        ptr_deref_3269_sample_completed_ &-> ($null)
        ptr_deref_3269_update_start_ &-> (ptr_deref_3269_Update)
        ptr_deref_3269_update_completed_ <-& (ptr_deref_3269_Update)
        // start: Forward dependencies from scevgep6 to transition ptr_deref_3269_base_address_calculated
        ptr_deref_3269_base_address_calculated <-& (addr_of_3260_update_completed_)
        // done: Forward dependencies from scevgep6 to transition ptr_deref_3269_base_address_calculated
        ptr_deref_3269_sample_start_ <-& (ptr_deref_3269_base_address_calculated)
        // Target expression
        // (as target) iNsTr_6
        // start: WAR dependencies for iNsTr_6
        // done: WAR dependencies for iNsTr_6
        // end:  		iNsTr_6 := ->(scevgep6)
        // start:  		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        //  file prog.linked.opt.aa, line 1364
        // Source expression
        // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        $T[ADD_u16_u16_3275_sample_start_] 
        $T[ADD_u16_u16_3275_sample_completed_] 
        $T[ADD_u16_u16_3275_update_start_] 
        $T[ADD_u16_u16_3275_update_completed_] 
        // iNsTr_6
        // start: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_3275_sample_start_
        ADD_u16_u16_3275_sample_start_ <-& (ptr_deref_3269_update_completed_)
        // done: Forward dependencies from iNsTr_6 to transition ADD_u16_u16_3275_sample_start_
        ;;[ADD_u16_u16_3275_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u16_u16_3275_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u16_u16_3275_sample_start_ &-> (ADD_u16_u16_3275_Sample)
        ADD_u16_u16_3275_sample_completed_ <-& (ADD_u16_u16_3275_Sample)
        ADD_u16_u16_3275_sample_completed_ &-> ($null)
        ADD_u16_u16_3275_update_start_ &-> (ADD_u16_u16_3275_Update)
        ADD_u16_u16_3275_update_completed_ <-& (ADD_u16_u16_3275_Update)
        // Target expression
        // (as target) iNsTr_7
        // start: WAR dependencies for iNsTr_7
        // done: WAR dependencies for iNsTr_7
        // end:  		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
        // start:  		iNsTr_8 := ->(scevgep)
        //  file prog.linked.opt.aa, line 1365
        // Source expression
        // ->(scevgep)
        $T[ptr_deref_3279_sample_start_] 
        $T[ptr_deref_3279_sample_completed_] 
        $T[ptr_deref_3279_update_start_] 
        $T[ptr_deref_3279_update_completed_] 
        $T[ptr_deref_3279_base_address_calculated] 
        // scevgep
        $T[ptr_deref_3279_word_address_calculated] 
        $T[ptr_deref_3279_root_address_calculated] 
        $T[ptr_deref_3279_base_address_resized] 
        ;;[ptr_deref_3279_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3279_base_address_calculated &-> (ptr_deref_3279_base_addr_resize)
        ptr_deref_3279_base_address_resized <-& (ptr_deref_3279_base_addr_resize)
        ;;[ptr_deref_3279_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3279_base_address_resized &-> (ptr_deref_3279_base_plus_offset)
        ptr_deref_3279_root_address_calculated <-& (ptr_deref_3279_base_plus_offset)
        ;;[ptr_deref_3279_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3279_root_address_calculated &-> (ptr_deref_3279_word_addrgen)
        ptr_deref_3279_word_address_calculated <-& (ptr_deref_3279_word_addrgen)
        ;;[ptr_deref_3279_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3279_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3279_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3279_sample_start_ <-& (ptr_deref_3279_word_address_calculated)
        ptr_deref_3279_sample_start_ &-> (ptr_deref_3279_Sample)
        ptr_deref_3279_sample_completed_ <-& (ptr_deref_3279_Sample)
        ptr_deref_3279_sample_completed_ &-> ($null)
        ptr_deref_3279_update_start_ &-> (ptr_deref_3279_Update)
        ptr_deref_3279_update_completed_ <-& (ptr_deref_3279_Update)
        // start: Forward dependencies from scevgep to transition ptr_deref_3279_base_address_calculated
        ptr_deref_3279_base_address_calculated <-& (addr_of_3265_update_completed_)
        // done: Forward dependencies from scevgep to transition ptr_deref_3279_base_address_calculated
        ptr_deref_3279_sample_start_ <-& (ptr_deref_3279_base_address_calculated)
        // Target expression
        // (as target) iNsTr_8
        // start: WAR dependencies for iNsTr_8
        // done: WAR dependencies for iNsTr_8
        // end:  		iNsTr_8 := ->(scevgep)
        // start:  		iNsTr_9 := ($cast ($uint<64>) iNsTr_7 )
        //  file prog.linked.opt.aa, line 1366
        // Source expression
        // ($cast ($uint<64>) iNsTr_7 )
        $T[type_cast_3283_sample_start_] 
        $T[type_cast_3283_sample_completed_] 
        $T[type_cast_3283_update_start_] 
        $T[type_cast_3283_update_completed_] 
        // iNsTr_7
        // start: Forward dependencies from iNsTr_7 to transition type_cast_3283_sample_start_
        type_cast_3283_sample_start_ <-& (ADD_u16_u16_3275_update_completed_)
        // done: Forward dependencies from iNsTr_7 to transition type_cast_3283_sample_start_
        ;;[type_cast_3283_Sample] 
        {
          // unary expression 
          $T [rr] $T [ra] // (split) unary operation
        }
        ;;[type_cast_3283_Update] 
        {
          // unary expression 
          $T [cr] $T [ca] //(split) unary operation
        }
        type_cast_3283_sample_start_ &-> (type_cast_3283_Sample)
        type_cast_3283_sample_completed_ <-& (type_cast_3283_Sample)
        type_cast_3283_sample_completed_ &-> ($null)
        type_cast_3283_update_start_ &-> (type_cast_3283_Update)
        type_cast_3283_update_completed_ <-& (type_cast_3283_Update)
        // Target expression
        // (as target) iNsTr_9
        // start: WAR dependencies for iNsTr_9
        // done: WAR dependencies for iNsTr_9
        // end:  		iNsTr_9 := ($cast ($uint<64>) iNsTr_7 )
        // start:  		iNsTr_10 := @(aPosteriori[iNsTr_9])
        //  file prog.linked.opt.aa, line 1367
        // Source expression
        // @(aPosteriori[iNsTr_9])
        $T[addr_of_3288_sample_start_] 
        $T[addr_of_3288_sample_completed_] 
        $T[addr_of_3288_update_start_] 
        $T[addr_of_3288_update_completed_] 
        $T[array_obj_ref_3287_root_address_calculated] 
        $T[array_obj_ref_3287_offset_calculated] 
        $T[array_obj_ref_3287_index_resized_0] 
        $T[array_obj_ref_3287_index_scaled_0] 
        $T[array_obj_ref_3287_index_computed_0] 
        // iNsTr_9
        // start: Forward dependencies from iNsTr_9 to transition array_obj_ref_3287_index_computed_0
        array_obj_ref_3287_index_computed_0 <-& (type_cast_3283_update_completed_)
        // done: Forward dependencies from iNsTr_9 to transition array_obj_ref_3287_index_computed_0
        ;;[array_obj_ref_3287_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_3287_index_computed_0 &-> (array_obj_ref_3287_index_resize_0)
        array_obj_ref_3287_index_resized_0 <-& (array_obj_ref_3287_index_resize_0)
        ;;[array_obj_ref_3287_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_3287_index_resized_0 &-> (array_obj_ref_3287_index_scale_0)
        array_obj_ref_3287_index_scaled_0 <-& (array_obj_ref_3287_index_scale_0)
        ;;[array_obj_ref_3287_final_index_sum_regn] 
        {
          $T [req] $T [ack] // rename
        }
        array_obj_ref_3287_index_scaled_0 &-> (array_obj_ref_3287_final_index_sum_regn)
        array_obj_ref_3287_offset_calculated <-& (array_obj_ref_3287_final_index_sum_regn)
        ;;[array_obj_ref_3287_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_3287_offset_calculated &-> (array_obj_ref_3287_base_plus_offset)
        array_obj_ref_3287_root_address_calculated <-& (array_obj_ref_3287_base_plus_offset)
        ;;[addr_of_3288_request] 
        {
          $T [req] $T [ack]
        }
        ;;[addr_of_3288_complete] 
        {
          $T [req] $T [ack]
        }
        addr_of_3288_sample_start_ <-& (array_obj_ref_3287_root_address_calculated)
        addr_of_3288_sample_start_ &-> (addr_of_3288_request)
        addr_of_3288_sample_completed_ <-& (addr_of_3288_request)
        addr_of_3288_update_start_ &-> (addr_of_3288_complete)
        addr_of_3288_update_completed_ <-& (addr_of_3288_complete)
        // Target expression
        // (as target) iNsTr_10
        // start: WAR dependencies for iNsTr_10
        // done: WAR dependencies for iNsTr_10
        // end:  		iNsTr_10 := @(aPosteriori[iNsTr_9])
        // start:  		iNsTr_11 := ->(iNsTr_10)
        //  file prog.linked.opt.aa, line 1368
        // Source expression
        // ->(iNsTr_10)
        $T[ptr_deref_3292_sample_start_] 
        $T[ptr_deref_3292_sample_completed_] 
        $T[ptr_deref_3292_update_start_] 
        $T[ptr_deref_3292_update_completed_] 
        $T[ptr_deref_3292_base_address_calculated] 
        // iNsTr_10
        $T[ptr_deref_3292_word_address_calculated] 
        $T[ptr_deref_3292_root_address_calculated] 
        $T[ptr_deref_3292_base_address_resized] 
        ;;[ptr_deref_3292_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3292_base_address_calculated &-> (ptr_deref_3292_base_addr_resize)
        ptr_deref_3292_base_address_resized <-& (ptr_deref_3292_base_addr_resize)
        ;;[ptr_deref_3292_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3292_base_address_resized &-> (ptr_deref_3292_base_plus_offset)
        ptr_deref_3292_root_address_calculated <-& (ptr_deref_3292_base_plus_offset)
        ;;[ptr_deref_3292_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3292_root_address_calculated &-> (ptr_deref_3292_word_addrgen)
        ptr_deref_3292_word_address_calculated <-& (ptr_deref_3292_word_addrgen)
        ;;[ptr_deref_3292_Sample] 
        {
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3292_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          ;;[ptr_deref_3292_Merge] 
          {
            $T [merge_req] $T [merge_ack]
          }
        }
        ptr_deref_3292_sample_start_ <-& (ptr_deref_3292_word_address_calculated)
        ptr_deref_3292_sample_start_ &-> (ptr_deref_3292_Sample)
        ptr_deref_3292_sample_completed_ <-& (ptr_deref_3292_Sample)
        ptr_deref_3292_sample_completed_ &-> ($null)
        ptr_deref_3292_update_start_ &-> (ptr_deref_3292_Update)
        ptr_deref_3292_update_completed_ <-& (ptr_deref_3292_Update)
        // start: Forward dependencies from iNsTr_10 to transition ptr_deref_3292_base_address_calculated
        ptr_deref_3292_base_address_calculated <-& (addr_of_3288_update_completed_)
        // done: Forward dependencies from iNsTr_10 to transition ptr_deref_3292_base_address_calculated
        ptr_deref_3292_sample_start_ <-& (ptr_deref_3292_base_address_calculated)
        // Target expression
        // (as target) iNsTr_11
        // start: WAR dependencies for iNsTr_11
        // done: WAR dependencies for iNsTr_11
        // end:  		iNsTr_11 := ->(iNsTr_10)
        // start:  		iNsTr_12 := (iNsTr_11 + iNsTr_8)
        //  file prog.linked.opt.aa, line 1369
        // Source expression
        // (iNsTr_11 + iNsTr_8)
        $T[ADD_f32_f32_3297_sample_start_] 
        $T[ADD_f32_f32_3297_sample_completed_] 
        $T[ADD_f32_f32_3297_update_start_] 
        $T[ADD_f32_f32_3297_update_completed_] 
        // iNsTr_11
        // iNsTr_8
        // start: Forward dependencies from iNsTr_11 to transition ADD_f32_f32_3297_sample_start_
        ADD_f32_f32_3297_sample_start_ <-& (ptr_deref_3292_update_completed_)
        // done: Forward dependencies from iNsTr_11 to transition ADD_f32_f32_3297_sample_start_
        // start: Forward dependencies from iNsTr_8 to transition ADD_f32_f32_3297_sample_start_
        ADD_f32_f32_3297_sample_start_ <-& (ptr_deref_3279_update_completed_)
        // done: Forward dependencies from iNsTr_8 to transition ADD_f32_f32_3297_sample_start_
        ;;[ADD_f32_f32_3297_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_f32_f32_3297_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_f32_f32_3297_sample_start_ &-> (ADD_f32_f32_3297_Sample)
        ADD_f32_f32_3297_sample_completed_ <-& (ADD_f32_f32_3297_Sample)
        ADD_f32_f32_3297_sample_completed_ &-> ($null)
        ADD_f32_f32_3297_update_start_ &-> (ADD_f32_f32_3297_Update)
        ADD_f32_f32_3297_update_completed_ <-& (ADD_f32_f32_3297_Update)
        // Target expression
        // (as target) iNsTr_12
        // start: WAR dependencies for iNsTr_12
        // done: WAR dependencies for iNsTr_12
        // end:  		iNsTr_12 := (iNsTr_11 + iNsTr_8)
        // start:  		->(iNsTr_10) := iNsTr_12
        //  file prog.linked.opt.aa, line 1370
        // Source expression
        // iNsTr_12
        // Target expression
        // ->(iNsTr_10)
        $T[ptr_deref_3300_sample_start_] 
        $T[ptr_deref_3300_sample_completed_] 
        $T[ptr_deref_3300_update_start_] 
        $T[ptr_deref_3300_update_completed_] 
        $T[ptr_deref_3300_base_address_calculated] 
        // iNsTr_10
        $T[ptr_deref_3300_word_address_calculated] 
        $T[ptr_deref_3300_root_address_calculated] 
        $T[ptr_deref_3300_base_address_resized] 
        ;;[ptr_deref_3300_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_3300_base_address_calculated &-> (ptr_deref_3300_base_addr_resize)
        ptr_deref_3300_base_address_resized <-& (ptr_deref_3300_base_addr_resize)
        ;;[ptr_deref_3300_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_3300_base_address_resized &-> (ptr_deref_3300_base_plus_offset)
        ptr_deref_3300_root_address_calculated <-& (ptr_deref_3300_base_plus_offset)
        ;;[ptr_deref_3300_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_3300_root_address_calculated &-> (ptr_deref_3300_word_addrgen)
        ptr_deref_3300_word_address_calculated <-& (ptr_deref_3300_word_addrgen)
        ;;[ptr_deref_3300_Sample] 
        {
          ;;[ptr_deref_3300_Split] 
          {
            $T [split_req] $T [split_ack]
          }
          ||[word_access_start] 
          {
            ;;[word_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_3300_Update] 
        {
          ||[word_access_complete] 
          {
            ;;[word_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_3300_sample_start_ <-& (ptr_deref_3300_word_address_calculated)
        ptr_deref_3300_sample_start_ &-> (ptr_deref_3300_Sample)
        ptr_deref_3300_sample_completed_ <-& (ptr_deref_3300_Sample)
        ptr_deref_3300_sample_completed_ &-> ($null)
        ptr_deref_3300_update_start_ &-> (ptr_deref_3300_Update)
        ptr_deref_3300_update_completed_ <-& (ptr_deref_3300_Update)
        // start: Forward dependencies from iNsTr_10 to transition ptr_deref_3300_base_address_calculated
        ptr_deref_3300_base_address_calculated <-& (addr_of_3288_update_completed_)
        // done: Forward dependencies from iNsTr_10 to transition ptr_deref_3300_base_address_calculated
        ptr_deref_3300_sample_start_ <-& (ptr_deref_3300_base_address_calculated)
        // start: Forward dependencies from iNsTr_12 to transition ptr_deref_3300_sample_start_
        ptr_deref_3300_sample_start_ <-& (ADD_f32_f32_3297_update_completed_)
        // done: Forward dependencies from iNsTr_12 to transition ptr_deref_3300_sample_start_
        // end:  		->(iNsTr_10) := iNsTr_12
        // start:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 1371
        // Source expression
        // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        $T[ADD_u64_u64_3307_sample_start_] 
        $T[ADD_u64_u64_3307_sample_completed_] 
        $T[ADD_u64_u64_3307_update_start_] 
        $T[ADD_u64_u64_3307_update_completed_] 
        // indvar
        // start: Forward dependencies from indvar to transition ADD_u64_u64_3307_sample_start_
        // done: Forward dependencies from indvar to transition ADD_u64_u64_3307_sample_start_
        ;;[ADD_u64_u64_3307_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[ADD_u64_u64_3307_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        ADD_u64_u64_3307_sample_start_ &-> (ADD_u64_u64_3307_Sample)
        ADD_u64_u64_3307_sample_completed_ <-& (ADD_u64_u64_3307_Sample)
        ADD_u64_u64_3307_sample_completed_ &-> ($null)
        ADD_u64_u64_3307_update_start_ &-> (ADD_u64_u64_3307_Update)
        ADD_u64_u64_3307_update_completed_ <-& (ADD_u64_u64_3307_Update)
        // Target expression
        // (as target) indvarx_xnext
        // start: WAR dependencies for indvarx_xnext
        // done: WAR dependencies for indvarx_xnext
        // end:  		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
        // start:  		exitcond1 := (indvarx_xnext == tmp4)
        //  file prog.linked.opt.aa, line 1372
        // Source expression
        // (indvarx_xnext == tmp4)
        $T[EQ_u64_u1_3312_sample_start_] 
        $T[EQ_u64_u1_3312_sample_completed_] 
        $T[EQ_u64_u1_3312_update_start_] 
        $T[EQ_u64_u1_3312_update_completed_] 
        // indvarx_xnext
        // tmp4
        // start: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_3312_sample_start_
        EQ_u64_u1_3312_sample_start_ <-& (ADD_u64_u64_3307_update_completed_)
        // done: Forward dependencies from indvarx_xnext to transition EQ_u64_u1_3312_sample_start_
        // start: Forward dependencies from tmp4 to transition EQ_u64_u1_3312_sample_start_
        // done: Forward dependencies from tmp4 to transition EQ_u64_u1_3312_sample_start_
        ;;[EQ_u64_u1_3312_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u64_u1_3312_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u64_u1_3312_sample_start_ &-> (EQ_u64_u1_3312_Sample)
        EQ_u64_u1_3312_sample_completed_ <-& (EQ_u64_u1_3312_Sample)
        EQ_u64_u1_3312_sample_completed_ &-> ($null)
        EQ_u64_u1_3312_update_start_ &-> (EQ_u64_u1_3312_Update)
        EQ_u64_u1_3312_update_completed_ <-& (EQ_u64_u1_3312_Update)
        // Target expression
        // (as target) exitcond1
        // start: WAR dependencies for exitcond1
        // done: WAR dependencies for exitcond1
        // end:  		exitcond1 := (indvarx_xnext == tmp4)
        // load-store dependencies..
        $T [ptr_deref_3292_ptr_deref_3300_delay] $delay
        // ->(iNsTr_10)(load) -> ->(iNsTr_10)(store)
        ptr_deref_3300_sample_start_ <-& (ptr_deref_3292_ptr_deref_3300_delay)
        ptr_deref_3292_ptr_deref_3300_delay <-& (ptr_deref_3292_sample_completed_)
      }
      assign_stmt_3256_to_assign_stmt_3313__entry__ |-> (assign_stmt_3256_to_assign_stmt_3313)
      assign_stmt_3256_to_assign_stmt_3313__exit__ <-| (assign_stmt_3256_to_assign_stmt_3313)
      // if-statement  
      //  file prog.linked.opt.aa, line 1373
      ;;[if_stmt_3314_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_3314__entry__ |-> (if_stmt_3314_dead_link)
      if_stmt_3314__exit__ <-| (if_stmt_3314_dead_link)
      ;;[if_stmt_3314_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_3314__entry__ |-> (if_stmt_3314_eval_test)
      $P [R_exitcond1_3315_place]
      R_exitcond1_3315_place <-| (if_stmt_3314_eval_test)
      ;;[if_stmt_3314_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_3314_else_link] 
      {
        $T [else_choice_transition] 
      }
      R_exitcond1_3315_place |-> (if_stmt_3314_if_link if_stmt_3314_else_link)
      $P [bb_2_xx_x_crit_edgex_xloopexit]
      bb_2_xx_x_crit_edgex_xloopexit <-| (if_stmt_3314_if_link)
      $P [bb_2_bb_2]
      bb_2_bb_2 <-| (if_stmt_3314_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1349
      ;;[merge_stmt_3211_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3211__entry__ |-> (merge_stmt_3211_dead_link)
      merge_stmt_3211__exit__ <-| (merge_stmt_3211_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1349  --------------------------
      ||[bb_0_bbx_xnph_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bbx_xnph |-> (bb_0_bbx_xnph_PhiReq)
      $P [merge_stmt_3211_PhiReqMerge] 
      merge_stmt_3211_PhiReqMerge <-| ( bb_0_bbx_xnph_PhiReq )
      ||[merge_stmt_3211_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3211_PhiReqMerge |-> (merge_stmt_3211_PhiAck)
      merge_stmt_3211__exit__  <-| (merge_stmt_3211_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1349  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1357
      //---------------------   merge statement  file prog.linked.opt.aa, line 1357  --------------------------
      ||[bb_2_bb_2_PhiReq] 
      {
        ;;[phi_stmt_3243] 
        {
          ||[phi_stmt_3243_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // trivial non-constant source .... interlock-buffer introduced 
            // ($cast ($uint<64>) indvarx_xnext )
            ;;[type_cast_3249] 
            {
              // type-cast expression
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]  
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca] 
                }
              }
            }
          }
          $T [phi_stmt_3243_req] 
        }
      }
      bb_2_bb_2 |-> (bb_2_bb_2_PhiReq)
      ||[bbx_xnph_bb_2_PhiReq] 
      {
        ;;[phi_stmt_3243] 
        {
          ||[phi_stmt_3243_sources] 
          {
            // sources for 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
            // constant source .... delay transition 
            $T [type_cast_3247_konst_delay_trans] $delay
          }
          $T [phi_stmt_3243_req] 
        }
      }
      bbx_xnph_bb_2 |-> (bbx_xnph_bb_2_PhiReq)
      $P [merge_stmt_3242_PhiReqMerge] 
      merge_stmt_3242_PhiReqMerge <-| ( bb_2_bb_2_PhiReq  bbx_xnph_bb_2_PhiReq )
      ||[merge_stmt_3242_PhiAck] 
      {
        $T [phi_stmt_3243_ack] 
      }
      merge_stmt_3242_PhiReqMerge |-> (merge_stmt_3242_PhiAck)
      merge_stmt_3242__exit__  <-| (merge_stmt_3242_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1357  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1378
      ;;[merge_stmt_3320_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_3320__entry__ |-> (merge_stmt_3320_dead_link)
      merge_stmt_3320__exit__ <-| (merge_stmt_3320_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 1378  --------------------------
      ||[bb_2_xx_x_crit_edgex_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_xx_x_crit_edgex_xloopexit |-> (bb_2_xx_x_crit_edgex_xloopexit_PhiReq)
      $P [merge_stmt_3320_PhiReqMerge] 
      merge_stmt_3320_PhiReqMerge <-| ( bb_2_xx_x_crit_edgex_xloopexit_PhiReq )
      ||[merge_stmt_3320_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3320_PhiReqMerge |-> (merge_stmt_3320_PhiAck)
      merge_stmt_3320__exit__  <-| (merge_stmt_3320_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1378  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1381
      //---------------------   merge statement  file prog.linked.opt.aa, line 1381  --------------------------
      ||[bb_0_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_xx_x_crit_edge |-> (bb_0_xx_x_crit_edge_PhiReq)
      ||[xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge |-> (xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_3322_PhiReqMerge] 
      merge_stmt_3322_PhiReqMerge <-| ( bb_0_xx_x_crit_edge_PhiReq  xx_x_crit_edgex_xloopexit_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_3322_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3322_PhiReqMerge |-> (merge_stmt_3322_PhiAck)
      merge_stmt_3322__exit__  <-| (merge_stmt_3322_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1381  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 1384
      //---------------------   merge statement  file prog.linked.opt.aa, line 1384  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_3324_PhiReqMerge] 
      merge_stmt_3324_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_3324_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_3324_PhiReqMerge |-> (merge_stmt_3324_PhiAck)
      merge_stmt_3324__exit__  <-| (merge_stmt_3324_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 1384  --------------------------
      assign_stmt_3198_to_assign_stmt_3204__entry__ <-| (branch_block_stmt_3195__entry__)
      if_stmt_3205__entry__ <-| (assign_stmt_3198_to_assign_stmt_3204__exit__)
      merge_stmt_3211__entry__ <-| (if_stmt_3205__exit__)
      assign_stmt_3217_to_assign_stmt_3240__entry__ <-| (merge_stmt_3211__exit__)
      bbx_xnph_bb_2 <-| (assign_stmt_3217_to_assign_stmt_3240__exit__)
      assign_stmt_3256_to_assign_stmt_3313__entry__ <-| (merge_stmt_3242__exit__)
      if_stmt_3314__entry__ <-| (assign_stmt_3256_to_assign_stmt_3313__exit__)
      merge_stmt_3320__entry__ <-| (if_stmt_3314__exit__)
      xx_x_crit_edgex_xloopexit_xx_x_crit_edge <-| (merge_stmt_3320__exit__)
      return__ <-| (merge_stmt_3322__exit__)
      merge_stmt_3324__exit__ |-> (branch_block_stmt_3195__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1349
    // constant-object-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1357
    // constant-object-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1378
    // constant-object-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1381
    // constant-object-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1384
    // constant-object-declarations for block %update_aPosteriori%body
    //  file prog.linked.opt.aa, line 1340
    // constant-object-declarations for block %update_aPosteriori
    //  file prog.linked.opt.aa, line 1335
    // constant-declarations for block %update_aPosteriori%body
    //  file prog.linked.opt.aa, line 1340
    // ncol_ind
    $constant $W[LOAD_ncol_ind_3197_word_address_0] : $pointer<memory_space_10> := _b0
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_3202_wire_constant] : $int<16> := _b0000000000000000// 0
    // if-statement  
    //  file prog.linked.opt.aa, line 1344
    // constant-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1349
    // ($bitcast ($uint<16>) _b0000000000000001  )
    $constant $W[type_cast_3215_wire_constant] : $int<16> := _b0000000000000001// 1
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_3221_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_3231_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_3238_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // constant-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1357
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1358
    // ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) )
    $constant $W[type_cast_3247_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  )
    $constant $W[type_cast_3254_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000011// 3
    // @(mem[tmp2])
    $constant $W[array_obj_ref_3259_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3259_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // @(ext_info[indvar])
    $constant $W[array_obj_ref_3264_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3264_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(scevgep6)
    $constant $W[ptr_deref_3269_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<16>) _b1111111111111111  )
    $constant $W[type_cast_3274_wire_constant] : $int<16> := _b1111111111111111// 65535
    // ->(scevgep)
    $constant $W[ptr_deref_3279_word_offset_0] : $int<10> := _b0000000000// 0
    // @(aPosteriori[iNsTr_9])
    $constant $W[array_obj_ref_3287_resized_base_address] : $int<10> := _b0000000000// 0
    $constant $W[array_obj_ref_3287_offset_scale_factor_0] : $int<10> := _b0000000001// 1
    // ->(iNsTr_10)
    $constant $W[ptr_deref_3292_word_offset_0] : $int<10> := _b0000000000// 0
    // ->(iNsTr_10)
    $constant $W[ptr_deref_3300_word_offset_0] : $int<10> := _b0000000000// 0
    // ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  )
    $constant $W[type_cast_3306_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000001// 1
    // if-statement  
    //  file prog.linked.opt.aa, line 1373
    // constant-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1378
    // constant-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1381
    // constant-declarations for block %update_aPosteriori%body%
    //  file prog.linked.opt.aa, line 1384
    // block %update_aPosteriori%body
    //  file prog.linked.opt.aa, line 1340
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 1342
    // ncol_ind
    $W[LOAD_ncol_ind_3197_data_0] : $int<16>
    // iNsTr_0
    $W[iNsTr_0_3198] : $int<16>
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1343
    // iNsTr_1
    $W[iNsTr_1_3204] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1344
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1351
    // tmp
    $W[tmp_3217] : $int<1>
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1352
    // xx_xop
    $W[xx_xop_3223] : $int<16>
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 1353
    // iNsTr_4
    $W[iNsTr_4_3227] : $int<64>
    // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1354
    // xx_xop7
    $W[xx_xop7_3233] : $int<64>
    // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 1355
    // tmp4
    $W[tmp4_3240] : $int<64>
    // merge-statement  
    //  file prog.linked.opt.aa, line 1357
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1358
    // ($cast ($uint<64>) indvarx_xnext )
    $intermediate $W[type_cast_3249_wire] : $int<64>
    // indvar
    $W[indvar_3243] : $int<64>
    // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1360
    // tmp2
    $W[tmp2_3256] : $int<64>
    // 		scevgep6 := @(mem[tmp2])
    //  file prog.linked.opt.aa, line 1361
    // @(mem[tmp2])
    $intermediate $W[R_tmp2_3258_resized] : $int<10>
    $intermediate $W[R_tmp2_3258_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3259_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3259_root_address] : $int<10>
    // scevgep6
    $W[scevgep6_3261] : $int<32>
    // 		scevgep := @(ext_info[indvar])
    //  file prog.linked.opt.aa, line 1362
    // @(ext_info[indvar])
    $intermediate $W[R_indvar_3263_resized] : $int<10>
    $intermediate $W[R_indvar_3263_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3264_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3264_root_address] : $int<10>
    // scevgep
    $W[scevgep_3266] : $int<32>
    // 		iNsTr_6 := ->(scevgep6)
    //  file prog.linked.opt.aa, line 1363
    // ->(scevgep6)
    $intermediate $W[ptr_deref_3269_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3269_root_address] : $int<10>
    $W[ptr_deref_3269_word_address_0] : $pointer<memory_space_8>
    $W[ptr_deref_3269_data_0] : $int<16>
    // iNsTr_6
    $W[iNsTr_6_3270] : $int<16>
    // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1364
    // iNsTr_7
    $W[iNsTr_7_3276] : $int<16>
    // 		iNsTr_8 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1365
    // ->(scevgep)
    $intermediate $W[ptr_deref_3279_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3279_root_address] : $int<10>
    $W[ptr_deref_3279_word_address_0] : $pointer<memory_space_5>
    $W[ptr_deref_3279_data_0] : $int<32>
    // iNsTr_8
    $W[iNsTr_8_3280] : $float<8,23>
    // 		iNsTr_9 := ($cast ($uint<64>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 1366
    // iNsTr_9
    $W[iNsTr_9_3284] : $int<64>
    // 		iNsTr_10 := @(aPosteriori[iNsTr_9])
    //  file prog.linked.opt.aa, line 1367
    // @(aPosteriori[iNsTr_9])
    $intermediate $W[R_iNsTr_9_3286_resized] : $int<10>
    $intermediate $W[R_iNsTr_9_3286_scaled] : $int<10>
    $intermediate $W[array_obj_ref_3287_final_offset] : $int<10>
    $intermediate $W[array_obj_ref_3287_root_address] : $int<10>
    // iNsTr_10
    $W[iNsTr_10_3289] : $int<32>
    // 		iNsTr_11 := ->(iNsTr_10)
    //  file prog.linked.opt.aa, line 1368
    // ->(iNsTr_10)
    $intermediate $W[ptr_deref_3292_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3292_root_address] : $int<10>
    $W[ptr_deref_3292_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_3292_data_0] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_3293] : $float<8,23>
    // 		iNsTr_12 := (iNsTr_11 + iNsTr_8)
    //  file prog.linked.opt.aa, line 1369
    // iNsTr_12
    $W[iNsTr_12_3298] : $float<8,23>
    // 		->(iNsTr_10) := iNsTr_12
    //  file prog.linked.opt.aa, line 1370
    // ->(iNsTr_10)
    $intermediate $W[ptr_deref_3300_wire] : $float<8,23>
    $intermediate $W[ptr_deref_3300_resized_base_address] : $int<10>
    $intermediate $W[ptr_deref_3300_root_address] : $int<10>
    $W[ptr_deref_3300_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_3300_data_0] : $int<32>
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1371
    // indvarx_xnext
    $W[indvarx_xnext_3308] : $int<64>
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 1372
    // exitcond1
    $W[exitcond1_3313] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 1373
    // datapath-instances for block %update_aPosteriori%body
    //  file prog.linked.opt.aa, line 1340
    // 		iNsTr_0 := ncol_ind
    //  file prog.linked.opt.aa, line 1342
    // ncol_ind
    $load [LOAD_ncol_ind_3197_load_0] $from memory_space_10 (LOAD_ncol_ind_3197_word_address_0) (LOAD_ncol_ind_3197_data_0) 
    $delay LOAD_ncol_ind_3197_load_0 4
    &/ [LOAD_ncol_ind_3197_gather_scatter] (LOAD_ncol_ind_3197_data_0) (iNsTr_0_3198) 
    $flowthrough 
    // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    //  file prog.linked.opt.aa, line 1343
    // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
    ==[EQ_u16_u1_3203_inst] (iNsTr_0_3198 type_cast_3202_wire_constant) (iNsTr_1_3204)   
    $buffering  $out EQ_u16_u1_3203_inst iNsTr_1_3204 1
    $delay EQ_u16_u1_3203_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1344
    ==0? [if_stmt_3205_branch] (iNsTr_1_3204)
    // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    //  file prog.linked.opt.aa, line 1351
    // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
    >[UGT_u16_u1_3216_inst] (iNsTr_0_3198 type_cast_3215_wire_constant) (tmp_3217)   
    $buffering  $out UGT_u16_u1_3216_inst tmp_3217 1
    $delay UGT_u16_u1_3216_inst 1
    // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1352
    // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_3222_inst] (iNsTr_0_3198 type_cast_3221_wire_constant) (xx_xop_3223)   
    $buffering  $out ADD_u16_u16_3222_inst xx_xop_3223 1
    $delay ADD_u16_u16_3222_inst 1
    // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
    //  file prog.linked.opt.aa, line 1353
    // ($cast ($uint<64>) xx_xop )
    # := [type_cast_3226_inst] (xx_xop_3223) (iNsTr_4_3227)   
    $buffering  $out type_cast_3226_inst iNsTr_4_3227 1
    $delay type_cast_3226_inst 1
    // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1354
    // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_3232_inst] (iNsTr_4_3227 type_cast_3231_wire_constant) (xx_xop7_3233)   
    $buffering  $out ADD_u64_u64_3232_inst xx_xop7_3233 1
    $delay ADD_u64_u64_3232_inst 1
    // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    //  file prog.linked.opt.aa, line 1355
    // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
    ? [MUX_3239_inst] (tmp_3217 xx_xop7_3233 type_cast_3238_wire_constant) (tmp4_3240) 
    $buffering  $out MUX_3239_inst tmp4_3240 1
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 1357
    // 			$phi indvar := 			  ($cast ($uint<64>) ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000000  ) ) $on bbx_xnph_bb_2			  ($cast ($uint<64>) indvarx_xnext ) $on bb_2_bb_2 // type of target is $uint<64>
    //  file prog.linked.opt.aa, line 1358
    // ($cast ($uint<64>) indvarx_xnext )
    # := [type_cast_3249_inst] (indvarx_xnext_3308) (type_cast_3249_wire)   
    $buffering  $out type_cast_3249_inst type_cast_3249_wire 1
    $delay type_cast_3249_inst 1
    $phi [phi_stmt_3243] (type_cast_3247_wire_constant type_cast_3249_wire) ( indvar_3243 ) 
    // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    //  file prog.linked.opt.aa, line 1360
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
    +[ADD_u64_u64_3255_inst] (indvar_3243 type_cast_3254_wire_constant) (tmp2_3256)   
    $buffering  $out ADD_u64_u64_3255_inst tmp2_3256 1
    $delay ADD_u64_u64_3255_inst 1
    // 		scevgep6 := @(mem[tmp2])
    //  file prog.linked.opt.aa, line 1361
    &/ [array_obj_ref_3259_index_0_resize] (tmp2_3256) (R_tmp2_3258_resized) 
    $flowthrough 
    &/ [array_obj_ref_3259_index_0_rename] (R_tmp2_3258_resized) (R_tmp2_3258_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3259_index_offset] (R_tmp2_3258_scaled) (array_obj_ref_3259_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3259_root_address_inst] (array_obj_ref_3259_final_offset) (array_obj_ref_3259_root_address) 
    $flowthrough 
    # := [addr_of_3260_final_reg] (array_obj_ref_3259_root_address) (scevgep6_3261)   
    $buffering  $out addr_of_3260_final_reg scevgep6_3261 1
    // 		scevgep := @(ext_info[indvar])
    //  file prog.linked.opt.aa, line 1362
    &/ [array_obj_ref_3264_index_0_resize] (indvar_3243) (R_indvar_3263_resized) 
    $flowthrough 
    &/ [array_obj_ref_3264_index_0_rename] (R_indvar_3263_resized) (R_indvar_3263_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3264_index_offset] (R_indvar_3263_scaled) (array_obj_ref_3264_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3264_root_address_inst] (array_obj_ref_3264_final_offset) (array_obj_ref_3264_root_address) 
    $flowthrough 
    # := [addr_of_3265_final_reg] (array_obj_ref_3264_root_address) (scevgep_3266)   
    $buffering  $out addr_of_3265_final_reg scevgep_3266 1
    // 		iNsTr_6 := ->(scevgep6)
    //  file prog.linked.opt.aa, line 1363
    // ->(scevgep6)
    &/ [ptr_deref_3269_base_resize] (scevgep6_3261) (ptr_deref_3269_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3269_root_address_inst] (ptr_deref_3269_resized_base_address) (ptr_deref_3269_root_address) 
    $flowthrough 
    &/ [ptr_deref_3269_addr_0] (ptr_deref_3269_root_address) (ptr_deref_3269_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3269_load_0] $from memory_space_8 (ptr_deref_3269_word_address_0) (ptr_deref_3269_data_0) 
    $delay ptr_deref_3269_load_0 4
    &/ [ptr_deref_3269_gather_scatter] (ptr_deref_3269_data_0) (iNsTr_6_3270) 
    $flowthrough 
    // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    //  file prog.linked.opt.aa, line 1364
    // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
    +[ADD_u16_u16_3275_inst] (iNsTr_6_3270 type_cast_3274_wire_constant) (iNsTr_7_3276)   
    $buffering  $out ADD_u16_u16_3275_inst iNsTr_7_3276 1
    $delay ADD_u16_u16_3275_inst 1
    // 		iNsTr_8 := ->(scevgep)
    //  file prog.linked.opt.aa, line 1365
    // ->(scevgep)
    &/ [ptr_deref_3279_base_resize] (scevgep_3266) (ptr_deref_3279_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3279_root_address_inst] (ptr_deref_3279_resized_base_address) (ptr_deref_3279_root_address) 
    $flowthrough 
    &/ [ptr_deref_3279_addr_0] (ptr_deref_3279_root_address) (ptr_deref_3279_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3279_load_0] $from memory_space_5 (ptr_deref_3279_word_address_0) (ptr_deref_3279_data_0) 
    $delay ptr_deref_3279_load_0 4
    &/ [ptr_deref_3279_gather_scatter] (ptr_deref_3279_data_0) (iNsTr_8_3280) 
    $flowthrough 
    // 		iNsTr_9 := ($cast ($uint<64>) iNsTr_7 )
    //  file prog.linked.opt.aa, line 1366
    // ($cast ($uint<64>) iNsTr_7 )
    # := [type_cast_3283_inst] (iNsTr_7_3276) (iNsTr_9_3284)   
    $buffering  $out type_cast_3283_inst iNsTr_9_3284 1
    $delay type_cast_3283_inst 1
    // 		iNsTr_10 := @(aPosteriori[iNsTr_9])
    //  file prog.linked.opt.aa, line 1367
    &/ [array_obj_ref_3287_index_0_resize] (iNsTr_9_3284) (R_iNsTr_9_3286_resized) 
    $flowthrough 
    &/ [array_obj_ref_3287_index_0_rename] (R_iNsTr_9_3286_resized) (R_iNsTr_9_3286_scaled) 
    $flowthrough 
    &/ [array_obj_ref_3287_index_offset] (R_iNsTr_9_3286_scaled) (array_obj_ref_3287_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_3287_root_address_inst] (array_obj_ref_3287_final_offset) (array_obj_ref_3287_root_address) 
    $flowthrough 
    # := [addr_of_3288_final_reg] (array_obj_ref_3287_root_address) (iNsTr_10_3289)   
    $buffering  $out addr_of_3288_final_reg iNsTr_10_3289 1
    // 		iNsTr_11 := ->(iNsTr_10)
    //  file prog.linked.opt.aa, line 1368
    // ->(iNsTr_10)
    &/ [ptr_deref_3292_base_resize] (iNsTr_10_3289) (ptr_deref_3292_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3292_root_address_inst] (ptr_deref_3292_resized_base_address) (ptr_deref_3292_root_address) 
    $flowthrough 
    &/ [ptr_deref_3292_addr_0] (ptr_deref_3292_root_address) (ptr_deref_3292_word_address_0) 
    $flowthrough 
    $load [ptr_deref_3292_load_0] $from memory_space_1 (ptr_deref_3292_word_address_0) (ptr_deref_3292_data_0) 
    $delay ptr_deref_3292_load_0 4
    &/ [ptr_deref_3292_gather_scatter] (ptr_deref_3292_data_0) (iNsTr_11_3293) 
    $flowthrough 
    // 		iNsTr_12 := (iNsTr_11 + iNsTr_8)
    //  file prog.linked.opt.aa, line 1369
    // (iNsTr_11 + iNsTr_8)
    +[ADD_f32_f32_3297_inst] (iNsTr_11_3293 iNsTr_8_3280) (iNsTr_12_3298)   
    $buffering  $out ADD_f32_f32_3297_inst iNsTr_12_3298 1
    $delay ADD_f32_f32_3297_inst 14
    // 		->(iNsTr_10) := iNsTr_12
    //  file prog.linked.opt.aa, line 1370
    // ->(iNsTr_10)
    &/ [ptr_deref_3300_base_resize] (iNsTr_10_3289) (ptr_deref_3300_resized_base_address) 
    $flowthrough 
    &/ [ptr_deref_3300_root_address_inst] (ptr_deref_3300_resized_base_address) (ptr_deref_3300_root_address) 
    $flowthrough 
    &/ [ptr_deref_3300_addr_0] (ptr_deref_3300_root_address) (ptr_deref_3300_word_address_0) 
    $flowthrough 
    $store [ptr_deref_3300_store_0] $to memory_space_1 (ptr_deref_3300_word_address_0 ptr_deref_3300_data_0) 
    $delay ptr_deref_3300_store_0 4
    &/ [ptr_deref_3300_gather_scatter] (iNsTr_12_3298) (ptr_deref_3300_data_0) 
    $flowthrough 
    // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 1371
    // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
    +[ADD_u64_u64_3307_inst] (indvar_3243 type_cast_3306_wire_constant) (indvarx_xnext_3308)   
    $buffering  $out ADD_u64_u64_3307_inst indvarx_xnext_3308 1
    $delay ADD_u64_u64_3307_inst 1
    // 		exitcond1 := (indvarx_xnext == tmp4)
    //  file prog.linked.opt.aa, line 1372
    // (indvarx_xnext == tmp4)
    ==[EQ_u64_u1_3312_inst] (indvarx_xnext_3308 tmp4_3240) (exitcond1_3313)   
    $buffering  $out EQ_u64_u1_3312_inst exitcond1_3313 1
    $delay EQ_u64_u1_3312_inst 1
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 1373
    ==0? [if_stmt_3314_branch] (exitcond1_3313)
  }
  // end data-path
  // 		iNsTr_0 := ncol_ind
  //  file prog.linked.opt.aa, line 1342
  // ncol_ind
  LOAD_ncol_ind_3197_gather_scatter <=> (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Update/LOAD_ncol_ind_3197_Merge/merge_req) (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Update/LOAD_ncol_ind_3197_Merge/merge_ack)
  LOAD_ncol_ind_3197_load_0 <=> (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Sample/word_access_start/word_0/rr branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Update/word_access_complete/word_0/cr) (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Sample/word_access_start/word_0/ra branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/LOAD_ncol_ind_3197_Update/word_access_complete/word_0/ca)
  // 		iNsTr_1 := (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  //  file prog.linked.opt.aa, line 1343
  // (iNsTr_0 == ($bitcast ($uint<16>) _b0000000000000000  ))
  // iNsTr_0
  EQ_u16_u1_3203_inst <=> (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/EQ_u16_u1_3203_Sample/rr branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/EQ_u16_u1_3203_Update/cr) (branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/EQ_u16_u1_3203_Sample/ra branch_block_stmt_3195/assign_stmt_3198_to_assign_stmt_3204/EQ_u16_u1_3203_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1344
  if_stmt_3205_branch <=> (branch_block_stmt_3195/if_stmt_3205_eval_test/branch_req) (branch_block_stmt_3195/if_stmt_3205_else_link/else_choice_transition branch_block_stmt_3195/if_stmt_3205_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1349
  // 		tmp := (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  //  file prog.linked.opt.aa, line 1351
  // (iNsTr_0 > ($bitcast ($uint<16>) _b0000000000000001  ))
  // iNsTr_0
  UGT_u16_u1_3216_inst <=> (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/UGT_u16_u1_3216_Sample/rr branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/UGT_u16_u1_3216_Update/cr) (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/UGT_u16_u1_3216_Sample/ra branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/UGT_u16_u1_3216_Update/ca)
  // 		xx_xop := (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1352
  // (iNsTr_0 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_0
  ADD_u16_u16_3222_inst <=> (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u16_u16_3222_Sample/rr branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u16_u16_3222_Update/cr) (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u16_u16_3222_Sample/ra branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u16_u16_3222_Update/ca)
  // 		iNsTr_4 := ($cast ($uint<64>) xx_xop )
  //  file prog.linked.opt.aa, line 1353
  // xx_xop
  // ($cast ($uint<64>) xx_xop )
  type_cast_3226_inst <=> (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/type_cast_3226_Sample/rr branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/type_cast_3226_Update/cr) (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/type_cast_3226_Sample/ra branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/type_cast_3226_Update/ca)
  // 		xx_xop7 := (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1354
  // (iNsTr_4 + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // iNsTr_4
  ADD_u64_u64_3232_inst <=> (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u64_u64_3232_Sample/rr branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u64_u64_3232_Update/cr) (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u64_u64_3232_Sample/ra branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/ADD_u64_u64_3232_Update/ca)
  // 		tmp4 := ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  //  file prog.linked.opt.aa, line 1355
  // tmp
  // xx_xop7
  // ( $mux tmp xx_xop7  ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ) ) 
  MUX_3239_inst <=> (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/MUX_3239_start/req branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/MUX_3239_complete/req) (branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/MUX_3239_start/ack branch_block_stmt_3195/assign_stmt_3217_to_assign_stmt_3240/MUX_3239_complete/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1357
  // ($cast ($uint<64>) indvarx_xnext )
  type_cast_3249_inst <=> (branch_block_stmt_3195/bb_2_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_sources/type_cast_3249/SplitProtocol/Sample/rr branch_block_stmt_3195/bb_2_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_sources/type_cast_3249/SplitProtocol/Update/cr) (branch_block_stmt_3195/bb_2_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_sources/type_cast_3249/SplitProtocol/Sample/ra branch_block_stmt_3195/bb_2_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_sources/type_cast_3249/SplitProtocol/Update/ca)
  phi_stmt_3243 <=> (branch_block_stmt_3195/bbx_xnph_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_req branch_block_stmt_3195/bb_2_bb_2_PhiReq/phi_stmt_3243/phi_stmt_3243_req) (branch_block_stmt_3195/merge_stmt_3242_PhiAck/phi_stmt_3243_ack)
  // 		tmp2 := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  //  file prog.linked.opt.aa, line 1360
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000011  ))
  // indvar
  ADD_u64_u64_3255_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3255_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3255_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3255_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3255_Update/ca)
  // 		scevgep6 := @(mem[tmp2])
  //  file prog.linked.opt.aa, line 1361
  // tmp2
  array_obj_ref_3259_index_0_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_index_resize_0/index_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_index_resize_0/index_resize_ack)
  array_obj_ref_3259_index_0_rename <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_index_scale_0/scale_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_index_scale_0/scale_rename_ack)
  array_obj_ref_3259_index_offset <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_final_index_sum_regn/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_final_index_sum_regn/ack)
  array_obj_ref_3259_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3259_base_plus_offset/sum_rename_ack)
  addr_of_3260_final_reg <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3260_request/req branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3260_complete/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3260_request/ack branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3260_complete/ack)
  // 		scevgep := @(ext_info[indvar])
  //  file prog.linked.opt.aa, line 1362
  // indvar
  array_obj_ref_3264_index_0_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_index_resize_0/index_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_index_resize_0/index_resize_ack)
  array_obj_ref_3264_index_0_rename <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_index_scale_0/scale_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_index_scale_0/scale_rename_ack)
  array_obj_ref_3264_index_offset <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_final_index_sum_regn/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_final_index_sum_regn/ack)
  array_obj_ref_3264_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3264_base_plus_offset/sum_rename_ack)
  addr_of_3265_final_reg <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3265_request/req branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3265_complete/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3265_request/ack branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3265_complete/ack)
  // 		iNsTr_6 := ->(scevgep6)
  //  file prog.linked.opt.aa, line 1363
  // scevgep6
  ptr_deref_3269_base_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_base_addr_resize/base_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_base_addr_resize/base_resize_ack)
  ptr_deref_3269_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_base_plus_offset/sum_rename_ack)
  ptr_deref_3269_addr_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_word_addrgen/root_register_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_word_addrgen/root_register_ack)
  ptr_deref_3269_gather_scatter <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Update/ptr_deref_3269_Merge/merge_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Update/ptr_deref_3269_Merge/merge_ack)
  ptr_deref_3269_load_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Sample/word_access_start/word_0/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Update/word_access_complete/word_0/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Sample/word_access_start/word_0/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3269_Update/word_access_complete/word_0/ca)
  // 		iNsTr_7 := (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  //  file prog.linked.opt.aa, line 1364
  // (iNsTr_6 + ($bitcast ($uint<16>) _b1111111111111111  ))
  // iNsTr_6
  ADD_u16_u16_3275_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u16_u16_3275_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u16_u16_3275_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u16_u16_3275_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u16_u16_3275_Update/ca)
  // 		iNsTr_8 := ->(scevgep)
  //  file prog.linked.opt.aa, line 1365
  // scevgep
  ptr_deref_3279_base_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_base_addr_resize/base_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_base_addr_resize/base_resize_ack)
  ptr_deref_3279_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_base_plus_offset/sum_rename_ack)
  ptr_deref_3279_addr_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_word_addrgen/root_register_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_word_addrgen/root_register_ack)
  ptr_deref_3279_gather_scatter <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Update/ptr_deref_3279_Merge/merge_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Update/ptr_deref_3279_Merge/merge_ack)
  ptr_deref_3279_load_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Sample/word_access_start/word_0/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Update/word_access_complete/word_0/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Sample/word_access_start/word_0/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3279_Update/word_access_complete/word_0/ca)
  // 		iNsTr_9 := ($cast ($uint<64>) iNsTr_7 )
  //  file prog.linked.opt.aa, line 1366
  // iNsTr_7
  // ($cast ($uint<64>) iNsTr_7 )
  type_cast_3283_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/type_cast_3283_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/type_cast_3283_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/type_cast_3283_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/type_cast_3283_Update/ca)
  // 		iNsTr_10 := @(aPosteriori[iNsTr_9])
  //  file prog.linked.opt.aa, line 1367
  // iNsTr_9
  array_obj_ref_3287_index_0_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_index_resize_0/index_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_index_resize_0/index_resize_ack)
  array_obj_ref_3287_index_0_rename <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_index_scale_0/scale_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_index_scale_0/scale_rename_ack)
  array_obj_ref_3287_index_offset <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_final_index_sum_regn/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_final_index_sum_regn/ack)
  array_obj_ref_3287_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/array_obj_ref_3287_base_plus_offset/sum_rename_ack)
  addr_of_3288_final_reg <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3288_request/req branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3288_complete/req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3288_request/ack branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/addr_of_3288_complete/ack)
  // 		iNsTr_11 := ->(iNsTr_10)
  //  file prog.linked.opt.aa, line 1368
  // iNsTr_10
  ptr_deref_3292_base_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_base_addr_resize/base_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_base_addr_resize/base_resize_ack)
  ptr_deref_3292_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_base_plus_offset/sum_rename_ack)
  ptr_deref_3292_addr_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_word_addrgen/root_register_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_word_addrgen/root_register_ack)
  ptr_deref_3292_gather_scatter <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Update/ptr_deref_3292_Merge/merge_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Update/ptr_deref_3292_Merge/merge_ack)
  ptr_deref_3292_load_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Sample/word_access_start/word_0/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Update/word_access_complete/word_0/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Sample/word_access_start/word_0/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3292_Update/word_access_complete/word_0/ca)
  // 		iNsTr_12 := (iNsTr_11 + iNsTr_8)
  //  file prog.linked.opt.aa, line 1369
  // (iNsTr_11 + iNsTr_8)
  // iNsTr_11
  // iNsTr_8
  ADD_f32_f32_3297_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_f32_f32_3297_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_f32_f32_3297_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_f32_f32_3297_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_f32_f32_3297_Update/ca)
  // 		->(iNsTr_10) := iNsTr_12
  //  file prog.linked.opt.aa, line 1370
  // iNsTr_12
  // iNsTr_10
  ptr_deref_3300_base_resize <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_base_addr_resize/base_resize_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_base_addr_resize/base_resize_ack)
  ptr_deref_3300_root_address_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_base_plus_offset/sum_rename_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_base_plus_offset/sum_rename_ack)
  ptr_deref_3300_addr_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_word_addrgen/root_register_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_word_addrgen/root_register_ack)
  ptr_deref_3300_gather_scatter <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Sample/ptr_deref_3300_Split/split_req) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Sample/ptr_deref_3300_Split/split_ack)
  ptr_deref_3300_store_0 <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Sample/word_access_start/word_0/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Update/word_access_complete/word_0/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Sample/word_access_start/word_0/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ptr_deref_3300_Update/word_access_complete/word_0/ca)
  // 		indvarx_xnext := (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 1371
  // (indvar + ($bitcast ($uint<64>) _b0000000000000000000000000000000000000000000000000000000000000001  ))
  // indvar
  ADD_u64_u64_3307_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3307_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3307_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3307_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/ADD_u64_u64_3307_Update/ca)
  // 		exitcond1 := (indvarx_xnext == tmp4)
  //  file prog.linked.opt.aa, line 1372
  // (indvarx_xnext == tmp4)
  // indvarx_xnext
  // tmp4
  EQ_u64_u1_3312_inst <=> (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/EQ_u64_u1_3312_Sample/rr branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/EQ_u64_u1_3312_Update/cr) (branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/EQ_u64_u1_3312_Sample/ra branch_block_stmt_3195/assign_stmt_3256_to_assign_stmt_3313/EQ_u64_u1_3312_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 1373
  if_stmt_3314_branch <=> (branch_block_stmt_3195/if_stmt_3314_eval_test/branch_req) (branch_block_stmt_3195/if_stmt_3314_else_link/else_choice_transition branch_block_stmt_3195/if_stmt_3314_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1378
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1381
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 1384
}
