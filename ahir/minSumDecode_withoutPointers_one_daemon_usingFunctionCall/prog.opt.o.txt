; ModuleID = 'prog.opt.o'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private constant [11 x i8] c"maxNitr_in\00"
@maxNitr = common global i16 0, align 2
@.str1 = private constant [10 x i8] c"ebbyNo_in\00"
@ebbyNo = common global float 0.000000e+00, align 4
@.str2 = private constant [10 x i8] c"matrix_in\00"
@mem11 = common global [20000 x i16] zeroinitializer, align 16
@stderr = external global %struct._IO_FILE*
@.str3 = private constant [14 x i8] c"mem11[%d]=%d\0A\00"
@mem12 = common global [20000 x i16] zeroinitializer, align 16
@.str4 = private constant [14 x i8] c"mem12[%d]=%d\0A\00"
@mem21 = common global [20000 x i16] zeroinitializer, align 16
@.str5 = private constant [14 x i8] c"mem21[%d]=%d\0A\00"
@mem22 = common global [20000 x i16] zeroinitializer, align 16
@.str6 = private constant [14 x i8] c"mem22[%d]=%d\0A\00"
@.str7 = private constant [14 x i8] c"code_block_in\00"
@code_block1 = common global [13000 x float] zeroinitializer, align 16
@code_block2 = common global [13000 x float] zeroinitializer, align 16
@aPriori1 = common global [13000 x float] zeroinitializer, align 16
@aPriori2 = common global [13000 x float] zeroinitializer, align 16
@message11 = common global [20000 x float] zeroinitializer, align 16
@message12 = common global [20000 x float] zeroinitializer, align 16
@message21 = common global [20000 x float] zeroinitializer, align 16
@message22 = common global [20000 x float] zeroinitializer, align 16
@aPosteriori1 = common global [13000 x float] zeroinitializer, align 16
@aPosteriori2 = common global [13000 x float] zeroinitializer, align 16
@ext_info11 = common global [20000 x float] zeroinitializer, align 16
@ext_info12 = common global [20000 x float] zeroinitializer, align 16
@ext_info21 = common global [20000 x float] zeroinitializer, align 16
@ext_info22 = common global [20000 x float] zeroinitializer, align 16
@trans_info11_12 = common global [20000 x float] zeroinitializer, align 16
@trans_info12_11 = common global [20000 x float] zeroinitializer, align 16
@trans_info21_22 = common global [20000 x float] zeroinitializer, align 16
@trans_info22_21 = common global [20000 x float] zeroinitializer, align 16
@.str8 = private constant [22 x i8] c"ext_info11[%d] = %f \0A\00"
@.str9 = private constant [34 x i8] c"trasnverse_info11_12( %d ) = %f \0A\00"
@.str10 = private constant [22 x i8] c"ext_info12[%d] = %f \0A\00"
@.str11 = private constant [34 x i8] c"trasnverse_info12_11( %d ) = %f \0A\00"
@.str12 = private constant [22 x i8] c"ext_info21[%d] = %f \0A\00"
@.str13 = private constant [34 x i8] c"trasnverse_info21_22( %d ) = %f \0A\00"
@.str14 = private constant [22 x i8] c"ext_info22[%d] = %f \0A\00"
@.str15 = private constant [34 x i8] c"trasnverse_info22_21( %d ) = %f \0A\00"
@.str16 = private constant [24 x i8] c"reading_code_block_done\00"
@.str17 = private constant [22 x i8] c"message11_initialized\00"
@.str18 = private constant [32 x i8] c"trans_info11_12_calulation_done\00"
@.str19 = private constant [32 x i8] c"trans_info12_11_calulation_done\00"
@.str20 = private constant [26 x i8] c"aPosteriori1_phase_1_done\00"
@.str21 = private constant [49 x i8] c"Now! write aPosteriori1_phase_1_done - daemon1 \0A\00"
@.str22 = private constant [26 x i8] c"aPosteriori1_phase_2_done\00"
@.str23 = private constant [13 x i8] c"is_decoded_2\00"
@.str24 = private constant [14 x i8] c"is_decoded_d2\00"
@.str25 = private constant [14 x i8] c"is_decoded_d3\00"
@.str26 = private constant [14 x i8] c"is_decoded_d4\00"
@.str27 = private constant [17 x i8] c"stop_the daemon1\00"
@.str28 = private constant [22 x i8] c"message12_initialized\00"
@.str29 = private constant [50 x i8] c"Now! write aPosteriori2_phase_1_done -daemon 2 \0A \00"
@.str30 = private constant [26 x i8] c"aPosteriori2_phase_1_done\00"
@.str31 = private constant [26 x i8] c"aPosteriori2_phase_2_done\00"
@.str32 = private constant [17 x i8] c"stop_the daemon2\00"
@.str33 = private constant [32 x i8] c"trans_info21_22_calulation_done\00"
@.str34 = private constant [32 x i8] c"trans_info22_21_calulation_done\00"
@.str35 = private constant [52 x i8] c"Buddy! I am wait for - aPosteriori1_phase_1_done \0A \00"
@.str36 = private constant [33 x i8] c"aPosteriori1_phase_1_done = %d \0A\00"
@.str37 = private constant [17 x i8] c"stop_the daemon3\00"
@.str38 = private constant [51 x i8] c"Buddy! I am wait for - aPosteriori2_phase_1_done \0A\00"
@.str39 = private constant [17 x i8] c"stop_the daemon4\00"

define void @initInputs() nounwind {
  %nitr = alloca i16, align 2
  %SNR = alloca float, align 4
  %1 = getelementptr [11 x i8]* @.str, i32 0, i32 0
  %2 = call zeroext i16 @read_uint16(i8* %1)
  store i16 %2, i16* %nitr, align 2
  %3 = load i16* %nitr, align 2
  store i16 %3, i16* @maxNitr, align 2
  %4 = getelementptr [10 x i8]* @.str1, i32 0, i32 0
  %5 = call float @read_float32(i8* %4)
  store float %5, float* %SNR, align 4
  %6 = load float* %SNR, align 4
  store float %6, float* @ebbyNo, align 4
  ret void
}

declare zeroext i16 @read_uint16(i8*)

declare float @read_float32(i8*)

define void @initMem() nounwind {
  %I = alloca i16, align 2
  %val = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = icmp slt i32 %3, 3
  br i1 %4, label %5, label %15

; <label>:5                                       ; preds = %1
  %6 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %7 = call zeroext i16 @read_uint16(i8* %6)
  store i16 %7, i16* %val, align 2
  %8 = load i16* %val, align 2
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %10
  store i16 %8, i16* %11
  br label %12

; <label>:12                                      ; preds = %5
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  %16 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %17 = load i16* %16
  %18 = zext i16 %17 to i32
  %19 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %20 = load i16* %19
  %21 = zext i16 %20 to i32
  %22 = add nsw i32 %18, %21
  %23 = trunc i32 %22 to i16
  store i16 %23, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %24

; <label>:24                                      ; preds = %39, %15
  %25 = load i16* %I, align 2
  %26 = zext i16 %25 to i32
  %27 = load i16* %range, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %42

; <label>:30                                      ; preds = %24
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %31 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %32 = call zeroext i16 @read_uint16(i8* %31)
  store i16 %32, i16* %val, align 2
  %33 = load i16* %val, align 2
  %34 = load i16* %I, align 2
  %35 = zext i16 %34 to i32
  %36 = add nsw i32 %35, 3
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %37
  store i16 %33, i16* %38
  br label %39

; <label>:39                                      ; preds = %30
  %40 = load i16* %I, align 2
  %41 = add i16 %40, 1
  store i16 %41, i16* %I, align 2
  br label %24

; <label>:42                                      ; preds = %24
  store i16 0, i16* %I, align 2
  br label %43

; <label>:43                                      ; preds = %61, %42
  %44 = load i16* %I, align 2
  %45 = zext i16 %44 to i32
  %46 = load i16* %range, align 2
  %47 = zext i16 %46 to i32
  %48 = add nsw i32 %47, 3
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %50, label %64

; <label>:50                                      ; preds = %43
  %51 = load %struct._IO_FILE** @stderr, align 8
  %52 = load i16* %I, align 2
  %53 = zext i16 %52 to i32
  %54 = load i16* %I, align 2
  %55 = zext i16 %54 to i64
  %56 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %55
  %57 = load i16* %56
  %58 = zext i16 %57 to i32
  %59 = getelementptr [14 x i8]* @.str3, i32 0, i32 0
  %60 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %51, i8* %59, i32 %53, i32 %58)
  br label %61

; <label>:61                                      ; preds = %50
  %62 = load i16* %I, align 2
  %63 = add i16 %62, 1
  store i16 %63, i16* %I, align 2
  br label %43

; <label>:64                                      ; preds = %43
  store i16 0, i16* %I, align 2
  br label %65

; <label>:65                                      ; preds = %76, %64
  %66 = load i16* %I, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp slt i32 %67, 3
  br i1 %68, label %69, label %79

; <label>:69                                      ; preds = %65
  %70 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %71 = call zeroext i16 @read_uint16(i8* %70)
  store i16 %71, i16* %val, align 2
  %72 = load i16* %val, align 2
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i64
  %75 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %74
  store i16 %72, i16* %75
  br label %76

; <label>:76                                      ; preds = %69
  %77 = load i16* %I, align 2
  %78 = add i16 %77, 1
  store i16 %78, i16* %I, align 2
  br label %65

; <label>:79                                      ; preds = %65
  %80 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %81 = load i16* %80
  %82 = zext i16 %81 to i32
  %83 = getelementptr [20000 x i16]* @mem12, i32 0, i64 0
  %84 = load i16* %83
  %85 = zext i16 %84 to i32
  %86 = add nsw i32 %82, %85
  %87 = trunc i32 %86 to i16
  store i16 %87, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %88

; <label>:88                                      ; preds = %103, %79
  %89 = load i16* %I, align 2
  %90 = zext i16 %89 to i32
  %91 = load i16* %range, align 2
  %92 = zext i16 %91 to i32
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %94, label %106

; <label>:94                                      ; preds = %88
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %95 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %96 = call zeroext i16 @read_uint16(i8* %95)
  store i16 %96, i16* %val, align 2
  %97 = load i16* %val, align 2
  %98 = load i16* %I, align 2
  %99 = zext i16 %98 to i32
  %100 = add nsw i32 %99, 3
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %101
  store i16 %97, i16* %102
  br label %103

; <label>:103                                     ; preds = %94
  %104 = load i16* %I, align 2
  %105 = add i16 %104, 1
  store i16 %105, i16* %I, align 2
  br label %88

; <label>:106                                     ; preds = %88
  store i16 0, i16* %I, align 2
  br label %107

; <label>:107                                     ; preds = %125, %106
  %108 = load i16* %I, align 2
  %109 = zext i16 %108 to i32
  %110 = load i16* %range, align 2
  %111 = zext i16 %110 to i32
  %112 = add nsw i32 %111, 3
  %113 = icmp slt i32 %109, %112
  br i1 %113, label %114, label %128

; <label>:114                                     ; preds = %107
  %115 = load %struct._IO_FILE** @stderr, align 8
  %116 = load i16* %I, align 2
  %117 = zext i16 %116 to i32
  %118 = load i16* %I, align 2
  %119 = zext i16 %118 to i64
  %120 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %119
  %121 = load i16* %120
  %122 = zext i16 %121 to i32
  %123 = getelementptr [14 x i8]* @.str4, i32 0, i32 0
  %124 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %115, i8* %123, i32 %117, i32 %122)
  br label %125

; <label>:125                                     ; preds = %114
  %126 = load i16* %I, align 2
  %127 = add i16 %126, 1
  store i16 %127, i16* %I, align 2
  br label %107

; <label>:128                                     ; preds = %107
  store i16 0, i16* %I, align 2
  br label %129

; <label>:129                                     ; preds = %140, %128
  %130 = load i16* %I, align 2
  %131 = zext i16 %130 to i32
  %132 = icmp slt i32 %131, 3
  br i1 %132, label %133, label %143

; <label>:133                                     ; preds = %129
  %134 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %135 = call zeroext i16 @read_uint16(i8* %134)
  store i16 %135, i16* %val, align 2
  %136 = load i16* %val, align 2
  %137 = load i16* %I, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %138
  store i16 %136, i16* %139
  br label %140

; <label>:140                                     ; preds = %133
  %141 = load i16* %I, align 2
  %142 = add i16 %141, 1
  store i16 %142, i16* %I, align 2
  br label %129

; <label>:143                                     ; preds = %129
  %144 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %145 = load i16* %144
  %146 = zext i16 %145 to i32
  %147 = getelementptr [20000 x i16]* @mem21, i32 0, i64 0
  %148 = load i16* %147
  %149 = zext i16 %148 to i32
  %150 = add nsw i32 %146, %149
  %151 = trunc i32 %150 to i16
  store i16 %151, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %152

; <label>:152                                     ; preds = %167, %143
  %153 = load i16* %I, align 2
  %154 = zext i16 %153 to i32
  %155 = load i16* %range, align 2
  %156 = zext i16 %155 to i32
  %157 = icmp slt i32 %154, %156
  br i1 %157, label %158, label %170

; <label>:158                                     ; preds = %152
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %159 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %160 = call zeroext i16 @read_uint16(i8* %159)
  store i16 %160, i16* %val, align 2
  %161 = load i16* %val, align 2
  %162 = load i16* %I, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %163, 3
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %165
  store i16 %161, i16* %166
  br label %167

; <label>:167                                     ; preds = %158
  %168 = load i16* %I, align 2
  %169 = add i16 %168, 1
  store i16 %169, i16* %I, align 2
  br label %152

; <label>:170                                     ; preds = %152
  store i16 0, i16* %I, align 2
  br label %171

; <label>:171                                     ; preds = %189, %170
  %172 = load i16* %I, align 2
  %173 = zext i16 %172 to i32
  %174 = load i16* %range, align 2
  %175 = zext i16 %174 to i32
  %176 = add nsw i32 %175, 3
  %177 = icmp slt i32 %173, %176
  br i1 %177, label %178, label %192

; <label>:178                                     ; preds = %171
  %179 = load %struct._IO_FILE** @stderr, align 8
  %180 = load i16* %I, align 2
  %181 = zext i16 %180 to i32
  %182 = load i16* %I, align 2
  %183 = zext i16 %182 to i64
  %184 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %183
  %185 = load i16* %184
  %186 = zext i16 %185 to i32
  %187 = getelementptr [14 x i8]* @.str5, i32 0, i32 0
  %188 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %179, i8* %187, i32 %181, i32 %186)
  br label %189

; <label>:189                                     ; preds = %178
  %190 = load i16* %I, align 2
  %191 = add i16 %190, 1
  store i16 %191, i16* %I, align 2
  br label %171

; <label>:192                                     ; preds = %171
  store i16 0, i16* %I, align 2
  br label %193

; <label>:193                                     ; preds = %204, %192
  %194 = load i16* %I, align 2
  %195 = zext i16 %194 to i32
  %196 = icmp slt i32 %195, 3
  br i1 %196, label %197, label %207

; <label>:197                                     ; preds = %193
  %198 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %199 = call zeroext i16 @read_uint16(i8* %198)
  store i16 %199, i16* %val, align 2
  %200 = load i16* %val, align 2
  %201 = load i16* %I, align 2
  %202 = zext i16 %201 to i64
  %203 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %202
  store i16 %200, i16* %203
  br label %204

; <label>:204                                     ; preds = %197
  %205 = load i16* %I, align 2
  %206 = add i16 %205, 1
  store i16 %206, i16* %I, align 2
  br label %193

; <label>:207                                     ; preds = %193
  %208 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %209 = load i16* %208
  %210 = zext i16 %209 to i32
  %211 = getelementptr [20000 x i16]* @mem22, i32 0, i64 0
  %212 = load i16* %211
  %213 = zext i16 %212 to i32
  %214 = add nsw i32 %210, %213
  %215 = trunc i32 %214 to i16
  store i16 %215, i16* %range, align 2
  store i16 0, i16* %I, align 2
  br label %216

; <label>:216                                     ; preds = %231, %207
  %217 = load i16* %I, align 2
  %218 = zext i16 %217 to i32
  %219 = load i16* %range, align 2
  %220 = zext i16 %219 to i32
  %221 = icmp slt i32 %218, %220
  br i1 %221, label %222, label %234

; <label>:222                                     ; preds = %216
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %223 = getelementptr [10 x i8]* @.str2, i32 0, i32 0
  %224 = call zeroext i16 @read_uint16(i8* %223)
  store i16 %224, i16* %val, align 2
  %225 = load i16* %val, align 2
  %226 = load i16* %I, align 2
  %227 = zext i16 %226 to i32
  %228 = add nsw i32 %227, 3
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %229
  store i16 %225, i16* %230
  br label %231

; <label>:231                                     ; preds = %222
  %232 = load i16* %I, align 2
  %233 = add i16 %232, 1
  store i16 %233, i16* %I, align 2
  br label %216

; <label>:234                                     ; preds = %216
  store i16 0, i16* %I, align 2
  br label %235

; <label>:235                                     ; preds = %253, %234
  %236 = load i16* %I, align 2
  %237 = zext i16 %236 to i32
  %238 = load i16* %range, align 2
  %239 = zext i16 %238 to i32
  %240 = add nsw i32 %239, 3
  %241 = icmp slt i32 %237, %240
  br i1 %241, label %242, label %256

; <label>:242                                     ; preds = %235
  %243 = load %struct._IO_FILE** @stderr, align 8
  %244 = load i16* %I, align 2
  %245 = zext i16 %244 to i32
  %246 = load i16* %I, align 2
  %247 = zext i16 %246 to i64
  %248 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %247
  %249 = load i16* %248
  %250 = zext i16 %249 to i32
  %251 = getelementptr [14 x i8]* @.str6, i32 0, i32 0
  %252 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %243, i8* %251, i32 %245, i32 %250)
  br label %253

; <label>:253                                     ; preds = %242
  %254 = load i16* %I, align 2
  %255 = add i16 %254, 1
  store i16 %255, i16* %I, align 2
  br label %235

; <label>:256                                     ; preds = %235
  ret void
}

declare void @__loop_pipelining_on__(i32, i32, i32)

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...)

define void @readCodeBlock() nounwind {
  %I = alloca i16, align 2
  %code_bit = alloca float, align 4
  %code_bit1 = alloca float, align 4
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %15, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = getelementptr [14 x i8]* @.str7, i32 0, i32 0
  %10 = call float @read_float32(i8* %9)
  store float %10, float* %code_bit, align 4
  %11 = load float* %code_bit, align 4
  %12 = load i16* %I, align 2
  %13 = zext i16 %12 to i64
  %14 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %13
  store float %11, float* %14
  br label %15

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = add i16 %16, 1
  store i16 %17, i16* %I, align 2
  br label %1

; <label>:18                                      ; preds = %1
  store i16 0, i16* %I, align 2
  br label %19

; <label>:19                                      ; preds = %33, %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i32
  %22 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %23 = load i16* %22
  %24 = zext i16 %23 to i32
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %36

; <label>:26                                      ; preds = %19
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %27 = getelementptr [14 x i8]* @.str7, i32 0, i32 0
  %28 = call float @read_float32(i8* %27)
  store float %28, float* %code_bit1, align 4
  %29 = load float* %code_bit1, align 4
  %30 = load i16* %I, align 2
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %31
  store float %29, float* %32
  br label %33

; <label>:33                                      ; preds = %26
  %34 = load i16* %I, align 2
  %35 = add i16 %34, 1
  store i16 %35, i16* %I, align 2
  br label %19

; <label>:36                                      ; preds = %19
  ret void
}

define void @initialize_aPriori1() nounwind {
  %I = alloca i16, align 2
  %rate = alloca float, align 4
  %1 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %2 = load i16* %1
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = sub nsw i32 %3, %6
  %8 = sitofp i32 %7 to float
  %9 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %10 = load i16* %9
  %11 = zext i16 %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fdiv float %8, %12
  store float %13, float* %rate, align 4
  store i16 0, i16* %I, align 2
  br label %14

; <label>:14                                      ; preds = %34, %0
  %15 = load i16* %I, align 2
  %16 = zext i16 %15 to i32
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = icmp slt i32 %16, %19
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %14
  %22 = load i16* %I, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %23
  %25 = load float* %24
  %26 = fmul float -4.000000e+00, %25
  %27 = load float* %rate, align 4
  %28 = load float* @ebbyNo, align 4
  %29 = fmul float %27, %28
  %30 = fmul float %26, %29
  %31 = load i16* %I, align 2
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %32
  store float %30, float* %33
  br label %34

; <label>:34                                      ; preds = %21
  %35 = load i16* %I, align 2
  %36 = add i16 %35, 1
  store i16 %36, i16* %I, align 2
  br label %14

; <label>:37                                      ; preds = %14
  ret void
}

define void @initialize_aPriori2() nounwind {
  %I = alloca i16, align 2
  %rate = alloca float, align 4
  %1 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %2 = load i16* %1
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = sub nsw i32 %3, %6
  %8 = sitofp i32 %7 to float
  %9 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %10 = load i16* %9
  %11 = zext i16 %10 to i32
  %12 = sitofp i32 %11 to float
  %13 = fdiv float %8, %12
  store float %13, float* %rate, align 4
  store i16 0, i16* %I, align 2
  br label %14

; <label>:14                                      ; preds = %34, %0
  %15 = load i16* %I, align 2
  %16 = zext i16 %15 to i32
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = icmp slt i32 %16, %19
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %14
  %22 = load i16* %I, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %23
  %25 = load float* %24
  %26 = fmul float -4.000000e+00, %25
  %27 = load float* %rate, align 4
  %28 = load float* @ebbyNo, align 4
  %29 = fmul float %27, %28
  %30 = fmul float %26, %29
  %31 = load i16* %I, align 2
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %32
  store float %30, float* %33
  br label %34

; <label>:34                                      ; preds = %21
  %35 = load i16* %I, align 2
  %36 = add i16 %35, 1
  store i16 %36, i16* %I, align 2
  br label %14

; <label>:37                                      ; preds = %14
  ret void
}

define void @initializeMessage11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initializeMessage22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %23, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %26

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i32
  %11 = add nsw i32 3, %10
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %12
  %14 = load i16* %13
  %15 = zext i16 %14 to i32
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %17
  %19 = load float* %18
  %20 = load i16* %I, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %21
  store float %19, float* %22
  br label %23

; <label>:23                                      ; preds = %8
  %24 = load i16* %I, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %I, align 2
  br label %1

; <label>:26                                      ; preds = %1
  ret void
}

define void @initialize_aPosteriori1() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %16, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPriori1, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %14
  store float %12, float* %15
  br label %16

; <label>:16                                      ; preds = %8
  %17 = load i16* %I, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %I, align 2
  br label %1

; <label>:19                                      ; preds = %1
  ret void
}

define void @initialize_aPosteriori2() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %16, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %19

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPriori2, i32 0, i64 %10
  %12 = load float* %11
  %13 = load i16* %I, align 2
  %14 = zext i16 %13 to i64
  %15 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %14
  store float %12, float* %15
  br label %16

; <label>:16                                      ; preds = %8
  %17 = load i16* %I, align 2
  %18 = add i16 %17, 1
  store i16 %18, i16* %I, align 2
  br label %1

; <label>:19                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeExtrinsicInfo22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo11_12() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo12_11() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo21_22() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define void @initializeTransInfo22_21() nounwind {
  %I = alloca i16, align 2
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %12, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %10
  store float 0.000000e+00, float* %11
  br label %12

; <label>:12                                      ; preds = %8
  %13 = load i16* %I, align 2
  %14 = add i16 %13, 1
  store i16 %14, i16* %I, align 2
  br label %1

; <label>:15                                      ; preds = %1
  ret void
}

define float @absf(float %f) nounwind {
  %1 = alloca float, align 4
  %ret = alloca float, align 4
  store float %f, float* %1, align 4
  %2 = load float* %1, align 4
  %3 = fpext float %2 to double
  %4 = fcmp olt double %3, 0.000000e+00
  br i1 %4, label %5, label %8

; <label>:5                                       ; preds = %0
  %6 = load float* %1, align 4
  %7 = fsub float -0.000000e+00, %6
  store float %7, float* %ret, align 4
  br label %10

; <label>:8                                       ; preds = %0
  %9 = load float* %1, align 4
  store float %9, float* %ret, align 4
  br label %10

; <label>:10                                      ; preds = %8, %5
  %11 = load float* %ret, align 4
  ret float %11
}

define float @modifyInfo(float %ext_info, float %self_information) nounwind {
  %1 = alloca float, align 4
  %2 = alloca float, align 4
  %sign = alloca float, align 4
  %magnitude = alloca float, align 4
  store float %ext_info, float* %1, align 4
  store float %self_information, float* %2, align 4
  %3 = load float* %1, align 4
  %4 = fcmp oge float %3, 0.000000e+00
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = load float* %2, align 4
  %7 = fcmp oge float %6, 0.000000e+00
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %5
  store float 1.000000e+00, float* %sign, align 4
  br label %10

; <label>:9                                       ; preds = %5
  store float -1.000000e+00, float* %sign, align 4
  br label %10

; <label>:10                                      ; preds = %9, %8
  br label %17

; <label>:11                                      ; preds = %0
  %12 = load float* %2, align 4
  %13 = fcmp olt float %12, 0.000000e+00
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %11
  store float 1.000000e+00, float* %sign, align 4
  br label %16

; <label>:15                                      ; preds = %11
  store float -1.000000e+00, float* %sign, align 4
  br label %16

; <label>:16                                      ; preds = %15, %14
  br label %17

; <label>:17                                      ; preds = %16, %10
  %18 = load float* %2, align 4
  %19 = fpext float %18 to double
  %20 = call double @fabs(double %19) nounwind readnone
  %21 = load float* %1, align 4
  %22 = fpext float %21 to double
  %23 = call double @fabs(double %22) nounwind readnone
  %24 = fcmp ogt double %20, %23
  br i1 %24, label %25, label %30

; <label>:25                                      ; preds = %17
  %26 = load float* %1, align 4
  %27 = fpext float %26 to double
  %28 = call double @fabs(double %27) nounwind readnone
  %29 = fptrunc double %28 to float
  store float %29, float* %magnitude, align 4
  br label %35

; <label>:30                                      ; preds = %17
  %31 = load float* %2, align 4
  %32 = fpext float %31 to double
  %33 = call double @fabs(double %32) nounwind readnone
  %34 = fptrunc double %33 to float
  store float %34, float* %magnitude, align 4
  br label %35

; <label>:35                                      ; preds = %30, %25
  %36 = load float* %sign, align 4
  %37 = load float* %magnitude, align 4
  %38 = fmul float %36, %37
  ret float %38
}

declare double @fabs(double) nounwind readnone

define void @checkNodeComputeEngine11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %306, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %309

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %271

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %267, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %270

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %173
  store float %157, float* %174
  %175 = load %struct._IO_FILE** @stderr, align 8
  %176 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %177 = load i16* %176
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 3, %178
  %180 = load i16* %row, align 2
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 %179, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %183
  %185 = load i16* %184
  %186 = zext i16 %185 to i32
  %187 = sub nsw i32 %186, 1
  %188 = load i16* %col, align 2
  %189 = zext i16 %188 to i32
  %190 = add nsw i32 %187, %189
  %191 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %206
  %208 = load float* %207
  %209 = fpext float %208 to double
  %210 = getelementptr [22 x i8]* @.str8, i32 0, i32 0
  %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %175, i8* %210, i32 %190, double %209)
  %212 = load i16* %col, align 2
  %213 = zext i16 %212 to i32
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %266

; <label>:215                                     ; preds = %154
  %216 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = add nsw i32 3, %218
  %220 = load i16* %row, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %223
  %225 = load i16* %224
  %226 = zext i16 %225 to i32
  %227 = sub nsw i32 %226, 1
  %228 = load i16* %col, align 2
  %229 = zext i16 %228 to i32
  %230 = add nsw i32 %227, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %231
  %233 = load float* %232
  %234 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = load i16* %row, align 2
  %239 = zext i16 %238 to i32
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %241
  %243 = load i16* %242
  %244 = zext i16 %243 to i32
  %245 = sub nsw i32 %244, 1
  %246 = load i16* %col, align 2
  %247 = zext i16 %246 to i32
  %248 = add nsw i32 %245, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %249
  %251 = load float* %250
  %252 = call float @modifyInfo(float %233, float %251)
  %253 = load i16* %row, align 2
  %254 = zext i16 %253 to i64
  %255 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %254
  store float %252, float* %255
  %256 = load %struct._IO_FILE** @stderr, align 8
  %257 = load i16* %row, align 2
  %258 = zext i16 %257 to i32
  %259 = load i16* %row, align 2
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %260
  %262 = load float* %261
  %263 = fpext float %262 to double
  %264 = getelementptr [34 x i8]* @.str9, i32 0, i32 0
  %265 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %256, i8* %264, i32 %258, double %263)
  br label %266

; <label>:266                                     ; preds = %215, %154
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i16* %col, align 2
  %269 = add i16 %268, 1
  store i16 %269, i16* %col, align 2
  br label %65

; <label>:270                                     ; preds = %65
  br label %305

; <label>:271                                     ; preds = %60
  %272 = load i16* %range, align 2
  %273 = zext i16 %272 to i32
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %304

; <label>:275                                     ; preds = %271
  %276 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %277 = load i16* %276
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 3, %278
  %280 = load i16* %row, align 2
  %281 = zext i16 %280 to i32
  %282 = add nsw i32 %279, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %283
  %285 = load i16* %284
  %286 = zext i16 %285 to i32
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %288
  %290 = load float* %289
  %291 = load i16* %row, align 2
  %292 = zext i16 %291 to i64
  %293 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %292
  store float %290, float* %293
  %294 = load %struct._IO_FILE** @stderr, align 8
  %295 = load i16* %row, align 2
  %296 = zext i16 %295 to i32
  %297 = load i16* %row, align 2
  %298 = zext i16 %297 to i64
  %299 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %298
  %300 = load float* %299
  %301 = fpext float %300 to double
  %302 = getelementptr [34 x i8]* @.str9, i32 0, i32 0
  %303 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %294, i8* %302, i32 %296, double %301)
  br label %304

; <label>:304                                     ; preds = %275, %271
  br label %305

; <label>:305                                     ; preds = %304, %270
  br label %306

; <label>:306                                     ; preds = %305
  %307 = load i16* %row, align 2
  %308 = add i16 %307, 1
  store i16 %308, i16* %row, align 2
  br label %1

; <label>:309                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %306, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %309

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %271

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %267, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %270

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %173
  store float %157, float* %174
  %175 = load %struct._IO_FILE** @stderr, align 8
  %176 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %177 = load i16* %176
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 3, %178
  %180 = load i16* %row, align 2
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 %179, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %183
  %185 = load i16* %184
  %186 = zext i16 %185 to i32
  %187 = sub nsw i32 %186, 1
  %188 = load i16* %col, align 2
  %189 = zext i16 %188 to i32
  %190 = add nsw i32 %187, %189
  %191 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %206
  %208 = load float* %207
  %209 = fpext float %208 to double
  %210 = getelementptr [22 x i8]* @.str10, i32 0, i32 0
  %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %175, i8* %210, i32 %190, double %209)
  %212 = load i16* %col, align 2
  %213 = zext i16 %212 to i32
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %266

; <label>:215                                     ; preds = %154
  %216 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = add nsw i32 3, %218
  %220 = load i16* %row, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %223
  %225 = load i16* %224
  %226 = zext i16 %225 to i32
  %227 = sub nsw i32 %226, 1
  %228 = load i16* %col, align 2
  %229 = zext i16 %228 to i32
  %230 = add nsw i32 %227, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %231
  %233 = load float* %232
  %234 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = load i16* %row, align 2
  %239 = zext i16 %238 to i32
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %241
  %243 = load i16* %242
  %244 = zext i16 %243 to i32
  %245 = sub nsw i32 %244, 1
  %246 = load i16* %col, align 2
  %247 = zext i16 %246 to i32
  %248 = add nsw i32 %245, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %249
  %251 = load float* %250
  %252 = call float @modifyInfo(float %233, float %251)
  %253 = load i16* %row, align 2
  %254 = zext i16 %253 to i64
  %255 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %254
  store float %252, float* %255
  %256 = load %struct._IO_FILE** @stderr, align 8
  %257 = load i16* %row, align 2
  %258 = zext i16 %257 to i32
  %259 = load i16* %row, align 2
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %260
  %262 = load float* %261
  %263 = fpext float %262 to double
  %264 = getelementptr [34 x i8]* @.str11, i32 0, i32 0
  %265 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %256, i8* %264, i32 %258, double %263)
  br label %266

; <label>:266                                     ; preds = %215, %154
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i16* %col, align 2
  %269 = add i16 %268, 1
  store i16 %269, i16* %col, align 2
  br label %65

; <label>:270                                     ; preds = %65
  br label %305

; <label>:271                                     ; preds = %60
  %272 = load i16* %range, align 2
  %273 = zext i16 %272 to i32
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %304

; <label>:275                                     ; preds = %271
  %276 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %277 = load i16* %276
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 3, %278
  %280 = load i16* %row, align 2
  %281 = zext i16 %280 to i32
  %282 = add nsw i32 %279, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %283
  %285 = load i16* %284
  %286 = zext i16 %285 to i32
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %288
  %290 = load float* %289
  %291 = load i16* %row, align 2
  %292 = zext i16 %291 to i64
  %293 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %292
  store float %290, float* %293
  %294 = load %struct._IO_FILE** @stderr, align 8
  %295 = load i16* %row, align 2
  %296 = zext i16 %295 to i32
  %297 = load i16* %row, align 2
  %298 = zext i16 %297 to i64
  %299 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %298
  %300 = load float* %299
  %301 = fpext float %300 to double
  %302 = getelementptr [34 x i8]* @.str11, i32 0, i32 0
  %303 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %294, i8* %302, i32 %296, double %301)
  br label %304

; <label>:304                                     ; preds = %275, %271
  br label %305

; <label>:305                                     ; preds = %304, %270
  br label %306

; <label>:306                                     ; preds = %305
  %307 = load i16* %row, align 2
  %308 = add i16 %307, 1
  store i16 %308, i16* %row, align 2
  br label %1

; <label>:309                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %306, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %309

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %271

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %267, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %270

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %173
  store float %157, float* %174
  %175 = load %struct._IO_FILE** @stderr, align 8
  %176 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %177 = load i16* %176
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 3, %178
  %180 = load i16* %row, align 2
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 %179, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %183
  %185 = load i16* %184
  %186 = zext i16 %185 to i32
  %187 = sub nsw i32 %186, 1
  %188 = load i16* %col, align 2
  %189 = zext i16 %188 to i32
  %190 = add nsw i32 %187, %189
  %191 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %206
  %208 = load float* %207
  %209 = fpext float %208 to double
  %210 = getelementptr [22 x i8]* @.str12, i32 0, i32 0
  %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %175, i8* %210, i32 %190, double %209)
  %212 = load i16* %col, align 2
  %213 = zext i16 %212 to i32
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %266

; <label>:215                                     ; preds = %154
  %216 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = add nsw i32 3, %218
  %220 = load i16* %row, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %223
  %225 = load i16* %224
  %226 = zext i16 %225 to i32
  %227 = sub nsw i32 %226, 1
  %228 = load i16* %col, align 2
  %229 = zext i16 %228 to i32
  %230 = add nsw i32 %227, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %231
  %233 = load float* %232
  %234 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = load i16* %row, align 2
  %239 = zext i16 %238 to i32
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %241
  %243 = load i16* %242
  %244 = zext i16 %243 to i32
  %245 = sub nsw i32 %244, 1
  %246 = load i16* %col, align 2
  %247 = zext i16 %246 to i32
  %248 = add nsw i32 %245, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %249
  %251 = load float* %250
  %252 = call float @modifyInfo(float %233, float %251)
  %253 = load i16* %row, align 2
  %254 = zext i16 %253 to i64
  %255 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %254
  store float %252, float* %255
  %256 = load %struct._IO_FILE** @stderr, align 8
  %257 = load i16* %row, align 2
  %258 = zext i16 %257 to i32
  %259 = load i16* %row, align 2
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %260
  %262 = load float* %261
  %263 = fpext float %262 to double
  %264 = getelementptr [34 x i8]* @.str13, i32 0, i32 0
  %265 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %256, i8* %264, i32 %258, double %263)
  br label %266

; <label>:266                                     ; preds = %215, %154
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i16* %col, align 2
  %269 = add i16 %268, 1
  store i16 %269, i16* %col, align 2
  br label %65

; <label>:270                                     ; preds = %65
  br label %305

; <label>:271                                     ; preds = %60
  %272 = load i16* %range, align 2
  %273 = zext i16 %272 to i32
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %304

; <label>:275                                     ; preds = %271
  %276 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %277 = load i16* %276
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 3, %278
  %280 = load i16* %row, align 2
  %281 = zext i16 %280 to i32
  %282 = add nsw i32 %279, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %283
  %285 = load i16* %284
  %286 = zext i16 %285 to i32
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %288
  %290 = load float* %289
  %291 = load i16* %row, align 2
  %292 = zext i16 %291 to i64
  %293 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %292
  store float %290, float* %293
  %294 = load %struct._IO_FILE** @stderr, align 8
  %295 = load i16* %row, align 2
  %296 = zext i16 %295 to i32
  %297 = load i16* %row, align 2
  %298 = zext i16 %297 to i64
  %299 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %298
  %300 = load float* %299
  %301 = fpext float %300 to double
  %302 = getelementptr [34 x i8]* @.str13, i32 0, i32 0
  %303 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %294, i8* %302, i32 %296, double %301)
  br label %304

; <label>:304                                     ; preds = %275, %271
  br label %305

; <label>:305                                     ; preds = %304, %270
  br label %306

; <label>:306                                     ; preds = %305
  %307 = load i16* %row, align 2
  %308 = add i16 %307, 1
  store i16 %308, i16* %row, align 2
  br label %1

; <label>:309                                     ; preds = %1
  ret void
}

define void @checkNodeComputeEngine22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %I = alloca i16, align 2
  %val = alloca float, align 4
  %flag = alloca i8, align 1
  %exor = alloca i8, align 1
  %sign = alloca float, align 4
  %index = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %306, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %309

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %271

; <label>:64                                      ; preds = %60
  store i16 0, i16* %col, align 2
  br label %65

; <label>:65                                      ; preds = %267, %64
  %66 = load i16* %col, align 2
  %67 = zext i16 %66 to i32
  %68 = load i16* %range, align 2
  %69 = zext i16 %68 to i32
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %270

; <label>:71                                      ; preds = %65
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  store i16 0, i16* %I, align 2
  store float 0.000000e+00, float* %val, align 4
  store i8 0, i8* %flag, align 1
  store i8 0, i8* %exor, align 1
  store float 0.000000e+00, float* %sign, align 4
  store i16 0, i16* %I, align 2
  br label %72

; <label>:72                                      ; preds = %145, %71
  %73 = load i16* %I, align 2
  %74 = zext i16 %73 to i32
  %75 = load i16* %range, align 2
  %76 = zext i16 %75 to i32
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %148

; <label>:78                                      ; preds = %72
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %79 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %80 = load i16* %79
  %81 = zext i16 %80 to i32
  %82 = add nsw i32 3, %81
  %83 = load i16* %row, align 2
  %84 = zext i16 %83 to i32
  %85 = add nsw i32 %82, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %86
  %88 = load i16* %87
  %89 = zext i16 %88 to i32
  %90 = sub nsw i32 %89, 1
  %91 = load i16* %I, align 2
  %92 = zext i16 %91 to i32
  %93 = add nsw i32 %90, %92
  %94 = trunc i32 %93 to i16
  store i16 %94, i16* %index, align 2
  %95 = load i16* %I, align 2
  %96 = zext i16 %95 to i32
  %97 = load i16* %col, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %78
  br label %145

; <label>:101                                     ; preds = %78
  %102 = load i16* %index, align 2
  %103 = zext i16 %102 to i64
  %104 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %103
  %105 = load float* %104
  %106 = fpext float %105 to double
  %107 = fcmp oge double %106, 0.000000e+00
  br i1 %107, label %108, label %113

; <label>:108                                     ; preds = %101
  %109 = load i8* %exor, align 1
  %110 = zext i8 %109 to i32
  %111 = xor i32 %110, 0
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %exor, align 1
  br label %118

; <label>:113                                     ; preds = %101
  %114 = load i8* %exor, align 1
  %115 = zext i8 %114 to i32
  %116 = xor i32 %115, 1
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %exor, align 1
  br label %118

; <label>:118                                     ; preds = %113, %108
  %119 = load i8* %flag, align 1
  %120 = zext i8 %119 to i32
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %128

; <label>:122                                     ; preds = %118
  %123 = load i16* %index, align 2
  %124 = zext i16 %123 to i64
  %125 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %124
  %126 = load float* %125
  %127 = call float @absf(float %126)
  store float %127, float* %val, align 4
  br label %143

; <label>:128                                     ; preds = %118
  %129 = load i16* %index, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %130
  %132 = load float* %131
  %133 = call float @absf(float %132)
  %134 = load float* %val, align 4
  %135 = fcmp olt float %133, %134
  br i1 %135, label %136, label %142

; <label>:136                                     ; preds = %128
  %137 = load i16* %index, align 2
  %138 = zext i16 %137 to i64
  %139 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %138
  %140 = load float* %139
  %141 = call float @absf(float %140)
  store float %141, float* %val, align 4
  br label %142

; <label>:142                                     ; preds = %136, %128
  br label %143

; <label>:143                                     ; preds = %142, %122
  br label %144

; <label>:144                                     ; preds = %143
  store i8 1, i8* %flag, align 1
  br label %145

; <label>:145                                     ; preds = %144, %100
  %146 = load i16* %I, align 2
  %147 = add i16 %146, 1
  store i16 %147, i16* %I, align 2
  br label %72

; <label>:148                                     ; preds = %72
  %149 = load i8* %exor, align 1
  %150 = zext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

; <label>:152                                     ; preds = %148
  store float 1.000000e+00, float* %sign, align 4
  br label %154

; <label>:153                                     ; preds = %148
  store float -1.000000e+00, float* %sign, align 4
  br label %154

; <label>:154                                     ; preds = %153, %152
  %155 = load float* %val, align 4
  %156 = load float* %sign, align 4
  %157 = fmul float %155, %156
  %158 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %159 = load i16* %158
  %160 = zext i16 %159 to i32
  %161 = add nsw i32 3, %160
  %162 = load i16* %row, align 2
  %163 = zext i16 %162 to i32
  %164 = add nsw i32 %161, %163
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %165
  %167 = load i16* %166
  %168 = zext i16 %167 to i32
  %169 = sub nsw i32 %168, 1
  %170 = load i16* %col, align 2
  %171 = zext i16 %170 to i32
  %172 = add nsw i32 %169, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %173
  store float %157, float* %174
  %175 = load %struct._IO_FILE** @stderr, align 8
  %176 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %177 = load i16* %176
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 3, %178
  %180 = load i16* %row, align 2
  %181 = zext i16 %180 to i32
  %182 = add nsw i32 %179, %181
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %183
  %185 = load i16* %184
  %186 = zext i16 %185 to i32
  %187 = sub nsw i32 %186, 1
  %188 = load i16* %col, align 2
  %189 = zext i16 %188 to i32
  %190 = add nsw i32 %187, %189
  %191 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %206
  %208 = load float* %207
  %209 = fpext float %208 to double
  %210 = getelementptr [22 x i8]* @.str14, i32 0, i32 0
  %211 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %175, i8* %210, i32 %190, double %209)
  %212 = load i16* %col, align 2
  %213 = zext i16 %212 to i32
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %266

; <label>:215                                     ; preds = %154
  %216 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = add nsw i32 3, %218
  %220 = load i16* %row, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %223
  %225 = load i16* %224
  %226 = zext i16 %225 to i32
  %227 = sub nsw i32 %226, 1
  %228 = load i16* %col, align 2
  %229 = zext i16 %228 to i32
  %230 = add nsw i32 %227, %229
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %231
  %233 = load float* %232
  %234 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = load i16* %row, align 2
  %239 = zext i16 %238 to i32
  %240 = add nsw i32 %237, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %241
  %243 = load i16* %242
  %244 = zext i16 %243 to i32
  %245 = sub nsw i32 %244, 1
  %246 = load i16* %col, align 2
  %247 = zext i16 %246 to i32
  %248 = add nsw i32 %245, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %249
  %251 = load float* %250
  %252 = call float @modifyInfo(float %233, float %251)
  %253 = load i16* %row, align 2
  %254 = zext i16 %253 to i64
  %255 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %254
  store float %252, float* %255
  %256 = load %struct._IO_FILE** @stderr, align 8
  %257 = load i16* %row, align 2
  %258 = zext i16 %257 to i32
  %259 = load i16* %row, align 2
  %260 = zext i16 %259 to i64
  %261 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %260
  %262 = load float* %261
  %263 = fpext float %262 to double
  %264 = getelementptr [34 x i8]* @.str15, i32 0, i32 0
  %265 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %256, i8* %264, i32 %258, double %263)
  br label %266

; <label>:266                                     ; preds = %215, %154
  br label %267

; <label>:267                                     ; preds = %266
  %268 = load i16* %col, align 2
  %269 = add i16 %268, 1
  store i16 %269, i16* %col, align 2
  br label %65

; <label>:270                                     ; preds = %65
  br label %305

; <label>:271                                     ; preds = %60
  %272 = load i16* %range, align 2
  %273 = zext i16 %272 to i32
  %274 = icmp eq i32 %273, 1
  br i1 %274, label %275, label %304

; <label>:275                                     ; preds = %271
  %276 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %277 = load i16* %276
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 3, %278
  %280 = load i16* %row, align 2
  %281 = zext i16 %280 to i32
  %282 = add nsw i32 %279, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %283
  %285 = load i16* %284
  %286 = zext i16 %285 to i32
  %287 = sub nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %288
  %290 = load float* %289
  %291 = load i16* %row, align 2
  %292 = zext i16 %291 to i64
  %293 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %292
  store float %290, float* %293
  %294 = load %struct._IO_FILE** @stderr, align 8
  %295 = load i16* %row, align 2
  %296 = zext i16 %295 to i32
  %297 = load i16* %row, align 2
  %298 = zext i16 %297 to i64
  %299 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %298
  %300 = load float* %299
  %301 = fpext float %300 to double
  %302 = getelementptr [34 x i8]* @.str15, i32 0, i32 0
  %303 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %294, i8* %302, i32 %296, double %301)
  br label %304

; <label>:304                                     ; preds = %275, %271
  br label %305

; <label>:305                                     ; preds = %304, %270
  br label %306

; <label>:306                                     ; preds = %305
  %307 = load i16* %row, align 2
  %308 = add i16 %307, 1
  store i16 %308, i16* %row, align 2
  br label %1

; <label>:309                                     ; preds = %1
  ret void
}

define void @transverseCorrection11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %col1 = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %327, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %330

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %256

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %165

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %161, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %164

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %116
  store float %100, float* %117
  %118 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %119 = load i16* %118
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 3, %120
  %122 = load i16* %row, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %125
  %127 = load i16* %126
  %128 = zext i16 %127 to i32
  %129 = sub nsw i32 %128, 1
  %130 = load i16* %col, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %129, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %133
  %135 = load float* %134
  %136 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %137 = load i16* %136
  %138 = zext i16 %137 to i32
  %139 = add nsw i32 3, %138
  %140 = load i16* %row, align 2
  %141 = zext i16 %140 to i32
  %142 = add nsw i32 %139, %141
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %143
  %145 = load i16* %144
  %146 = zext i16 %145 to i32
  %147 = add nsw i32 3, %146
  %148 = sub nsw i32 %147, 1
  %149 = load i16* %col, align 2
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 %148, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %152
  %154 = load i16* %153
  %155 = zext i16 %154 to i32
  %156 = sub nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %157
  %159 = load float* %158
  %160 = fadd float %159, %135
  store float %160, float* %158
  br label %161

; <label>:161                                     ; preds = %77
  %162 = load i16* %col, align 2
  %163 = add i16 %162, 1
  store i16 %163, i16* %col, align 2
  br label %71

; <label>:164                                     ; preds = %71
  br label %255

; <label>:165                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %166

; <label>:166                                     ; preds = %251, %165
  %167 = load i16* %col, align 2
  %168 = zext i16 %167 to i32
  %169 = load i16* %range, align 2
  %170 = zext i16 %169 to i32
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %172, label %254

; <label>:172                                     ; preds = %166
  %173 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %174 = load i16* %173
  %175 = zext i16 %174 to i32
  %176 = add nsw i32 3, %175
  %177 = load i16* %row, align 2
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 %176, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %180
  %182 = load i16* %181
  %183 = zext i16 %182 to i32
  %184 = sub nsw i32 %183, 1
  %185 = load i16* %col, align 2
  %186 = zext i16 %185 to i32
  %187 = add nsw i32 %184, %186
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %188
  %190 = load float* %189
  %191 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %206
  store float %190, float* %207
  %208 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %209 = load i16* %208
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 3, %210
  %212 = load i16* %row, align 2
  %213 = zext i16 %212 to i32
  %214 = add nsw i32 %211, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %215
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %218, 1
  %220 = load i16* %col, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %223
  %225 = load float* %224
  %226 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %227 = load i16* %226
  %228 = zext i16 %227 to i32
  %229 = add nsw i32 3, %228
  %230 = load i16* %row, align 2
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %229, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %233
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = sub nsw i32 %237, 1
  %239 = load i16* %col, align 2
  %240 = zext i16 %239 to i32
  %241 = add nsw i32 %238, %240
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %242
  %244 = load i16* %243
  %245 = zext i16 %244 to i32
  %246 = sub nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %247
  %249 = load float* %248
  %250 = fadd float %249, %225
  store float %250, float* %248
  br label %251

; <label>:251                                     ; preds = %172
  %252 = load i16* %col, align 2
  %253 = add i16 %252, 1
  store i16 %253, i16* %col, align 2
  br label %166

; <label>:254                                     ; preds = %166
  br label %255

; <label>:255                                     ; preds = %254, %164
  br label %326

; <label>:256                                     ; preds = %60
  %257 = load i16* %range, align 2
  %258 = zext i16 %257 to i32
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %260, label %325

; <label>:260                                     ; preds = %256
  store i16 0, i16* %col1, align 2
  %261 = load i16* %row, align 2
  %262 = zext i16 %261 to i64
  %263 = getelementptr inbounds [20000 x float]* @trans_info12_11, i32 0, i64 %262
  %264 = load float* %263
  %265 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %266 = load i16* %265
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 3, %267
  %269 = load i16* %row, align 2
  %270 = zext i16 %269 to i32
  %271 = add nsw i32 %268, %270
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %272
  %274 = load i16* %273
  %275 = zext i16 %274 to i32
  %276 = sub nsw i32 %275, 1
  %277 = load i16* %col1, align 2
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 %276, %278
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %280
  store float %264, float* %281
  %282 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %283 = load i16* %282
  %284 = zext i16 %283 to i32
  %285 = add nsw i32 3, %284
  %286 = load i16* %row, align 2
  %287 = zext i16 %286 to i32
  %288 = add nsw i32 %285, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %289
  %291 = load i16* %290
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %292, 1
  %294 = load i16* %col1, align 2
  %295 = zext i16 %294 to i32
  %296 = add nsw i32 %293, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %297
  %299 = load float* %298
  %300 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %301 = load i16* %300
  %302 = zext i16 %301 to i32
  %303 = add nsw i32 3, %302
  %304 = load i16* %row, align 2
  %305 = zext i16 %304 to i32
  %306 = add nsw i32 %303, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %307
  %309 = load i16* %308
  %310 = zext i16 %309 to i32
  %311 = add nsw i32 3, %310
  %312 = sub nsw i32 %311, 1
  %313 = load i16* %col1, align 2
  %314 = zext i16 %313 to i32
  %315 = add nsw i32 %312, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %316
  %318 = load i16* %317
  %319 = zext i16 %318 to i32
  %320 = sub nsw i32 %319, 1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %321
  %323 = load float* %322
  %324 = fadd float %323, %299
  store float %324, float* %322
  br label %325

; <label>:325                                     ; preds = %260, %256
  br label %326

; <label>:326                                     ; preds = %325, %255
  br label %327

; <label>:327                                     ; preds = %326
  %328 = load i16* %row, align 2
  %329 = add i16 %328, 1
  store i16 %329, i16* %row, align 2
  br label %1

; <label>:330                                     ; preds = %1
  ret void
}

define void @transverseCorrection12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %col1 = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %327, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %330

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %256

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %165

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %161, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %164

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %116
  store float %100, float* %117
  %118 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %119 = load i16* %118
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 3, %120
  %122 = load i16* %row, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %125
  %127 = load i16* %126
  %128 = zext i16 %127 to i32
  %129 = sub nsw i32 %128, 1
  %130 = load i16* %col, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %129, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %133
  %135 = load float* %134
  %136 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %137 = load i16* %136
  %138 = zext i16 %137 to i32
  %139 = add nsw i32 3, %138
  %140 = load i16* %row, align 2
  %141 = zext i16 %140 to i32
  %142 = add nsw i32 %139, %141
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %143
  %145 = load i16* %144
  %146 = zext i16 %145 to i32
  %147 = add nsw i32 3, %146
  %148 = sub nsw i32 %147, 1
  %149 = load i16* %col, align 2
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 %148, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %152
  %154 = load i16* %153
  %155 = zext i16 %154 to i32
  %156 = sub nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %157
  %159 = load float* %158
  %160 = fadd float %159, %135
  store float %160, float* %158
  br label %161

; <label>:161                                     ; preds = %77
  %162 = load i16* %col, align 2
  %163 = add i16 %162, 1
  store i16 %163, i16* %col, align 2
  br label %71

; <label>:164                                     ; preds = %71
  br label %255

; <label>:165                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %166

; <label>:166                                     ; preds = %251, %165
  %167 = load i16* %col, align 2
  %168 = zext i16 %167 to i32
  %169 = load i16* %range, align 2
  %170 = zext i16 %169 to i32
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %172, label %254

; <label>:172                                     ; preds = %166
  %173 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %174 = load i16* %173
  %175 = zext i16 %174 to i32
  %176 = add nsw i32 3, %175
  %177 = load i16* %row, align 2
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 %176, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %180
  %182 = load i16* %181
  %183 = zext i16 %182 to i32
  %184 = sub nsw i32 %183, 1
  %185 = load i16* %col, align 2
  %186 = zext i16 %185 to i32
  %187 = add nsw i32 %184, %186
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %188
  %190 = load float* %189
  %191 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %206
  store float %190, float* %207
  %208 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %209 = load i16* %208
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 3, %210
  %212 = load i16* %row, align 2
  %213 = zext i16 %212 to i32
  %214 = add nsw i32 %211, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %215
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %218, 1
  %220 = load i16* %col, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %223
  %225 = load float* %224
  %226 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %227 = load i16* %226
  %228 = zext i16 %227 to i32
  %229 = add nsw i32 3, %228
  %230 = load i16* %row, align 2
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %229, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %233
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = sub nsw i32 %237, 1
  %239 = load i16* %col, align 2
  %240 = zext i16 %239 to i32
  %241 = add nsw i32 %238, %240
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %242
  %244 = load i16* %243
  %245 = zext i16 %244 to i32
  %246 = sub nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %247
  %249 = load float* %248
  %250 = fadd float %249, %225
  store float %250, float* %248
  br label %251

; <label>:251                                     ; preds = %172
  %252 = load i16* %col, align 2
  %253 = add i16 %252, 1
  store i16 %253, i16* %col, align 2
  br label %166

; <label>:254                                     ; preds = %166
  br label %255

; <label>:255                                     ; preds = %254, %164
  br label %326

; <label>:256                                     ; preds = %60
  %257 = load i16* %range, align 2
  %258 = zext i16 %257 to i32
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %260, label %325

; <label>:260                                     ; preds = %256
  store i16 0, i16* %col1, align 2
  %261 = load i16* %row, align 2
  %262 = zext i16 %261 to i64
  %263 = getelementptr inbounds [20000 x float]* @trans_info11_12, i32 0, i64 %262
  %264 = load float* %263
  %265 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %266 = load i16* %265
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 3, %267
  %269 = load i16* %row, align 2
  %270 = zext i16 %269 to i32
  %271 = add nsw i32 %268, %270
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %272
  %274 = load i16* %273
  %275 = zext i16 %274 to i32
  %276 = sub nsw i32 %275, 1
  %277 = load i16* %col1, align 2
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 %276, %278
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %280
  store float %264, float* %281
  %282 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %283 = load i16* %282
  %284 = zext i16 %283 to i32
  %285 = add nsw i32 3, %284
  %286 = load i16* %row, align 2
  %287 = zext i16 %286 to i32
  %288 = add nsw i32 %285, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %289
  %291 = load i16* %290
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %292, 1
  %294 = load i16* %col1, align 2
  %295 = zext i16 %294 to i32
  %296 = add nsw i32 %293, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %297
  %299 = load float* %298
  %300 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %301 = load i16* %300
  %302 = zext i16 %301 to i32
  %303 = add nsw i32 3, %302
  %304 = load i16* %row, align 2
  %305 = zext i16 %304 to i32
  %306 = add nsw i32 %303, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %307
  %309 = load i16* %308
  %310 = zext i16 %309 to i32
  %311 = add nsw i32 3, %310
  %312 = sub nsw i32 %311, 1
  %313 = load i16* %col1, align 2
  %314 = zext i16 %313 to i32
  %315 = add nsw i32 %312, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %316
  %318 = load i16* %317
  %319 = zext i16 %318 to i32
  %320 = sub nsw i32 %319, 1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %321
  %323 = load float* %322
  %324 = fadd float %323, %299
  store float %324, float* %322
  br label %325

; <label>:325                                     ; preds = %260, %256
  br label %326

; <label>:326                                     ; preds = %325, %255
  br label %327

; <label>:327                                     ; preds = %326
  %328 = load i16* %row, align 2
  %329 = add i16 %328, 1
  store i16 %329, i16* %row, align 2
  br label %1

; <label>:330                                     ; preds = %1
  ret void
}

define void @transverseCorrection22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %col1 = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %327, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %330

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %256

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %165

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %161, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %164

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %116
  store float %100, float* %117
  %118 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %119 = load i16* %118
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 3, %120
  %122 = load i16* %row, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %125
  %127 = load i16* %126
  %128 = zext i16 %127 to i32
  %129 = sub nsw i32 %128, 1
  %130 = load i16* %col, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %129, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %133
  %135 = load float* %134
  %136 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %137 = load i16* %136
  %138 = zext i16 %137 to i32
  %139 = add nsw i32 3, %138
  %140 = load i16* %row, align 2
  %141 = zext i16 %140 to i32
  %142 = add nsw i32 %139, %141
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %143
  %145 = load i16* %144
  %146 = zext i16 %145 to i32
  %147 = add nsw i32 3, %146
  %148 = sub nsw i32 %147, 1
  %149 = load i16* %col, align 2
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 %148, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %152
  %154 = load i16* %153
  %155 = zext i16 %154 to i32
  %156 = sub nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %157
  %159 = load float* %158
  %160 = fadd float %159, %135
  store float %160, float* %158
  br label %161

; <label>:161                                     ; preds = %77
  %162 = load i16* %col, align 2
  %163 = add i16 %162, 1
  store i16 %163, i16* %col, align 2
  br label %71

; <label>:164                                     ; preds = %71
  br label %255

; <label>:165                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %166

; <label>:166                                     ; preds = %251, %165
  %167 = load i16* %col, align 2
  %168 = zext i16 %167 to i32
  %169 = load i16* %range, align 2
  %170 = zext i16 %169 to i32
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %172, label %254

; <label>:172                                     ; preds = %166
  %173 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %174 = load i16* %173
  %175 = zext i16 %174 to i32
  %176 = add nsw i32 3, %175
  %177 = load i16* %row, align 2
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 %176, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %180
  %182 = load i16* %181
  %183 = zext i16 %182 to i32
  %184 = sub nsw i32 %183, 1
  %185 = load i16* %col, align 2
  %186 = zext i16 %185 to i32
  %187 = add nsw i32 %184, %186
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %188
  %190 = load float* %189
  %191 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %206
  store float %190, float* %207
  %208 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %209 = load i16* %208
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 3, %210
  %212 = load i16* %row, align 2
  %213 = zext i16 %212 to i32
  %214 = add nsw i32 %211, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %215
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %218, 1
  %220 = load i16* %col, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %223
  %225 = load float* %224
  %226 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %227 = load i16* %226
  %228 = zext i16 %227 to i32
  %229 = add nsw i32 3, %228
  %230 = load i16* %row, align 2
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %229, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %233
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = sub nsw i32 %237, 1
  %239 = load i16* %col, align 2
  %240 = zext i16 %239 to i32
  %241 = add nsw i32 %238, %240
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %242
  %244 = load i16* %243
  %245 = zext i16 %244 to i32
  %246 = sub nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %247
  %249 = load float* %248
  %250 = fadd float %249, %225
  store float %250, float* %248
  br label %251

; <label>:251                                     ; preds = %172
  %252 = load i16* %col, align 2
  %253 = add i16 %252, 1
  store i16 %253, i16* %col, align 2
  br label %166

; <label>:254                                     ; preds = %166
  br label %255

; <label>:255                                     ; preds = %254, %164
  br label %326

; <label>:256                                     ; preds = %60
  %257 = load i16* %range, align 2
  %258 = zext i16 %257 to i32
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %260, label %325

; <label>:260                                     ; preds = %256
  store i16 0, i16* %col1, align 2
  %261 = load i16* %row, align 2
  %262 = zext i16 %261 to i64
  %263 = getelementptr inbounds [20000 x float]* @trans_info21_22, i32 0, i64 %262
  %264 = load float* %263
  %265 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %266 = load i16* %265
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 3, %267
  %269 = load i16* %row, align 2
  %270 = zext i16 %269 to i32
  %271 = add nsw i32 %268, %270
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %272
  %274 = load i16* %273
  %275 = zext i16 %274 to i32
  %276 = sub nsw i32 %275, 1
  %277 = load i16* %col1, align 2
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 %276, %278
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %280
  store float %264, float* %281
  %282 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %283 = load i16* %282
  %284 = zext i16 %283 to i32
  %285 = add nsw i32 3, %284
  %286 = load i16* %row, align 2
  %287 = zext i16 %286 to i32
  %288 = add nsw i32 %285, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %289
  %291 = load i16* %290
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %292, 1
  %294 = load i16* %col1, align 2
  %295 = zext i16 %294 to i32
  %296 = add nsw i32 %293, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %297
  %299 = load float* %298
  %300 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %301 = load i16* %300
  %302 = zext i16 %301 to i32
  %303 = add nsw i32 3, %302
  %304 = load i16* %row, align 2
  %305 = zext i16 %304 to i32
  %306 = add nsw i32 %303, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %307
  %309 = load i16* %308
  %310 = zext i16 %309 to i32
  %311 = add nsw i32 3, %310
  %312 = sub nsw i32 %311, 1
  %313 = load i16* %col1, align 2
  %314 = zext i16 %313 to i32
  %315 = add nsw i32 %312, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %316
  %318 = load i16* %317
  %319 = zext i16 %318 to i32
  %320 = sub nsw i32 %319, 1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %321
  %323 = load float* %322
  %324 = fadd float %323, %299
  store float %324, float* %322
  br label %325

; <label>:325                                     ; preds = %260, %256
  br label %326

; <label>:326                                     ; preds = %325, %255
  br label %327

; <label>:327                                     ; preds = %326
  %328 = load i16* %row, align 2
  %329 = add i16 %328, 1
  store i16 %329, i16* %row, align 2
  br label %1

; <label>:330                                     ; preds = %1
  ret void
}

define void @transverseCorrection21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  %col1 = alloca i16, align 2
  store i16 0, i16* %row, align 2
  store i16 0, i16* %col, align 2
  store i16 0, i16* %range, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %327, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %330

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  %61 = load i16* %range, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 1
  br i1 %63, label %64, label %256

; <label>:64                                      ; preds = %60
  %65 = load i16* %row, align 2
  %66 = zext i16 %65 to i64
  %67 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %66
  %68 = load float* %67
  %69 = fcmp une float %68, 0.000000e+00
  br i1 %69, label %70, label %165

; <label>:70                                      ; preds = %64
  store i16 0, i16* %col, align 2
  br label %71

; <label>:71                                      ; preds = %161, %70
  %72 = load i16* %col, align 2
  %73 = zext i16 %72 to i32
  %74 = load i16* %range, align 2
  %75 = zext i16 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %164

; <label>:77                                      ; preds = %71
  %78 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %79 = load i16* %78
  %80 = zext i16 %79 to i32
  %81 = add nsw i32 3, %80
  %82 = load i16* %row, align 2
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %81, %83
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %85
  %87 = load i16* %86
  %88 = zext i16 %87 to i32
  %89 = sub nsw i32 %88, 1
  %90 = load i16* %col, align 2
  %91 = zext i16 %90 to i32
  %92 = add nsw i32 %89, %91
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %93
  %95 = load float* %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %97
  %99 = load float* %98
  %100 = call float @modifyInfo(float %95, float %99)
  %101 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %102 = load i16* %101
  %103 = zext i16 %102 to i32
  %104 = add nsw i32 3, %103
  %105 = load i16* %row, align 2
  %106 = zext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %108
  %110 = load i16* %109
  %111 = zext i16 %110 to i32
  %112 = sub nsw i32 %111, 1
  %113 = load i16* %col, align 2
  %114 = zext i16 %113 to i32
  %115 = add nsw i32 %112, %114
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %116
  store float %100, float* %117
  %118 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %119 = load i16* %118
  %120 = zext i16 %119 to i32
  %121 = add nsw i32 3, %120
  %122 = load i16* %row, align 2
  %123 = zext i16 %122 to i32
  %124 = add nsw i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %125
  %127 = load i16* %126
  %128 = zext i16 %127 to i32
  %129 = sub nsw i32 %128, 1
  %130 = load i16* %col, align 2
  %131 = zext i16 %130 to i32
  %132 = add nsw i32 %129, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %133
  %135 = load float* %134
  %136 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %137 = load i16* %136
  %138 = zext i16 %137 to i32
  %139 = add nsw i32 3, %138
  %140 = load i16* %row, align 2
  %141 = zext i16 %140 to i32
  %142 = add nsw i32 %139, %141
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %143
  %145 = load i16* %144
  %146 = zext i16 %145 to i32
  %147 = add nsw i32 3, %146
  %148 = sub nsw i32 %147, 1
  %149 = load i16* %col, align 2
  %150 = zext i16 %149 to i32
  %151 = add nsw i32 %148, %150
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %152
  %154 = load i16* %153
  %155 = zext i16 %154 to i32
  %156 = sub nsw i32 %155, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %157
  %159 = load float* %158
  %160 = fadd float %159, %135
  store float %160, float* %158
  br label %161

; <label>:161                                     ; preds = %77
  %162 = load i16* %col, align 2
  %163 = add i16 %162, 1
  store i16 %163, i16* %col, align 2
  br label %71

; <label>:164                                     ; preds = %71
  br label %255

; <label>:165                                     ; preds = %64
  store i16 0, i16* %col, align 2
  br label %166

; <label>:166                                     ; preds = %251, %165
  %167 = load i16* %col, align 2
  %168 = zext i16 %167 to i32
  %169 = load i16* %range, align 2
  %170 = zext i16 %169 to i32
  %171 = icmp slt i32 %168, %170
  br i1 %171, label %172, label %254

; <label>:172                                     ; preds = %166
  %173 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %174 = load i16* %173
  %175 = zext i16 %174 to i32
  %176 = add nsw i32 3, %175
  %177 = load i16* %row, align 2
  %178 = zext i16 %177 to i32
  %179 = add nsw i32 %176, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %180
  %182 = load i16* %181
  %183 = zext i16 %182 to i32
  %184 = sub nsw i32 %183, 1
  %185 = load i16* %col, align 2
  %186 = zext i16 %185 to i32
  %187 = add nsw i32 %184, %186
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %188
  %190 = load float* %189
  %191 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %192 = load i16* %191
  %193 = zext i16 %192 to i32
  %194 = add nsw i32 3, %193
  %195 = load i16* %row, align 2
  %196 = zext i16 %195 to i32
  %197 = add nsw i32 %194, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %198
  %200 = load i16* %199
  %201 = zext i16 %200 to i32
  %202 = sub nsw i32 %201, 1
  %203 = load i16* %col, align 2
  %204 = zext i16 %203 to i32
  %205 = add nsw i32 %202, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %206
  store float %190, float* %207
  %208 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %209 = load i16* %208
  %210 = zext i16 %209 to i32
  %211 = add nsw i32 3, %210
  %212 = load i16* %row, align 2
  %213 = zext i16 %212 to i32
  %214 = add nsw i32 %211, %213
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %215
  %217 = load i16* %216
  %218 = zext i16 %217 to i32
  %219 = sub nsw i32 %218, 1
  %220 = load i16* %col, align 2
  %221 = zext i16 %220 to i32
  %222 = add nsw i32 %219, %221
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %223
  %225 = load float* %224
  %226 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %227 = load i16* %226
  %228 = zext i16 %227 to i32
  %229 = add nsw i32 3, %228
  %230 = load i16* %row, align 2
  %231 = zext i16 %230 to i32
  %232 = add nsw i32 %229, %231
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %233
  %235 = load i16* %234
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 3, %236
  %238 = sub nsw i32 %237, 1
  %239 = load i16* %col, align 2
  %240 = zext i16 %239 to i32
  %241 = add nsw i32 %238, %240
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %242
  %244 = load i16* %243
  %245 = zext i16 %244 to i32
  %246 = sub nsw i32 %245, 1
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %247
  %249 = load float* %248
  %250 = fadd float %249, %225
  store float %250, float* %248
  br label %251

; <label>:251                                     ; preds = %172
  %252 = load i16* %col, align 2
  %253 = add i16 %252, 1
  store i16 %253, i16* %col, align 2
  br label %166

; <label>:254                                     ; preds = %166
  br label %255

; <label>:255                                     ; preds = %254, %164
  br label %326

; <label>:256                                     ; preds = %60
  %257 = load i16* %range, align 2
  %258 = zext i16 %257 to i32
  %259 = icmp eq i32 %258, 1
  br i1 %259, label %260, label %325

; <label>:260                                     ; preds = %256
  store i16 0, i16* %col1, align 2
  %261 = load i16* %row, align 2
  %262 = zext i16 %261 to i64
  %263 = getelementptr inbounds [20000 x float]* @trans_info22_21, i32 0, i64 %262
  %264 = load float* %263
  %265 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %266 = load i16* %265
  %267 = zext i16 %266 to i32
  %268 = add nsw i32 3, %267
  %269 = load i16* %row, align 2
  %270 = zext i16 %269 to i32
  %271 = add nsw i32 %268, %270
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %272
  %274 = load i16* %273
  %275 = zext i16 %274 to i32
  %276 = sub nsw i32 %275, 1
  %277 = load i16* %col1, align 2
  %278 = zext i16 %277 to i32
  %279 = add nsw i32 %276, %278
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %280
  store float %264, float* %281
  %282 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %283 = load i16* %282
  %284 = zext i16 %283 to i32
  %285 = add nsw i32 3, %284
  %286 = load i16* %row, align 2
  %287 = zext i16 %286 to i32
  %288 = add nsw i32 %285, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %289
  %291 = load i16* %290
  %292 = zext i16 %291 to i32
  %293 = sub nsw i32 %292, 1
  %294 = load i16* %col1, align 2
  %295 = zext i16 %294 to i32
  %296 = add nsw i32 %293, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %297
  %299 = load float* %298
  %300 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %301 = load i16* %300
  %302 = zext i16 %301 to i32
  %303 = add nsw i32 3, %302
  %304 = load i16* %row, align 2
  %305 = zext i16 %304 to i32
  %306 = add nsw i32 %303, %305
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %307
  %309 = load i16* %308
  %310 = zext i16 %309 to i32
  %311 = add nsw i32 3, %310
  %312 = sub nsw i32 %311, 1
  %313 = load i16* %col1, align 2
  %314 = zext i16 %313 to i32
  %315 = add nsw i32 %312, %314
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %316
  %318 = load i16* %317
  %319 = zext i16 %318 to i32
  %320 = sub nsw i32 %319, 1
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %321
  %323 = load float* %322
  %324 = fadd float %323, %299
  store float %324, float* %322
  br label %325

; <label>:325                                     ; preds = %260, %256
  br label %326

; <label>:326                                     ; preds = %325, %255
  br label %327

; <label>:327                                     ; preds = %326
  %328 = load i16* %row, align 2
  %329 = add i16 %328, 1
  store i16 %329, i16* %row, align 2
  br label %1

; <label>:330                                     ; preds = %1
  ret void
}

define zeroext i8 @checkIsdecoded1() nounwind {
  %is_decoded = alloca i8, align 1
  %I = alloca i16, align 2
  store i8 1, i8* %is_decoded, align 1
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %48, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %51

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %10
  %12 = load float* %11
  %13 = fpext float %12 to double
  %14 = fcmp ogt double %13, 0.000000e+00
  br i1 %14, label %15, label %27

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %17
  %19 = load float* %18
  %20 = fpext float %19 to double
  %21 = fcmp ogt double %20, 0.000000e+00
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %15
  store i8 0, i8* %is_decoded, align 1
  br label %23

; <label>:23                                      ; preds = %22, %15
  %24 = load i16* %I, align 2
  %25 = zext i16 %24 to i64
  %26 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %25
  store float -1.000000e+00, float* %26
  br label %47

; <label>:27                                      ; preds = %8
  %28 = load i16* %I, align 2
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %29
  %31 = load float* %30
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 0.000000e+00
  br i1 %33, label %34, label %46

; <label>:34                                      ; preds = %27
  %35 = load i16* %I, align 2
  %36 = zext i16 %35 to i64
  %37 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %36
  %38 = load float* %37
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %34
  store i8 0, i8* %is_decoded, align 1
  br label %42

; <label>:42                                      ; preds = %41, %34
  %43 = load i16* %I, align 2
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds [13000 x float]* @code_block1, i32 0, i64 %44
  store float 1.000000e+00, float* %45
  br label %46

; <label>:46                                      ; preds = %42, %27
  br label %47

; <label>:47                                      ; preds = %46, %23
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i16* %I, align 2
  %50 = add i16 %49, 1
  store i16 %50, i16* %I, align 2
  br label %1

; <label>:51                                      ; preds = %1
  %52 = load i8* %is_decoded, align 1
  ret i8 %52
}

define zeroext i8 @checkIsdecoded2() nounwind {
  %is_decoded = alloca i8, align 1
  %I = alloca i16, align 2
  store i8 1, i8* %is_decoded, align 1
  store i16 0, i16* %I, align 2
  br label %1

; <label>:1                                       ; preds = %48, %0
  %2 = load i16* %I, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 1
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %51

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %I, align 2
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %10
  %12 = load float* %11
  %13 = fpext float %12 to double
  %14 = fcmp ogt double %13, 0.000000e+00
  br i1 %14, label %15, label %27

; <label>:15                                      ; preds = %8
  %16 = load i16* %I, align 2
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %17
  %19 = load float* %18
  %20 = fpext float %19 to double
  %21 = fcmp ogt double %20, 0.000000e+00
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %15
  store i8 0, i8* %is_decoded, align 1
  br label %23

; <label>:23                                      ; preds = %22, %15
  %24 = load i16* %I, align 2
  %25 = zext i16 %24 to i64
  %26 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %25
  store float -1.000000e+00, float* %26
  br label %47

; <label>:27                                      ; preds = %8
  %28 = load i16* %I, align 2
  %29 = zext i16 %28 to i64
  %30 = getelementptr inbounds [13000 x float]* @aPosteriori2, i32 0, i64 %29
  %31 = load float* %30
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 0.000000e+00
  br i1 %33, label %34, label %46

; <label>:34                                      ; preds = %27
  %35 = load i16* %I, align 2
  %36 = zext i16 %35 to i64
  %37 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %36
  %38 = load float* %37
  %39 = fpext float %38 to double
  %40 = fcmp olt double %39, 0.000000e+00
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %34
  store i8 0, i8* %is_decoded, align 1
  br label %42

; <label>:42                                      ; preds = %41, %34
  %43 = load i16* %I, align 2
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds [13000 x float]* @code_block2, i32 0, i64 %44
  store float 1.000000e+00, float* %45
  br label %46

; <label>:46                                      ; preds = %42, %27
  br label %47

; <label>:47                                      ; preds = %46, %23
  br label %48

; <label>:48                                      ; preds = %47
  %49 = load i16* %I, align 2
  %50 = add i16 %49, 1
  store i16 %50, i16* %I, align 2
  br label %1

; <label>:51                                      ; preds = %1
  %52 = load i8* %is_decoded, align 1
  ret i8 %52
}

define void @updateMessage11() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info11, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem11, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem11, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message11, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage12() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info12, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem12, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem12, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message12, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage21() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info21, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem21, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem21, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message21, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @updateMessage22() nounwind {
  %row = alloca i16, align 2
  %col = alloca i16, align 2
  %range = alloca i16, align 2
  store i16 0, i16* %row, align 2
  br label %1

; <label>:1                                       ; preds = %132, %0
  %2 = load i16* %row, align 2
  %3 = zext i16 %2 to i32
  %4 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %5 = load i16* %4
  %6 = zext i16 %5 to i32
  %7 = icmp slt i32 %3, %6
  br i1 %7, label %8, label %135

; <label>:8                                       ; preds = %1
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %9 = load i16* %row, align 2
  %10 = zext i16 %9 to i32
  %11 = getelementptr [20000 x i16]* @mem11, i32 0, i64 0
  %12 = load i16* %11
  %13 = zext i16 %12 to i32
  %14 = sub nsw i32 %13, 1
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %16, label %34

; <label>:16                                      ; preds = %8
  %17 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %18 = load i16* %17
  %19 = zext i16 %18 to i32
  %20 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %21 = load i16* %20
  %22 = zext i16 %21 to i32
  %23 = add nsw i32 3, %22
  %24 = load i16* %row, align 2
  %25 = zext i16 %24 to i32
  %26 = add nsw i32 %23, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %27
  %29 = load i16* %28
  %30 = zext i16 %29 to i32
  %31 = sub nsw i32 %30, 1
  %32 = sub nsw i32 %19, %31
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %range, align 2
  br label %60

; <label>:34                                      ; preds = %8
  %35 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %36 = load i16* %35
  %37 = zext i16 %36 to i32
  %38 = add nsw i32 3, %37
  %39 = load i16* %row, align 2
  %40 = zext i16 %39 to i32
  %41 = add nsw i32 %38, %40
  %42 = add nsw i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %43
  %45 = load i16* %44
  %46 = zext i16 %45 to i32
  %47 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %48 = load i16* %47
  %49 = zext i16 %48 to i32
  %50 = add nsw i32 3, %49
  %51 = load i16* %row, align 2
  %52 = zext i16 %51 to i32
  %53 = add nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %54
  %56 = load i16* %55
  %57 = zext i16 %56 to i32
  %58 = sub nsw i32 %46, %57
  %59 = trunc i32 %58 to i16
  store i16 %59, i16* %range, align 2
  br label %60

; <label>:60                                      ; preds = %34, %16
  store i16 0, i16* %col, align 2
  br label %61

; <label>:61                                      ; preds = %128, %60
  %62 = load i16* %col, align 2
  %63 = zext i16 %62 to i32
  %64 = load i16* %range, align 2
  %65 = zext i16 %64 to i32
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %131

; <label>:67                                      ; preds = %61
  call void @__loop_pipelining_on__(i32 63, i32 2, i32 0)
  %68 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %69 = load i16* %68
  %70 = zext i16 %69 to i32
  %71 = add nsw i32 3, %70
  %72 = load i16* %row, align 2
  %73 = zext i16 %72 to i32
  %74 = add nsw i32 %71, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %75
  %77 = load i16* %76
  %78 = zext i16 %77 to i32
  %79 = add nsw i32 3, %78
  %80 = sub nsw i32 %79, 1
  %81 = load i16* %col, align 2
  %82 = zext i16 %81 to i32
  %83 = add nsw i32 %80, %82
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %84
  %86 = load i16* %85
  %87 = zext i16 %86 to i32
  %88 = sub nsw i32 %87, 1
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [13000 x float]* @aPosteriori1, i32 0, i64 %89
  %91 = load float* %90
  %92 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %93 = load i16* %92
  %94 = zext i16 %93 to i32
  %95 = add nsw i32 3, %94
  %96 = load i16* %row, align 2
  %97 = zext i16 %96 to i32
  %98 = add nsw i32 %95, %97
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %99
  %101 = load i16* %100
  %102 = zext i16 %101 to i32
  %103 = sub nsw i32 %102, 1
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = add nsw i32 %103, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [20000 x float]* @ext_info22, i32 0, i64 %107
  %109 = load float* %108
  %110 = fsub float %91, %109
  %111 = getelementptr [20000 x i16]* @mem22, i32 0, i64 2
  %112 = load i16* %111
  %113 = zext i16 %112 to i32
  %114 = add nsw i32 3, %113
  %115 = load i16* %row, align 2
  %116 = zext i16 %115 to i32
  %117 = add nsw i32 %114, %116
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [20000 x i16]* @mem22, i32 0, i64 %118
  %120 = load i16* %119
  %121 = zext i16 %120 to i32
  %122 = sub nsw i32 %121, 1
  %123 = load i16* %col, align 2
  %124 = zext i16 %123 to i32
  %125 = add nsw i32 %122, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [20000 x float]* @message22, i32 0, i64 %126
  store float %110, float* %127
  br label %128

; <label>:128                                     ; preds = %67
  %129 = load i16* %col, align 2
  %130 = add i16 %129, 1
  store i16 %130, i16* %col, align 2
  br label %61

; <label>:131                                     ; preds = %61
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i16* %row, align 2
  %134 = add i16 %133, 1
  store i16 %134, i16* %row, align 2
  br label %1

; <label>:135                                     ; preds = %1
  ret void
}

define void @top_daemon_1() nounwind {
  %nitr_1 = alloca i8, align 1
  %init_trans_info = alloca i8, align 1
  %aPosteriori_update_phase2_done = alloca i8, align 1
  %is_decoded_1 = alloca i8, align 1
  %is_decoded_2 = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  call void @initInputs()
  call void @initMem()
  call void @readCodeBlock()
  %1 = getelementptr [24 x i8]* @.str16, i32 0, i32 0
  call void @write_uint8(i8* %1, i8 zeroext 1)
  call void @initialize_aPriori1()
  call void @initializeMessage11()
  %2 = getelementptr [22 x i8]* @.str17, i32 0, i32 0
  call void @write_uint8(i8* %2, i8 zeroext 1)
  store i8 1, i8* %nitr_1, align 1
  br label %3

; <label>:3                                       ; preds = %38, %0
  %4 = load i8* %nitr_1, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initialize_aPosteriori1()
  call void @initializeExtrinsicInfo11()
  call void @initializeTransInfo11_12()
  call void @checkNodeComputeEngine11()
  %10 = getelementptr [32 x i8]* @.str18, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str19, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %init_trans_info, align 1
  call void @transverseCorrection11()
  %13 = getelementptr [26 x i8]* @.str20, i32 0, i32 0
  call void @write_uint8(i8* %13, i8 zeroext 0)
  %14 = load %struct._IO_FILE** @stderr, align 8
  %15 = getelementptr [49 x i8]* @.str21, i32 0, i32 0
  %16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* %15)
  %17 = getelementptr [26 x i8]* @.str22, i32 0, i32 0
  %18 = call zeroext i8 @read_uint8(i8* %17)
  store i8 %18, i8* %aPosteriori_update_phase2_done, align 1
  %19 = call zeroext i8 @checkIsdecoded1()
  store i8 %19, i8* %is_decoded_1, align 1
  %20 = getelementptr [13 x i8]* @.str23, i32 0, i32 0
  %21 = call zeroext i8 @read_uint8(i8* %20)
  store i8 %21, i8* %is_decoded_2, align 1
  %22 = load i8* %is_decoded_1, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8* %is_decoded_2, align 1
  %25 = zext i8 %24 to i32
  %26 = and i32 %23, %25
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %is_decoded, align 1
  %28 = load i8* %is_decoded, align 1
  %29 = getelementptr [14 x i8]* @.str24, i32 0, i32 0
  call void @write_uint8(i8* %29, i8 zeroext %28)
  %30 = load i8* %is_decoded, align 1
  %31 = getelementptr [14 x i8]* @.str25, i32 0, i32 0
  call void @write_uint8(i8* %31, i8 zeroext %30)
  %32 = load i8* %is_decoded, align 1
  %33 = getelementptr [14 x i8]* @.str26, i32 0, i32 0
  call void @write_uint8(i8* %33, i8 zeroext %32)
  %34 = load i8* %is_decoded, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %9
  br label %41

; <label>:37                                      ; preds = %9
  call void @updateMessage11()
  br label %38

; <label>:38                                      ; preds = %37
  %39 = load i8* %nitr_1, align 1
  %40 = add i8 %39, 1
  store i8 %40, i8* %nitr_1, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %41

; <label>:41                                      ; preds = %.loopexit, %36
  %42 = getelementptr [17 x i8]* @.str27, i32 0, i32 0
  call void @write_uint8(i8* %42, i8 zeroext 1)
  ret void
}

declare void @write_uint8(i8*, i8 zeroext)

declare zeroext i8 @read_uint8(i8*)

define void @top_daemon_2() nounwind {
  %init_mat = alloca i8, align 1
  %nitr_2 = alloca i8, align 1
  %init_trans_info = alloca i8, align 1
  %aPosteriori_update_phase2_done = alloca i8, align 1
  %is_decoded_2 = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %1 = getelementptr [24 x i8]* @.str16, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_mat, align 1
  call void @initialize_aPriori2()
  call void @initializeMessage12()
  %3 = getelementptr [22 x i8]* @.str28, i32 0, i32 0
  call void @write_uint8(i8* %3, i8 zeroext 1)
  store i8 1, i8* %nitr_2, align 1
  br label %4

; <label>:4                                       ; preds = %29, %0
  %5 = load i8* %nitr_2, align 1
  %6 = zext i8 %5 to i32
  %7 = load i16* @maxNitr, align 2
  %8 = zext i16 %7 to i32
  %9 = icmp slt i32 %6, %8
  br i1 %9, label %10, label %.loopexit

; <label>:10                                      ; preds = %4
  call void @initialize_aPosteriori2()
  call void @initializeExtrinsicInfo12()
  call void @initializeTransInfo12_11()
  call void @checkNodeComputeEngine12()
  %11 = getelementptr [32 x i8]* @.str19, i32 0, i32 0
  call void @write_uint8(i8* %11, i8 zeroext 0)
  %12 = getelementptr [32 x i8]* @.str18, i32 0, i32 0
  %13 = call zeroext i8 @read_uint8(i8* %12)
  store i8 %13, i8* %init_trans_info, align 1
  call void @transverseCorrection12()
  %14 = load %struct._IO_FILE** @stderr, align 8
  %15 = getelementptr [50 x i8]* @.str29, i32 0, i32 0
  %16 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* %15)
  %17 = getelementptr [26 x i8]* @.str30, i32 0, i32 0
  call void @write_uint8(i8* %17, i8 zeroext 1)
  %18 = getelementptr [26 x i8]* @.str31, i32 0, i32 0
  %19 = call zeroext i8 @read_uint8(i8* %18)
  store i8 %19, i8* %aPosteriori_update_phase2_done, align 1
  %20 = call zeroext i8 @checkIsdecoded2()
  store i8 %20, i8* %is_decoded_2, align 1
  %21 = load i8* %is_decoded_2, align 1
  %22 = getelementptr [13 x i8]* @.str23, i32 0, i32 0
  call void @write_uint8(i8* %22, i8 zeroext %21)
  %23 = getelementptr [14 x i8]* @.str24, i32 0, i32 0
  %24 = call zeroext i8 @read_uint8(i8* %23)
  store i8 %24, i8* %is_decoded, align 1
  %25 = load i8* %is_decoded, align 1
  %26 = icmp ne i8 %25, 0
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %10
  br label %32

; <label>:28                                      ; preds = %10
  call void @updateMessage12()
  br label %29

; <label>:29                                      ; preds = %28
  %30 = load i8* %nitr_2, align 1
  %31 = add i8 %30, 1
  store i8 %31, i8* %nitr_2, align 1
  br label %4

.loopexit:                                        ; preds = %4
  br label %32

; <label>:32                                      ; preds = %.loopexit, %27
  %33 = getelementptr [17 x i8]* @.str32, i32 0, i32 0
  call void @write_uint8(i8* %33, i8 zeroext 1)
  ret void
}

define void @daemon_3() nounwind {
  %init_aPriori1 = alloca i8, align 1
  %nitr_3 = alloca i8, align 1
  %trans_info_computed = alloca i8, align 1
  %aPosteriori_update_phase1_done = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %1 = getelementptr [22 x i8]* @.str17, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_aPriori1, align 1
  call void @initializeMessage21()
  store i8 1, i8* %nitr_3, align 1
  br label %3

; <label>:3                                       ; preds = %30, %0
  %4 = load i8* %nitr_3, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initializeExtrinsicInfo21()
  call void @initializeTransInfo21_22()
  call void @checkNodeComputeEngine21()
  %10 = getelementptr [32 x i8]* @.str33, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str34, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %trans_info_computed, align 1
  %13 = load %struct._IO_FILE** @stderr, align 8
  %14 = getelementptr [52 x i8]* @.str35, i32 0, i32 0
  %15 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* %14)
  %16 = getelementptr [26 x i8]* @.str20, i32 0, i32 0
  %17 = call zeroext i8 @read_uint8(i8* %16)
  store i8 %17, i8* %aPosteriori_update_phase1_done, align 1
  %18 = load %struct._IO_FILE** @stderr, align 8
  %19 = load i8* %aPosteriori_update_phase1_done, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr [33 x i8]* @.str36, i32 0, i32 0
  %22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* %21, i32 %20)
  call void @transverseCorrection21()
  %23 = getelementptr [26 x i8]* @.str22, i32 0, i32 0
  call void @write_uint8(i8* %23, i8 zeroext 1)
  %24 = getelementptr [14 x i8]* @.str25, i32 0, i32 0
  %25 = call zeroext i8 @read_uint8(i8* %24)
  store i8 %25, i8* %is_decoded, align 1
  %26 = load i8* %is_decoded, align 1
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %9
  br label %33

; <label>:29                                      ; preds = %9
  call void @updateMessage21()
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i8* %nitr_3, align 1
  %32 = add i8 %31, 1
  store i8 %32, i8* %nitr_3, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %33

; <label>:33                                      ; preds = %.loopexit, %28
  %34 = getelementptr [17 x i8]* @.str37, i32 0, i32 0
  call void @write_uint8(i8* %34, i8 zeroext 1)
  ret void
}

define void @daemon_4() nounwind {
  %init_aPriori2 = alloca i8, align 1
  %nitr_4 = alloca i8, align 1
  %trans_info_computed = alloca i8, align 1
  %aPosteriori_update_phase1_done = alloca i8, align 1
  %is_decoded = alloca i8, align 1
  %1 = getelementptr [22 x i8]* @.str28, i32 0, i32 0
  %2 = call zeroext i8 @read_uint8(i8* %1)
  store i8 %2, i8* %init_aPriori2, align 1
  call void @initializeMessage22()
  store i8 1, i8* %nitr_4, align 1
  br label %3

; <label>:3                                       ; preds = %25, %0
  %4 = load i8* %nitr_4, align 1
  %5 = zext i8 %4 to i32
  %6 = load i16* @maxNitr, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %9, label %.loopexit

; <label>:9                                       ; preds = %3
  call void @initializeExtrinsicInfo22()
  call void @initializeTransInfo22_21()
  call void @checkNodeComputeEngine22()
  %10 = getelementptr [32 x i8]* @.str34, i32 0, i32 0
  call void @write_uint8(i8* %10, i8 zeroext 1)
  %11 = getelementptr [32 x i8]* @.str33, i32 0, i32 0
  %12 = call zeroext i8 @read_uint8(i8* %11)
  store i8 %12, i8* %trans_info_computed, align 1
  %13 = load %struct._IO_FILE** @stderr, align 8
  %14 = getelementptr [51 x i8]* @.str38, i32 0, i32 0
  %15 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* %14)
  %16 = getelementptr [26 x i8]* @.str30, i32 0, i32 0
  %17 = call zeroext i8 @read_uint8(i8* %16)
  store i8 %17, i8* %aPosteriori_update_phase1_done, align 1
  call void @transverseCorrection22()
  %18 = getelementptr [26 x i8]* @.str31, i32 0, i32 0
  call void @write_uint8(i8* %18, i8 zeroext 1)
  %19 = getelementptr [14 x i8]* @.str26, i32 0, i32 0
  %20 = call zeroext i8 @read_uint8(i8* %19)
  store i8 %20, i8* %is_decoded, align 1
  %21 = load i8* %is_decoded, align 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %9
  br label %28

; <label>:24                                      ; preds = %9
  call void @updateMessage22()
  br label %25

; <label>:25                                      ; preds = %24
  %26 = load i8* %nitr_4, align 1
  %27 = add i8 %26, 1
  store i8 %27, i8* %nitr_4, align 1
  br label %3

.loopexit:                                        ; preds = %3
  br label %28

; <label>:28                                      ; preds = %.loopexit, %23
  %29 = getelementptr [17 x i8]* @.str39, i32 0, i32 0
  call void @write_uint8(i8* %29, i8 zeroext 1)
  ret void
}
